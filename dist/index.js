// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function(modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x) {
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function(id, exports) {
    modules[id] = [
      function(require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function() {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function() {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"4mMPH":[function(require,module,exports) {
"use strict";
var HMR_HOST = null;
var HMR_PORT = 1234;
var HMR_SECURE = false;
var HMR_ENV_HASH = "adde8c3585f9d548";
module.bundle.HMR_BUNDLE_ID = "f0762f595374e613";
function _createForOfIteratorHelper(o, allowArrayLike) {
    var it;
    if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
            if (it) o = it;
            var i = 0;
            var F = function F1() {
            };
            return {
                s: F,
                n: function n() {
                    if (i >= o.length) return {
                        done: true
                    };
                    return {
                        done: false,
                        value: o[i++]
                    };
                },
                e: function e(_e) {
                    throw _e;
                },
                f: F
            };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var normalCompletion = true, didErr = false, err;
    return {
        s: function s() {
            it = o[Symbol.iterator]();
        },
        n: function n() {
            var step = it.next();
            normalCompletion = step.done;
            return step;
        },
        e: function e(_e2) {
            didErr = true;
            err = _e2;
        },
        f: function f() {
            try {
                if (!normalCompletion && it.return != null) it.return();
            } finally{
                if (didErr) throw err;
            }
        }
    };
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: mixed;
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
*/ var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData,
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function accept(fn) {
            this._acceptCallbacks.push(fn || function() {
            });
        },
        dispose: function dispose(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData = undefined;
}
module.bundle.Module = Module;
var checkedAssets, acceptedAssets, assetsToAccept;
function getHostname() {
    return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');
}
function getPort() {
    return HMR_PORT || location.port;
} // eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
    var hostname = getHostname();
    var port = getPort();
    var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';
    var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe
    ws.onmessage = function(event) {
        checkedAssets = {
        };
        acceptedAssets = {
        };
        assetsToAccept = [];
        var data = JSON.parse(event.data);
        if (data.type === 'update') {
            // Remove error overlay if there is one
            removeErrorOverlay();
            var assets = data.assets.filter(function(asset) {
                return asset.envHash === HMR_ENV_HASH;
            }); // Handle HMR Update
            var handled = assets.every(function(asset) {
                return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
            });
            if (handled) {
                console.clear();
                assets.forEach(function(asset) {
                    hmrApply(module.bundle.root, asset);
                });
                for(var i = 0; i < assetsToAccept.length; i++){
                    var id = assetsToAccept[i][1];
                    if (!acceptedAssets[id]) hmrAcceptRun(assetsToAccept[i][0], id);
                }
            } else window.location.reload();
        }
        if (data.type === 'error') {
            // Log parcel errors to console
            var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi), _step;
            try {
                for(_iterator.s(); !(_step = _iterator.n()).done;){
                    var ansiDiagnostic = _step.value;
                    var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
                    console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\n' + stack + '\n\n' + ansiDiagnostic.hints.join('\n'));
                } // Render the fancy html overlay
            } catch (err) {
                _iterator.e(err);
            } finally{
                _iterator.f();
            }
            removeErrorOverlay();
            var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe
            document.body.appendChild(overlay);
        }
    };
    ws.onerror = function(e) {
        console.error(e.message);
    };
    ws.onclose = function() {
        console.warn('[parcel] 🚨 Connection to the HMR server was lost');
    };
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log('[parcel] ✨ Error resolved');
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement('div');
    overlay.id = OVERLAY_ID;
    var errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    var _iterator2 = _createForOfIteratorHelper(diagnostics), _step2;
    try {
        for(_iterator2.s(); !(_step2 = _iterator2.n()).done;){
            var diagnostic = _step2.value;
            var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;
            errorHTML += "\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          \uD83D\uDEA8 ".concat(diagnostic.message, "\n        </div>\n        <pre>\n          ").concat(stack, "\n        </pre>\n        <div>\n          ").concat(diagnostic.hints.map(function(hint) {
                return '<div>' + hint + '</div>';
            }).join(''), "\n        </div>\n      </div>\n    ");
        }
    } catch (err) {
        _iterator2.e(err);
    } finally{
        _iterator2.f();
    }
    errorHTML += '</div>';
    overlay.innerHTML = errorHTML;
    return overlay;
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute('href', link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout) return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href = links[i].getAttribute('href');
            var hostname = getHostname();
            var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrApply(bundle, asset) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === 'css') {
        reloadCSS();
        return;
    }
    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
    if (deps) {
        var fn = new Function('require', 'module', 'exports', asset.output);
        modules[asset.id] = [
            fn,
            deps
        ];
    } else if (bundle.parent) hmrApply(bundle.parent, asset);
}
function hmrAcceptCheck(bundle, id, depsByBundle) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) return true;
        return hmrAcceptCheck(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    assetsToAccept.push([
        bundle,
        id
    ]);
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) return true;
    return getParents(module.bundle.root, id).some(function(v) {
        return hmrAcceptCheck(v[0], v[1], null);
    });
}
function hmrAcceptRun(bundle, id) {
    var cached = bundle.cache[id];
    bundle.hotData = {
    };
    if (cached && cached.hot) cached.hot.data = bundle.hotData;
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData);
    });
    delete bundle.cache[id];
    bundle(id);
    cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {
        var assetsToAlsoAccept = cb(function() {
            return getParents(module.bundle.root, id);
        });
        if (assetsToAlsoAccept && assetsToAccept.length) // $FlowFixMe[method-unbinding]
        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
    });
    acceptedAssets[id] = true;
}

},{}],"j6VGc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _helpers = require("@swc/helpers");
var _login = require("./login");
var _logout = require("./logout");
var _mapbox = require("./mapbox");
var _settings = require("./settings");
var _resetPassword = require("./resetPassword");
var _setNewPassword = require("./setNewPassword");
var _signup = require("./signup");
var _booking = require("./booking");
var _modal = require("./modal");
var _modalDefault = parcelHelpers.interopDefault(_modal);
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _alert = require("./alert");
var regeneratorRuntime = require("regenerator-runtime");
var csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
// Burger button
var burgerBtn = document.querySelector('.burger-btn');
var closeBtn = document.querySelector('.close-btn');
var hAuthWrapper = document.querySelector('.header__authorization-wrapper');
burgerBtn.addEventListener('click', function(e) {
    burgerBtn.classList.add('hideVisible');
    closeBtn.classList.remove('hideVisible');
    hAuthWrapper.style.display = 'flex';
});
closeBtn.addEventListener('click', function(e) {
    burgerBtn.classList.remove('hideVisible');
    closeBtn.classList.add('hideVisible');
    hAuthWrapper.style.display = 'none';
});
// Loading mapbox
var map = document.getElementById('map');
if (map) {
    var locations = JSON.parse(map.dataset.locations);
    _mapbox.mapbox(locations);
}
// Login handler
var loginForm = document.querySelector('.form-login');
if (loginForm) loginForm.addEventListener('submit', _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee(e) {
    var ref, email, password;
    return regeneratorRuntime.wrap(function _callee$(_ctx) {
        while(1)switch(_ctx.prev = _ctx.next){
            case 0:
                e.preventDefault();
                ref = _helpers.slicedToArray(Array.from(loginForm.querySelectorAll('.form__input-login')).map(function(el) {
                    return el.value;
                }), 2), email = ref[0], password = ref[1];
                if (!(email && password)) {
                    _ctx.next = 7;
                    break;
                }
                document.querySelector('.form__button.login').disabled = true;
                document.querySelector('.form__button.login').classList.add('btn--disabled');
                _ctx.next = 7;
                return _login.login(email, password, csrfToken);
            case 7:
            case "end":
                return _ctx.stop();
        }
    }, _callee);
})));
// Logout handler
var logoutLink = document.querySelector('.link-logout');
if (logoutLink) logoutLink.addEventListener('click', _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee1(e) {
    return regeneratorRuntime.wrap(function _callee$(_ctx) {
        while(1)switch(_ctx.prev = _ctx.next){
            case 0:
                e.preventDefault();
                // console.log('You have logout');
                logoutLink.style.display = 'none';
                _ctx.next = 4;
                return _logout.logout(csrfToken);
            case 4:
            case "end":
                return _ctx.stop();
        }
    }, _callee1);
})));
var formUpdateData = document.querySelector('.form-email');
var formUpdatePassword = document.querySelector('.form-password');
// Update email and photo handler
if (formUpdateData) formUpdateData.addEventListener('submit', _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee2(e) {
    var form;
    return regeneratorRuntime.wrap(function _callee$(_ctx) {
        while(1)switch(_ctx.prev = _ctx.next){
            case 0:
                e.preventDefault();
                form = new FormData();
                form.append('email', document.getElementById('input-email').value);
                form.append('photo', document.getElementById('photo').files[0]);
                _ctx.next = 6;
                return _settings.saveDataInit(form, csrfToken);
            case 6:
            case "end":
                return _ctx.stop();
        }
    }, _callee2);
})));
// Update password handler
if (formUpdatePassword) formUpdatePassword.addEventListener('submit', _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee3(e) {
    var email, currentPassword, newPassword, newPasswordConfirm;
    return regeneratorRuntime.wrap(function _callee$(_ctx) {
        while(1)switch(_ctx.prev = _ctx.next){
            case 0:
                e.preventDefault();
                document.querySelector('.save-password').textContent = 'Updating...';
                email = document.getElementById('input-email').value;
                currentPassword = document.getElementById('input-cur-pass').value;
                newPassword = document.getElementById('input-new-pass').value;
                newPasswordConfirm = document.getElementById('input-new-pass-conf').value;
                document.querySelector('.save-password').disabled = true;
                document.querySelector('.save-password').classList.add('btn--disabled');
                _ctx.next = 10;
                return _settings.savePasswordInit(email, currentPassword, newPassword, newPasswordConfirm, csrfToken);
            case 10:
                document.getElementById('input-cur-pass').value = '';
                document.getElementById('input-new-pass').value = '';
                document.getElementById('input-new-pass-conf').value = '';
                document.querySelector('.save-password').textContent = 'SAVE PASSWORD';
            case 14:
            case "end":
                return _ctx.stop();
        }
    }, _callee3);
})));
// Forget handler
var forgetButton = document.querySelector('.restore-password');
if (forgetButton) forgetButton.addEventListener('click', _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee4(e) {
    var dataEmail;
    return regeneratorRuntime.wrap(function _callee$(_ctx) {
        while(1)switch(_ctx.prev = _ctx.next){
            case 0:
                e.preventDefault();
                dataEmail = new FormData();
                dataEmail.append('email', document.querySelector('.form__input-forget-email').value);
                forgetButton.disabled = true;
                forgetButton.classList.add('btn--disabled');
                _ctx.next = 7;
                return _resetPassword.sendResetPassword(dataEmail, csrfToken);
            case 7:
            case "end":
                return _ctx.stop();
        }
    }, _callee4);
// admin@natours.com
})));
// Restore handler
var restoreForm = document.querySelector('.form-restore');
if (restoreForm) restoreForm.addEventListener('submit', _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee5(e) {
    var resetToken, ref, password, passwordConfirm;
    return regeneratorRuntime.wrap(function _callee$(_ctx) {
        while(1)switch(_ctx.prev = _ctx.next){
            case 0:
                e.preventDefault();
                resetToken = document.querySelector('.resetToken').value;
                ref = _helpers.slicedToArray(Array.from(document.querySelectorAll('.form__input-restore')).map(function(el) {
                    return el.value;
                }), 2), password = ref[0], passwordConfirm = ref[1];
                document.querySelector('.restore-button').disabled = true;
                document.querySelector('.restore-button').classList.add('btn--disabled');
                _ctx.next = 7;
                return _setNewPassword.setNewPassword({
                    password: password,
                    passwordConfirm: passwordConfirm
                }, resetToken, csrfToken);
            case 7:
            case "end":
                return _ctx.stop();
        }
    }, _callee5);
})));
// Signup handler
var signupForm = document.querySelector('.form-signup');
if (signupForm) signupForm.addEventListener('submit', _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee6(e) {
    var email, password, passwordConfirm;
    return regeneratorRuntime.wrap(function _callee$(_ctx) {
        while(1)switch(_ctx.prev = _ctx.next){
            case 0:
                e.preventDefault();
                email = document.querySelector('.form__input-signup-email').value;
                password = document.querySelector('.form__input-signup-password').value;
                passwordConfirm = document.querySelector('.form__input-signup-password-confirm').value;
                document.querySelector('.signup').disabled = true;
                document.querySelector('.signup').classList.add('btn--disabled');
                _ctx.next = 8;
                return _signup.signup({
                    email: email,
                    password: password,
                    passwordConfirm: passwordConfirm
                }, csrfToken);
            case 8:
            case "end":
                return _ctx.stop();
        }
    }, _callee6);
})));
// Booktour handler
var bookingBtn = document.querySelector('.booktoor__button');
if (bookingBtn) bookingBtn.addEventListener('click', _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee7(e) {
    var tourId;
    return regeneratorRuntime.wrap(function _callee$(_ctx) {
        while(1)switch(_ctx.prev = _ctx.next){
            case 0:
                e.target.innerText = 'Processing...';
                tourId = e.target.dataset.tourId;
                _ctx.next = 4;
                return _booking.createBookingSession(tourId);
            case 4:
                e.target.innerText = 'BUY BOOKTOUR';
            case 5:
            case "end":
                return _ctx.stop();
        }
    }, _callee7);
})));
// Modal handler
var modalBtns = document.querySelectorAll('.card__btn-review');
var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;
if (modalBtns) try {
    var _loop = function(_iterator, _step) {
        var modalBtn = _step.value;
        modalBtn.addEventListener('click', function(e) {
            document.documentElement.scrollTop = 0;
            var modal = new _modalDefault.default(modalBtn);
            modal.createModal();
            modal.openModal();
            if (location.pathname === '/my-reviews') {
                var reviewId = modalBtn.dataset.review;
                modal.setConfig(reviewId);
                // Create listener for button to remove review
                document.querySelector('.btn-remove').addEventListener('click', _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee8(e1) {
                    var reviewId1, response;
                    return regeneratorRuntime.wrap(function _callee$(_ctx) {
                        while(1)switch(_ctx.prev = _ctx.next){
                            case 0:
                                e1.preventDefault();
                                reviewId1 = modalBtn.dataset.review;
                                _ctx.prev = 2;
                                _ctx.next = 5;
                                return _axiosDefault.default({
                                    method: 'DELETE',
                                    url: "/api/v1/reviews/".concat(reviewId1),
                                    headers: {
                                        'X-CSRF-Token': csrfToken // <-- is the csrf token as a header
                                    }
                                });
                            case 5:
                                response = _ctx.sent;
                                if (response.status == '204') {
                                    _alert.showAlert('alert--green', 'Your review was been removed!');
                                    setTimeout(function() {
                                        _alert.hideAlert();
                                        location.reload(true);
                                    }, 2000);
                                }
                                _ctx.next = 13;
                                break;
                            case 9:
                                _ctx.prev = 9;
                                _ctx.t0 = _ctx["catch"](2);
                                _alert.showAlert('alert--red', _ctx.t0.response.data.message);
                                setTimeout(function() {
                                    _alert.hideAlert();
                                }, 2000);
                            case 13:
                            case "end":
                                return _ctx.stop();
                        }
                    }, _callee8, null, [
                        [
                            2,
                            9
                        ]
                    ]);
                })));
                // Create listener for button to edit review
                document.querySelector('.btn-edit').addEventListener('click', _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee9(e1) {
                    var reviewId1, review, rating, response;
                    return regeneratorRuntime.wrap(function _callee$(_ctx) {
                        while(1)switch(_ctx.prev = _ctx.next){
                            case 0:
                                e1.preventDefault();
                                reviewId1 = modalBtn.dataset.review;
                                review = document.querySelector('.textarea-review').value;
                                rating = document.querySelector('input[name="rating-tour"]:checked').value;
                                _ctx.prev = 4;
                                _ctx.next = 7;
                                return _axiosDefault.default({
                                    method: 'PATCH',
                                    url: "/api/v1/reviews/".concat(reviewId1),
                                    data: {
                                        review: review,
                                        rating: rating
                                    },
                                    headers: {
                                        'X-CSRF-Token': csrfToken // <-- is the csrf token as a header
                                    }
                                });
                            case 7:
                                response = _ctx.sent;
                                if (response.status == '200') {
                                    _alert.showAlert('alert--green', 'Your review was been edited!');
                                    setTimeout(function() {
                                        _alert.hideAlert();
                                        location.reload(true);
                                    }, 2000);
                                }
                                _ctx.next = 15;
                                break;
                            case 11:
                                _ctx.prev = 11;
                                _ctx.t0 = _ctx["catch"](4);
                                _alert.showAlert('alert--red', _ctx.t0.response.data.message);
                                setTimeout(function() {
                                    _alert.hideAlert();
                                }, 2000);
                            case 15:
                            case "end":
                                return _ctx.stop();
                        }
                    }, _callee9, null, [
                        [
                            4,
                            11
                        ]
                    ]);
                })));
            }
            // Create listener for button to create review
            document.querySelector('.btn-create').addEventListener('click', _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee8(e1) {
                var review, rating, tour, user, response;
                return regeneratorRuntime.wrap(function _callee$(_ctx) {
                    while(1)switch(_ctx.prev = _ctx.next){
                        case 0:
                            e1.preventDefault();
                            review = document.querySelector('.textarea-review').value;
                            rating = document.querySelector('input[name="rating-tour"]:checked').value;
                            tour = modalBtn.dataset.tour;
                            user = modalBtn.dataset.user;
                            _ctx.prev = 5;
                            _ctx.next = 8;
                            return _axiosDefault.default({
                                method: 'POST',
                                url: '/api/v1/reviews',
                                headers: {
                                    'X-CSRF-Token': csrfToken // <-- is the csrf token as a header
                                },
                                data: {
                                    review: review,
                                    rating: rating,
                                    tour: tour,
                                    user: user
                                }
                            });
                        case 8:
                            response = _ctx.sent;
                            if (response.data.status === 'success') {
                                _alert.showAlert('alert--green', 'Your review was been added!');
                                setTimeout(function() {
                                    _alert.hideAlert();
                                    location.reload(true);
                                }, 2000);
                            }
                            _ctx.next = 16;
                            break;
                        case 12:
                            _ctx.prev = 12;
                            _ctx.t0 = _ctx["catch"](5);
                            _alert.showAlert('alert--red', _ctx.t0.response.data.message);
                            setTimeout(function() {
                                _alert.hideAlert();
                            }, 2000);
                        case 16:
                        case "end":
                            return _ctx.stop();
                    }
                }, _callee8, null, [
                    [
                        5,
                        12
                    ]
                ]);
            })));
            // Handler to close modal
            function destroy(e1) {
                if ('close' in e1.target.dataset) {
                    modal.destroyModal();
                    document.querySelector('body').removeEventListener('click', destroy);
                }
            }
            document.querySelector('body').addEventListener('click', destroy);
        });
    };
    for(var _iterator = modalBtns[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true)_loop(_iterator, _step);
} catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
} finally{
    try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
        }
    } finally{
        if (_didIteratorError) {
            throw _iteratorError;
        }
    }
}

},{"@swc/helpers":"gDs9W","regenerator-runtime":"hmHqu","./login":"kM24e","./logout":"20ZQG","./mapbox":"lonZi","./settings":"lR4Cn","./resetPassword":"6521s","./setNewPassword":"f1GC6","./signup":"SZEgj","./booking":"2asfU","./modal":"1jsGx","axios":"lD2ZU","./alert":"8X5i0","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"gDs9W":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "applyDecoratedDescriptor", ()=>_applyDecoratedDescriptorDefault.default
);
parcelHelpers.export(exports, "arrayWithHoles", ()=>_arrayWithHolesDefault.default
);
parcelHelpers.export(exports, "arrayWithoutHoles", ()=>_arrayWithoutHolesDefault.default
);
parcelHelpers.export(exports, "assertThisInitialized", ()=>_assertThisInitializedDefault.default
);
parcelHelpers.export(exports, "asyncGenerator", ()=>_asyncGeneratorDefault.default
);
parcelHelpers.export(exports, "asyncGeneratorDelegate", ()=>_asyncGeneratorDelegateDefault.default
);
parcelHelpers.export(exports, "asyncIterator", ()=>_asyncIteratorDefault.default
);
parcelHelpers.export(exports, "asyncToGenerator", ()=>_asyncToGeneratorDefault.default
);
parcelHelpers.export(exports, "awaitAsyncGenerator", ()=>_awaitAsyncGeneratorDefault.default
);
parcelHelpers.export(exports, "awaitValue", ()=>_awaitValueDefault.default
);
parcelHelpers.export(exports, "classCallCheck", ()=>_classCallCheckDefault.default
);
parcelHelpers.export(exports, "classNameTDZError", ()=>_classNameTdzErrorDefault.default
);
parcelHelpers.export(exports, "classPrivateFieldGet", ()=>_classPrivateFieldGetDefault.default
);
parcelHelpers.export(exports, "classPrivateFieldLooseBase", ()=>_classPrivateFieldLooseBaseDefault.default
);
parcelHelpers.export(exports, "classPrivateFieldSet", ()=>_classPrivateFieldSetDefault.default
);
parcelHelpers.export(exports, "classPrivateMethodGet", ()=>_classPrivateMethodGetDefault.default
);
parcelHelpers.export(exports, "classPrivateMethodSet", ()=>_classPrivateMethodSetDefault.default
);
parcelHelpers.export(exports, "classStaticPrivateFieldSpecGet", ()=>_classStaticPrivateFieldSpecGetDefault.default
);
parcelHelpers.export(exports, "classStaticPrivateFieldSpecSet", ()=>_classStaticPrivateFieldSpecSetDefault.default
);
parcelHelpers.export(exports, "construct", ()=>_constructDefault.default
);
parcelHelpers.export(exports, "createClass", ()=>_createClassDefault.default
);
parcelHelpers.export(exports, "decorate", ()=>_decorateDefault.default
);
parcelHelpers.export(exports, "defaults", ()=>_defaultsDefault.default
);
parcelHelpers.export(exports, "defineEnumerableProperties", ()=>_defineEnumerablePropertiesDefault.default
);
parcelHelpers.export(exports, "defineProperty", ()=>_definePropertyDefault.default
);
parcelHelpers.export(exports, "extends", ()=>_extendsDefault.default
);
parcelHelpers.export(exports, "get", ()=>_getDefault.default
);
parcelHelpers.export(exports, "getPrototypeOf", ()=>_getPrototypeOfDefault.default
);
parcelHelpers.export(exports, "inherits", ()=>_inheritsDefault.default
);
parcelHelpers.export(exports, "inheritsLoose", ()=>_inheritsLooseDefault.default
);
parcelHelpers.export(exports, "initializerDefineProperty", ()=>_initializerDefinePropertyDefault.default
);
parcelHelpers.export(exports, "initializerWarningHelper", ()=>_initializerWarningHelperDefault.default
);
parcelHelpers.export(exports, "_instanceof", ()=>_instanceofDefault.default
);
parcelHelpers.export(exports, "interopRequireDefault", ()=>_interopRequireDefaultDefault.default
);
parcelHelpers.export(exports, "interopRequireWildcard", ()=>_interopRequireWildcardDefault.default
);
parcelHelpers.export(exports, "isNativeFunction", ()=>_isNativeFunctionDefault.default
);
parcelHelpers.export(exports, "iterableToArray", ()=>_iterableToArrayDefault.default
);
parcelHelpers.export(exports, "iterableToArrayLimit", ()=>_iterableToArrayLimitDefault.default
);
parcelHelpers.export(exports, "iterableToArrayLimitLoose", ()=>_iterableToArrayLimitLooseDefault.default
);
parcelHelpers.export(exports, "jsx", ()=>_jsxDefault.default
);
parcelHelpers.export(exports, "newArrowCheck", ()=>_newArrowCheckDefault.default
);
parcelHelpers.export(exports, "nonIterableRest", ()=>_nonIterableRestDefault.default
);
parcelHelpers.export(exports, "nonIterableSpread", ()=>_nonIterableSpreadDefault.default
);
parcelHelpers.export(exports, "objectSpread", ()=>_objectSpreadDefault.default
);
parcelHelpers.export(exports, "objectWithoutProperties", ()=>_objectWithoutPropertiesDefault.default
);
parcelHelpers.export(exports, "objectWithoutPropertiesLoose", ()=>_objectWithoutPropertiesLooseDefault.default
);
parcelHelpers.export(exports, "possibleConstructorReturn", ()=>_possibleConstructorReturnDefault.default
);
parcelHelpers.export(exports, "readOnlyError", ()=>_readOnlyErrorDefault.default
);
parcelHelpers.export(exports, "set", ()=>_setDefault.default
);
parcelHelpers.export(exports, "setPrototypeOf", ()=>_setPrototypeOfDefault.default
);
parcelHelpers.export(exports, "skipFirstGeneratorNext", ()=>_skipFirstGeneratorNextDefault.default
);
parcelHelpers.export(exports, "slicedToArray", ()=>_slicedToArrayDefault.default
);
parcelHelpers.export(exports, "slicedToArrayLoose", ()=>_slicedToArrayLooseDefault.default
);
parcelHelpers.export(exports, "superPropBase", ()=>_superPropBaseDefault.default
);
parcelHelpers.export(exports, "taggedTemplateLiteral", ()=>_taggedTemplateLiteralDefault.default
);
parcelHelpers.export(exports, "taggedTemplateLiteralLoose", ()=>_taggedTemplateLiteralLooseDefault.default
);
parcelHelpers.export(exports, "_throw", ()=>_throwDefault.default
);
parcelHelpers.export(exports, "toArray", ()=>_toArrayDefault.default
);
parcelHelpers.export(exports, "toConsumableArray", ()=>_toConsumableArrayDefault.default
);
parcelHelpers.export(exports, "toPrimitive", ()=>_toPrimitiveDefault.default
);
parcelHelpers.export(exports, "toPropertyKey", ()=>_toPropertyKeyDefault.default
);
parcelHelpers.export(exports, "typeOf", ()=>_typeOfDefault.default
);
parcelHelpers.export(exports, "wrapAsyncGenerator", ()=>_wrapAsyncGeneratorDefault.default
);
parcelHelpers.export(exports, "wrapNativeSuper", ()=>_wrapNativeSuperDefault.default
);
var _applyDecoratedDescriptor = require("./_apply_decorated_descriptor");
var _applyDecoratedDescriptorDefault = parcelHelpers.interopDefault(_applyDecoratedDescriptor);
var _arrayWithHoles = require("./_array_with_holes");
var _arrayWithHolesDefault = parcelHelpers.interopDefault(_arrayWithHoles);
var _arrayWithoutHoles = require("./_array_without_holes");
var _arrayWithoutHolesDefault = parcelHelpers.interopDefault(_arrayWithoutHoles);
var _assertThisInitialized = require("./_assert_this_initialized");
var _assertThisInitializedDefault = parcelHelpers.interopDefault(_assertThisInitialized);
var _asyncGenerator = require("./_async_generator");
var _asyncGeneratorDefault = parcelHelpers.interopDefault(_asyncGenerator);
var _asyncGeneratorDelegate = require("./_async_generator_delegate");
var _asyncGeneratorDelegateDefault = parcelHelpers.interopDefault(_asyncGeneratorDelegate);
var _asyncIterator = require("./_async_iterator");
var _asyncIteratorDefault = parcelHelpers.interopDefault(_asyncIterator);
var _asyncToGenerator = require("./_async_to_generator");
var _asyncToGeneratorDefault = parcelHelpers.interopDefault(_asyncToGenerator);
var _awaitAsyncGenerator = require("./_await_async_generator");
var _awaitAsyncGeneratorDefault = parcelHelpers.interopDefault(_awaitAsyncGenerator);
var _awaitValue = require("./_await_value");
var _awaitValueDefault = parcelHelpers.interopDefault(_awaitValue);
var _classCallCheck = require("./_class_call_check");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _classNameTdzError = require("./_class_name_tdz_error");
var _classNameTdzErrorDefault = parcelHelpers.interopDefault(_classNameTdzError);
var _classPrivateFieldGet = require("./_class_private_field_get");
var _classPrivateFieldGetDefault = parcelHelpers.interopDefault(_classPrivateFieldGet);
var _classPrivateFieldLooseBase = require("./_class_private_field_loose_base");
var _classPrivateFieldLooseBaseDefault = parcelHelpers.interopDefault(_classPrivateFieldLooseBase);
var _classPrivateFieldSet = require("./_class_private_field_set");
var _classPrivateFieldSetDefault = parcelHelpers.interopDefault(_classPrivateFieldSet);
var _classPrivateMethodGet = require("./_class_private_method_get");
var _classPrivateMethodGetDefault = parcelHelpers.interopDefault(_classPrivateMethodGet);
var _classPrivateMethodSet = require("./_class_private_method_set");
var _classPrivateMethodSetDefault = parcelHelpers.interopDefault(_classPrivateMethodSet);
var _classStaticPrivateFieldSpecGet = require("./_class_static_private_field_spec_get");
var _classStaticPrivateFieldSpecGetDefault = parcelHelpers.interopDefault(_classStaticPrivateFieldSpecGet);
var _classStaticPrivateFieldSpecSet = require("./_class_static_private_field_spec_set");
var _classStaticPrivateFieldSpecSetDefault = parcelHelpers.interopDefault(_classStaticPrivateFieldSpecSet);
var _construct = require("./_construct");
var _constructDefault = parcelHelpers.interopDefault(_construct);
var _createClass = require("./_create_class");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _decorate = require("./_decorate");
var _decorateDefault = parcelHelpers.interopDefault(_decorate);
var _defaults = require("./_defaults");
var _defaultsDefault = parcelHelpers.interopDefault(_defaults);
var _defineEnumerableProperties = require("./_define_enumerable_properties");
var _defineEnumerablePropertiesDefault = parcelHelpers.interopDefault(_defineEnumerableProperties);
var _defineProperty = require("./_define_property");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _extends = require("./_extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _get = require("./_get");
var _getDefault = parcelHelpers.interopDefault(_get);
var _getPrototypeOf = require("./_get_prototype_of");
var _getPrototypeOfDefault = parcelHelpers.interopDefault(_getPrototypeOf);
var _inherits = require("./_inherits");
var _inheritsDefault = parcelHelpers.interopDefault(_inherits);
var _inheritsLoose = require("./_inherits_loose");
var _inheritsLooseDefault = parcelHelpers.interopDefault(_inheritsLoose);
var _initializerDefineProperty = require("./_initializer_define_property");
var _initializerDefinePropertyDefault = parcelHelpers.interopDefault(_initializerDefineProperty);
var _initializerWarningHelper = require("./_initializer_warning_helper");
var _initializerWarningHelperDefault = parcelHelpers.interopDefault(_initializerWarningHelper);
var _instanceof = require("./_instanceof");
var _instanceofDefault = parcelHelpers.interopDefault(_instanceof);
var _interopRequireDefault = require("./_interop_require_default");
var _interopRequireDefaultDefault = parcelHelpers.interopDefault(_interopRequireDefault);
var _interopRequireWildcard = require("./_interop_require_wildcard");
var _interopRequireWildcardDefault = parcelHelpers.interopDefault(_interopRequireWildcard);
var _isNativeFunction = require("./_is_native_function");
var _isNativeFunctionDefault = parcelHelpers.interopDefault(_isNativeFunction);
var _iterableToArray = require("./_iterable_to_array");
var _iterableToArrayDefault = parcelHelpers.interopDefault(_iterableToArray);
var _iterableToArrayLimit = require("./_iterable_to_array_limit");
var _iterableToArrayLimitDefault = parcelHelpers.interopDefault(_iterableToArrayLimit);
var _iterableToArrayLimitLoose = require("./_iterable_to_array_limit_loose");
var _iterableToArrayLimitLooseDefault = parcelHelpers.interopDefault(_iterableToArrayLimitLoose);
var _jsx = require("./_jsx");
var _jsxDefault = parcelHelpers.interopDefault(_jsx);
var _newArrowCheck = require("./_new_arrow_check");
var _newArrowCheckDefault = parcelHelpers.interopDefault(_newArrowCheck);
var _nonIterableRest = require("./_non_iterable_rest");
var _nonIterableRestDefault = parcelHelpers.interopDefault(_nonIterableRest);
var _nonIterableSpread = require("./_non_iterable_spread");
var _nonIterableSpreadDefault = parcelHelpers.interopDefault(_nonIterableSpread);
var _objectSpread = require("./_object_spread");
var _objectSpreadDefault = parcelHelpers.interopDefault(_objectSpread);
var _objectWithoutProperties = require("./_object_without_properties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _objectWithoutPropertiesLoose = require("./_object_without_properties_loose");
var _objectWithoutPropertiesLooseDefault = parcelHelpers.interopDefault(_objectWithoutPropertiesLoose);
var _possibleConstructorReturn = require("./_possible_constructor_return");
var _possibleConstructorReturnDefault = parcelHelpers.interopDefault(_possibleConstructorReturn);
var _readOnlyError = require("./_read_only_error");
var _readOnlyErrorDefault = parcelHelpers.interopDefault(_readOnlyError);
var _set = require("./_set");
var _setDefault = parcelHelpers.interopDefault(_set);
var _setPrototypeOf = require("./_set_prototype_of");
var _setPrototypeOfDefault = parcelHelpers.interopDefault(_setPrototypeOf);
var _skipFirstGeneratorNext = require("./_skip_first_generator_next");
var _skipFirstGeneratorNextDefault = parcelHelpers.interopDefault(_skipFirstGeneratorNext);
var _slicedToArray = require("./_sliced_to_array");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _slicedToArrayLoose = require("./_sliced_to_array_loose");
var _slicedToArrayLooseDefault = parcelHelpers.interopDefault(_slicedToArrayLoose);
var _superPropBase = require("./_super_prop_base");
var _superPropBaseDefault = parcelHelpers.interopDefault(_superPropBase);
var _taggedTemplateLiteral = require("./_tagged_template_literal");
var _taggedTemplateLiteralDefault = parcelHelpers.interopDefault(_taggedTemplateLiteral);
var _taggedTemplateLiteralLoose = require("./_tagged_template_literal_loose");
var _taggedTemplateLiteralLooseDefault = parcelHelpers.interopDefault(_taggedTemplateLiteralLoose);
var _throw = require("./_throw");
var _throwDefault = parcelHelpers.interopDefault(_throw);
var _toArray = require("./_to_array");
var _toArrayDefault = parcelHelpers.interopDefault(_toArray);
var _toConsumableArray = require("./_to_consumable_array");
var _toConsumableArrayDefault = parcelHelpers.interopDefault(_toConsumableArray);
var _toPrimitive = require("./_to_primitive");
var _toPrimitiveDefault = parcelHelpers.interopDefault(_toPrimitive);
var _toPropertyKey = require("./_to_property_key");
var _toPropertyKeyDefault = parcelHelpers.interopDefault(_toPropertyKey);
var _typeOf = require("./_type_of");
var _typeOfDefault = parcelHelpers.interopDefault(_typeOf);
var _wrapAsyncGenerator = require("./_wrap_async_generator");
var _wrapAsyncGeneratorDefault = parcelHelpers.interopDefault(_wrapAsyncGenerator);
var _wrapNativeSuper = require("./_wrap_native_super");
var _wrapNativeSuperDefault = parcelHelpers.interopDefault(_wrapNativeSuper);

},{"./_apply_decorated_descriptor":"5aCqi","./_array_with_holes":"9F8uR","./_array_without_holes":"8qfF7","./_assert_this_initialized":"gpZw7","./_async_generator":"lpmmk","./_async_generator_delegate":"6dti9","./_async_iterator":"6hvTH","./_async_to_generator":"eHSTT","./_await_async_generator":"6xWha","./_await_value":"k3Jfi","./_class_call_check":"ivVJk","./_class_name_tdz_error":"gWGWt","./_class_private_field_get":"imcGP","./_class_private_field_loose_base":"iGpVw","./_class_private_field_set":"exdRp","./_class_private_method_get":"haZsF","./_class_private_method_set":"hBDF6","./_class_static_private_field_spec_get":"iwoLf","./_class_static_private_field_spec_set":"iai5V","./_construct":"lvPVB","./_create_class":"iUP6F","./_decorate":"h3ZQg","./_defaults":"8aL1j","./_define_enumerable_properties":"7CDLI","./_define_property":"c5CTZ","./_extends":"5T4kW","./_get":"23nlD","./_get_prototype_of":"in20J","./_inherits":"jgTdo","./_inherits_loose":"fEJWv","./_initializer_define_property":"fLGLm","./_initializer_warning_helper":"4BNL3","./_instanceof":"gq7TQ","./_interop_require_default":"etp20","./_interop_require_wildcard":"e4N5E","./_is_native_function":"bPtD4","./_iterable_to_array":"6PWwf","./_iterable_to_array_limit":"l5k9G","./_iterable_to_array_limit_loose":"cdjX9","./_jsx":"em5AH","./_new_arrow_check":"fSsCA","./_non_iterable_rest":"1Ng8K","./_non_iterable_spread":"lIhjf","./_object_spread":"j6m7v","./_object_without_properties":"6TFIH","./_object_without_properties_loose":"bWoV5","./_possible_constructor_return":"cRbTG","./_read_only_error":"3J9uq","./_set":"kvgEj","./_set_prototype_of":"ezxsO","./_skip_first_generator_next":"dANwW","./_sliced_to_array":"kAoDu","./_sliced_to_array_loose":"1ksI9","./_super_prop_base":"fQeiC","./_tagged_template_literal":"fgUfv","./_tagged_template_literal_loose":"ef6v4","./_throw":"3edwg","./_to_array":"1K5vj","./_to_consumable_array":"fxUIs","./_to_primitive":"97J2I","./_to_property_key":"artMD","./_type_of":"3Ax2K","./_wrap_async_generator":"fuczI","./_wrap_native_super":"2YT4k","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"5aCqi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {
    };
    Object["keys"](descriptor).forEach(function(key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;
    if ('value' in desc || desc.initializer) desc.writable = true;
    desc = decorators.slice().reverse().reduce(function(desc1, decorator) {
        return decorator ? decorator(target, property, desc1) || desc1 : desc1;
    }, desc);
    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }
    if (desc.initializer === void 0) {
        Object["defineProperty"](target, property, desc);
        desc = null;
    }
    return desc;
}
exports.default = _applyDecoratedDescriptor;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"h9Iz6":[function(require,module,exports) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, '__esModule', {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === 'default' || key === '__esModule') return;
        // Skip duplicate re-exports when they have the same value.
        if (key in dest && dest[key] === source[key]) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"9F8uR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
exports.default = _arrayWithHoles;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"8qfF7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) {
        for(var i = 0, arr2 = new Array(arr.length); i < arr.length; i++)arr2[i] = arr[i];
        return arr2;
    }
}
exports.default = _arrayWithoutHoles;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"gpZw7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
exports.default = _assertThisInitialized;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"lpmmk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _awaitValue = require("./_await_value");
var _awaitValueDefault = parcelHelpers.interopDefault(_awaitValue);
function AsyncGenerator(gen) {
    var front, back;
    function send(key, arg) {
        return new Promise(function(resolve, reject) {
            var request = {
                key: key,
                arg: arg,
                resolve: resolve,
                reject: reject,
                next: null
            };
            if (back) back = back.next = request;
            else {
                front = back = request;
                resume(key, arg);
            }
        });
    }
    function resume(key, arg) {
        try {
            var result = gen[key](arg);
            var value = result.value;
            var wrappedAwait = value instanceof _awaitValueDefault.default;
            Promise.resolve(wrappedAwait ? value.wrapped : value).then(function(arg1) {
                if (wrappedAwait) {
                    resume("next", arg1);
                    return;
                }
                settle(result.done ? "return" : "normal", arg1);
            }, function(err) {
                resume("throw", err);
            });
        } catch (err) {
            settle("throw", err);
        }
    }
    function settle(type, value) {
        switch(type){
            case "return":
                front.resolve({
                    value: value,
                    done: true
                });
                break;
            case "throw":
                front.reject(value);
                break;
            default:
                front.resolve({
                    value: value,
                    done: false
                });
                break;
        }
        front = front.next;
        if (front) resume(front.key, front.arg);
        else back = null;
    }
    this._invoke = send;
    if (typeof gen.return !== "function") this.return = undefined;
}
exports.default = AsyncGenerator;
if (typeof Symbol === "function" && Symbol.asyncIterator) AsyncGenerator.prototype[Symbol.asyncIterator] = function() {
    return this;
};
AsyncGenerator.prototype.next = function(arg) {
    return this._invoke("next", arg);
};
AsyncGenerator.prototype.throw = function(arg) {
    return this._invoke("throw", arg);
};
AsyncGenerator.prototype.return = function(arg) {
    return this._invoke("return", arg);
};

},{"./_await_value":"k3Jfi","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"k3Jfi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _AwaitValue(value) {
    this.wrapped = value;
}
exports.default = _AwaitValue;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"6dti9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _asyncGeneratorDelegate(inner, awaitWrap) {
    var iter = {
    }, waiting = false;
    function pump(key, value) {
        waiting = true;
        value = new Promise(function(resolve) {
            resolve(inner[key](value));
        });
        return {
            done: false,
            value: awaitWrap(value)
        };
    }
    if (typeof Symbol === "function" && Symbol.iterator) iter[Symbol.iterator] = function() {
        return this;
    };
    iter.next = function(value) {
        if (waiting) {
            waiting = false;
            return value;
        }
        return pump("next", value);
    };
    if (typeof inner.throw === "function") iter.throw = function(value) {
        if (waiting) {
            waiting = false;
            throw value;
        }
        return pump("throw", value);
    };
    if (typeof inner.return === "function") iter.return = function(value) {
        return pump("return", value);
    };
    return iter;
}
exports.default = _asyncGeneratorDelegate;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"6hvTH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _asyncIterator(iterable) {
    var method;
    if (typeof Symbol === "function") {
        if (Symbol.asyncIterator) {
            method = iterable[Symbol.asyncIterator];
            if (method != null) return method.call(iterable);
        }
        if (Symbol.iterator) {
            method = iterable[Symbol.iterator];
            if (method != null) return method.call(iterable);
        }
    }
    throw new TypeError("Object is not async iterable");
}
exports.default = _asyncIterator;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"eHSTT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) resolve(value);
    else Promise.resolve(value).then(_next, _throw);
}
function _asyncToGenerator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
exports.default = _asyncToGenerator;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"6xWha":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _awaitValue = require("./_await_value");
var _awaitValueDefault = parcelHelpers.interopDefault(_awaitValue);
function _awaitAsyncGenerator(value) {
    return new _awaitValueDefault.default(value);
}
exports.default = _awaitAsyncGenerator;

},{"./_await_value":"k3Jfi","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"ivVJk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
exports.default = _classCallCheck;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"gWGWt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _classNameTDZError(name) {
    throw new Error("Class \"" + name + "\" cannot be referenced in computed property keys.");
}
exports.default = _classNameTDZError;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"imcGP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) throw new TypeError("attempted to get private field on non-instance");
    return privateMap.get(receiver).value;
}
exports.default = _classPrivateFieldGet;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"iGpVw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _classPrivateFieldBase(receiver, privateKey) {
    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) throw new TypeError("attempted to use private field on non-instance");
    return receiver;
}
exports.default = _classPrivateFieldBase;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"exdRp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) throw new TypeError("attempted to set private field on non-instance");
    var descriptor = privateMap.get(receiver);
    if (!descriptor.writable) throw new TypeError("attempted to set read only private field");
    descriptor.value = value;
    return value;
}
exports.default = _classPrivateFieldSet;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"haZsF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _classPrivateMethodGet(receiver, privateSet, fn) {
    if (!privateSet.has(receiver)) throw new TypeError("attempted to get private field on non-instance");
    return fn;
}
exports.default = _classPrivateMethodGet;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"hBDF6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _classPrivateMethodSet() {
    throw new TypeError("attempted to reassign private method");
}
exports.default = _classPrivateMethodSet;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"iwoLf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _classStaticPrivateFieldSpecGet(receiver, classConstructor, descriptor) {
    if (receiver !== classConstructor) throw new TypeError("Private static access of wrong provenance");
    return descriptor.value;
}
exports.default = _classStaticPrivateFieldSpecGet;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"iai5V":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _classStaticPrivateFieldSpecSet(receiver, classConstructor, descriptor, value) {
    if (receiver !== classConstructor) throw new TypeError("Private static access of wrong provenance");
    if (!descriptor.writable) throw new TypeError("attempted to set read only private field");
    descriptor.value = value;
    return value;
}
exports.default = _classStaticPrivateFieldSpecSet;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"lvPVB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
    } catch (e) {
        return false;
    }
}
function construct(Parent, args, Class) {
    if (isNativeReflectConstruct()) construct = Reflect.construct;
    else construct = function construct1(Parent1, args1, Class1) {
        var a = [
            null
        ];
        a.push.apply(a, args1);
        var Constructor = Function.bind.apply(Parent1, a);
        var instance = new Constructor();
        if (Class1) _setPrototypeOf(instance, Class1.prototype);
        return instance;
    };
    return construct.apply(null, arguments);
}
function _construct(Parent, args, Class) {
    return construct.apply(null, arguments);
}
exports.default = _construct;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"iUP6F":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
exports.default = _createClass;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"h3ZQg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _toArray = require("./_to_array");
var _toArrayDefault = parcelHelpers.interopDefault(_toArray);
var _toPropertyKey = require("./_to_property_key");
var _toPropertyKeyDefault = parcelHelpers.interopDefault(_toPropertyKey);
function _decorate(decorators, factory, superClass) {
    var r = factory(function initialize(O) {
        _initializeInstanceElements(O, decorated.elements);
    }, superClass);
    var decorated = _decorateClass(_coalesceClassElements(r.d.map(_createElementDescriptor)), decorators);
    _initializeClassElements(r.F, decorated.elements);
    return _runClassFinishers(r.F, decorated.finishers);
}
exports.default = _decorate;
function _createElementDescriptor(def) {
    var key = _toPropertyKeyDefault.default(def.key);
    var descriptor;
    if (def.kind === "method") {
        descriptor = {
            value: def.value,
            writable: true,
            configurable: true,
            enumerable: false
        };
        Object.defineProperty(def.value, "name", {
            value: _typeof(key) === "symbol" ? "" : key,
            configurable: true
        });
    } else if (def.kind === "get") descriptor = {
        get: def.value,
        configurable: true,
        enumerable: false
    };
    else if (def.kind === "set") descriptor = {
        set: def.value,
        configurable: true,
        enumerable: false
    };
    else if (def.kind === "field") descriptor = {
        configurable: true,
        writable: true,
        enumerable: true
    };
    var element = {
        kind: def.kind === "field" ? "field" : "method",
        key: key,
        placement: def.static ? "static" : def.kind === "field" ? "own" : "prototype",
        descriptor: descriptor
    };
    if (def.decorators) element.decorators = def.decorators;
    if (def.kind === "field") element.initializer = def.value;
    return element;
}
function _coalesceGetterSetter(element, other) {
    if (element.descriptor.get !== undefined) other.descriptor.get = element.descriptor.get;
    else other.descriptor.set = element.descriptor.set;
}
function _coalesceClassElements(elements) {
    var newElements = [];
    var isSameElement = function isSameElement1(other) {
        return other.kind === "method" && other.key === element.key && other.placement === element.placement;
    };
    for(var i = 0; i < elements.length; i++){
        var element = elements[i];
        var other;
        if (element.kind === "method" && (other = newElements.find(isSameElement))) {
            if (_isDataDescriptor(element.descriptor) || _isDataDescriptor(other.descriptor)) {
                if (_hasDecorators(element) || _hasDecorators(other)) throw new ReferenceError("Duplicated methods (" + element.key + ") can't be decorated.");
                other.descriptor = element.descriptor;
            } else {
                if (_hasDecorators(element)) {
                    if (_hasDecorators(other)) throw new ReferenceError("Decorators can't be placed on different accessors with for the same property (" + element.key + ").");
                    other.decorators = element.decorators;
                }
                _coalesceGetterSetter(element, other);
            }
        } else newElements.push(element);
    }
    return newElements;
}
function _hasDecorators(element) {
    return element.decorators && element.decorators.length;
}
function _isDataDescriptor(desc) {
    return desc !== undefined && !(desc.value === undefined && desc.writable === undefined);
}
function _initializeClassElements(F, elements) {
    var proto = F.prototype;
    [
        "method",
        "field"
    ].forEach(function(kind) {
        elements.forEach(function(element) {
            var placement = element.placement;
            if (element.kind === kind && (placement === "static" || placement === "prototype")) {
                var receiver = placement === "static" ? F : proto;
                _defineClassElement(receiver, element);
            }
        });
    });
}
function _initializeInstanceElements(O, elements) {
    [
        "method",
        "field"
    ].forEach(function(kind) {
        elements.forEach(function(element) {
            if (element.kind === kind && element.placement === "own") _defineClassElement(O, element);
        });
    });
}
function _defineClassElement(receiver, element) {
    var descriptor = element.descriptor;
    if (element.kind === "field") {
        var initializer = element.initializer;
        descriptor = {
            enumerable: descriptor.enumerable,
            writable: descriptor.writable,
            configurable: descriptor.configurable,
            value: initializer === void 0 ? void 0 : initializer.call(receiver)
        };
    }
    Object.defineProperty(receiver, element.key, descriptor);
}
function _decorateClass(elements, decorators) {
    var newElements = [];
    var finishers = [];
    var placements = {
        static: [],
        prototype: [],
        own: []
    };
    elements.forEach(function(element) {
        _addElementPlacement(element, placements);
    });
    elements.forEach(function(element) {
        if (!_hasDecorators(element)) return newElements.push(element);
        var elementFinishersExtras = _decorateElement(element, placements);
        newElements.push(elementFinishersExtras.element);
        newElements.push.apply(newElements, elementFinishersExtras.extras);
        finishers.push.apply(finishers, elementFinishersExtras.finishers);
    });
    if (!decorators) return {
        elements: newElements,
        finishers: finishers
    };
    var result = _decorateConstructor(newElements, decorators);
    finishers.push.apply(finishers, result.finishers);
    result.finishers = finishers;
    return result;
}
function _addElementPlacement(element, placements, silent) {
    var keys = placements[element.placement];
    if (!silent && keys.indexOf(element.key) !== -1) throw new TypeError("Duplicated element (" + element.key + ")");
    keys.push(element.key);
}
function _decorateElement(element, placements) {
    var extras = [];
    var finishers = [];
    for(var decorators = element.decorators, i = decorators.length - 1; i >= 0; i--){
        var keys = placements[element.placement];
        keys.splice(keys.indexOf(element.key), 1);
        var elementObject = _fromElementDescriptor(element);
        var elementFinisherExtras = _toElementFinisherExtras(decorators[i](elementObject) || elementObject);
        element = elementFinisherExtras.element;
        _addElementPlacement(element, placements);
        if (elementFinisherExtras.finisher) finishers.push(elementFinisherExtras.finisher);
        var newExtras = elementFinisherExtras.extras;
        if (newExtras) {
            for(var j = 0; j < newExtras.length; j++)_addElementPlacement(newExtras[j], placements);
            extras.push.apply(extras, newExtras);
        }
    }
    return {
        element: element,
        finishers: finishers,
        extras: extras
    };
}
function _decorateConstructor(elements, decorators) {
    var finishers = [];
    for(var i = decorators.length - 1; i >= 0; i--){
        var obj = _fromClassDescriptor(elements);
        var elementsAndFinisher = _toClassDescriptor(decorators[i](obj) || obj);
        if (elementsAndFinisher.finisher !== undefined) finishers.push(elementsAndFinisher.finisher);
        if (elementsAndFinisher.elements !== undefined) {
            elements = elementsAndFinisher.elements;
            for(var j = 0; j < elements.length - 1; j++)for(var k = j + 1; k < elements.length; k++){
                if (elements[j].key === elements[k].key && elements[j].placement === elements[k].placement) throw new TypeError("Duplicated element (" + elements[j].key + ")");
            }
        }
    }
    return {
        elements: elements,
        finishers: finishers
    };
}
function _fromElementDescriptor(element) {
    var obj = {
        kind: element.kind,
        key: element.key,
        placement: element.placement,
        descriptor: element.descriptor
    };
    var desc = {
        value: "Descriptor",
        configurable: true
    };
    Object.defineProperty(obj, Symbol.toStringTag, desc);
    if (element.kind === "field") obj.initializer = element.initializer;
    return obj;
}
function _toElementDescriptors(elementObjects) {
    if (elementObjects === undefined) return;
    return _toArrayDefault.default(elementObjects).map(function(elementObject) {
        var element = _toElementDescriptor(elementObject);
        _disallowProperty(elementObject, "finisher", "An element descriptor");
        _disallowProperty(elementObject, "extras", "An element descriptor");
        return element;
    });
}
function _toElementDescriptor(elementObject) {
    var kind = String(elementObject.kind);
    if (kind !== "method" && kind !== "field") throw new TypeError("An element descriptor's .kind property must be either \"method\" or \"field\", but a decorator created an element descriptor with .kind \"" + kind + '"');
    var key = _toPropertyKeyDefault.default(elementObject.key);
    var placement = String(elementObject.placement);
    if (placement !== "static" && placement !== "prototype" && placement !== "own") throw new TypeError("An element descriptor's .placement property must be one of \"static\", \"prototype\" or \"own\", but a decorator created an element descriptor with .placement \"" + placement + '"');
    var descriptor = elementObject.descriptor;
    _disallowProperty(elementObject, "elements", "An element descriptor");
    var element = {
        kind: kind,
        key: key,
        placement: placement,
        descriptor: Object.assign({
        }, descriptor)
    };
    if (kind !== "field") _disallowProperty(elementObject, "initializer", "A method descriptor");
    else {
        _disallowProperty(descriptor, "get", "The property descriptor of a field descriptor");
        _disallowProperty(descriptor, "set", "The property descriptor of a field descriptor");
        _disallowProperty(descriptor, "value", "The property descriptor of a field descriptor");
        element.initializer = elementObject.initializer;
    }
    return element;
}
function _toElementFinisherExtras(elementObject) {
    var element = _toElementDescriptor(elementObject);
    var finisher = _optionalCallableProperty(elementObject, "finisher");
    var extras = _toElementDescriptors(elementObject.extras);
    return {
        element: element,
        finisher: finisher,
        extras: extras
    };
}
function _fromClassDescriptor(elements) {
    var obj = {
        kind: "class",
        elements: elements.map(_fromElementDescriptor)
    };
    var desc = {
        value: "Descriptor",
        configurable: true
    };
    Object.defineProperty(obj, Symbol.toStringTag, desc);
    return obj;
}
function _toClassDescriptor(obj) {
    var kind = String(obj.kind);
    if (kind !== "class") throw new TypeError("A class descriptor's .kind property must be \"class\", but a decorator created a class descriptor with .kind \"" + kind + '"');
    _disallowProperty(obj, "key", "A class descriptor");
    _disallowProperty(obj, "placement", "A class descriptor");
    _disallowProperty(obj, "descriptor", "A class descriptor");
    _disallowProperty(obj, "initializer", "A class descriptor");
    _disallowProperty(obj, "extras", "A class descriptor");
    var finisher = _optionalCallableProperty(obj, "finisher");
    var elements = _toElementDescriptors(obj.elements);
    return {
        elements: elements,
        finisher: finisher
    };
}
function _disallowProperty(obj, name, objectType) {
    if (obj[name] !== undefined) throw new TypeError(objectType + " can't have a ." + name + " property.");
}
function _optionalCallableProperty(obj, name) {
    var value = obj[name];
    if (value !== undefined && typeof value !== "function") throw new TypeError("Expected '" + name + "' to be a function");
    return value;
}
function _runClassFinishers(constructor, finishers) {
    for(var i = 0; i < finishers.length; i++){
        var newConstructor = finishers[i](constructor);
        if (newConstructor !== undefined) {
            if (typeof newConstructor !== "function") throw new TypeError("Finishers must return a constructor.");
            constructor = newConstructor;
        }
    }
    return constructor;
}

},{"./_to_array":"1K5vj","./_to_property_key":"artMD","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"1K5vj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _arrayWithHoles = require("./_array_with_holes");
var _arrayWithHolesDefault = parcelHelpers.interopDefault(_arrayWithHoles);
var _iterableToArray = require("./_iterable_to_array");
var _iterableToArrayDefault = parcelHelpers.interopDefault(_iterableToArray);
var _nonIterableRest = require("./_non_iterable_rest");
var _nonIterableRestDefault = parcelHelpers.interopDefault(_nonIterableRest);
function _toArray(arr) {
    return _arrayWithHolesDefault.default(arr) || _iterableToArrayDefault.default(arr) || _nonIterableRestDefault.default();
}
exports.default = _toArray;

},{"./_array_with_holes":"9F8uR","./_iterable_to_array":"6PWwf","./_non_iterable_rest":"1Ng8K","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"6PWwf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _iterableToArray(iter) {
    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}
exports.default = _iterableToArray;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"1Ng8K":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
}
exports.default = _nonIterableRest;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"artMD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _typeOf = require("./_type_of");
var _typeOfDefault = parcelHelpers.interopDefault(_typeOf);
var _toPrimitive = require("./_to_primitive");
var _toPrimitiveDefault = parcelHelpers.interopDefault(_toPrimitive);
function _toPropertyKey(arg) {
    var key = _toPrimitiveDefault.default(arg, "string");
    return _typeOfDefault.default(key) === "symbol" ? key : String(key);
}
exports.default = _toPropertyKey;

},{"./_type_of":"3Ax2K","./_to_primitive":"97J2I","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"3Ax2K":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _typeof(obj) {
    return obj && obj.constructor === Symbol ? "symbol" : typeof obj;
}
exports.default = _typeof;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"97J2I":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _typeOf = require("./_type_of");
var _typeOfDefault = parcelHelpers.interopDefault(_typeOf);
function _toPrimitive(input, hint) {
    if (_typeOfDefault.default(input) !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
        var res = prim.call(input, hint || "default");
        if (_typeOfDefault.default(res) !== "object") return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
}
exports.default = _toPrimitive;

},{"./_type_of":"3Ax2K","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"8aL1j":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _defaults(obj, defaults) {
    var keys = Object.getOwnPropertyNames(defaults);
    for(var i = 0; i < keys.length; i++){
        var key = keys[i];
        var value = Object.getOwnPropertyDescriptor(defaults, key);
        if (value && value.configurable && obj[key] === undefined) Object.defineProperty(obj, key, value);
    }
    return obj;
}
exports.default = _defaults;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"7CDLI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _defineEnumerableProperties(obj, descs) {
    for(var key in descs){
        var desc = descs[key];
        desc.configurable = desc.enumerable = true;
        if ("value" in desc) desc.writable = true;
        Object.defineProperty(obj, key, desc);
    }
    if (Object.getOwnPropertySymbols) {
        var objectSymbols = Object.getOwnPropertySymbols(descs);
        for(var i = 0; i < objectSymbols.length; i++){
            var sym = objectSymbols[i];
            var desc = descs[sym];
            desc.configurable = desc.enumerable = true;
            if ("value" in desc) desc.writable = true;
            Object.defineProperty(obj, sym, desc);
        }
    }
    return obj;
}
exports.default = _defineEnumerableProperties;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"c5CTZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _defineProperty(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
exports.default = _defineProperty;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"5T4kW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function extends_() {
    extends_ = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return extends_.apply(this, arguments);
}
function _extends() {
    return extends_.apply(this, arguments);
}
exports.default = _extends;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"23nlD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _superPropBase = require("./_super_prop_base");
var _superPropBaseDefault = parcelHelpers.interopDefault(_superPropBase);
function get(target, property, receiver) {
    if (typeof Reflect !== "undefined" && Reflect.get) get = Reflect.get;
    else get = function get1(target1, property1, receiver1) {
        var base = _superPropBaseDefault.default(target1, property1);
        if (!base) return;
        var desc = Object.getOwnPropertyDescriptor(base, property1);
        if (desc.get) return desc.get.call(receiver1 || target1);
        return desc.value;
    };
    return get(target, property, receiver);
}
function _get(target, property, reciever) {
    return get(target, property, reciever);
}
exports.default = _get;

},{"./_super_prop_base":"fQeiC","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"fQeiC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getPrototypeOf = require("./_get_prototype_of");
var _getPrototypeOfDefault = parcelHelpers.interopDefault(_getPrototypeOf);
function _superPropBase(object, property) {
    while(!Object.prototype.hasOwnProperty.call(object, property)){
        object = _getPrototypeOfDefault.default(object);
        if (object === null) break;
    }
    return object;
}
exports.default = _superPropBase;

},{"./_get_prototype_of":"in20J","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"in20J":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function getPrototypeOf(o) {
    getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf1(o1) {
        return o1.__proto__ || Object.getPrototypeOf(o1);
    };
    return getPrototypeOf(o);
}
function _getPrototypeOf(o) {
    return getPrototypeOf(o);
}
exports.default = _getPrototypeOf;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"jgTdo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _setPrototypeOf = require("./_set_prototype_of");
var _setPrototypeOfDefault = parcelHelpers.interopDefault(_setPrototypeOf);
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOfDefault.default(subClass, superClass);
}
exports.default = _inherits;

},{"./_set_prototype_of":"ezxsO","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"ezxsO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function setPrototypeOf(o, p) {
    setPrototypeOf = Object.setPrototypeOf || function setPrototypeOf1(o1, p1) {
        o1.__proto__ = p1;
        return o1;
    };
    return setPrototypeOf(o, p);
}
function _setPrototypeOf(o, p) {
    return setPrototypeOf(o, p);
}
exports.default = _setPrototypeOf;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"fEJWv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
}
exports.default = _inheritsLoose;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"fLGLm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _initializerDefineProperty(target, property, descriptor, context) {
    if (!descriptor) return;
    Object.defineProperty(target, property, {
        enumerable: descriptor.enumerable,
        configurable: descriptor.configurable,
        writable: descriptor.writable,
        value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
    });
}
exports.default = _initializerDefineProperty;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"4BNL3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _initializerWarningHelper(descriptor, context) {
    throw new Error("Decorating class property failed. Please ensure that proposal-class-properties is enabled and set to use loose mode. To use proposal-class-properties in spec mode with decorators, wait for the next major version of decorators in stage 2.");
}
exports.default = _initializerWarningHelper;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"gq7TQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _instanceof(left, right) {
    if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) return right[Symbol.hasInstance](left);
    else return left instanceof right;
}
exports.default = _instanceof;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"etp20":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
exports.default = _interopRequireDefault;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"e4N5E":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) return obj;
    else {
        var newObj = {
        };
        if (obj != null) {
            for(var key in obj)if (Object.prototype.hasOwnProperty.call(obj, key)) {
                var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {
                };
                if (desc.get || desc.set) Object.defineProperty(newObj, key, desc);
                else newObj[key] = obj[key];
            }
        }
        newObj.default = obj;
        return newObj;
    }
}
exports.default = _interopRequireWildcard;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"bPtD4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _isNativeFunction(fn) {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
exports.default = _isNativeFunction;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"l5k9G":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _iterableToArrayLimit(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;
    try {
        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
exports.default = _iterableToArrayLimit;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"cdjX9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _iterableToArrayLimitLoose(arr, i) {
    var _arr = [];
    for(var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;){
        _arr.push(_step.value);
        if (i && _arr.length === i) break;
    }
    return _arr;
}
exports.default = _iterableToArrayLimitLoose;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"em5AH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var REACT_ELEMENT_TYPE;
function _createRawReactElement(type, props, key, children) {
    if (!REACT_ELEMENT_TYPE) REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 60103;
    var defaultProps = type && type.defaultProps;
    var childrenLength = arguments.length - 3;
    if (!props && childrenLength !== 0) props = {
        children: void 0
    };
    if (props && defaultProps) {
        for(var propName in defaultProps)if (props[propName] === void 0) props[propName] = defaultProps[propName];
    } else if (!props) props = defaultProps || {
    };
    if (childrenLength === 1) props.children = children;
    else if (childrenLength > 1) {
        var childArray = new Array(childrenLength);
        for(var i = 0; i < childrenLength; i++)childArray[i] = arguments[i + 3];
        props.children = childArray;
    }
    return {
        $$typeof: REACT_ELEMENT_TYPE,
        type: type,
        key: key === undefined ? null : '' + key,
        ref: null,
        props: props,
        _owner: null
    };
}
exports.default = _createRawReactElement;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"fSsCA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _newArrowCheck(innerThis, boundThis) {
    if (innerThis !== boundThis) throw new TypeError("Cannot instantiate an arrow function");
}
exports.default = _newArrowCheck;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"lIhjf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
}
exports.default = _nonIterableSpread;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"j6m7v":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _defineProperty = require("./_define_property");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
function _objectSpread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {
        };
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === 'function') ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
            return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }));
        ownKeys.forEach(function(key) {
            _definePropertyDefault.default(target, key, source[key]);
        });
    }
    return target;
}
exports.default = _objectSpread;

},{"./_define_property":"c5CTZ","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"6TFIH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _objectWithoutPropertiesLoose = require("./_object_without_properties_loose");
var _objectWithoutPropertiesLooseDefault = parcelHelpers.interopDefault(_objectWithoutPropertiesLoose);
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {
    };
    var target = _objectWithoutPropertiesLooseDefault.default(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
exports.default = _objectWithoutProperties;

},{"./_object_without_properties_loose":"bWoV5","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"bWoV5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {
    };
    var target = {
    };
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
exports.default = _objectWithoutPropertiesLoose;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"cRbTG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _assertThisInitialized = require("./_assert_this_initialized");
var _assertThisInitializedDefault = parcelHelpers.interopDefault(_assertThisInitialized);
var _typeOf = require("./_type_of");
var _typeOfDefault = parcelHelpers.interopDefault(_typeOf);
function _possibleConstructorReturn(self, call) {
    if (call && (_typeOfDefault.default(call) === "object" || typeof call === "function")) return call;
    return _assertThisInitializedDefault.default(self);
}
exports.default = _possibleConstructorReturn;

},{"./_assert_this_initialized":"gpZw7","./_type_of":"3Ax2K","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"3J9uq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _readOnlyError(name) {
    throw new Error("\"" + name + "\" is read-only");
}
exports.default = _readOnlyError;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"kvgEj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _defineProperty = require("./_define_property");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _superPropBase = require("./_super_prop_base");
var _superPropBaseDefault = parcelHelpers.interopDefault(_superPropBase);
function set(target, property, value, receiver) {
    if (typeof Reflect !== "undefined" && Reflect.set) set = Reflect.set;
    else set = function set1(target1, property1, value1, receiver1) {
        var base = _superPropBaseDefault.default(target1, property1);
        var desc;
        if (base) {
            desc = Object.getOwnPropertyDescriptor(base, property1);
            if (desc.set) {
                desc.set.call(receiver1, value1);
                return true;
            } else if (!desc.writable) return false;
        }
        desc = Object.getOwnPropertyDescriptor(receiver1, property1);
        if (desc) {
            if (!desc.writable) return false;
            desc.value = value1;
            Object.defineProperty(receiver1, property1, desc);
        } else _definePropertyDefault.default(receiver1, property1, value1);
        return true;
    };
    return set(target, property, value, receiver);
}
function _set(target, property, value, receiver, isStrict) {
    var s = set(target, property, value, receiver || target);
    if (!s && isStrict) throw new Error('failed to set property');
    return value;
}
exports.default = _set;

},{"./_define_property":"c5CTZ","./_super_prop_base":"fQeiC","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"dANwW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _skipFirstGeneratorNext(fn) {
    return function() {
        var it = fn.apply(this, arguments);
        it.next();
        return it;
    };
}
exports.default = _skipFirstGeneratorNext;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"kAoDu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _arrayWithHoles = require("./_array_with_holes");
var _arrayWithHolesDefault = parcelHelpers.interopDefault(_arrayWithHoles);
var _iterableToArray = require("./_iterable_to_array");
var _iterableToArrayDefault = parcelHelpers.interopDefault(_iterableToArray);
var _nonIterableRest = require("./_non_iterable_rest");
var _nonIterableRestDefault = parcelHelpers.interopDefault(_nonIterableRest);
function _slicedToArray(arr, i) {
    return _arrayWithHolesDefault.default(arr) || _iterableToArrayDefault.default(arr, i) || _nonIterableRestDefault.default();
}
exports.default = _slicedToArray;

},{"./_array_with_holes":"9F8uR","./_iterable_to_array":"6PWwf","./_non_iterable_rest":"1Ng8K","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"1ksI9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _arrayWithHoles = require("./_array_with_holes");
var _arrayWithHolesDefault = parcelHelpers.interopDefault(_arrayWithHoles);
var _iterableToArrayLimitLoose = require("./_iterable_to_array_limit_loose");
var _iterableToArrayLimitLooseDefault = parcelHelpers.interopDefault(_iterableToArrayLimitLoose);
var _nonIterableRest = require("./_non_iterable_rest");
var _nonIterableRestDefault = parcelHelpers.interopDefault(_nonIterableRest);
function _slicedToArrayLoose(arr, i) {
    return _arrayWithHolesDefault.default(arr) || _iterableToArrayLimitLooseDefault.default(arr, i) || _nonIterableRestDefault.default();
}
exports.default = _slicedToArrayLoose;

},{"./_array_with_holes":"9F8uR","./_iterable_to_array_limit_loose":"cdjX9","./_non_iterable_rest":"1Ng8K","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"fgUfv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _taggedTemplateLiteral(strings, raw) {
    if (!raw) raw = strings.slice(0);
    return Object.freeze(Object.defineProperties(strings, {
        raw: {
            value: Object.freeze(raw)
        }
    }));
}
exports.default = _taggedTemplateLiteral;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"ef6v4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _taggedTemplateLiteralLoose(strings, raw) {
    if (!raw) raw = strings.slice(0);
    strings.raw = raw;
    return strings;
}
exports.default = _taggedTemplateLiteralLoose;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"3edwg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _throw(e) {
    throw e;
}
exports.default = _throw;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"fxUIs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _arrayWithoutHoles = require("./_array_without_holes");
var _arrayWithoutHolesDefault = parcelHelpers.interopDefault(_arrayWithoutHoles);
var _iterableToArray = require("./_iterable_to_array");
var _iterableToArrayDefault = parcelHelpers.interopDefault(_iterableToArray);
var _nonIterableSpread = require("./_non_iterable_spread");
var _nonIterableSpreadDefault = parcelHelpers.interopDefault(_nonIterableSpread);
function _toConsumableArray(arr) {
    return _arrayWithoutHolesDefault.default(arr) || _iterableToArrayDefault.default(arr) || _nonIterableSpreadDefault.default();
}
exports.default = _toConsumableArray;

},{"./_array_without_holes":"8qfF7","./_iterable_to_array":"6PWwf","./_non_iterable_spread":"lIhjf","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"fuczI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _asyncGenerator = require("./_async_generator");
var _asyncGeneratorDefault = parcelHelpers.interopDefault(_asyncGenerator);
function _wrapAsyncGenerator(fn) {
    return function() {
        return new _asyncGeneratorDefault.default(fn.apply(this, arguments));
    };
}
exports.default = _wrapAsyncGenerator;

},{"./_async_generator":"lpmmk","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"2YT4k":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _construct = require("./_construct");
var _constructDefault = parcelHelpers.interopDefault(_construct);
var _isNativeFunction = require("./_is_native_function");
var _isNativeFunctionDefault = parcelHelpers.interopDefault(_isNativeFunction);
var _getPrototypeOf = require("./_get_prototype_of");
var _getPrototypeOfDefault = parcelHelpers.interopDefault(_getPrototypeOf);
var _setPrototypeOf = require("./_set_prototype_of");
var _setPrototypeOfDefault = parcelHelpers.interopDefault(_setPrototypeOf);
function wrapNativeSuper(Class) {
    var _cache = typeof Map === "function" ? new Map() : undefined;
    wrapNativeSuper = function wrapNativeSuper1(Class1) {
        if (Class1 === null || !_isNativeFunctionDefault.default(Class1)) return Class1;
        if (typeof Class1 !== "function") throw new TypeError("Super expression must either be null or a function");
        if (typeof _cache !== "undefined") {
            if (_cache.has(Class1)) return _cache.get(Class1);
            _cache.set(Class1, Wrapper);
        }
        function Wrapper() {
            return _constructDefault.default(Class1, arguments, _getPrototypeOfDefault.default(this).constructor);
        }
        Wrapper.prototype = Object.create(Class1.prototype, {
            constructor: {
                value: Wrapper,
                enumerable: false,
                writable: true,
                configurable: true
            }
        });
        return _setPrototypeOfDefault.default(Wrapper, Class1);
    };
    return wrapNativeSuper(Class);
}
function _wrapNativeSuper(Class) {
    return wrapNativeSuper(Class);
}
exports.default = _wrapNativeSuper;

},{"./_construct":"lvPVB","./_is_native_function":"bPtD4","./_get_prototype_of":"in20J","./_set_prototype_of":"ezxsO","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"hmHqu":[function(require,module,exports) {
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var runtime = function(exports) {
    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined; // More compressible than void 0.
    var $Symbol = typeof Symbol === "function" ? Symbol : {
    };
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
    function define(obj, key, value) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
        return obj[key];
    }
    try {
        // IE 8 has a broken Object.defineProperty that only works on DOM objects.
        define({
        }, "");
    } catch (err) {
        define = function(obj, key, value) {
            return obj[key] = value;
        };
    }
    function wrap(innerFn, outerFn, self, tryLocsList) {
        // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
        var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
        var generator = Object.create(protoGenerator.prototype);
        var context = new Context(tryLocsList || []);
        // The ._invoke method unifies the implementations of the .next,
        // .throw, and .return methods.
        generator._invoke = makeInvokeMethod(innerFn, self, context);
        return generator;
    }
    exports.wrap = wrap;
    // Try/catch helper to minimize deoptimizations. Returns a completion
    // record like context.tryEntries[i].completion. This interface could
    // have been (and was previously) designed to take a closure to be
    // invoked without arguments, but in all the cases we care about we
    // already have an existing method we want to call, so there's no need
    // to create a new function object. We can even get away with assuming
    // the method takes exactly one argument, since that happens to be true
    // in every case, so we don't have to touch the arguments object. The
    // only additional allocation required is the completion record, which
    // has a stable shape and so hopefully should be cheap to allocate.
    function tryCatch(fn, obj, arg) {
        try {
            return {
                type: "normal",
                arg: fn.call(obj, arg)
            };
        } catch (err) {
            return {
                type: "throw",
                arg: err
            };
        }
    }
    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";
    // Returning this object from the innerFn has the same effect as
    // breaking out of the dispatch switch statement.
    var ContinueSentinel = {
    };
    // Dummy constructor functions that we use as the .constructor and
    // .constructor.prototype properties for functions that return Generator
    // objects. For full spec compliance, you may wish to configure your
    // minifier not to mangle the names of these two functions.
    function Generator() {
    }
    function GeneratorFunction() {
    }
    function GeneratorFunctionPrototype() {
    }
    // This is a polyfill for %IteratorPrototype% for environments that
    // don't natively support it.
    var IteratorPrototype = {
    };
    define(IteratorPrototype, iteratorSymbol, function() {
        return this;
    });
    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = GeneratorFunctionPrototype;
    define(Gp, "constructor", GeneratorFunctionPrototype);
    define(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
    GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction");
    // Helper for defining the .next, .throw, and .return methods of the
    // Iterator interface in terms of a single ._invoke method.
    function defineIteratorMethods(prototype) {
        [
            "next",
            "throw",
            "return"
        ].forEach(function(method) {
            define(prototype, method, function(arg) {
                return this._invoke(method, arg);
            });
        });
    }
    exports.isGeneratorFunction = function(genFun) {
        var ctor = typeof genFun === "function" && genFun.constructor;
        return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };
    exports.mark = function(genFun) {
        if (Object.setPrototypeOf) Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
        else {
            genFun.__proto__ = GeneratorFunctionPrototype;
            define(genFun, toStringTagSymbol, "GeneratorFunction");
        }
        genFun.prototype = Object.create(Gp);
        return genFun;
    };
    // Within the body of any async function, `await x` is transformed to
    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
    // `hasOwn.call(value, "__await")` to determine if the yielded value is
    // meant to be awaited.
    exports.awrap = function(arg) {
        return {
            __await: arg
        };
    };
    function AsyncIterator(generator, PromiseImpl) {
        function invoke(method, arg, resolve, reject) {
            var record = tryCatch(generator[method], generator, arg);
            if (record.type === "throw") reject(record.arg);
            else {
                var result = record.arg;
                var value = result.value;
                if (value && typeof value === "object" && hasOwn.call(value, "__await")) return PromiseImpl.resolve(value.__await).then(function(value1) {
                    invoke("next", value1, resolve, reject);
                }, function(err) {
                    invoke("throw", err, resolve, reject);
                });
                return PromiseImpl.resolve(value).then(function(unwrapped) {
                    // When a yielded Promise is resolved, its final value becomes
                    // the .value of the Promise<{value,done}> result for the
                    // current iteration.
                    result.value = unwrapped;
                    resolve(result);
                }, function(error) {
                    // If a rejected Promise was yielded, throw the rejection back
                    // into the async generator function so it can be handled there.
                    return invoke("throw", error, resolve, reject);
                });
            }
        }
        var previousPromise;
        function enqueue(method, arg) {
            function callInvokeWithMethodAndArg() {
                return new PromiseImpl(function(resolve, reject) {
                    invoke(method, arg, resolve, reject);
                });
            }
            return previousPromise = // If enqueue has been called before, then we want to wait until
            // all previous Promises have been resolved before calling invoke,
            // so that results are always delivered in the correct order. If
            // enqueue has not been called before, then it is important to
            // call invoke immediately, without waiting on a callback to fire,
            // so that the async generator function has the opportunity to do
            // any necessary setup in a predictable way. This predictability
            // is why the Promise constructor synchronously invokes its
            // executor callback, and why async functions synchronously
            // execute code before the first await. Since we implement simple
            // async functions in terms of async generators, it is especially
            // important to get this right, even though it requires care.
            previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later
            // invocations of the iterator.
            callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        }
        // Define the unified helper method that is used to implement .next,
        // .throw, and .return (see defineIteratorMethods).
        this._invoke = enqueue;
    }
    defineIteratorMethods(AsyncIterator.prototype);
    define(AsyncIterator.prototype, asyncIteratorSymbol, function() {
        return this;
    });
    exports.AsyncIterator = AsyncIterator;
    // Note that simple async functions are implemented on top of
    // AsyncIterator objects; they just return a Promise for the value of
    // the final result produced by the iterator.
    exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
        if (PromiseImpl === void 0) PromiseImpl = Promise;
        var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
        return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
         : iter.next().then(function(result) {
            return result.done ? result.value : iter.next();
        });
    };
    function makeInvokeMethod(innerFn, self, context) {
        var state = GenStateSuspendedStart;
        return function invoke(method, arg) {
            if (state === GenStateExecuting) throw new Error("Generator is already running");
            if (state === GenStateCompleted) {
                if (method === "throw") throw arg;
                // Be forgiving, per 25.3.3.3.3 of the spec:
                // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
                return doneResult();
            }
            context.method = method;
            context.arg = arg;
            while(true){
                var delegate = context.delegate;
                if (delegate) {
                    var delegateResult = maybeInvokeDelegate(delegate, context);
                    if (delegateResult) {
                        if (delegateResult === ContinueSentinel) continue;
                        return delegateResult;
                    }
                }
                if (context.method === "next") // Setting context._sent for legacy support of Babel's
                // function.sent implementation.
                context.sent = context._sent = context.arg;
                else if (context.method === "throw") {
                    if (state === GenStateSuspendedStart) {
                        state = GenStateCompleted;
                        throw context.arg;
                    }
                    context.dispatchException(context.arg);
                } else if (context.method === "return") context.abrupt("return", context.arg);
                state = GenStateExecuting;
                var record = tryCatch(innerFn, self, context);
                if (record.type === "normal") {
                    // If an exception is thrown from innerFn, we leave state ===
                    // GenStateExecuting and loop back for another invocation.
                    state = context.done ? GenStateCompleted : GenStateSuspendedYield;
                    if (record.arg === ContinueSentinel) continue;
                    return {
                        value: record.arg,
                        done: context.done
                    };
                } else if (record.type === "throw") {
                    state = GenStateCompleted;
                    // Dispatch the exception by looping back around to the
                    // context.dispatchException(context.arg) call above.
                    context.method = "throw";
                    context.arg = record.arg;
                }
            }
        };
    }
    // Call delegate.iterator[context.method](context.arg) and handle the
    // result, either by returning a { value, done } result from the
    // delegate iterator, or by modifying context.method and context.arg,
    // setting context.delegate to null, and returning the ContinueSentinel.
    function maybeInvokeDelegate(delegate, context) {
        var method = delegate.iterator[context.method];
        if (method === undefined) {
            // A .throw or .return when the delegate iterator has no .throw
            // method always terminates the yield* loop.
            context.delegate = null;
            if (context.method === "throw") {
                // Note: ["return"] must be used for ES3 parsing compatibility.
                if (delegate.iterator["return"]) {
                    // If the delegate iterator has a return method, give it a
                    // chance to clean up.
                    context.method = "return";
                    context.arg = undefined;
                    maybeInvokeDelegate(delegate, context);
                    if (context.method === "throw") // If maybeInvokeDelegate(context) changed context.method from
                    // "return" to "throw", let that override the TypeError below.
                    return ContinueSentinel;
                }
                context.method = "throw";
                context.arg = new TypeError("The iterator does not provide a 'throw' method");
            }
            return ContinueSentinel;
        }
        var record = tryCatch(method, delegate.iterator, context.arg);
        if (record.type === "throw") {
            context.method = "throw";
            context.arg = record.arg;
            context.delegate = null;
            return ContinueSentinel;
        }
        var info = record.arg;
        if (!info) {
            context.method = "throw";
            context.arg = new TypeError("iterator result is not an object");
            context.delegate = null;
            return ContinueSentinel;
        }
        if (info.done) {
            // Assign the result of the finished delegate to the temporary
            // variable specified by delegate.resultName (see delegateYield).
            context[delegate.resultName] = info.value;
            // Resume execution at the desired location (see delegateYield).
            context.next = delegate.nextLoc;
            // If context.method was "throw" but the delegate handled the
            // exception, let the outer generator proceed normally. If
            // context.method was "next", forget context.arg since it has been
            // "consumed" by the delegate iterator. If context.method was
            // "return", allow the original .return call to continue in the
            // outer generator.
            if (context.method !== "return") {
                context.method = "next";
                context.arg = undefined;
            }
        } else // Re-yield the result returned by the delegate method.
        return info;
        // The delegate iterator is finished, so forget it and continue with
        // the outer generator.
        context.delegate = null;
        return ContinueSentinel;
    }
    // Define Generator.prototype.{next,throw,return} in terms of the
    // unified ._invoke helper method.
    defineIteratorMethods(Gp);
    define(Gp, toStringTagSymbol, "Generator");
    // A Generator should always return itself as the iterator object when the
    // @@iterator function is called on it. Some browsers' implementations of the
    // iterator prototype chain incorrectly implement this, causing the Generator
    // object to not be returned from this call. This ensures that doesn't happen.
    // See https://github.com/facebook/regenerator/issues/274 for more details.
    define(Gp, iteratorSymbol, function() {
        return this;
    });
    define(Gp, "toString", function() {
        return "[object Generator]";
    });
    function pushTryEntry(locs) {
        var entry = {
            tryLoc: locs[0]
        };
        if (1 in locs) entry.catchLoc = locs[1];
        if (2 in locs) {
            entry.finallyLoc = locs[2];
            entry.afterLoc = locs[3];
        }
        this.tryEntries.push(entry);
    }
    function resetTryEntry(entry) {
        var record = entry.completion || {
        };
        record.type = "normal";
        delete record.arg;
        entry.completion = record;
    }
    function Context(tryLocsList) {
        // The root entry object (effectively a try statement without a catch
        // or a finally block) gives us a place to store values thrown from
        // locations where there is no enclosing try statement.
        this.tryEntries = [
            {
                tryLoc: "root"
            }
        ];
        tryLocsList.forEach(pushTryEntry, this);
        this.reset(true);
    }
    exports.keys = function(object) {
        var keys = [];
        for(var key in object)keys.push(key);
        keys.reverse();
        // Rather than returning an object with a next method, we keep
        // things simple and return the next function itself.
        return function next() {
            while(keys.length){
                var key1 = keys.pop();
                if (key1 in object) {
                    next.value = key1;
                    next.done = false;
                    return next;
                }
            }
            // To avoid creating an additional object, we just hang the .value
            // and .done properties off the next function object itself. This
            // also ensures that the minifier will not anonymize the function.
            next.done = true;
            return next;
        };
    };
    function values(iterable) {
        if (iterable) {
            var iteratorMethod = iterable[iteratorSymbol];
            if (iteratorMethod) return iteratorMethod.call(iterable);
            if (typeof iterable.next === "function") return iterable;
            if (!isNaN(iterable.length)) {
                var i = -1, next = function next1() {
                    while((++i) < iterable.length)if (hasOwn.call(iterable, i)) {
                        next1.value = iterable[i];
                        next1.done = false;
                        return next1;
                    }
                    next1.value = undefined;
                    next1.done = true;
                    return next1;
                };
                return next.next = next;
            }
        }
        // Return an iterator with no values.
        return {
            next: doneResult
        };
    }
    exports.values = values;
    function doneResult() {
        return {
            value: undefined,
            done: true
        };
    }
    Context.prototype = {
        constructor: Context,
        reset: function(skipTempReset) {
            this.prev = 0;
            this.next = 0;
            // Resetting context._sent for legacy support of Babel's
            // function.sent implementation.
            this.sent = this._sent = undefined;
            this.done = false;
            this.delegate = null;
            this.method = "next";
            this.arg = undefined;
            this.tryEntries.forEach(resetTryEntry);
            if (!skipTempReset) {
                for(var name in this)// Not sure about the optimal order of these conditions:
                if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) this[name] = undefined;
            }
        },
        stop: function() {
            this.done = true;
            var rootEntry = this.tryEntries[0];
            var rootRecord = rootEntry.completion;
            if (rootRecord.type === "throw") throw rootRecord.arg;
            return this.rval;
        },
        dispatchException: function(exception) {
            if (this.done) throw exception;
            var context = this;
            function handle(loc, caught) {
                record.type = "throw";
                record.arg = exception;
                context.next = loc;
                if (caught) {
                    // If the dispatched exception was caught by a catch block,
                    // then let that catch block handle the exception normally.
                    context.method = "next";
                    context.arg = undefined;
                }
                return !!caught;
            }
            for(var i = this.tryEntries.length - 1; i >= 0; --i){
                var entry = this.tryEntries[i];
                var record = entry.completion;
                if (entry.tryLoc === "root") // Exception thrown outside of any try block that could handle
                // it, so set the completion value of the entire function to
                // throw the exception.
                return handle("end");
                if (entry.tryLoc <= this.prev) {
                    var hasCatch = hasOwn.call(entry, "catchLoc");
                    var hasFinally = hasOwn.call(entry, "finallyLoc");
                    if (hasCatch && hasFinally) {
                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, true);
                        else if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
                    } else if (hasCatch) {
                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, true);
                    } else if (hasFinally) {
                        if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
                    } else throw new Error("try statement without catch or finally");
                }
            }
        },
        abrupt: function(type, arg) {
            for(var i = this.tryEntries.length - 1; i >= 0; --i){
                var entry = this.tryEntries[i];
                if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
                    var finallyEntry = entry;
                    break;
                }
            }
            if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) // Ignore the finally entry if control is not jumping to a
            // location outside the try/catch block.
            finallyEntry = null;
            var record = finallyEntry ? finallyEntry.completion : {
            };
            record.type = type;
            record.arg = arg;
            if (finallyEntry) {
                this.method = "next";
                this.next = finallyEntry.finallyLoc;
                return ContinueSentinel;
            }
            return this.complete(record);
        },
        complete: function(record, afterLoc) {
            if (record.type === "throw") throw record.arg;
            if (record.type === "break" || record.type === "continue") this.next = record.arg;
            else if (record.type === "return") {
                this.rval = this.arg = record.arg;
                this.method = "return";
                this.next = "end";
            } else if (record.type === "normal" && afterLoc) this.next = afterLoc;
            return ContinueSentinel;
        },
        finish: function(finallyLoc) {
            for(var i = this.tryEntries.length - 1; i >= 0; --i){
                var entry = this.tryEntries[i];
                if (entry.finallyLoc === finallyLoc) {
                    this.complete(entry.completion, entry.afterLoc);
                    resetTryEntry(entry);
                    return ContinueSentinel;
                }
            }
        },
        "catch": function(tryLoc) {
            for(var i = this.tryEntries.length - 1; i >= 0; --i){
                var entry = this.tryEntries[i];
                if (entry.tryLoc === tryLoc) {
                    var record = entry.completion;
                    if (record.type === "throw") {
                        var thrown = record.arg;
                        resetTryEntry(entry);
                    }
                    return thrown;
                }
            }
            // The context.catch method must only be called with a location
            // argument that corresponds to a known catch block.
            throw new Error("illegal catch attempt");
        },
        delegateYield: function(iterable, resultName, nextLoc) {
            this.delegate = {
                iterator: values(iterable),
                resultName: resultName,
                nextLoc: nextLoc
            };
            if (this.method === "next") // Deliberately forget the last sent value so that we don't
            // accidentally pass it on to the delegate.
            this.arg = undefined;
            return ContinueSentinel;
        }
    };
    // Regardless of whether this script is executing as a CommonJS module
    // or not, return the runtime object so that we can declare the variable
    // regeneratorRuntime in the outer scope, which allows this module to be
    // injected easily by `bin/regenerator --include-runtime script.js`.
    return exports;
}(// If this script is executing as a CommonJS module, use module.exports
// as the regeneratorRuntime namespace. Otherwise create a new empty
// object. Either way, the resulting object will be used to initialize
// the regeneratorRuntime variable at the top of this file.
typeof module === "object" ? module.exports : {
});
try {
    regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
    // This module should not be running in strict mode, so the above
    // assignment should always work unless something is misconfigured. Just
    // in case runtime.js accidentally runs in strict mode, in modern engines
    // we can explicitly access globalThis. In older engines we can escape
    // strict mode using a global Function call. This could conceivably fail
    // if a Content Security Policy forbids using Function, but in that case
    // the proper solution is to fix the accidental strict mode problem. If
    // you've misconfigured your bundler to force strict mode and applied a
    // CSP to forbid Function, and you're not willing to fix either of those
    // problems, please detail your unique predicament in a GitHub issue.
    if (typeof globalThis === "object") globalThis.regeneratorRuntime = runtime;
    else Function("r", "regeneratorRuntime = r")(runtime);
}

},{}],"kM24e":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "login", function() {
    return login;
});
var _helpers = require("@swc/helpers");
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _alertJs = require("./alert.js");
var regeneratorRuntime = require("regenerator-runtime");
var login = _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee(email, password, csrfToken) {
    var response;
    return regeneratorRuntime.wrap(function _callee$(_ctx) {
        while(1)switch(_ctx.prev = _ctx.next){
            case 0:
                _ctx.prev = 0;
                _ctx.next = 3;
                return _axiosDefault.default({
                    method: 'POST',
                    url: '/api/v1/users/login',
                    headers: {
                        'X-CSRF-Token': csrfToken // <-- is the csrf token as a header
                    },
                    data: {
                        email: email,
                        password: password
                    }
                });
            case 3:
                response = _ctx.sent;
                if (response.data.status === 'success') {
                    // console.log('You have login!')
                    _alertJs.showAlert('alert--green', 'Success! You will redirect!');
                    setTimeout(function() {
                        _alertJs.hideAlert();
                        location.assign('/overview');
                    }, 2000);
                }
                _ctx.next = 11;
                break;
            case 7:
                _ctx.prev = 7;
                _ctx.t0 = _ctx["catch"](0);
                _alertJs.showAlert('alert--red', _ctx.t0.response.data.message);
                setTimeout(function() {
                    _alertJs.hideAlert();
                }, 2000);
            case 11:
                _ctx.prev = 11;
                setTimeout(function() {
                    document.querySelector('.form__button.login').disabled = false;
                    document.querySelector('.form__button.login').classList.remove('btn--disabled');
                }, 2000);
                return _ctx.finish(11);
            case 14:
            case "end":
                return _ctx.stop();
        }
    }, _callee, null, [
        [
            0,
            7,
            11,
            14
        ]
    ]);
}));

},{"@swc/helpers":"gDs9W","regenerator-runtime":"hmHqu","axios":"lD2ZU","./alert.js":"8X5i0","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"lD2ZU":[function(require,module,exports) {
module.exports = require('./lib/axios');

},{"./lib/axios":"hX3hV"}],"hX3hV":[function(require,module,exports) {
'use strict';
var utils = require('./utils');
var bind = require('./helpers/bind');
var Axios = require('./core/Axios');
var defaults = require('./defaults');
/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */ function createInstance(defaultConfig) {
    var context = new Axios(defaultConfig);
    var instance = bind(Axios.prototype.request, context);
    // Copy axios.prototype to instance
    utils.extend(instance, Axios.prototype, context);
    // Copy context to instance
    utils.extend(instance, context);
    return instance;
}
// Create the default instance to be exported
var axios = createInstance(defaults);
// Expose Axios class to allow class inheritance
axios.Axios = Axios;
// Factory for creating new instances
axios.create = function create(instanceConfig) {
    return createInstance(utils.merge(defaults, instanceConfig));
};
// Expose Cancel & CancelToken
axios.Cancel = require('./cancel/Cancel');
axios.CancelToken = require('./cancel/CancelToken');
axios.isCancel = require('./cancel/isCancel');
// Expose all/spread
axios.all = function all(promises) {
    return Promise.all(promises);
};
axios.spread = require('./helpers/spread');
module.exports = axios;
// Allow use of default import syntax in TypeScript
module.exports.default = axios;

},{"./utils":"91b0H","./helpers/bind":"ciYsY","./core/Axios":"k9UFh","./defaults":"5zjZj","./cancel/Cancel":"eVBpx","./cancel/CancelToken":"4KYXY","./cancel/isCancel":"5BNwA","./helpers/spread":"gJzn6"}],"91b0H":[function(require,module,exports) {
'use strict';
var bind = require('./helpers/bind');
var isBuffer = require('is-buffer');
/*global toString:true*/ // utils is a library of generic helper functions non-specific to axios
var toString = Object.prototype.toString;
/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */ function isArray(val) {
    return toString.call(val) === '[object Array]';
}
/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */ function isArrayBuffer(val) {
    return toString.call(val) === '[object ArrayBuffer]';
}
/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */ function isFormData(val) {
    return typeof FormData !== 'undefined' && val instanceof FormData;
}
/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */ function isArrayBufferView(val) {
    var result;
    if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) result = ArrayBuffer.isView(val);
    else result = val && val.buffer && val.buffer instanceof ArrayBuffer;
    return result;
}
/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */ function isString(val) {
    return typeof val === 'string';
}
/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */ function isNumber(val) {
    return typeof val === 'number';
}
/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */ function isUndefined(val) {
    return typeof val === 'undefined';
}
/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */ function isObject(val) {
    return val !== null && typeof val === 'object';
}
/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */ function isDate(val) {
    return toString.call(val) === '[object Date]';
}
/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */ function isFile(val) {
    return toString.call(val) === '[object File]';
}
/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */ function isBlob(val) {
    return toString.call(val) === '[object Blob]';
}
/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */ function isFunction(val) {
    return toString.call(val) === '[object Function]';
}
/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */ function isStream(val) {
    return isObject(val) && isFunction(val.pipe);
}
/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */ function isURLSearchParams(val) {
    return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}
/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */ function trim(str) {
    return str.replace(/^\s*/, '').replace(/\s*$/, '');
}
/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 */ function isStandardBrowserEnv() {
    if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') return false;
    return typeof window !== 'undefined' && typeof document !== 'undefined';
}
/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */ function forEach(obj, fn) {
    // Don't bother if no value provided
    if (obj === null || typeof obj === 'undefined') return;
    // Force an array if not already something iterable
    if (typeof obj !== 'object') /*eslint no-param-reassign:0*/ obj = [
        obj
    ];
    if (isArray(obj)) // Iterate over array values
    for(var i = 0, l = obj.length; i < l; i++)fn.call(null, obj[i], i, obj);
    else {
        // Iterate over object keys
        for(var key in obj)if (Object.prototype.hasOwnProperty.call(obj, key)) fn.call(null, obj[key], key, obj);
    }
}
/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */ function merge() {
    var result = {
    };
    function assignValue(val, key) {
        if (typeof result[key] === 'object' && typeof val === 'object') result[key] = merge(result[key], val);
        else result[key] = val;
    }
    for(var i = 0, l = arguments.length; i < l; i++)forEach(arguments[i], assignValue);
    return result;
}
/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */ function extend(a, b, thisArg) {
    forEach(b, function assignValue(val, key) {
        if (thisArg && typeof val === 'function') a[key] = bind(val, thisArg);
        else a[key] = val;
    });
    return a;
}
module.exports = {
    isArray: isArray,
    isArrayBuffer: isArrayBuffer,
    isBuffer: isBuffer,
    isFormData: isFormData,
    isArrayBufferView: isArrayBufferView,
    isString: isString,
    isNumber: isNumber,
    isObject: isObject,
    isUndefined: isUndefined,
    isDate: isDate,
    isFile: isFile,
    isBlob: isBlob,
    isFunction: isFunction,
    isStream: isStream,
    isURLSearchParams: isURLSearchParams,
    isStandardBrowserEnv: isStandardBrowserEnv,
    forEach: forEach,
    merge: merge,
    extend: extend,
    trim: trim
};

},{"./helpers/bind":"ciYsY","is-buffer":"74Wd2"}],"ciYsY":[function(require,module,exports) {
'use strict';
module.exports = function bind(fn, thisArg) {
    return function wrap() {
        var args = new Array(arguments.length);
        for(var i = 0; i < args.length; i++)args[i] = arguments[i];
        return fn.apply(thisArg, args);
    };
};

},{}],"74Wd2":[function(require,module,exports) {
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */ module.exports = function isBuffer(obj) {
    return obj != null && obj.constructor != null && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);
};

},{}],"k9UFh":[function(require,module,exports) {
'use strict';
var defaults = require('./../defaults');
var utils = require('./../utils');
var InterceptorManager = require('./InterceptorManager');
var dispatchRequest = require('./dispatchRequest');
/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */ function Axios(instanceConfig) {
    this.defaults = instanceConfig;
    this.interceptors = {
        request: new InterceptorManager(),
        response: new InterceptorManager()
    };
}
/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */ Axios.prototype.request = function request(config) {
    /*eslint no-param-reassign:0*/ // Allow for axios('example/url'[, config]) a la fetch API
    if (typeof config === 'string') config = utils.merge({
        url: arguments[0]
    }, arguments[1]);
    config = utils.merge(defaults, {
        method: 'get'
    }, this.defaults, config);
    config.method = config.method.toLowerCase();
    // Hook up interceptors middleware
    var chain = [
        dispatchRequest,
        undefined
    ];
    var promise = Promise.resolve(config);
    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
        chain.unshift(interceptor.fulfilled, interceptor.rejected);
    });
    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
        chain.push(interceptor.fulfilled, interceptor.rejected);
    });
    while(chain.length)promise = promise.then(chain.shift(), chain.shift());
    return promise;
};
// Provide aliases for supported request methods
utils.forEach([
    'delete',
    'get',
    'head',
    'options'
], function forEachMethodNoData(method) {
    /*eslint func-names:0*/ Axios.prototype[method] = function(url, config) {
        return this.request(utils.merge(config || {
        }, {
            method: method,
            url: url
        }));
    };
});
utils.forEach([
    'post',
    'put',
    'patch'
], function forEachMethodWithData(method) {
    /*eslint func-names:0*/ Axios.prototype[method] = function(url, data, config) {
        return this.request(utils.merge(config || {
        }, {
            method: method,
            url: url,
            data: data
        }));
    };
});
module.exports = Axios;

},{"./../defaults":"5zjZj","./../utils":"91b0H","./InterceptorManager":"4CG2a","./dispatchRequest":"f2ZxV"}],"5zjZj":[function(require,module,exports) {
var process = require("process");
'use strict';
var utils = require('./utils');
var normalizeHeaderName = require('./helpers/normalizeHeaderName');
var DEFAULT_CONTENT_TYPE = {
    'Content-Type': 'application/x-www-form-urlencoded'
};
function setContentTypeIfUnset(headers, value) {
    if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) headers['Content-Type'] = value;
}
function getDefaultAdapter() {
    var adapter;
    if (typeof XMLHttpRequest !== 'undefined') // For browsers use XHR adapter
    adapter = require('./adapters/xhr');
    else if (typeof process !== 'undefined') // For node use HTTP adapter
    adapter = require('./adapters/http');
    return adapter;
}
var defaults = {
    adapter: getDefaultAdapter(),
    transformRequest: [
        function transformRequest(data, headers) {
            normalizeHeaderName(headers, 'Content-Type');
            if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) return data;
            if (utils.isArrayBufferView(data)) return data.buffer;
            if (utils.isURLSearchParams(data)) {
                setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
                return data.toString();
            }
            if (utils.isObject(data)) {
                setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
                return JSON.stringify(data);
            }
            return data;
        }
    ],
    transformResponse: [
        function transformResponse(data) {
            /*eslint no-param-reassign:0*/ if (typeof data === 'string') try {
                data = JSON.parse(data);
            } catch (e) {
            }
            return data;
        }
    ],
    /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */ timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    validateStatus: function validateStatus(status) {
        return status >= 200 && status < 300;
    }
};
defaults.headers = {
    common: {
        'Accept': 'application/json, text/plain, */*'
    }
};
utils.forEach([
    'delete',
    'get',
    'head'
], function forEachMethodNoData(method) {
    defaults.headers[method] = {
    };
});
utils.forEach([
    'post',
    'put',
    'patch'
], function forEachMethodWithData(method) {
    defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});
module.exports = defaults;

},{"process":"5svFz","./utils":"91b0H","./helpers/normalizeHeaderName":"9ObeY","./adapters/xhr":"9Mc39","./adapters/http":"9Mc39"}],"5svFz":[function(require,module,exports) {
// shim for using process in browser
var process = module.exports = {
};
// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.
var cachedSetTimeout;
var cachedClearTimeout;
function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout() {
    throw new Error('clearTimeout has not been defined');
}
(function() {
    try {
        if (typeof setTimeout === 'function') cachedSetTimeout = setTimeout;
        else cachedSetTimeout = defaultSetTimout;
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') cachedClearTimeout = clearTimeout;
        else cachedClearTimeout = defaultClearTimeout;
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
})();
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) //normal enviroments in sane situations
    return setTimeout(fun, 0);
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch (e1) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }
}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) //normal enviroments in sane situations
    return clearTimeout(marker);
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e1) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }
}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;
function cleanUpNextTick() {
    if (!draining || !currentQueue) return;
    draining = false;
    if (currentQueue.length) queue = currentQueue.concat(queue);
    else queueIndex = -1;
    if (queue.length) drainQueue();
}
function drainQueue() {
    if (draining) return;
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;
    var len = queue.length;
    while(len){
        currentQueue = queue;
        queue = [];
        while((++queueIndex) < len)if (currentQueue) currentQueue[queueIndex].run();
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}
process.nextTick = function(fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) runTimeout(drainQueue);
};
// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function() {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {
};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {
};
function noop() {
}
process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;
process.listeners = function(name) {
    return [];
};
process.binding = function(name) {
    throw new Error('process.binding is not supported');
};
process.cwd = function() {
    return '/';
};
process.chdir = function(dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() {
    return 0;
};

},{}],"9ObeY":[function(require,module,exports) {
'use strict';
var utils = require('../utils');
module.exports = function normalizeHeaderName(headers, normalizedName) {
    utils.forEach(headers, function processHeader(value, name) {
        if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
            headers[normalizedName] = value;
            delete headers[name];
        }
    });
};

},{"../utils":"91b0H"}],"9Mc39":[function(require,module,exports) {
'use strict';
var utils = require('./../utils');
var settle = require('./../core/settle');
var buildURL = require('./../helpers/buildURL');
var parseHeaders = require('./../helpers/parseHeaders');
var isURLSameOrigin = require('./../helpers/isURLSameOrigin');
var createError = require('../core/createError');
module.exports = function xhrAdapter(config) {
    return new Promise(function dispatchXhrRequest(resolve, reject) {
        var requestData = config.data;
        var requestHeaders = config.headers;
        if (utils.isFormData(requestData)) delete requestHeaders['Content-Type']; // Let the browser set it
        var request = new XMLHttpRequest();
        // HTTP basic authentication
        if (config.auth) {
            var username = config.auth.username || '';
            var password = config.auth.password || '';
            requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
        }
        request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);
        // Set the request timeout in MS
        request.timeout = config.timeout;
        // Listen for ready state
        request.onreadystatechange = function handleLoad() {
            if (!request || request.readyState !== 4) return;
            // The request errored out and we didn't get a response, this will be
            // handled by onerror instead
            // With one exception: request that using file: protocol, most browsers
            // will return status as 0 even though it's a successful request
            if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) return;
            // Prepare the response
            var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
            var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
            var response = {
                data: responseData,
                status: request.status,
                statusText: request.statusText,
                headers: responseHeaders,
                config: config,
                request: request
            };
            settle(resolve, reject, response);
            // Clean up request
            request = null;
        };
        // Handle low level network errors
        request.onerror = function handleError() {
            // Real errors are hidden from us by the browser
            // onerror should only fire if it's a network error
            reject(createError('Network Error', config, null, request));
            // Clean up request
            request = null;
        };
        // Handle timeout
        request.ontimeout = function handleTimeout() {
            reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', request));
            // Clean up request
            request = null;
        };
        // Add xsrf header
        // This is only done if running in a standard browser environment.
        // Specifically not if we're in a web worker, or react-native.
        if (utils.isStandardBrowserEnv()) {
            var cookies = require('./../helpers/cookies');
            // Add xsrf header
            var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;
            if (xsrfValue) requestHeaders[config.xsrfHeaderName] = xsrfValue;
        }
        // Add headers to the request
        if ('setRequestHeader' in request) utils.forEach(requestHeaders, function setRequestHeader(val, key) {
            if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') // Remove Content-Type if data is undefined
            delete requestHeaders[key];
            else // Otherwise add header to the request
            request.setRequestHeader(key, val);
        });
        // Add withCredentials to request if needed
        if (config.withCredentials) request.withCredentials = true;
        // Add responseType to request if needed
        if (config.responseType) try {
            request.responseType = config.responseType;
        } catch (e) {
            // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
            // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
            if (config.responseType !== 'json') throw e;
        }
        // Handle progress if needed
        if (typeof config.onDownloadProgress === 'function') request.addEventListener('progress', config.onDownloadProgress);
        // Not all browsers support upload events
        if (typeof config.onUploadProgress === 'function' && request.upload) request.upload.addEventListener('progress', config.onUploadProgress);
        if (config.cancelToken) // Handle cancellation
        config.cancelToken.promise.then(function onCanceled(cancel) {
            if (!request) return;
            request.abort();
            reject(cancel);
            // Clean up request
            request = null;
        });
        if (requestData === undefined) requestData = null;
        // Send the request
        request.send(requestData);
    });
};

},{"./../utils":"91b0H","./../core/settle":"cLQKB","./../helpers/buildURL":"jBT27","./../helpers/parseHeaders":"5fdxU","./../helpers/isURLSameOrigin":"eAgZr","../core/createError":"kZZaD","./../helpers/cookies":"iFWUU"}],"cLQKB":[function(require,module,exports) {
'use strict';
var createError = require('./createError');
/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */ module.exports = function settle(resolve, reject, response) {
    var validateStatus = response.config.validateStatus;
    // Note: status is not exposed by XDomainRequest
    if (!response.status || !validateStatus || validateStatus(response.status)) resolve(response);
    else reject(createError('Request failed with status code ' + response.status, response.config, null, response.request, response));
};

},{"./createError":"kZZaD"}],"kZZaD":[function(require,module,exports) {
'use strict';
var enhanceError = require('./enhanceError');
/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */ module.exports = function createError(message, config, code, request, response) {
    var error = new Error(message);
    return enhanceError(error, config, code, request, response);
};

},{"./enhanceError":"dfHKv"}],"dfHKv":[function(require,module,exports) {
'use strict';
/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */ module.exports = function enhanceError(error, config, code, request, response) {
    error.config = config;
    if (code) error.code = code;
    error.request = request;
    error.response = response;
    return error;
};

},{}],"jBT27":[function(require,module,exports) {
'use strict';
var utils = require('./../utils');
function encode(val) {
    return encodeURIComponent(val).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');
}
/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */ module.exports = function buildURL(url, params, paramsSerializer) {
    /*eslint no-param-reassign:0*/ if (!params) return url;
    var serializedParams;
    if (paramsSerializer) serializedParams = paramsSerializer(params);
    else if (utils.isURLSearchParams(params)) serializedParams = params.toString();
    else {
        var parts = [];
        utils.forEach(params, function serialize(val, key) {
            if (val === null || typeof val === 'undefined') return;
            if (utils.isArray(val)) key = key + '[]';
            else val = [
                val
            ];
            utils.forEach(val, function parseValue(v) {
                if (utils.isDate(v)) v = v.toISOString();
                else if (utils.isObject(v)) v = JSON.stringify(v);
                parts.push(encode(key) + '=' + encode(v));
            });
        });
        serializedParams = parts.join('&');
    }
    if (serializedParams) url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
    return url;
};

},{"./../utils":"91b0H"}],"5fdxU":[function(require,module,exports) {
'use strict';
var utils = require('./../utils');
// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
    'age',
    'authorization',
    'content-length',
    'content-type',
    'etag',
    'expires',
    'from',
    'host',
    'if-modified-since',
    'if-unmodified-since',
    'last-modified',
    'location',
    'max-forwards',
    'proxy-authorization',
    'referer',
    'retry-after',
    'user-agent'
];
/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */ module.exports = function parseHeaders(headers) {
    var parsed = {
    };
    var key;
    var val;
    var i;
    if (!headers) return parsed;
    utils.forEach(headers.split('\n'), function parser(line) {
        i = line.indexOf(':');
        key = utils.trim(line.substr(0, i)).toLowerCase();
        val = utils.trim(line.substr(i + 1));
        if (key) {
            if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) return;
            if (key === 'set-cookie') parsed[key] = (parsed[key] ? parsed[key] : []).concat([
                val
            ]);
            else parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
        }
    });
    return parsed;
};

},{"./../utils":"91b0H"}],"eAgZr":[function(require,module,exports) {
'use strict';
var utils = require('./../utils');
module.exports = utils.isStandardBrowserEnv() ? // Standard browser envs have full support of the APIs needed to test
// whether the request URL is of the same origin as current location.
(function standardBrowserEnv() {
    var msie = /(msie|trident)/i.test(navigator.userAgent);
    var urlParsingNode = document.createElement('a');
    var originURL;
    /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */ function resolveURL(url) {
        var href = url;
        if (msie) {
            // IE needs attribute set twice to normalize properties
            urlParsingNode.setAttribute('href', href);
            href = urlParsingNode.href;
        }
        urlParsingNode.setAttribute('href', href);
        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
            href: urlParsingNode.href,
            protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
            host: urlParsingNode.host,
            search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
            hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
            hostname: urlParsingNode.hostname,
            port: urlParsingNode.port,
            pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname
        };
    }
    originURL = resolveURL(window.location.href);
    /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */ return function isURLSameOrigin(requestURL) {
        var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
        return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
    };
})() : // Non standard browser envs (web workers, react-native) lack needed support.
(function nonStandardBrowserEnv() {
    return function isURLSameOrigin() {
        return true;
    };
})();

},{"./../utils":"91b0H"}],"iFWUU":[function(require,module,exports) {
'use strict';
var utils = require('./../utils');
module.exports = utils.isStandardBrowserEnv() ? // Standard browser envs support document.cookie
(function standardBrowserEnv() {
    return {
        write: function write(name, value, expires, path, domain, secure) {
            var cookie = [];
            cookie.push(name + '=' + encodeURIComponent(value));
            if (utils.isNumber(expires)) cookie.push('expires=' + new Date(expires).toGMTString());
            if (utils.isString(path)) cookie.push('path=' + path);
            if (utils.isString(domain)) cookie.push('domain=' + domain);
            if (secure === true) cookie.push('secure');
            document.cookie = cookie.join('; ');
        },
        read: function read(name) {
            var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
            return match ? decodeURIComponent(match[3]) : null;
        },
        remove: function remove(name) {
            this.write(name, '', Date.now() - 86400000);
        }
    };
})() : // Non standard browser env (web workers, react-native) lack needed support.
(function nonStandardBrowserEnv() {
    return {
        write: function write() {
        },
        read: function read() {
            return null;
        },
        remove: function remove() {
        }
    };
})();

},{"./../utils":"91b0H"}],"4CG2a":[function(require,module,exports) {
'use strict';
var utils = require('./../utils');
function InterceptorManager() {
    this.handlers = [];
}
/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */ InterceptorManager.prototype.use = function use(fulfilled, rejected) {
    this.handlers.push({
        fulfilled: fulfilled,
        rejected: rejected
    });
    return this.handlers.length - 1;
};
/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */ InterceptorManager.prototype.eject = function eject(id) {
    if (this.handlers[id]) this.handlers[id] = null;
};
/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */ InterceptorManager.prototype.forEach = function forEach(fn) {
    utils.forEach(this.handlers, function forEachHandler(h) {
        if (h !== null) fn(h);
    });
};
module.exports = InterceptorManager;

},{"./../utils":"91b0H"}],"f2ZxV":[function(require,module,exports) {
'use strict';
var utils = require('./../utils');
var transformData = require('./transformData');
var isCancel = require('../cancel/isCancel');
var defaults = require('../defaults');
var isAbsoluteURL = require('./../helpers/isAbsoluteURL');
var combineURLs = require('./../helpers/combineURLs');
/**
 * Throws a `Cancel` if cancellation has been requested.
 */ function throwIfCancellationRequested(config) {
    if (config.cancelToken) config.cancelToken.throwIfRequested();
}
/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */ module.exports = function dispatchRequest(config) {
    throwIfCancellationRequested(config);
    // Support baseURL config
    if (config.baseURL && !isAbsoluteURL(config.url)) config.url = combineURLs(config.baseURL, config.url);
    // Ensure headers exist
    config.headers = config.headers || {
    };
    // Transform request data
    config.data = transformData(config.data, config.headers, config.transformRequest);
    // Flatten headers
    config.headers = utils.merge(config.headers.common || {
    }, config.headers[config.method] || {
    }, config.headers || {
    });
    utils.forEach([
        'delete',
        'get',
        'head',
        'post',
        'put',
        'patch',
        'common'
    ], function cleanHeaderConfig(method) {
        delete config.headers[method];
    });
    var adapter = config.adapter || defaults.adapter;
    return adapter(config).then(function onAdapterResolution(response) {
        throwIfCancellationRequested(config);
        // Transform response data
        response.data = transformData(response.data, response.headers, config.transformResponse);
        return response;
    }, function onAdapterRejection(reason) {
        if (!isCancel(reason)) {
            throwIfCancellationRequested(config);
            // Transform response data
            if (reason && reason.response) reason.response.data = transformData(reason.response.data, reason.response.headers, config.transformResponse);
        }
        return Promise.reject(reason);
    });
};

},{"./../utils":"91b0H","./transformData":"6FXpt","../cancel/isCancel":"5BNwA","../defaults":"5zjZj","./../helpers/isAbsoluteURL":"imjpp","./../helpers/combineURLs":"1Ewfc"}],"6FXpt":[function(require,module,exports) {
'use strict';
var utils = require('./../utils');
/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */ module.exports = function transformData(data, headers, fns) {
    /*eslint no-param-reassign:0*/ utils.forEach(fns, function transform(fn) {
        data = fn(data, headers);
    });
    return data;
};

},{"./../utils":"91b0H"}],"5BNwA":[function(require,module,exports) {
'use strict';
module.exports = function isCancel(value) {
    return !!(value && value.__CANCEL__);
};

},{}],"imjpp":[function(require,module,exports) {
'use strict';
/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */ module.exports = function isAbsoluteURL(url) {
    // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
    // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
    // by any combination of letters, digits, plus, period, or hyphen.
    return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};

},{}],"1Ewfc":[function(require,module,exports) {
'use strict';
/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */ module.exports = function combineURLs(baseURL, relativeURL) {
    return relativeURL ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '') : baseURL;
};

},{}],"eVBpx":[function(require,module,exports) {
'use strict';
/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */ function Cancel(message) {
    this.message = message;
}
Cancel.prototype.toString = function toString() {
    return 'Cancel' + (this.message ? ': ' + this.message : '');
};
Cancel.prototype.__CANCEL__ = true;
module.exports = Cancel;

},{}],"4KYXY":[function(require,module,exports) {
'use strict';
var Cancel = require('./Cancel');
/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */ function CancelToken(executor) {
    if (typeof executor !== 'function') throw new TypeError('executor must be a function.');
    var resolvePromise;
    this.promise = new Promise(function promiseExecutor(resolve) {
        resolvePromise = resolve;
    });
    var token = this;
    executor(function cancel(message) {
        if (token.reason) // Cancellation has already been requested
        return;
        token.reason = new Cancel(message);
        resolvePromise(token.reason);
    });
}
/**
 * Throws a `Cancel` if cancellation has been requested.
 */ CancelToken.prototype.throwIfRequested = function throwIfRequested() {
    if (this.reason) throw this.reason;
};
/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */ CancelToken.source = function source() {
    var cancel;
    var token = new CancelToken(function executor(c) {
        cancel = c;
    });
    return {
        token: token,
        cancel: cancel
    };
};
module.exports = CancelToken;

},{"./Cancel":"eVBpx"}],"gJzn6":[function(require,module,exports) {
'use strict';
/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */ module.exports = function spread(callback) {
    return function wrap(arr) {
        return callback.apply(null, arr);
    };
};

},{}],"8X5i0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "showAlert", function() {
    return showAlert;
});
parcelHelpers.export(exports, "hideAlert", function() {
    return hideAlert;
});
var showAlert = function(alertStyle, alertMessage) {
    var alert = "<div class=\"alert ".concat(alertStyle, "\">").concat(alertMessage, "</div>");
    document.querySelector('body').insertAdjacentHTML('afterbegin', alert);
};
var hideAlert = function() {
    var alert = document.querySelector('.alert');
    if (alert) alert.parentElement.removeChild(alert);
} // admin@natours.io
;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"20ZQG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "logout", function() {
    return logout;
});
var _helpers = require("@swc/helpers");
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _alert = require("./alert");
var regeneratorRuntime = require("regenerator-runtime");
var logout = _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee(csrfToken) {
    var response;
    return regeneratorRuntime.wrap(function _callee$(_ctx) {
        while(1)switch(_ctx.prev = _ctx.next){
            case 0:
                _ctx.prev = 0;
                _ctx.next = 3;
                return _axiosDefault.default({
                    method: 'POST',
                    url: '/api/v1/users/logout',
                    headers: {
                        'X-CSRF-Token': csrfToken // <-- is the csrf token as a header
                    }
                });
            case 3:
                response = _ctx.sent;
                if (response.data.status === 'success') {
                    _alert.showAlert('alert--lazure', 'You have successfully logout!');
                    setTimeout(function() {
                        _alert.hideAlert();
                        location.reload(true);
                    }, 2000);
                    setTimeout(function() {
                        document.querySelector('.link-logout').style.display = 'block';
                    }, 2500);
                }
                _ctx.next = 10;
                break;
            case 7:
                _ctx.prev = 7;
                _ctx.t0 = _ctx["catch"](0);
                console.log(_ctx.t0);
            case 10:
            case "end":
                return _ctx.stop();
        }
    }, _callee, null, [
        [
            0,
            7
        ]
    ]);
}));

},{"@swc/helpers":"gDs9W","regenerator-runtime":"hmHqu","axios":"lD2ZU","./alert":"8X5i0","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"lonZi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mapbox", function() {
    return mapbox;
});
var mapbox = function(locations) {
    mapboxgl.accessToken = "pk.eyJ1IjoibG9ybWlkYSIsImEiOiJja3RuOWJrbGMwMG84MnJsNDdobzAwdjV3In0.VfELVZB3ATNWtTtBO4_04w";
    var map = new mapboxgl.Map({
        container: "map",
        style: "mapbox://styles/lormida/cktnasnjl044l17n16iieuaq2",
        center: [
            -74.5,
            40
        ],
        zoom: 6 // starting zoom
    });
    var bounds = new mapboxgl.LngLatBounds();
    locations.forEach(function(loc) {
        // Create marker
        var el = document.createElement("div");
        el.className = "marker";
        // Add marker
        new mapboxgl.Marker({
            element: el,
            anchor: "bottom"
        }).setLngLat(loc.coordinates).addTo(map);
        // Add popup
        new mapboxgl.Popup({
            offset: 50
        }).setLngLat(loc.coordinates).setHTML("<p style=\"color:black; font-size:0.7rem; padding:2px\">Day ".concat(loc.day, ": ").concat(loc.description, "</p>")).addTo(map);
        // Extend map bounds to include current location
        bounds.extend(loc.coordinates);
    });
    map.fitBounds(bounds, {
        padding: {
            top: 300,
            bottom: 150,
            left: 150,
            right: 150
        }
    });
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"lR4Cn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "saveDataInit", function() {
    return saveDataInit;
});
parcelHelpers.export(exports, "savePasswordInit", function() {
    return savePasswordInit;
});
var _helpers = require("@swc/helpers");
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _alert = require("./alert");
var regeneratorRuntime = require("regenerator-runtime");
var saveDataInit = _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee(data, csrfToken) {
    var res;
    return regeneratorRuntime.wrap(function _callee$(_ctx) {
        while(1)switch(_ctx.prev = _ctx.next){
            case 0:
                _ctx.prev = 0;
                _ctx.next = 3;
                return _axiosDefault.default({
                    method: 'PATCH',
                    url: '/api/v1/users/update-data',
                    headers: {
                        'X-CSRF-Token': csrfToken // <-- is the csrf token as a header
                    },
                    data: data
                });
            case 3:
                res = _ctx.sent;
                if (res.data.status === 'success') {
                    _alert.showAlert('alert--green', 'Data updated successfully!');
                    setTimeout(function() {
                        _alert.hideAlert();
                        location.reload(true);
                    }, 2000);
                }
                _ctx.next = 11;
                break;
            case 7:
                _ctx.prev = 7;
                _ctx.t0 = _ctx["catch"](0);
                _alert.showAlert('alert--red', _ctx.t0.response.data.message);
                setTimeout(function() {
                    _alert.hideAlert();
                }, 2000);
            case 11:
            case "end":
                return _ctx.stop();
        }
    }, _callee, null, [
        [
            0,
            7
        ]
    ]);
}));
var savePasswordInit = _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee1(email, currentPassword, newPassword, newPasswordConfirm, csrfToken) {
    var res;
    return regeneratorRuntime.wrap(function _callee$(_ctx) {
        while(1)switch(_ctx.prev = _ctx.next){
            case 0:
                _ctx.prev = 0;
                _ctx.next = 3;
                return _axiosDefault.default({
                    method: 'PATCH',
                    url: '/api/v1/users/update-password',
                    data: {
                        email: email,
                        currentPassword: currentPassword,
                        newPassword: newPassword,
                        newPasswordConfirm: newPasswordConfirm
                    },
                    headers: {
                        'X-CSRF-Token': csrfToken // <-- is the csrf token as a header
                    }
                });
            case 3:
                res = _ctx.sent;
                if (res.data.status === 'success') _alert.showAlert('alert--green', 'Password was updated!');
                _ctx.next = 10;
                break;
            case 7:
                _ctx.prev = 7;
                _ctx.t0 = _ctx["catch"](0);
                _alert.showAlert('alert--red', _ctx.t0.response.data.message);
            case 10:
                _ctx.prev = 10;
                setTimeout(function() {
                    document.querySelector('.save-password').disabled = false;
                    document.querySelector('.save-password').classList.remove('btn--disabled');
                    _alert.hideAlert();
                }, 2000);
                return _ctx.finish(10);
            case 13:
            case "end":
                return _ctx.stop();
        }
    }, _callee1, null, [
        [
            0,
            7,
            10,
            13
        ]
    ]);
}));

},{"@swc/helpers":"gDs9W","regenerator-runtime":"hmHqu","axios":"lD2ZU","./alert":"8X5i0","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"6521s":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "sendResetPassword", function() {
    return sendResetPassword;
});
var _helpers = require("@swc/helpers");
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _alert = require("./alert");
var regeneratorRuntime = require("regenerator-runtime");
var sendResetPassword = _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee(data, csrfToken) {
    var res;
    return regeneratorRuntime.wrap(function _callee$(_ctx) {
        while(1)switch(_ctx.prev = _ctx.next){
            case 0:
                _ctx.prev = 0;
                _ctx.next = 3;
                return _axiosDefault.default({
                    method: 'POST',
                    url: '/api/v1/users/forget-password',
                    headers: {
                        'X-CSRF-Token': csrfToken // <-- is the csrf token as a header
                    },
                    data: {
                        email: data.get('email')
                    }
                });
            case 3:
                res = _ctx.sent;
                if (res.data.status === 'success') _alert.showAlert('alert--green', 'Email was sent successfully!');
                _ctx.next = 10;
                break;
            case 7:
                _ctx.prev = 7;
                _ctx.t0 = _ctx["catch"](0);
                _alert.showAlert('alert--red', _ctx.t0.response.data.message);
            case 10:
                _ctx.prev = 10;
                setTimeout(function() {
                    document.querySelector('.restore-password').classList.remove('btn--disabled');
                    document.querySelector('.restore-password').disabled = false;
                    _alert.hideAlert();
                }, 2000);
                return _ctx.finish(10);
            case 13:
            case "end":
                return _ctx.stop();
        }
    }, _callee, null, [
        [
            0,
            7,
            10,
            13
        ]
    ]);
}));

},{"@swc/helpers":"gDs9W","regenerator-runtime":"hmHqu","axios":"lD2ZU","./alert":"8X5i0","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"f1GC6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _helpers = require("@swc/helpers");
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _alert = require("./alert");
var regeneratorRuntime = require("regenerator-runtime");
exports.setNewPassword = _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee(data, resetToken, csrfToken) {
    var url, response;
    return regeneratorRuntime.wrap(function _callee$(_ctx) {
        while(1)switch(_ctx.prev = _ctx.next){
            case 0:
                _ctx.prev = 0;
                url = "/api/v1/users/reset-password/".concat(resetToken);
                _ctx.next = 4;
                return _axiosDefault.default({
                    method: 'PATCH',
                    url: url,
                    headers: {
                        'X-CSRF-Token': csrfToken // <-- is the csrf token as a header
                    },
                    data: data
                });
            case 4:
                response = _ctx.sent;
                if (response.data.status === 'success') {
                    _alert.showAlert('alert--green', 'Success! Your password was changed!');
                    setTimeout(function() {
                        _alert.hideAlert();
                        location.assign('/login');
                    }, 2000);
                }
                _ctx.next = 12;
                break;
            case 8:
                _ctx.prev = 8;
                _ctx.t0 = _ctx["catch"](0);
                _alert.showAlert('alert--red', _ctx.t0.response.data.message);
                setTimeout(function() {
                    _alert.hideAlert();
                }, 2000);
            case 12:
                _ctx.prev = 12;
                setTimeout(function() {
                    _alert.hideAlert();
                    document.querySelector('.restore-button').disabled = false;
                    document.querySelector('.restore-button').classList.remove('btn--disabled');
                }, 2000);
                return _ctx.finish(12);
            case 15:
            case "end":
                return _ctx.stop();
        }
    }, _callee, null, [
        [
            0,
            8,
            12,
            15
        ]
    ]);
}));

},{"@swc/helpers":"gDs9W","regenerator-runtime":"hmHqu","axios":"lD2ZU","./alert":"8X5i0","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"SZEgj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _helpers = require("@swc/helpers");
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _alert = require("./alert");
var regeneratorRuntime = require("regenerator-runtime");
exports.signup = _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee(data, csrfToken) {
    var response;
    return regeneratorRuntime.wrap(function _callee$(_ctx) {
        while(1)switch(_ctx.prev = _ctx.next){
            case 0:
                _ctx.prev = 0;
                _ctx.next = 3;
                return _axiosDefault.default({
                    method: 'POST',
                    url: '/api/v1/users/signup',
                    headers: {
                        'X-CSRF-Token': csrfToken // <-- is the csrf token as a header
                    },
                    data: data
                });
            case 3:
                response = _ctx.sent;
                if (response.data.status === 'success') {
                    _alert.showAlert('alert--green', 'Success! Your account was created! Verify its via email.');
                    setTimeout(function() {
                        location.assign('/login');
                    }, 2000);
                }
                _ctx.next = 10;
                break;
            case 7:
                _ctx.prev = 7;
                _ctx.t0 = _ctx["catch"](0);
                _alert.showAlert('alert--red', _ctx.t0.response.data.message);
            case 10:
                _ctx.prev = 10;
                setTimeout(function() {
                    _alert.hideAlert();
                    document.querySelector('.signup').disabled = false;
                    document.querySelector('.signup').classList.remove('btn--disabled');
                }, 2000);
                return _ctx.finish(10);
            case 13:
            case "end":
                return _ctx.stop();
        }
    }, _callee, null, [
        [
            0,
            7,
            10,
            13
        ]
    ]);
}));

},{"@swc/helpers":"gDs9W","regenerator-runtime":"hmHqu","axios":"lD2ZU","./alert":"8X5i0","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"2asfU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _helpers = require("@swc/helpers");
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _alert = require("./alert");
var regeneratorRuntime = require("regenerator-runtime");
var stripe = Stripe('pk_test_51JdeniBMWZtA4gWDjE6hHiyPgH8wR64TUpu6j6JjnKAlMR4GZyQwS7hgFauXlXoPAumEbv4f94vmyKgd3vnwcYNg00ziEj5HSy');
exports.createBookingSession = _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee(tourId) {
    var session;
    return regeneratorRuntime.wrap(function _callee$(_ctx) {
        while(1)switch(_ctx.prev = _ctx.next){
            case 0:
                _ctx.prev = 0;
                _ctx.next = 3;
                return _axiosDefault.default({
                    method: 'GET',
                    url: "/api/v1/bookings/create-checkout-session/".concat(tourId)
                });
            case 3:
                session = _ctx.sent;
                _ctx.next = 6;
                return stripe.redirectToCheckout({
                    sessionId: session.data.data.id
                });
            case 6:
                _alert.showAlert('alert--lazure', 'Success creating session!');
                _ctx.next = 13;
                break;
            case 9:
                _ctx.prev = 9;
                _ctx.t0 = _ctx["catch"](0);
                console.log(_ctx.t0);
                _alert.showAlert(_ctx.t0);
            case 13:
                _ctx.prev = 13;
                setTimeout(function() {
                    _alert.hideAlert();
                }, 2000);
                return _ctx.finish(13);
            case 16:
            case "end":
                return _ctx.stop();
        }
    }, _callee, null, [
        [
            0,
            9,
            13,
            16
        ]
    ]);
}));

},{"@swc/helpers":"gDs9W","regenerator-runtime":"hmHqu","axios":"lD2ZU","./alert":"8X5i0","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"1jsGx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _helpers = require("@swc/helpers");
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var regeneratorRuntime = require("regenerator-runtime");
var Review = require('../../src/models/reviewModel');
var stableElement = document.querySelector('.container');
module.exports = /*#__PURE__*/ (function() {
    "use strict";
    function Modal(modalBtn) {
        _helpers.classCallCheck(this, Modal);
        this.modalBtn = modalBtn;
    }
    _helpers.createClass(Modal, [
        {
            key: "createModal",
            value: function createModal() {
                // create modal
                var html = "\n    <div class='modal-header'>\n      <h2>".concat(this.modalBtn.dataset.title, "</h2>\n      <span data-close class='close-modal' data-close='true'>&times;</span>\n    </div>\n    <hr>\n    <div class='modal-body'>\n      <label for='review'>Tell us your review:)</label>\n      \n      <ul class='slider'>\n        <li class='slider-item'>\n          <label>Terrible (1)</label>\n          <input type='radio' name='rating-tour' value='1'>\n        </li>\n        <li class='slider-item'>\n          <label>Bad (2)</label>\n          <input type='radio' name='rating-tour' value='2'>\n        </li>\n        <li class='slider-item'>\n          <label>Unclear (3)</label>\n          <input type='radio' checked name='rating-tour' value='3'>\n        </li>\n           <li class='slider-item'>\n          <label>Good(4)</label>\n          <input type='radio' name='rating-tour' value='4'>\n        </li>\n           <li class='slider-item'>\n          <label>Excellent (5)</label>\n          <input type='radio' name='rating-tour' value='5'>\n        </li>\n      </ul>\n\n      \n      <textarea class='textarea-review' placeholder='Describe your expression about tour...' id='review' name='story' rows='7'></textarea>\n    </div>\n    <div class='modal-footer' style='display:flex; justify-content:space-evenly; align-items: center'>\n      <button type='button' class='btn-create'>Create review</button>\n      <button type='button' class='btn-remove'>Remove review</button>\n      <button type='button' class='btn-edit'>Save review</button>\n    </div>\n  ");
                // Create modal overlay
                this.modalOverlay = document.createElement('div');
                this.modalOverlay.classList.add('modal-overlay');
                this.modalOverlay.classList.add('hide');
                this.modalOverlay.setAttribute('data-close', '');
                // insert modalOverlay before container
                stableElement.insertAdjacentElement('beforebegin', this.modalOverlay);
                // Create modal body
                this.modalContent = document.createElement('div');
                this.modalContent.classList.add('modal-content');
                this.modalContent.classList.add('hide');
                this.modalContent.innerHTML = html;
                // insert modalContent before container
                stableElement.insertAdjacentElement('beforebegin', this.modalContent);
                document.querySelector('.btn-create').classList.remove('hide');
                document.querySelector('.btn-remove').classList.add('hide');
                document.querySelector('.btn-edit').classList.add('hide');
            }
        },
        {
            key: "openModal",
            value: function openModal() {
                this.modalOverlay.classList.remove('hide');
                this.modalContent.classList.remove('hide');
            }
        },
        {
            key: "hideModal",
            value: function hideModal() {
                this.modalOverlay.classList.add('hide');
                this.modalContent.classList.add('hide');
            }
        },
        {
            key: "destroyModal",
            value: function destroyModal() {
                this.modalOverlay.parentNode.removeChild(this.modalOverlay);
                this.modalContent.parentNode.removeChild(this.modalContent);
            }
        },
        {
            key: "setConfig",
            value: function setConfig(reviewId) {
                return _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                    var response;
                    return regeneratorRuntime.wrap(function _callee$(_ctx) {
                        while(1)switch(_ctx.prev = _ctx.next){
                            case 0:
                                _ctx.next = 2;
                                return _axiosDefault.default({
                                    method: 'GET',
                                    url: "api/v1/reviews/".concat(reviewId)
                                });
                            case 2:
                                response = _ctx.sent;
                                document.querySelectorAll('input[name=\'rating-tour\']')[response.data.data.rating - 1].checked = true;
                                document.querySelector('.textarea-review').value = response.data.data.review;
                                document.querySelector('.btn-create').classList.add('hide');
                                document.querySelector('.btn-remove').classList.remove('hide');
                                document.querySelector('.btn-edit').classList.remove('hide');
                            case 8:
                            case "end":
                                return _ctx.stop();
                        }
                    }, _callee);
                }))();
            }
        }
    ]);
    return Modal;
})();

},{"@swc/helpers":"gDs9W","regenerator-runtime":"hmHqu","axios":"lD2ZU","../../src/models/reviewModel":"27QZx","@parcel/transformer-js/src/esmodule-helpers.js":"h9Iz6"}],"27QZx":[function(require,module,exports) {
var _helpers = require("@swc/helpers");
var regeneratorRuntime = require("regenerator-runtime");
var mongoose = require('mongoose');
var Tour = require('./tourModel');
var reviewSchema = new mongoose.Schema({
    review: {
        type: String,
        required: [
            true,
            'Review can not be empty!'
        ]
    },
    rating: {
        type: Number,
        min: 1,
        max: 5
    },
    createdAt: {
        type: Date,
        default: Date.now
    },
    tour: {
        type: mongoose.Schema.ObjectId,
        ref: 'Tour',
        required: [
            true,
            'Review must belong to a tour.'
        ]
    },
    user: {
        type: mongoose.Schema.ObjectId,
        ref: 'User',
        required: [
            true,
            'Review must belong to a user'
        ]
    }
}, {
    toJSON: {
        virtuals: true
    },
    toObject: {
        virtuals: true
    }
});
reviewSchema.index({
    rating: 1
});
reviewSchema.index({
    tour: 1,
    user: 1
}, {
    unique: true
});
// Because Admin Bro doesn't understand populate
// reviewSchema.pre(/^find/, function(next) {
//   this.populate({
//     path: 'user',
//     select: 'name photo',
//   })
//   next()
// })
reviewSchema.statics.getAverageInfo = (function(tourId) {
    var _ref = _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee(tourId) {
        var stats;
        return regeneratorRuntime.wrap(function _callee$(_ctx) {
            while(1)switch(_ctx.prev = _ctx.next){
                case 0:
                    _ctx.next = 2;
                    return this.aggregate([
                        {
                            $match: {
                                tour: tourId
                            }
                        },
                        {
                            $group: {
                                _id: '$tour',
                                avgRating: {
                                    $avg: '$rating'
                                },
                                amountReviews: {
                                    $sum: 1
                                }
                            }
                        }
                    ]);
                case 2:
                    stats = _ctx.sent;
                    _ctx.next = 5;
                    return Tour.findByIdAndUpdate(tourId, {
                        ratingsAverage: stats[0].avgRating,
                        ratingsQuantity: stats[0].amountReviews
                    });
                case 5:
                case "end":
                    return _ctx.stop();
            }
        }, _callee, this);
    }).bind(this));
    return function() {
        return _ref.apply(this, arguments);
    };
})();
reviewSchema.post('save', function() {
    var _ref = _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee() {
        return regeneratorRuntime.wrap(function _callee$(_ctx) {
            while(1)switch(_ctx.prev = _ctx.next){
                case 0:
                    this.constructor.getAverageInfo(this.tour);
                case 1:
                case "end":
                    return _ctx.stop();
            }
        }, _callee, this);
    }).bind(this));
    return function() {
        return _ref.apply(this, arguments);
    };
}());
reviewSchema.pre(/findOneAnd/, function() {
    var _ref = _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee() {
        return regeneratorRuntime.wrap(function _callee$(_ctx) {
            while(1)switch(_ctx.prev = _ctx.next){
                case 0:
                    _ctx.next = 2;
                    return this.findOne();
                case 2:
                    this.temp = _ctx.sent;
                case 3:
                case "end":
                    return _ctx.stop();
            }
        }, _callee, this);
    }).bind(this));
    return function() {
        return _ref.apply(this, arguments);
    };
}());
reviewSchema.pre('delete', function() {
    var _ref = _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee() {
        return regeneratorRuntime.wrap(function _callee$(_ctx) {
            while(1)switch(_ctx.prev = _ctx.next){
                case 0:
                    _ctx.next = 2;
                    return this.findOne();
                case 2:
                    this.temp = _ctx.sent;
                case 3:
                case "end":
                    return _ctx.stop();
            }
        }, _callee, this);
    }).bind(this));
    return function() {
        return _ref.apply(this, arguments);
    };
}());
reviewSchema.post(/findOneAnd/, function() {
    var _ref = _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee() {
        return regeneratorRuntime.wrap(function _callee$(_ctx) {
            while(1)switch(_ctx.prev = _ctx.next){
                case 0:
                    this.temp.constructor.getAverageInfo(this.temp.tour);
                case 1:
                case "end":
                    return _ctx.stop();
            }
        }, _callee, this);
    }).bind(this));
    return function() {
        return _ref.apply(this, arguments);
    };
}());
reviewSchema.post('delete', function() {
    var _ref = _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee() {
        return regeneratorRuntime.wrap(function _callee$(_ctx) {
            while(1)switch(_ctx.prev = _ctx.next){
                case 0:
                    this.temp.constructor.getAverageInfo(this.temp.tour);
                case 1:
                case "end":
                    return _ctx.stop();
            }
        }, _callee, this);
    }).bind(this));
    return function() {
        return _ref.apply(this, arguments);
    };
}());
var Review = mongoose.model('Review', reviewSchema);
module.exports = Review;

},{"@swc/helpers":"gDs9W","regenerator-runtime":"hmHqu","mongoose":"k3sUr","./tourModel":"fxo0w"}],"k3sUr":[function(require,module,exports) {
!function(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.mongoose = e() : t.mongoose = e();
}("undefined" != typeof self ? self : this, function() {
    return (function(t) {
        var e = {
        };
        function r(n) {
            if (e[n]) return e[n].exports;
            var o = e[n] = {
                i: n,
                l: !1,
                exports: {
                }
            };
            return t[n].call(o.exports, o, o.exports, r), o.l = !0, o.exports;
        }
        return r.m = t, r.c = e, r.d = function(t1, e1, n) {
            r.o(t1, e1) || Object.defineProperty(t1, e1, {
                enumerable: !0,
                get: n
            });
        }, r.r = function(t1) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t1, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(t1, "__esModule", {
                value: !0
            });
        }, r.t = function(t1, e1) {
            if (1 & e1 && (t1 = r(t1)), 8 & e1) return t1;
            if (4 & e1 && "object" == typeof t1 && t1 && t1.__esModule) return t1;
            var n = Object.create(null);
            if (r.r(n), Object.defineProperty(n, "default", {
                enumerable: !0,
                value: t1
            }), 2 & e1 && "string" != typeof t1) for(var o in t1)r.d(n, o, (function(e2) {
                return t1[e2];
            }).bind(null, o));
            return n;
        }, r.n = function(t1) {
            var e1 = t1 && t1.__esModule ? function() {
                return t1.default;
            } : function() {
                return t1;
            };
            return r.d(e1, "a", e1), e1;
        }, r.o = function(t1, e1) {
            return Object.prototype.hasOwnProperty.call(t1, e1);
        }, r.p = "", r(r.s = 96);
    })([
        function(t, e, r) {
            "use strict";
            e.arrayAtomicsSymbol = Symbol("mongoose#Array#_atomics"), e.arrayParentSymbol = Symbol("mongoose#Array#_parent"), e.arrayPathSymbol = Symbol("mongoose#Array#_path"), e.arraySchemaSymbol = Symbol("mongoose#Array#_schema"), e.documentArrayParent = Symbol("mongoose:documentArrayParent"), e.documentIsSelected = Symbol("mongoose#Document#isSelected"), e.documentIsModified = Symbol("mongoose#Document#isModified"), e.documentModifiedPaths = Symbol("mongoose#Document#modifiedPaths"), e.documentSchemaSymbol = Symbol("mongoose#Document#schema"), e.getSymbol = Symbol("mongoose#Document#get"), e.modelSymbol = Symbol("mongoose#Model"), e.objectIdSymbol = Symbol("mongoose#ObjectId"), e.populateModelSymbol = Symbol("mongoose.PopulateOptions#Model"), e.schemaTypeSymbol = Symbol("mongoose#schemaType"), e.sessionNewDocuments = Symbol("mongoose:ClientSession#newDocuments"), e.scopeSymbol = Symbol("mongoose#Document#scope"), e.validatorErrorSymbol = Symbol("mongoose:validatorError");
        },
        function(t, e, r) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n(t1, e1) {
                var r1 = "undefined" != typeof Symbol && t1[Symbol.iterator] || t1["@@iterator"];
                if (!r1) {
                    if (Array.isArray(t1) || (r1 = (function(t2, e2) {
                        if (!t2) return;
                        if ("string" == typeof t2) return o(t2, e2);
                        var r2 = Object.prototype.toString.call(t2).slice(8, -1);
                        "Object" === r2 && t2.constructor && (r2 = t2.constructor.name);
                        if ("Map" === r2 || "Set" === r2) return Array.from(t2);
                        if ("Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2)) return o(t2, e2);
                    })(t1)) || e1 && t1 && "number" == typeof t1.length) {
                        r1 && (t1 = r1);
                        var n1 = 0, i = function() {
                        };
                        return {
                            s: i,
                            n: function() {
                                return n1 >= t1.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t1[n1++]
                                };
                            },
                            e: function(t2) {
                                throw t2;
                            },
                            f: i
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s, a = !0, u = !1;
                return {
                    s: function() {
                        r1 = r1.call(t1);
                    },
                    n: function() {
                        var t2 = r1.next();
                        return a = t2.done, t2;
                    },
                    e: function(t2) {
                        u = !0, s = t2;
                    },
                    f: function() {
                        try {
                            a || null == r1.return || r1.return();
                        } finally{
                            if (u) throw s;
                        }
                    }
                };
            }
            function o(t1, e1) {
                (null == e1 || e1 > t1.length) && (e1 = t1.length);
                for(var r1 = 0, n2 = new Array(e1); r1 < e1; r1++)n2[r1] = t1[r1];
                return n2;
            }
            function i(t1) {
                return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t2) {
                    return typeof t2;
                } : function(t2) {
                    return t2 && "function" == typeof Symbol && t2.constructor === Symbol && t2 !== Symbol.prototype ? "symbol" : typeof t2;
                })(t1);
            }
            var s, a = r(114), u = r(50), c = r(63), l = r(64).Buffer, f = r(20), p2 = r(10), h = r(117), y = r(26), d = r(22), _ = r(21), v = r(67), m = r(66), g = r(31), b = r(27), w = r(72), O = r(51);
            function S(t1) {
                if (Array.isArray(t1.populate)) {
                    var r1 = [];
                    t1.populate.forEach(function(t2) {
                        if (/[\s]/.test(t2.path)) {
                            var n2 = Object.assign({
                            }, t2);
                            n2.path.split(" ").forEach(function(t3) {
                                n2.path = t3, r1.push(e.populate(n2)[0]);
                            });
                        } else r1.push(e.populate(t2)[0]);
                    }), t1.populate = e.populate(r1);
                } else null != t1.populate && "object" === i(t1.populate) && (t1.populate = e.populate(t1.populate));
                var o1 = [], s1 = t1.path.split(" ");
                null != t1.options && (t1.options = e.clone(t1.options));
                var a1, u1 = n(s1);
                try {
                    for(u1.s(); !(a1 = u1.n()).done;){
                        var c1 = a1.value;
                        o1.push(new h(Object.assign({
                        }, t1, {
                            path: c1
                        })));
                    }
                } catch (t2) {
                    u1.e(t2);
                } finally{
                    u1.f();
                }
                return o1;
            }
            /*!
 * Return the value of `obj` at the given `path`.
 *
 * @param {String} path
 * @param {Object} obj
 */ e.specialProperties = O, /*!
 * Produces a collection name from model `name`. By default, just returns
 * the model name
 *
 * @param {String} name a model name
 * @param {Function} pluralize function that pluralizes the collection name
 * @return {String} a collection name
 * @api private
 */ e.toCollectionName = function(t1, e1) {
                return "system.profile" === t1 || "system.indexes" === t1 ? t1 : "function" == typeof e1 ? e1(t1) : t1;
            }, /*!
 * Determines if `a` and `b` are deep equal.
 *
 * Modified from node/lib/assert.js
 *
 * @param {any} a a value to compare to `b`
 * @param {any} b a value to compare to `a`
 * @return {Boolean}
 * @api private
 */ e.deepEqual = function t1(r2, n3) {
                if (r2 === n3) return !0;
                if ("object" !== i(r2) && "object" !== i(n3)) return r2 === n3;
                if (r2 instanceof Date && n3 instanceof Date) return r2.getTime() === n3.getTime();
                if (v(r2, "ObjectID") && v(n3, "ObjectID") || v(r2, "Decimal128") && v(n3, "Decimal128")) return r2.toString() === n3.toString();
                if (r2 instanceof RegExp && n3 instanceof RegExp) return r2.source === n3.source && r2.ignoreCase === n3.ignoreCase && r2.multiline === n3.multiline && r2.global === n3.global;
                if (null == r2 || null == n3) return !1;
                if (r2.prototype !== n3.prototype) return !1;
                if (r2 instanceof Map && n3 instanceof Map) return t1(Array.from(r2.keys()), Array.from(n3.keys())) && t1(Array.from(r2.values()), Array.from(n3.values()));
                if (r2 instanceof Number && n3 instanceof Number) return r2.valueOf() === n3.valueOf();
                if (l.isBuffer(r2)) return e.buffer.areEqual(r2, n3);
                if (Array.isArray(r2) && Array.isArray(n3)) {
                    var o1 = r2.length;
                    if (o1 !== n3.length) return !1;
                    for(var s1 = 0; s1 < o1; ++s1)if (!t1(r2[s1], n3[s1])) return !1;
                    return !0;
                }
                null != r2.$__ ? r2 = r2._doc : g(r2) && (r2 = r2.toObject()), null != n3.$__ ? n3 = n3._doc : g(n3) && (n3 = n3.toObject());
                var a1 = Object.keys(r2), u1 = Object.keys(n3), c2 = a1.length;
                if (c2 !== u1.length) return !1;
                a1.sort(), u1.sort();
                for(var f1 = c2 - 1; f1 >= 0; f1--)if (a1[f1] !== u1[f1]) return !1;
                for(var p1 = 0, h1 = a1; p1 < h1.length; p1++){
                    var y1 = h1[p1];
                    if (!t1(r2[y1], n3[y1])) return !1;
                }
                return !0;
            }, /*!
 * Get the last element of an array
 */ e.last = function(t2) {
                if (t2.length > 0) return t2[t2.length - 1];
            }, e.clone = y, /*!
 * ignore
 */ e.promiseOrCallback = b, /*!
 * ignore
 */ e.omit = function(t2, e1) {
                if (null == e1) return Object.assign({
                }, t2);
                Array.isArray(e1) || (e1 = [
                    e1
                ]);
                var r2, o2 = Object.assign({
                }, t2), i1 = n(e1);
                try {
                    for(i1.s(); !(r2 = i1.n()).done;)delete o2[r2.value];
                } catch (t3) {
                    i1.e(t3);
                } finally{
                    i1.f();
                }
                return o2;
            }, /*!
 * Shallow copies defaults into options.
 *
 * @param {Object} defaults
 * @param {Object} options
 * @return {Object} the merged object
 * @api private
 */ e.options = function(t2, e1) {
                var r2, n3 = Object.keys(t2), o2 = n3.length;
                for(e1 = e1 || {
                }; o2--;)(r2 = n3[o2]) in e1 || (e1[r2] = t2[r2]);
                return e1;
            }, /*!
 * Generates a random string
 *
 * @api private
 */ e.random = function() {
                return Math.random().toString().substr(3);
            }, /*!
 * Merges `from` into `to` without overwriting existing properties.
 *
 * @param {Object} to
 * @param {Object} from
 * @api private
 */ e.merge = function t2(r2, n3, o2, i1) {
                o2 = o2 || {
                };
                var s2, a1 = Object.keys(n3), u1 = 0, c2 = a1.length;
                i1 = i1 || "";
                for(var l1 = o2.omitNested || {
                }; u1 < c2;)if (s2 = a1[u1++], !(o2.omit && o2.omit[s2] || l1[i1] || O.has(s2))) {
                    if (null == r2[s2]) r2[s2] = n3[s2];
                    else if (e.isObject(n3[s2])) {
                        if (e.isObject(r2[s2]) || (r2[s2] = {
                        }), null != n3[s2]) {
                            if (o2.isDiscriminatorSchemaMerge && n3[s2].$isSingleNested && r2[s2].$isMongooseDocumentArray || n3[s2].$isMongooseDocumentArray && r2[s2].$isSingleNested) continue;
                            if (n3[s2].instanceOfSchema) {
                                r2[s2].instanceOfSchema ? w(r2[s2], n3[s2].clone(), o2.isDiscriminatorSchemaMerge) : r2[s2] = n3[s2].clone();
                                continue;
                            }
                            if (n3[s2] instanceof p2) {
                                r2[s2] = new p2(n3[s2]);
                                continue;
                            }
                        }
                        t2(r2[s2], n3[s2], o2, i1 ? i1 + "." + s2 : s2);
                    } else o2.overwrite && (r2[s2] = n3[s2]);
                }
            }, /*!
 * Applies toObject recursively.
 *
 * @param {Document|Array|Object} obj
 * @return {Object}
 * @api private
 */ e.toObject = function t3(o2) {
                var i1;
                if (s || (s = r(12)), null == o2) return o2;
                if (o2 instanceof s) return o2.toObject();
                if (Array.isArray(o2)) {
                    i1 = [];
                    var a1, u1 = n(o2);
                    try {
                        for(u1.s(); !(a1 = u1.n()).done;){
                            var c2 = a1.value;
                            i1.push(t3(c2));
                        }
                    } catch (t4) {
                        u1.e(t4);
                    } finally{
                        u1.f();
                    }
                    return i1;
                }
                if (e.isPOJO(o2)) {
                    i1 = {
                    };
                    for(var l1 = 0, f1 = Object.keys(o2); l1 < f1.length; l1++){
                        var p1 = f1[l1];
                        O.has(p1) || (i1[p1] = t3(o2[p1]));
                    }
                    return i1;
                }
                return o2;
            }, e.isObject = _, /*!
 * Determines if `arg` is a plain old JavaScript object (POJO). Specifically,
 * `arg` must be an object but not an instance of any special class, like String,
 * ObjectId, etc.
 *
 * `Object.getPrototypeOf()` is part of ES5: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf
 *
 * @param {Object|Array|String|Function|RegExp|any} arg
 * @api private
 * @return {Boolean}
 */ e.isPOJO = function(t4) {
                if (null == t4 || "object" !== i(t4)) return !1;
                var e1 = Object.getPrototypeOf(t4);
                return !e1 || "Object" === e1.constructor.name;
            }, /*!
 * Determines if `obj` is a built-in object like an array, date, boolean,
 * etc.
 */ e.isNativeObject = function(t4) {
                return Array.isArray(t4) || t4 instanceof Date || t4 instanceof Boolean || t4 instanceof Number || t4 instanceof String;
            }, /*!
 * Determines if `val` is an object that has no own keys
 */ e.isEmptyObject = function(t4) {
                return null != t4 && "object" === i(t4) && 0 === Object.keys(t4).length;
            }, /*!
 * Search if `obj` or any POJOs nested underneath `obj` has a property named
 * `key`
 */ e.hasKey = function(t4, r2) {
                for(var n3 = 0, o2 = Object.keys(t4); n3 < o2.length; n3++){
                    var i1 = o2[n3];
                    if (i1 === r2) return !0;
                    if (e.isPOJO(t4[i1]) && e.hasKey(t4[i1], r2)) return !0;
                }
                return !1;
            }, /*!
 * A faster Array.prototype.slice.call(arguments) alternative
 * @api private
 */ e.args = c, /*!
 * process.nextTick helper.
 *
 * Wraps `callback` in a try/catch + nextTick.
 *
 * node-mongodb-native has a habit of state corruption when an error is immediately thrown from within a collection callback.
 *
 * @param {Function} callback
 * @api private
 */ e.tick = function(t4) {
                if ("function" == typeof t4) return function() {
                    try {
                        t4.apply(this, arguments);
                    } catch (t5) {
                        d(function() {
                            throw t5;
                        });
                    }
                };
            }, /*!
 * Returns true if `v` is an object that can be serialized as a primitive in
 * MongoDB
 */ e.isMongooseType = function(t4) {
                return t4 instanceof p2 || t4 instanceof f || t4 instanceof l;
            }, e.isMongooseObject = g, /*!
 * Converts `expires` options of index objects to `expiresAfterSeconds` options for MongoDB.
 *
 * @param {Object} object
 * @api private
 */ e.expires = function(t4) {
                var e1;
                t4 && "Object" === t4.constructor.name && "expires" in t4 && (e1 = "string" != typeof t4.expires ? t4.expires : Math.round(a(t4.expires) / 1000), t4.expireAfterSeconds = e1, delete t4.expires);
            }, /*!
 * populate helper
 */ e.populate = function(t4, r2, n3, o2, s2, a2, u2, c3) {
                var l2 = null;
                if (1 === arguments.length) {
                    if (t4 instanceof h) return [
                        t4
                    ];
                    if (Array.isArray(t4)) {
                        var f2 = p3(t4);
                        return f2.map(function(t5) {
                            return e.populate(t5)[0];
                        });
                    }
                    l2 = e.isObject(t4) ? Object.assign({
                    }, t4) : {
                        path: t4
                    };
                } else l2 = "object" === i(n3) ? {
                    path: t4,
                    select: r2,
                    match: n3,
                    options: o2
                } : {
                    path: t4,
                    select: r2,
                    model: n3,
                    match: o2,
                    options: s2,
                    populate: a2,
                    justOne: u2,
                    count: c3
                };
                if ("string" != typeof l2.path) throw new TypeError("utils.populate: invalid path. Expected string. Got typeof `" + i(t4) + "`");
                function p3(t5) {
                    var e1 = [];
                    return t5.forEach(function(t6) {
                        /[\s]/.test(t6.path) ? t6.path.split(" ").forEach(function(r3) {
                            var n4 = Object.assign({
                            }, t6);
                            n4.path = r3, e1.push(n4);
                        }) : e1.push(t6);
                    }), e1;
                }
                return S(l2);
            }, e.getValue = function(t4, e1, r2) {
                return u.get(t4, e1, "_doc", r2);
            }, /*!
 * Sets the value of `obj` at the given `path`.
 *
 * @param {String} path
 * @param {Anything} val
 * @param {Object} obj
 */ e.setValue = function(t4, e1, r2, n3, o2) {
                u.set(t4, e1, r2, "_doc", n3, o2);
            }, /*!
 * Returns an array of values from object `o`.
 *
 * @param {Object} o
 * @return {Array}
 * @private
 */ e.object = {
            }, e.object.vals = function(t4) {
                for(var e1 = Object.keys(t4), r2 = e1.length, n3 = []; r2--;)n3.push(t4[e1[r2]]);
                return n3;
            }, /*!
 * @see exports.options
 */ e.object.shallowCopy = e.options;
            /*!
 * Safer helper for hasOwnProperty checks
 *
 * @param {Object} obj
 * @param {String} prop
 */ var A = Object.prototype.hasOwnProperty;
            e.object.hasOwnProperty = function(t4, e1) {
                return A.call(t4, e1);
            }, /*!
 * Determine if `val` is null or undefined
 *
 * @return {Boolean}
 */ e.isNullOrUndefined = function(t4) {
                return null == t4;
            }, /*!
 * ignore
 */ e.array = {
            }, /*!
 * Flattens an array.
 *
 * [ 1, [ 2, 3, [4] ]] -> [1,2,3,4]
 *
 * @param {Array} arr
 * @param {Function} [filter] If passed, will be invoked with each item in the array. If `filter` returns a falsy value, the item will not be included in the results.
 * @return {Array}
 * @private
 */ e.array.flatten = function t4(e1, r2, n3) {
                return n3 || (n3 = []), e1.forEach(function(e2) {
                    Array.isArray(e2) ? t4(e2, r2, n3) : r2 && !r2(e2) || n3.push(e2);
                }), n3;
            };
            /*!
 * ignore
 */ var $ = Object.prototype.hasOwnProperty;
            e.hasUserDefinedProperty = function(t5, r2) {
                if (null == t5) return !1;
                if (Array.isArray(r2)) {
                    var o2, s2 = n(r2);
                    try {
                        for(s2.s(); !(o2 = s2.n()).done;){
                            var a2 = o2.value;
                            if (e.hasUserDefinedProperty(t5, a2)) return !0;
                        }
                    } catch (t6) {
                        s2.e(t6);
                    } finally{
                        s2.f();
                    }
                    return !1;
                }
                if ($.call(t5, r2)) return !0;
                if ("object" === i(t5) && r2 in t5) {
                    var u2 = t5[r2];
                    return u2 !== Object.prototype[r2] && u2 !== Array.prototype[r2];
                }
                return !1;
            };
            /*!
 * ignore
 */ var E = Math.pow(2, 32) - 1;
            e.isArrayIndex = function(t5) {
                return "number" == typeof t5 ? t5 >= 0 && t5 <= E : "string" == typeof t5 && !!/^\d+$/.test(t5) && (t5 = +t5) >= 0 && t5 <= E;
            }, /*!
 * Removes duplicate values from an array
 *
 * [1, 2, 3, 3, 5] => [1, 2, 3, 5]
 * [ ObjectId("550988ba0c19d57f697dc45e"), ObjectId("550988ba0c19d57f697dc45e") ]
 *    => [ObjectId("550988ba0c19d57f697dc45e")]
 *
 * @param {Array} arr
 * @return {Array}
 * @private
 */ e.array.unique = function(t5) {
                var e1, r2 = new Set, o3 = new Set, i2 = [], s3 = n(t5);
                try {
                    for(s3.s(); !(e1 = s3.n()).done;){
                        var a3 = e1.value;
                        if ("number" == typeof a3 || "string" == typeof a3 || null == a3) {
                            if (r2.has(a3)) continue;
                            i2.push(a3), r2.add(a3);
                        } else if (a3 instanceof p2) {
                            if (o3.has(a3.toString())) continue;
                            i2.push(a3), o3.add(a3.toString());
                        } else i2.push(a3);
                    }
                } catch (t6) {
                    s3.e(t6);
                } finally{
                    s3.f();
                }
                return i2;
            }, /*!
 * Determines if two buffers are equal.
 *
 * @param {Buffer} a
 * @param {Object} b
 */ e.buffer = {
            }, e.buffer.areEqual = function(t5, e1) {
                if (!l.isBuffer(t5)) return !1;
                if (!l.isBuffer(e1)) return !1;
                if (t5.length !== e1.length) return !1;
                for(var r2 = 0, n3 = t5.length; r2 < n3; ++r2)if (t5[r2] !== e1[r2]) return !1;
                return !0;
            }, e.getFunctionName = m, /*!
 * Decorate buffers
 */ e.decorate = function(t5, e1) {
                for(var r2 in e1)O.has(r2) || (t5[r2] = e1[r2]);
            }, e.mergeClone = function(t5, r2) {
                g(r2) && (r2 = r2.toObject({
                    transform: !1,
                    virtuals: !1,
                    depopulate: !0,
                    getters: !1,
                    flattenDecimals: !1
                }));
                for(var n3, o3 = Object.keys(r2), i2 = o3.length, s3 = 0; s3 < i2;)if (n3 = o3[s3++], !O.has(n3)) {
                    if ((void 0) === t5[n3]) t5[n3] = e.clone(r2[n3], {
                        transform: !1,
                        virtuals: !1,
                        depopulate: !0,
                        getters: !1,
                        flattenDecimals: !1
                    });
                    else {
                        var a4 = r2[n3];
                        if (null == a4 || !a4.valueOf || a4 instanceof Date || (a4 = a4.valueOf()), e.isObject(a4)) {
                            var u3 = a4;
                            g(a4) && !a4.isMongooseBuffer && (u3 = u3.toObject({
                                transform: !1,
                                virtuals: !1,
                                depopulate: !0,
                                getters: !1,
                                flattenDecimals: !1
                            })), a4.isMongooseBuffer && (u3 = l.from(u3)), e.mergeClone(t5[n3], u3);
                        } else t5[n3] = e.clone(a4, {
                            flattenDecimals: !1
                        });
                    }
                }
            }, e.each = function(t5, e1) {
                var r2, o3 = n(t5);
                try {
                    for(o3.s(); !(r2 = o3.n()).done;)e1(r2.value);
                } catch (t6) {
                    o3.e(t6);
                } finally{
                    o3.f();
                }
            }, /*!
 * ignore
 */ e.getOption = function(t5) {
                var e1, r2 = Array.prototype.slice.call(arguments, 1), o3 = n(r2);
                try {
                    for(o3.s(); !(e1 = o3.n()).done;){
                        var i2 = e1.value;
                        if (null != i2[t5]) return i2[t5];
                    }
                } catch (t6) {
                    o3.e(t6);
                } finally{
                    o3.f();
                }
                return null;
            }, /*!
 * ignore
 */ e.noop = function() {
            }, e.errorToPOJO = function(t5) {
                if (!(t5 instanceof Error)) throw new Error("`error` must be `instanceof Error`.");
                var e1, r2 = {
                }, o3 = n(Object.getOwnPropertyNames(t5));
                try {
                    for(o3.s(); !(e1 = o3.n()).done;){
                        var i3 = e1.value;
                        r2[i3] = t5[i3];
                    }
                } catch (t6) {
                    o3.e(t6);
                } finally{
                    o3.f();
                }
                return r2;
            };
        },
        function(t, e, r2) {
            "use strict";
            (function(t1) {
                /*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */ var n3 = r2(98), o3 = r2(99), i4 = r2(100);
                function s3() {
                    return u4.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
                }
                function a5(t2, e1) {
                    if (s3() < e1) throw new RangeError("Invalid typed array length");
                    return u4.TYPED_ARRAY_SUPPORT ? (t2 = new Uint8Array(e1)).__proto__ = u4.prototype : (null === t2 && (t2 = new u4(e1)), t2.length = e1), t2;
                }
                function u4(t2, e1, r3) {
                    if (!(u4.TYPED_ARRAY_SUPPORT || this instanceof u4)) return new u4(t2, e1, r3);
                    if ("number" == typeof t2) {
                        if ("string" == typeof e1) throw new Error("If encoding is specified then the first argument must be a string");
                        return f3(this, t2);
                    }
                    return c3(this, t2, e1, r3);
                }
                function c3(t2, e1, r3, n4) {
                    if ("number" == typeof e1) throw new TypeError('"value" argument must not be a number');
                    return "undefined" != typeof ArrayBuffer && e1 instanceof ArrayBuffer ? (function(t3, e2, r4, n5) {
                        if (e2.byteLength, r4 < 0 || e2.byteLength < r4) throw new RangeError("'offset' is out of bounds");
                        if (e2.byteLength < r4 + (n5 || 0)) throw new RangeError("'length' is out of bounds");
                        e2 = (void 0) === r4 && (void 0) === n5 ? new Uint8Array(e2) : (void 0) === n5 ? new Uint8Array(e2, r4) : new Uint8Array(e2, r4, n5);
                        u4.TYPED_ARRAY_SUPPORT ? (t3 = e2).__proto__ = u4.prototype : t3 = p2(t3, e2);
                        return t3;
                    })(t2, e1, r3, n4) : "string" == typeof e1 ? (function(t3, e2, r4) {
                        "string" == typeof r4 && "" !== r4 || (r4 = "utf8");
                        if (!u4.isEncoding(r4)) throw new TypeError('"encoding" must be a valid string encoding');
                        var n5 = 0 | y2(e2, r4), o4 = (t3 = a5(t3, n5)).write(e2, r4);
                        o4 !== n5 && (t3 = t3.slice(0, o4));
                        return t3;
                    })(t2, e1, r3) : (function(t3, e2) {
                        if (u4.isBuffer(e2)) {
                            var r4 = 0 | h(e2.length);
                            return 0 === (t3 = a5(t3, r4)).length || e2.copy(t3, 0, 0, r4), t3;
                        }
                        if (e2) {
                            if ("undefined" != typeof ArrayBuffer && e2.buffer instanceof ArrayBuffer || "length" in e2) return "number" != typeof e2.length || (n5 = e2.length) != n5 ? a5(t3, 0) : p2(t3, e2);
                            if ("Buffer" === e2.type && i4(e2.data)) return p2(t3, e2.data);
                        }
                        var n5;
                        throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
                    })(t2, e1);
                }
                function l2(t2) {
                    if ("number" != typeof t2) throw new TypeError('"size" argument must be a number');
                    if (t2 < 0) throw new RangeError('"size" argument must not be negative');
                }
                function f3(t2, e1) {
                    if (l2(e1), t2 = a5(t2, e1 < 0 ? 0 : 0 | h(e1)), !u4.TYPED_ARRAY_SUPPORT) for(var r3 = 0; r3 < e1; ++r3)t2[r3] = 0;
                    return t2;
                }
                function p2(t2, e1) {
                    var r3 = e1.length < 0 ? 0 : 0 | h(e1.length);
                    t2 = a5(t2, r3);
                    for(var n4 = 0; n4 < r3; n4 += 1)t2[n4] = 255 & e1[n4];
                    return t2;
                }
                function h(t2) {
                    if (t2 >= s3()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + s3().toString(16) + " bytes");
                    return 0 | t2;
                }
                function y2(t2, e1) {
                    if (u4.isBuffer(t2)) return t2.length;
                    if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(t2) || t2 instanceof ArrayBuffer)) return t2.byteLength;
                    "string" != typeof t2 && (t2 = "" + t2);
                    var r3 = t2.length;
                    if (0 === r3) return 0;
                    for(var n4 = !1;;)switch(e1){
                        case "ascii":
                        case "latin1":
                        case "binary":
                            return r3;
                        case "utf8":
                        case "utf-8":
                        case void 0:
                            return L(t2).length;
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return 2 * r3;
                        case "hex":
                            return r3 >>> 1;
                        case "base64":
                            return U(t2).length;
                        default:
                            if (n4) return L(t2).length;
                            e1 = ("" + e1).toLowerCase(), n4 = !0;
                    }
                }
                function d(t2, e1, r3) {
                    var n4 = !1;
                    if (((void 0) === e1 || e1 < 0) && (e1 = 0), e1 > this.length) return "";
                    if (((void 0) === r3 || r3 > this.length) && (r3 = this.length), r3 <= 0) return "";
                    if ((r3 >>>= 0) <= (e1 >>>= 0)) return "";
                    for(t2 || (t2 = "utf8");;)switch(t2){
                        case "hex":
                            return x(this, e1, r3);
                        case "utf8":
                        case "utf-8":
                            return E(this, e1, r3);
                        case "ascii":
                            return j(this, e1, r3);
                        case "latin1":
                        case "binary":
                            return P(this, e1, r3);
                        case "base64":
                            return $(this, e1, r3);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return T(this, e1, r3);
                        default:
                            if (n4) throw new TypeError("Unknown encoding: " + t2);
                            t2 = (t2 + "").toLowerCase(), n4 = !0;
                    }
                }
                function _(t2, e1, r3) {
                    var n4 = t2[e1];
                    t2[e1] = t2[r3], t2[r3] = n4;
                }
                function v(t2, e1, r3, n4, o4) {
                    if (0 === t2.length) return -1;
                    if ("string" == typeof r3 ? (n4 = r3, r3 = 0) : r3 > 2147483647 ? r3 = 2147483647 : r3 < -2147483648 && (r3 = -2147483648), r3 = +r3, isNaN(r3) && (r3 = o4 ? 0 : t2.length - 1), r3 < 0 && (r3 = t2.length + r3), r3 >= t2.length) {
                        if (o4) return -1;
                        r3 = t2.length - 1;
                    } else if (r3 < 0) {
                        if (!o4) return -1;
                        r3 = 0;
                    }
                    if ("string" == typeof e1 && (e1 = u4.from(e1, n4)), u4.isBuffer(e1)) return 0 === e1.length ? -1 : m(t2, e1, r3, n4, o4);
                    if ("number" == typeof e1) return e1 &= 255, u4.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? o4 ? Uint8Array.prototype.indexOf.call(t2, e1, r3) : Uint8Array.prototype.lastIndexOf.call(t2, e1, r3) : m(t2, [
                        e1
                    ], r3, n4, o4);
                    throw new TypeError("val must be string, number or Buffer");
                }
                function m(t2, e1, r3, n4, o4) {
                    var i5, s4 = 1, a6 = t2.length, u5 = e1.length;
                    if ((void 0) !== n4 && ("ucs2" === (n4 = String(n4).toLowerCase()) || "ucs-2" === n4 || "utf16le" === n4 || "utf-16le" === n4)) {
                        if (t2.length < 2 || e1.length < 2) return -1;
                        s4 = 2, a6 /= 2, u5 /= 2, r3 /= 2;
                    }
                    function c4(t3, e2) {
                        return 1 === s4 ? t3[e2] : t3.readUInt16BE(e2 * s4);
                    }
                    if (o4) {
                        var l3 = -1;
                        for(i5 = r3; i5 < a6; i5++)if (c4(t2, i5) === c4(e1, -1 === l3 ? 0 : i5 - l3)) {
                            if (-1 === l3 && (l3 = i5), i5 - l3 + 1 === u5) return l3 * s4;
                        } else -1 !== l3 && (i5 -= i5 - l3), l3 = -1;
                    } else for(r3 + u5 > a6 && (r3 = a6 - u5), i5 = r3; i5 >= 0; i5--){
                        for(var f4 = !0, p3 = 0; p3 < u5; p3++)if (c4(t2, i5 + p3) !== c4(e1, p3)) {
                            f4 = !1;
                            break;
                        }
                        if (f4) return i5;
                    }
                    return -1;
                }
                function g(t2, e1, r3, n4) {
                    r3 = Number(r3) || 0;
                    var o4 = t2.length - r3;
                    n4 ? (n4 = Number(n4)) > o4 && (n4 = o4) : n4 = o4;
                    var i5 = e1.length;
                    if (i5 % 2 != 0) throw new TypeError("Invalid hex string");
                    n4 > i5 / 2 && (n4 = i5 / 2);
                    for(var s4 = 0; s4 < n4; ++s4){
                        var a6 = parseInt(e1.substr(2 * s4, 2), 16);
                        if (isNaN(a6)) return s4;
                        t2[r3 + s4] = a6;
                    }
                    return s4;
                }
                function b(t2, e1, r3, n4) {
                    return V(L(e1, t2.length - r3), t2, r3, n4);
                }
                function w(t2, e1, r3, n4) {
                    return V(function(t3) {
                        for(var e2 = [], r5 = 0; r5 < t3.length; ++r5)e2.push(255 & t3.charCodeAt(r5));
                        return e2;
                    }(e1), t2, r3, n4);
                }
                function O(t2, e1, r3, n4) {
                    return w(t2, e1, r3, n4);
                }
                function S(t2, e1, r3, n4) {
                    return V(U(e1), t2, r3, n4);
                }
                function A(t2, e1, r3, n4) {
                    return V(function(t3, e2) {
                        for(var r5, n5, o4, i5 = [], s4 = 0; s4 < t3.length && !((e2 -= 2) < 0); ++s4)r5 = t3.charCodeAt(s4), n5 = r5 >> 8, o4 = r5 % 256, i5.push(o4), i5.push(n5);
                        return i5;
                    }(e1, t2.length - r3), t2, r3, n4);
                }
                function $(t2, e1, r3) {
                    return 0 === e1 && r3 === t2.length ? n3.fromByteArray(t2) : n3.fromByteArray(t2.slice(e1, r3));
                }
                function E(t2, e1, r3) {
                    r3 = Math.min(t2.length, r3);
                    for(var n4 = [], o4 = e1; o4 < r3;){
                        var i5, s4, a7, u5, c4 = t2[o4], l4 = null, f5 = c4 > 239 ? 4 : c4 > 223 ? 3 : c4 > 191 ? 2 : 1;
                        if (o4 + f5 <= r3) switch(f5){
                            case 1:
                                c4 < 128 && (l4 = c4);
                                break;
                            case 2:
                                128 == (192 & (i5 = t2[o4 + 1])) && (u5 = (31 & c4) << 6 | 63 & i5) > 127 && (l4 = u5);
                                break;
                            case 3:
                                i5 = t2[o4 + 1], s4 = t2[o4 + 2], 128 == (192 & i5) && 128 == (192 & s4) && (u5 = (15 & c4) << 12 | (63 & i5) << 6 | 63 & s4) > 2047 && (u5 < 55296 || u5 > 57343) && (l4 = u5);
                                break;
                            case 4:
                                i5 = t2[o4 + 1], s4 = t2[o4 + 2], a7 = t2[o4 + 3], 128 == (192 & i5) && 128 == (192 & s4) && 128 == (192 & a7) && (u5 = (15 & c4) << 18 | (63 & i5) << 12 | (63 & s4) << 6 | 63 & a7) > 65535 && u5 < 1114112 && (l4 = u5);
                        }
                        null === l4 ? (l4 = 65533, f5 = 1) : l4 > 65535 && (l4 -= 65536, n4.push(l4 >>> 10 & 1023 | 55296), l4 = 56320 | 1023 & l4), n4.push(l4), o4 += f5;
                    }
                    return (function(t3) {
                        var e2 = t3.length;
                        if (e2 <= 4096) return String.fromCharCode.apply(String, t3);
                        var r5 = "", n5 = 0;
                        for(; n5 < e2;)r5 += String.fromCharCode.apply(String, t3.slice(n5, n5 += 4096));
                        return r5;
                    })(n4);
                }
                e.Buffer = u4, e.SlowBuffer = function(t2) {
                    +t2 != t2 && (t2 = 0);
                    return u4.alloc(+t2);
                }, e.INSPECT_MAX_BYTES = 50, u4.TYPED_ARRAY_SUPPORT = (void 0) !== t1.TYPED_ARRAY_SUPPORT ? t1.TYPED_ARRAY_SUPPORT : (function() {
                    try {
                        var t2 = new Uint8Array(1);
                        return t2.__proto__ = {
                            __proto__: Uint8Array.prototype,
                            foo: function() {
                                return 42;
                            }
                        }, 42 === t2.foo() && "function" == typeof t2.subarray && 0 === t2.subarray(1, 1).byteLength;
                    } catch (t3) {
                        return !1;
                    }
                })(), e.kMaxLength = s3(), u4.poolSize = 8192, u4._augment = function(t2) {
                    return t2.__proto__ = u4.prototype, t2;
                }, u4.from = function(t2, e1, r3) {
                    return c3(null, t2, e1, r3);
                }, u4.TYPED_ARRAY_SUPPORT && (u4.prototype.__proto__ = Uint8Array.prototype, u4.__proto__ = Uint8Array, "undefined" != typeof Symbol && Symbol.species && u4[Symbol.species] === u4 && Object.defineProperty(u4, Symbol.species, {
                    value: null,
                    configurable: !0
                })), u4.alloc = function(t2, e1, r3) {
                    return (function(t3, e2, r5, n4) {
                        return l2(e2), e2 <= 0 ? a5(t3, e2) : (void 0) !== r5 ? "string" == typeof n4 ? a5(t3, e2).fill(r5, n4) : a5(t3, e2).fill(r5) : a5(t3, e2);
                    })(null, t2, e1, r3);
                }, u4.allocUnsafe = function(t2) {
                    return f3(null, t2);
                }, u4.allocUnsafeSlow = function(t2) {
                    return f3(null, t2);
                }, u4.isBuffer = function(t2) {
                    return !(null == t2 || !t2._isBuffer);
                }, u4.compare = function(t2, e1) {
                    if (!u4.isBuffer(t2) || !u4.isBuffer(e1)) throw new TypeError("Arguments must be Buffers");
                    if (t2 === e1) return 0;
                    for(var r3 = t2.length, n4 = e1.length, o4 = 0, i6 = Math.min(r3, n4); o4 < i6; ++o4)if (t2[o4] !== e1[o4]) {
                        r3 = t2[o4], n4 = e1[o4];
                        break;
                    }
                    return r3 < n4 ? -1 : n4 < r3 ? 1 : 0;
                }, u4.isEncoding = function(t2) {
                    switch(String(t2).toLowerCase()){
                        case "hex":
                        case "utf8":
                        case "utf-8":
                        case "ascii":
                        case "latin1":
                        case "binary":
                        case "base64":
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return !0;
                        default:
                            return !1;
                    }
                }, u4.concat = function(t2, e1) {
                    if (!i4(t2)) throw new TypeError('"list" argument must be an Array of Buffers');
                    if (0 === t2.length) return u4.alloc(0);
                    var r3;
                    if ((void 0) === e1) for(e1 = 0, r3 = 0; r3 < t2.length; ++r3)e1 += t2[r3].length;
                    var n4 = u4.allocUnsafe(e1), o4 = 0;
                    for(r3 = 0; r3 < t2.length; ++r3){
                        var s5 = t2[r3];
                        if (!u4.isBuffer(s5)) throw new TypeError('"list" argument must be an Array of Buffers');
                        s5.copy(n4, o4), o4 += s5.length;
                    }
                    return n4;
                }, u4.byteLength = y2, u4.prototype._isBuffer = !0, u4.prototype.swap16 = function() {
                    var t2 = this.length;
                    if (t2 % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
                    for(var e1 = 0; e1 < t2; e1 += 2)_(this, e1, e1 + 1);
                    return this;
                }, u4.prototype.swap32 = function() {
                    var t2 = this.length;
                    if (t2 % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
                    for(var e1 = 0; e1 < t2; e1 += 4)_(this, e1, e1 + 3), _(this, e1 + 1, e1 + 2);
                    return this;
                }, u4.prototype.swap64 = function() {
                    var t2 = this.length;
                    if (t2 % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
                    for(var e1 = 0; e1 < t2; e1 += 8)_(this, e1, e1 + 7), _(this, e1 + 1, e1 + 6), _(this, e1 + 2, e1 + 5), _(this, e1 + 3, e1 + 4);
                    return this;
                }, u4.prototype.toString = function() {
                    var t2 = 0 | this.length;
                    return 0 === t2 ? "" : 0 === arguments.length ? E(this, 0, t2) : d.apply(this, arguments);
                }, u4.prototype.equals = function(t2) {
                    if (!u4.isBuffer(t2)) throw new TypeError("Argument must be a Buffer");
                    return this === t2 || 0 === u4.compare(this, t2);
                }, u4.prototype.inspect = function() {
                    var t2 = "", r3 = e.INSPECT_MAX_BYTES;
                    return this.length > 0 && (t2 = this.toString("hex", 0, r3).match(/.{2}/g).join(" "), this.length > r3 && (t2 += " ... ")), "<Buffer " + t2 + ">";
                }, u4.prototype.compare = function(t2, e1, r3, n4, o4) {
                    if (!u4.isBuffer(t2)) throw new TypeError("Argument must be a Buffer");
                    if ((void 0) === e1 && (e1 = 0), (void 0) === r3 && (r3 = t2 ? t2.length : 0), (void 0) === n4 && (n4 = 0), (void 0) === o4 && (o4 = this.length), e1 < 0 || r3 > t2.length || n4 < 0 || o4 > this.length) throw new RangeError("out of range index");
                    if (n4 >= o4 && e1 >= r3) return 0;
                    if (n4 >= o4) return -1;
                    if (e1 >= r3) return 1;
                    if (this === t2) return 0;
                    for(var i6 = (o4 >>>= 0) - (n4 >>>= 0), s6 = (r3 >>>= 0) - (e1 >>>= 0), a8 = Math.min(i6, s6), c5 = this.slice(n4, o4), l5 = t2.slice(e1, r3), f6 = 0; f6 < a8; ++f6)if (c5[f6] !== l5[f6]) {
                        i6 = c5[f6], s6 = l5[f6];
                        break;
                    }
                    return i6 < s6 ? -1 : s6 < i6 ? 1 : 0;
                }, u4.prototype.includes = function(t2, e1, r3) {
                    return -1 !== this.indexOf(t2, e1, r3);
                }, u4.prototype.indexOf = function(t2, e1, r3) {
                    return v(this, t2, e1, r3, !0);
                }, u4.prototype.lastIndexOf = function(t2, e1, r3) {
                    return v(this, t2, e1, r3, !1);
                }, u4.prototype.write = function(t2, e1, r3, n4) {
                    if ((void 0) === e1) n4 = "utf8", r3 = this.length, e1 = 0;
                    else if ((void 0) === r3 && "string" == typeof e1) n4 = e1, r3 = this.length, e1 = 0;
                    else {
                        if (!isFinite(e1)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                        e1 |= 0, isFinite(r3) ? (r3 |= 0, (void 0) === n4 && (n4 = "utf8")) : (n4 = r3, r3 = void 0);
                    }
                    var o4 = this.length - e1;
                    if (((void 0) === r3 || r3 > o4) && (r3 = o4), t2.length > 0 && (r3 < 0 || e1 < 0) || e1 > this.length) throw new RangeError("Attempt to write outside buffer bounds");
                    n4 || (n4 = "utf8");
                    for(var i6 = !1;;)switch(n4){
                        case "hex":
                            return g(this, t2, e1, r3);
                        case "utf8":
                        case "utf-8":
                            return b(this, t2, e1, r3);
                        case "ascii":
                            return w(this, t2, e1, r3);
                        case "latin1":
                        case "binary":
                            return O(this, t2, e1, r3);
                        case "base64":
                            return S(this, t2, e1, r3);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return A(this, t2, e1, r3);
                        default:
                            if (i6) throw new TypeError("Unknown encoding: " + n4);
                            n4 = ("" + n4).toLowerCase(), i6 = !0;
                    }
                }, u4.prototype.toJSON = function() {
                    return {
                        type: "Buffer",
                        data: Array.prototype.slice.call(this._arr || this, 0)
                    };
                };
                function j(t2, e1, r3) {
                    var n4 = "";
                    r3 = Math.min(t2.length, r3);
                    for(var o4 = e1; o4 < r3; ++o4)n4 += String.fromCharCode(127 & t2[o4]);
                    return n4;
                }
                function P(t2, e1, r3) {
                    var n4 = "";
                    r3 = Math.min(t2.length, r3);
                    for(var o4 = e1; o4 < r3; ++o4)n4 += String.fromCharCode(t2[o4]);
                    return n4;
                }
                function x(t2, e1, r3) {
                    var n4 = t2.length;
                    (!e1 || e1 < 0) && (e1 = 0), (!r3 || r3 < 0 || r3 > n4) && (r3 = n4);
                    for(var o4 = "", i6 = e1; i6 < r3; ++i6)o4 += F(t2[i6]);
                    return o4;
                }
                function T(t2, e1, r3) {
                    for(var n4 = t2.slice(e1, r3), o4 = "", i6 = 0; i6 < n4.length; i6 += 2)o4 += String.fromCharCode(n4[i6] + 256 * n4[i6 + 1]);
                    return o4;
                }
                function N(t2, e1, r3) {
                    if (t2 % 1 != 0 || t2 < 0) throw new RangeError("offset is not uint");
                    if (t2 + e1 > r3) throw new RangeError("Trying to access beyond buffer length");
                }
                function k(t2, e1, r3, n4, o4, i6) {
                    if (!u4.isBuffer(t2)) throw new TypeError('"buffer" argument must be a Buffer instance');
                    if (e1 > o4 || e1 < i6) throw new RangeError('"value" argument is out of bounds');
                    if (r3 + n4 > t2.length) throw new RangeError("Index out of range");
                }
                function B(t2, e1, r3, n4) {
                    e1 < 0 && (e1 = 65535 + e1 + 1);
                    for(var o4 = 0, i6 = Math.min(t2.length - r3, 2); o4 < i6; ++o4)t2[r3 + o4] = (e1 & 255 << 8 * (n4 ? o4 : 1 - o4)) >>> 8 * (n4 ? o4 : 1 - o4);
                }
                function C(t2, e1, r3, n4) {
                    e1 < 0 && (e1 = 4294967295 + e1 + 1);
                    for(var o4 = 0, i6 = Math.min(t2.length - r3, 4); o4 < i6; ++o4)t2[r3 + o4] = e1 >>> 8 * (n4 ? o4 : 3 - o4) & 255;
                }
                function R(t2, e1, r3, n4, o4, i6) {
                    if (r3 + n4 > t2.length) throw new RangeError("Index out of range");
                    if (r3 < 0) throw new RangeError("Index out of range");
                }
                function D(t2, e1, r3, n4, i6) {
                    return i6 || R(t2, 0, r3, 4), o3.write(t2, e1, r3, n4, 23, 4), r3 + 4;
                }
                function M(t2, e1, r3, n4, i6) {
                    return i6 || R(t2, 0, r3, 8), o3.write(t2, e1, r3, n4, 52, 8), r3 + 8;
                }
                u4.prototype.slice = function(t2, e1) {
                    var r3, n4 = this.length;
                    if ((t2 = ~~t2) < 0 ? (t2 += n4) < 0 && (t2 = 0) : t2 > n4 && (t2 = n4), (e1 = (void 0) === e1 ? n4 : ~~e1) < 0 ? (e1 += n4) < 0 && (e1 = 0) : e1 > n4 && (e1 = n4), e1 < t2 && (e1 = t2), u4.TYPED_ARRAY_SUPPORT) (r3 = this.subarray(t2, e1)).__proto__ = u4.prototype;
                    else {
                        var o4 = e1 - t2;
                        r3 = new u4(o4, void 0);
                        for(var i6 = 0; i6 < o4; ++i6)r3[i6] = this[i6 + t2];
                    }
                    return r3;
                }, u4.prototype.readUIntLE = function(t2, e1, r3) {
                    t2 |= 0, e1 |= 0, r3 || N(t2, e1, this.length);
                    for(var n4 = this[t2], o5 = 1, i7 = 0; (++i7) < e1 && (o5 *= 256);)n4 += this[t2 + i7] * o5;
                    return n4;
                }, u4.prototype.readUIntBE = function(t2, e1, r3) {
                    t2 |= 0, e1 |= 0, r3 || N(t2, e1, this.length);
                    for(var n4 = this[t2 + --e1], o5 = 1; e1 > 0 && (o5 *= 256);)n4 += this[t2 + --e1] * o5;
                    return n4;
                }, u4.prototype.readUInt8 = function(t2, e1) {
                    return e1 || N(t2, 1, this.length), this[t2];
                }, u4.prototype.readUInt16LE = function(t2, e1) {
                    return e1 || N(t2, 2, this.length), this[t2] | this[t2 + 1] << 8;
                }, u4.prototype.readUInt16BE = function(t2, e1) {
                    return e1 || N(t2, 2, this.length), this[t2] << 8 | this[t2 + 1];
                }, u4.prototype.readUInt32LE = function(t2, e1) {
                    return e1 || N(t2, 4, this.length), (this[t2] | this[t2 + 1] << 8 | this[t2 + 2] << 16) + 16777216 * this[t2 + 3];
                }, u4.prototype.readUInt32BE = function(t2, e1) {
                    return e1 || N(t2, 4, this.length), 16777216 * this[t2] + (this[t2 + 1] << 16 | this[t2 + 2] << 8 | this[t2 + 3]);
                }, u4.prototype.readIntLE = function(t2, e1, r3) {
                    t2 |= 0, e1 |= 0, r3 || N(t2, e1, this.length);
                    for(var n4 = this[t2], o5 = 1, i7 = 0; (++i7) < e1 && (o5 *= 256);)n4 += this[t2 + i7] * o5;
                    return n4 >= (o5 *= 128) && (n4 -= Math.pow(2, 8 * e1)), n4;
                }, u4.prototype.readIntBE = function(t2, e1, r3) {
                    t2 |= 0, e1 |= 0, r3 || N(t2, e1, this.length);
                    for(var n4 = e1, o5 = 1, i7 = this[t2 + --n4]; n4 > 0 && (o5 *= 256);)i7 += this[t2 + --n4] * o5;
                    return i7 >= (o5 *= 128) && (i7 -= Math.pow(2, 8 * e1)), i7;
                }, u4.prototype.readInt8 = function(t2, e1) {
                    return e1 || N(t2, 1, this.length), 128 & this[t2] ? -1 * (255 - this[t2] + 1) : this[t2];
                }, u4.prototype.readInt16LE = function(t2, e1) {
                    e1 || N(t2, 2, this.length);
                    var r3 = this[t2] | this[t2 + 1] << 8;
                    return 32768 & r3 ? 4294901760 | r3 : r3;
                }, u4.prototype.readInt16BE = function(t2, e1) {
                    e1 || N(t2, 2, this.length);
                    var r3 = this[t2 + 1] | this[t2] << 8;
                    return 32768 & r3 ? 4294901760 | r3 : r3;
                }, u4.prototype.readInt32LE = function(t2, e1) {
                    return e1 || N(t2, 4, this.length), this[t2] | this[t2 + 1] << 8 | this[t2 + 2] << 16 | this[t2 + 3] << 24;
                }, u4.prototype.readInt32BE = function(t2, e1) {
                    return e1 || N(t2, 4, this.length), this[t2] << 24 | this[t2 + 1] << 16 | this[t2 + 2] << 8 | this[t2 + 3];
                }, u4.prototype.readFloatLE = function(t2, e1) {
                    return e1 || N(t2, 4, this.length), o3.read(this, t2, !0, 23, 4);
                }, u4.prototype.readFloatBE = function(t2, e1) {
                    return e1 || N(t2, 4, this.length), o3.read(this, t2, !1, 23, 4);
                }, u4.prototype.readDoubleLE = function(t2, e1) {
                    return e1 || N(t2, 8, this.length), o3.read(this, t2, !0, 52, 8);
                }, u4.prototype.readDoubleBE = function(t2, e1) {
                    return e1 || N(t2, 8, this.length), o3.read(this, t2, !1, 52, 8);
                }, u4.prototype.writeUIntLE = function(t2, e1, r3, n4) {
                    (t2 = +t2, e1 |= 0, r3 |= 0, n4) || k(this, t2, e1, r3, Math.pow(2, 8 * r3) - 1, 0);
                    var o5 = 1, i7 = 0;
                    for(this[e1] = 255 & t2; (++i7) < r3 && (o5 *= 256);)this[e1 + i7] = t2 / o5 & 255;
                    return e1 + r3;
                }, u4.prototype.writeUIntBE = function(t2, e1, r3, n4) {
                    (t2 = +t2, e1 |= 0, r3 |= 0, n4) || k(this, t2, e1, r3, Math.pow(2, 8 * r3) - 1, 0);
                    var o5 = r3 - 1, i7 = 1;
                    for(this[e1 + o5] = 255 & t2; (--o5) >= 0 && (i7 *= 256);)this[e1 + o5] = t2 / i7 & 255;
                    return e1 + r3;
                }, u4.prototype.writeUInt8 = function(t2, e1, r3) {
                    return t2 = +t2, e1 |= 0, r3 || k(this, t2, e1, 1, 255, 0), u4.TYPED_ARRAY_SUPPORT || (t2 = Math.floor(t2)), this[e1] = 255 & t2, e1 + 1;
                }, u4.prototype.writeUInt16LE = function(t2, e1, r3) {
                    return t2 = +t2, e1 |= 0, r3 || k(this, t2, e1, 2, 65535, 0), u4.TYPED_ARRAY_SUPPORT ? (this[e1] = 255 & t2, this[e1 + 1] = t2 >>> 8) : B(this, t2, e1, !0), e1 + 2;
                }, u4.prototype.writeUInt16BE = function(t2, e1, r3) {
                    return t2 = +t2, e1 |= 0, r3 || k(this, t2, e1, 2, 65535, 0), u4.TYPED_ARRAY_SUPPORT ? (this[e1] = t2 >>> 8, this[e1 + 1] = 255 & t2) : B(this, t2, e1, !1), e1 + 2;
                }, u4.prototype.writeUInt32LE = function(t2, e1, r3) {
                    return t2 = +t2, e1 |= 0, r3 || k(this, t2, e1, 4, 4294967295, 0), u4.TYPED_ARRAY_SUPPORT ? (this[e1 + 3] = t2 >>> 24, this[e1 + 2] = t2 >>> 16, this[e1 + 1] = t2 >>> 8, this[e1] = 255 & t2) : C(this, t2, e1, !0), e1 + 4;
                }, u4.prototype.writeUInt32BE = function(t2, e1, r3) {
                    return t2 = +t2, e1 |= 0, r3 || k(this, t2, e1, 4, 4294967295, 0), u4.TYPED_ARRAY_SUPPORT ? (this[e1] = t2 >>> 24, this[e1 + 1] = t2 >>> 16, this[e1 + 2] = t2 >>> 8, this[e1 + 3] = 255 & t2) : C(this, t2, e1, !1), e1 + 4;
                }, u4.prototype.writeIntLE = function(t2, e1, r3, n4) {
                    if (t2 = +t2, e1 |= 0, !n4) {
                        var o5 = Math.pow(2, 8 * r3 - 1);
                        k(this, t2, e1, r3, o5 - 1, -o5);
                    }
                    var i7 = 0, s6 = 1, a8 = 0;
                    for(this[e1] = 255 & t2; (++i7) < r3 && (s6 *= 256);)t2 < 0 && 0 === a8 && 0 !== this[e1 + i7 - 1] && (a8 = 1), this[e1 + i7] = (t2 / s6 >> 0) - a8 & 255;
                    return e1 + r3;
                }, u4.prototype.writeIntBE = function(t2, e1, r3, n4) {
                    if (t2 = +t2, e1 |= 0, !n4) {
                        var o6 = Math.pow(2, 8 * r3 - 1);
                        k(this, t2, e1, r3, o6 - 1, -o6);
                    }
                    var i7 = r3 - 1, s6 = 1, a8 = 0;
                    for(this[e1 + i7] = 255 & t2; (--i7) >= 0 && (s6 *= 256);)t2 < 0 && 0 === a8 && 0 !== this[e1 + i7 + 1] && (a8 = 1), this[e1 + i7] = (t2 / s6 >> 0) - a8 & 255;
                    return e1 + r3;
                }, u4.prototype.writeInt8 = function(t2, e1, r3) {
                    return t2 = +t2, e1 |= 0, r3 || k(this, t2, e1, 1, 127, -128), u4.TYPED_ARRAY_SUPPORT || (t2 = Math.floor(t2)), t2 < 0 && (t2 = 255 + t2 + 1), this[e1] = 255 & t2, e1 + 1;
                }, u4.prototype.writeInt16LE = function(t2, e1, r3) {
                    return t2 = +t2, e1 |= 0, r3 || k(this, t2, e1, 2, 32767, -32768), u4.TYPED_ARRAY_SUPPORT ? (this[e1] = 255 & t2, this[e1 + 1] = t2 >>> 8) : B(this, t2, e1, !0), e1 + 2;
                }, u4.prototype.writeInt16BE = function(t2, e1, r3) {
                    return t2 = +t2, e1 |= 0, r3 || k(this, t2, e1, 2, 32767, -32768), u4.TYPED_ARRAY_SUPPORT ? (this[e1] = t2 >>> 8, this[e1 + 1] = 255 & t2) : B(this, t2, e1, !1), e1 + 2;
                }, u4.prototype.writeInt32LE = function(t2, e1, r3) {
                    return t2 = +t2, e1 |= 0, r3 || k(this, t2, e1, 4, 2147483647, -2147483648), u4.TYPED_ARRAY_SUPPORT ? (this[e1] = 255 & t2, this[e1 + 1] = t2 >>> 8, this[e1 + 2] = t2 >>> 16, this[e1 + 3] = t2 >>> 24) : C(this, t2, e1, !0), e1 + 4;
                }, u4.prototype.writeInt32BE = function(t2, e1, r3) {
                    return t2 = +t2, e1 |= 0, r3 || k(this, t2, e1, 4, 2147483647, -2147483648), t2 < 0 && (t2 = 4294967295 + t2 + 1), u4.TYPED_ARRAY_SUPPORT ? (this[e1] = t2 >>> 24, this[e1 + 1] = t2 >>> 16, this[e1 + 2] = t2 >>> 8, this[e1 + 3] = 255 & t2) : C(this, t2, e1, !1), e1 + 4;
                }, u4.prototype.writeFloatLE = function(t2, e1, r3) {
                    return D(this, t2, e1, !0, r3);
                }, u4.prototype.writeFloatBE = function(t2, e1, r3) {
                    return D(this, t2, e1, !1, r3);
                }, u4.prototype.writeDoubleLE = function(t2, e1, r3) {
                    return M(this, t2, e1, !0, r3);
                }, u4.prototype.writeDoubleBE = function(t2, e1, r3) {
                    return M(this, t2, e1, !1, r3);
                }, u4.prototype.copy = function(t2, e1, r3, n4) {
                    if (r3 || (r3 = 0), n4 || 0 === n4 || (n4 = this.length), e1 >= t2.length && (e1 = t2.length), e1 || (e1 = 0), n4 > 0 && n4 < r3 && (n4 = r3), n4 === r3) return 0;
                    if (0 === t2.length || 0 === this.length) return 0;
                    if (e1 < 0) throw new RangeError("targetStart out of bounds");
                    if (r3 < 0 || r3 >= this.length) throw new RangeError("sourceStart out of bounds");
                    if (n4 < 0) throw new RangeError("sourceEnd out of bounds");
                    n4 > this.length && (n4 = this.length), t2.length - e1 < n4 - r3 && (n4 = t2.length - e1 + r3);
                    var o7, i7 = n4 - r3;
                    if (this === t2 && r3 < e1 && e1 < n4) for(o7 = i7 - 1; o7 >= 0; --o7)t2[o7 + e1] = this[o7 + r3];
                    else if (i7 < 1000 || !u4.TYPED_ARRAY_SUPPORT) for(o7 = 0; o7 < i7; ++o7)t2[o7 + e1] = this[o7 + r3];
                    else Uint8Array.prototype.set.call(t2, this.subarray(r3, r3 + i7), e1);
                    return i7;
                }, u4.prototype.fill = function(t2, e1, r3, n4) {
                    if ("string" == typeof t2) {
                        if ("string" == typeof e1 ? (n4 = e1, e1 = 0, r3 = this.length) : "string" == typeof r3 && (n4 = r3, r3 = this.length), 1 === t2.length) {
                            var o7 = t2.charCodeAt(0);
                            o7 < 256 && (t2 = o7);
                        }
                        if ((void 0) !== n4 && "string" != typeof n4) throw new TypeError("encoding must be a string");
                        if ("string" == typeof n4 && !u4.isEncoding(n4)) throw new TypeError("Unknown encoding: " + n4);
                    } else "number" == typeof t2 && (t2 &= 255);
                    if (e1 < 0 || this.length < e1 || this.length < r3) throw new RangeError("Out of range index");
                    if (r3 <= e1) return this;
                    var i7;
                    if (e1 >>>= 0, r3 = (void 0) === r3 ? this.length : r3 >>> 0, t2 || (t2 = 0), "number" == typeof t2) for(i7 = e1; i7 < r3; ++i7)this[i7] = t2;
                    else {
                        var s6 = u4.isBuffer(t2) ? t2 : L(new u4(t2, n4).toString()), a8 = s6.length;
                        for(i7 = 0; i7 < r3 - e1; ++i7)this[i7 + e1] = s6[i7 % a8];
                    }
                    return this;
                };
                var I = /[^+\/0-9A-Za-z-_]/g;
                function F(t2) {
                    return t2 < 16 ? "0" + t2.toString(16) : t2.toString(16);
                }
                function L(t2, e1) {
                    var r3;
                    e1 = e1 || 1 / 0;
                    for(var n4 = t2.length, o8 = null, i7 = [], s7 = 0; s7 < n4; ++s7){
                        if ((r3 = t2.charCodeAt(s7)) > 55295 && r3 < 57344) {
                            if (!o8) {
                                if (r3 > 56319) {
                                    (e1 -= 3) > -1 && i7.push(239, 191, 189);
                                    continue;
                                }
                                if (s7 + 1 === n4) {
                                    (e1 -= 3) > -1 && i7.push(239, 191, 189);
                                    continue;
                                }
                                o8 = r3;
                                continue;
                            }
                            if (r3 < 56320) {
                                (e1 -= 3) > -1 && i7.push(239, 191, 189), o8 = r3;
                                continue;
                            }
                            r3 = 65536 + (o8 - 55296 << 10 | r3 - 56320);
                        } else o8 && (e1 -= 3) > -1 && i7.push(239, 191, 189);
                        if (o8 = null, r3 < 128) {
                            if ((e1 -= 1) < 0) break;
                            i7.push(r3);
                        } else if (r3 < 2048) {
                            if ((e1 -= 2) < 0) break;
                            i7.push(r3 >> 6 | 192, 63 & r3 | 128);
                        } else if (r3 < 65536) {
                            if ((e1 -= 3) < 0) break;
                            i7.push(r3 >> 12 | 224, r3 >> 6 & 63 | 128, 63 & r3 | 128);
                        } else {
                            if (!(r3 < 1114112)) throw new Error("Invalid code point");
                            if ((e1 -= 4) < 0) break;
                            i7.push(r3 >> 18 | 240, r3 >> 12 & 63 | 128, r3 >> 6 & 63 | 128, 63 & r3 | 128);
                        }
                    }
                    return i7;
                }
                function U(t2) {
                    return n3.toByteArray(function(t3) {
                        if ((t3 = (function(t4) {
                            return t4.trim ? t4.trim() : t4.replace(/^\s+|\s+$/g, "");
                        })(t3).replace(I, "")).length < 2) return "";
                        for(; t3.length % 4 != 0;)t3 += "=";
                        return t3;
                    }(t2));
                }
                function V(t2, e1, r3, n4) {
                    for(var o8 = 0; o8 < n4 && !(o8 + r3 >= e1.length || o8 >= t2.length); ++o8)e1[o8 + r3] = t2[o8];
                    return o8;
                }
            }).call(this, r2(9));
        },
        function(t, e, r2) {
            "use strict";
            /*!
 * Simplified lodash.get to work around the annoying null quirk. See:
 * https://github.com/lodash/lodash/issues/3659
 */ function n3(t1, e1) {
                var r3 = "undefined" != typeof Symbol && t1[Symbol.iterator] || t1["@@iterator"];
                if (!r3) {
                    if (Array.isArray(t1) || (r3 = (function(t2, e2) {
                        if (!t2) return;
                        if ("string" == typeof t2) return o3(t2, e2);
                        var r5 = Object.prototype.toString.call(t2).slice(8, -1);
                        "Object" === r5 && t2.constructor && (r5 = t2.constructor.name);
                        if ("Map" === r5 || "Set" === r5) return Array.from(t2);
                        if ("Arguments" === r5 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5)) return o3(t2, e2);
                    })(t1)) || e1 && t1 && "number" == typeof t1.length) {
                        r3 && (t1 = r3);
                        var n4 = 0, i4 = function() {
                        };
                        return {
                            s: i4,
                            n: function() {
                                return n4 >= t1.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t1[n4++]
                                };
                            },
                            e: function(t2) {
                                throw t2;
                            },
                            f: i4
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s3, a5 = !0, u4 = !1;
                return {
                    s: function() {
                        r3 = r3.call(t1);
                    },
                    n: function() {
                        var t2 = r3.next();
                        return a5 = t2.done, t2;
                    },
                    e: function(t2) {
                        u4 = !0, s3 = t2;
                    },
                    f: function() {
                        try {
                            a5 || null == r3.return || r3.return();
                        } finally{
                            if (u4) throw s3;
                        }
                    }
                };
            }
            function o3(t1, e1) {
                (null == e1 || e1 > t1.length) && (e1 = t1.length);
                for(var r3 = 0, n5 = new Array(e1); r3 < e1; r3++)n5[r3] = t1[r3];
                return n5;
            }
            function i7(t1, e1) {
                return null == t1 ? t1 : t1 instanceof Map ? t1.get(e1) : t1[e1];
            }
            t.exports = function(t1, e1, r3) {
                var o8, s3 = !1;
                if ("string" == typeof e1) {
                    if (-1 === e1.indexOf(".")) {
                        var a5 = i7(t1, e1);
                        return null == a5 ? r3 : a5;
                    }
                    o8 = e1.split(".");
                } else if (s3 = !0, 1 === (o8 = e1).length) {
                    var u4 = i7(t1, o8[0]);
                    return null == u4 ? r3 : u4;
                }
                var c3, l2 = e1, f3 = t1, p2 = n3(o8);
                try {
                    for(p2.s(); !(c3 = p2.n()).done;){
                        var h = c3.value;
                        if (null == f3) return r3;
                        if (!s3 && null != f3[l2]) return f3[l2];
                        f3 = i7(f3, h), s3 || (l2 = l2.substr(h.length + 1));
                    }
                } catch (t2) {
                    p2.e(t2);
                } finally{
                    p2.f();
                }
                return null == f3 ? r3 : f3;
            };
        },
        function(t, e, r2) {
            (function(t1) {
                function n3(t2) {
                    return (n3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t3) {
                        return typeof t3;
                    } : function(t3) {
                        return t3 && "function" == typeof Symbol && t3.constructor === Symbol && t3 !== Symbol.prototype ? "symbol" : typeof t3;
                    })(t2);
                }
                var o3 = Object.getOwnPropertyDescriptors || function(t2) {
                    for(var e1 = Object.keys(t2), r3 = {
                    }, n5 = 0; n5 < e1.length; n5++)r3[e1[n5]] = Object.getOwnPropertyDescriptor(t2, e1[n5]);
                    return r3;
                }, i7 = /%[sdj%]/g;
                e.format = function(t2) {
                    if (!m(t2)) {
                        for(var e1 = [], r3 = 0; r3 < arguments.length; r3++)e1.push(u6(arguments[r3]));
                        return e1.join(" ");
                    }
                    r3 = 1;
                    for(var n5 = arguments, o8 = n5.length, s3 = String(t2).replace(i7, function(t3) {
                        if ("%%" === t3) return "%";
                        if (r3 >= o8) return t3;
                        switch(t3){
                            case "%s":
                                return String(n5[r3++]);
                            case "%d":
                                return Number(n5[r3++]);
                            case "%j":
                                try {
                                    return JSON.stringify(n5[r3++]);
                                } catch (t4) {
                                    return "[Circular]";
                                }
                            default:
                                return t3;
                        }
                    }), a9 = n5[r3]; r3 < o8; a9 = n5[++r3])_(a9) || !w(a9) ? s3 += " " + a9 : s3 += " " + u6(a9);
                    return s3;
                }, e.deprecate = function(r5, n5) {
                    if ((void 0) !== t1 && !0 === t1.noDeprecation) return r5;
                    if ((void 0) === t1) return function() {
                        return e.deprecate(r5, n5).apply(this, arguments);
                    };
                    var o8 = !1;
                    return function() {
                        if (!o8) {
                            if (t1.throwDeprecation) throw new Error(n5);
                            t1.traceDeprecation ? console.trace(n5) : console.error(n5), o8 = !0;
                        }
                        return r5.apply(this, arguments);
                    };
                };
                var s3, a9 = {
                };
                function u6(t2, r5) {
                    var n5 = {
                        seen: [],
                        stylize: l2
                    };
                    return arguments.length >= 3 && (n5.depth = arguments[2]), arguments.length >= 4 && (n5.colors = arguments[3]), d(r5) ? n5.showHidden = r5 : r5 && e._extend(n5, r5), g(n5.showHidden) && (n5.showHidden = !1), g(n5.depth) && (n5.depth = 2), g(n5.colors) && (n5.colors = !1), g(n5.customInspect) && (n5.customInspect = !0), n5.colors && (n5.stylize = c3), f3(n5, t2, n5.depth);
                }
                function c3(t2, e2) {
                    var r5 = u6.styles[e2];
                    return r5 ? "[" + u6.colors[r5][0] + "m" + t2 + "[" + u6.colors[r5][1] + "m" : t2;
                }
                function l2(t2, e2) {
                    return t2;
                }
                function f3(t2, r5, n5) {
                    if (t2.customInspect && r5 && A(r5.inspect) && r5.inspect !== e.inspect && (!r5.constructor || r5.constructor.prototype !== r5)) {
                        var o8 = r5.inspect(n5, t2);
                        return m(o8) || (o8 = f3(t2, o8, n5)), o8;
                    }
                    var i8 = function(t3, e2) {
                        if (g(e2)) return t3.stylize("undefined", "undefined");
                        if (m(e2)) {
                            var r6 = "'" + JSON.stringify(e2).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
                            return t3.stylize(r6, "string");
                        }
                        if (v(e2)) return t3.stylize("" + e2, "number");
                        if (d(e2)) return t3.stylize("" + e2, "boolean");
                        if (_(e2)) return t3.stylize("null", "null");
                    }(t2, r5);
                    if (i8) return i8;
                    var s7 = Object.keys(r5), a10 = function(t3) {
                        var e2 = {
                        };
                        return t3.forEach(function(t4, r7) {
                            e2[t4] = !0;
                        }), e2;
                    }(s7);
                    if (t2.showHidden && (s7 = Object.getOwnPropertyNames(r5)), S(r5) && (s7.indexOf("message") >= 0 || s7.indexOf("description") >= 0)) return p2(r5);
                    if (0 === s7.length) {
                        if (A(r5)) {
                            var u7 = r5.name ? ": " + r5.name : "";
                            return t2.stylize("[Function" + u7 + "]", "special");
                        }
                        if (b(r5)) return t2.stylize(RegExp.prototype.toString.call(r5), "regexp");
                        if (O(r5)) return t2.stylize(Date.prototype.toString.call(r5), "date");
                        if (S(r5)) return p2(r5);
                    }
                    var c5, l5 = "", w = !1, $ = [
                        "{",
                        "}"
                    ];
                    (y2(r5) && (w = !0, $ = [
                        "[",
                        "]"
                    ]), A(r5)) && (l5 = " [Function" + (r5.name ? ": " + r5.name : "") + "]");
                    return b(r5) && (l5 = " " + RegExp.prototype.toString.call(r5)), O(r5) && (l5 = " " + Date.prototype.toUTCString.call(r5)), S(r5) && (l5 = " " + p2(r5)), 0 !== s7.length || w && 0 != r5.length ? n5 < 0 ? b(r5) ? t2.stylize(RegExp.prototype.toString.call(r5), "regexp") : t2.stylize("[Object]", "special") : (t2.seen.push(r5), c5 = w ? (function(t3, e2, r7, n6, o9) {
                        for(var i9 = [], s8 = 0, a11 = e2.length; s8 < a11; ++s8)x(e2, String(s8)) ? i9.push(h(t3, e2, r7, n6, String(s8), !0)) : i9.push("");
                        return o9.forEach(function(o10) {
                            o10.match(/^\d+$/) || i9.push(h(t3, e2, r7, n6, o10, !0));
                        }), i9;
                    })(t2, r5, n5, a10, s7) : s7.map(function(e2) {
                        return h(t2, r5, n5, a10, e2, w);
                    }), t2.seen.pop(), (function(t3, e2, r7) {
                        if (t3.reduce(function(t4, e3) {
                            return e3.indexOf("\n"), t4 + e3.replace(/\u001b\[\d\d?m/g, "").length + 1;
                        }, 0) > 60) return r7[0] + ("" === e2 ? "" : e2 + "\n ") + " " + t3.join(",\n  ") + " " + r7[1];
                        return r7[0] + e2 + " " + t3.join(", ") + " " + r7[1];
                    })(c5, l5, $)) : $[0] + l5 + $[1];
                }
                function p2(t2) {
                    return "[" + Error.prototype.toString.call(t2) + "]";
                }
                function h(t2, e2, r5, n5, o9, i8) {
                    var s7, a10, u8;
                    if ((u8 = Object.getOwnPropertyDescriptor(e2, o9) || {
                        value: e2[o9]
                    }).get ? a10 = u8.set ? t2.stylize("[Getter/Setter]", "special") : t2.stylize("[Getter]", "special") : u8.set && (a10 = t2.stylize("[Setter]", "special")), x(n5, o9) || (s7 = "[" + o9 + "]"), a10 || (t2.seen.indexOf(u8.value) < 0 ? (a10 = _(r5) ? f3(t2, u8.value, null) : f3(t2, u8.value, r5 - 1)).indexOf("\n") > -1 && (a10 = i8 ? a10.split("\n").map(function(t3) {
                        return "  " + t3;
                    }).join("\n").substr(2) : "\n" + a10.split("\n").map(function(t3) {
                        return "   " + t3;
                    }).join("\n")) : a10 = t2.stylize("[Circular]", "special")), g(s7)) {
                        if (i8 && o9.match(/^\d+$/)) return a10;
                        (s7 = JSON.stringify("" + o9)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (s7 = s7.substr(1, s7.length - 2), s7 = t2.stylize(s7, "name")) : (s7 = s7.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), s7 = t2.stylize(s7, "string"));
                    }
                    return s7 + ": " + a10;
                }
                function y2(t2) {
                    return Array.isArray(t2);
                }
                function d(t2) {
                    return "boolean" == typeof t2;
                }
                function _(t2) {
                    return null === t2;
                }
                function v(t2) {
                    return "number" == typeof t2;
                }
                function m(t2) {
                    return "string" == typeof t2;
                }
                function g(t2) {
                    return (void 0) === t2;
                }
                function b(t2) {
                    return w(t2) && "[object RegExp]" === $(t2);
                }
                function w(t2) {
                    return "object" === n3(t2) && null !== t2;
                }
                function O(t2) {
                    return w(t2) && "[object Date]" === $(t2);
                }
                function S(t2) {
                    return w(t2) && ("[object Error]" === $(t2) || t2 instanceof Error);
                }
                function A(t2) {
                    return "function" == typeof t2;
                }
                function $(t2) {
                    return Object.prototype.toString.call(t2);
                }
                function E(t2) {
                    return t2 < 10 ? "0" + t2.toString(10) : t2.toString(10);
                }
                e.debuglog = function(r5) {
                    if (g(s3) && (s3 = t1.env.NODE_DEBUG || ""), r5 = r5.toUpperCase(), !a9[r5]) {
                        if (new RegExp("\\b" + r5 + "\\b", "i").test(s3)) {
                            var n5 = t1.pid;
                            a9[r5] = function() {
                                var t2 = e.format.apply(e, arguments);
                                console.error("%s %d: %s", r5, n5, t2);
                            };
                        } else a9[r5] = function() {
                        };
                    }
                    return a9[r5];
                }, e.inspect = u6, u6.colors = {
                    bold: [
                        1,
                        22
                    ],
                    italic: [
                        3,
                        23
                    ],
                    underline: [
                        4,
                        24
                    ],
                    inverse: [
                        7,
                        27
                    ],
                    white: [
                        37,
                        39
                    ],
                    grey: [
                        90,
                        39
                    ],
                    black: [
                        30,
                        39
                    ],
                    blue: [
                        34,
                        39
                    ],
                    cyan: [
                        36,
                        39
                    ],
                    green: [
                        32,
                        39
                    ],
                    magenta: [
                        35,
                        39
                    ],
                    red: [
                        31,
                        39
                    ],
                    yellow: [
                        33,
                        39
                    ]
                }, u6.styles = {
                    special: "cyan",
                    number: "yellow",
                    boolean: "yellow",
                    undefined: "grey",
                    null: "bold",
                    string: "green",
                    date: "magenta",
                    regexp: "red"
                }, e.isArray = y2, e.isBoolean = d, e.isNull = _, e.isNullOrUndefined = function(t2) {
                    return null == t2;
                }, e.isNumber = v, e.isString = m, e.isSymbol = function(t2) {
                    return "symbol" === n3(t2);
                }, e.isUndefined = g, e.isRegExp = b, e.isObject = w, e.isDate = O, e.isError = S, e.isFunction = A, e.isPrimitive = function(t2) {
                    return null === t2 || "boolean" == typeof t2 || "number" == typeof t2 || "string" == typeof t2 || "symbol" === n3(t2) || (void 0) === t2;
                }, e.isBuffer = r2(103);
                var j = [
                    "Jan",
                    "Feb",
                    "Mar",
                    "Apr",
                    "May",
                    "Jun",
                    "Jul",
                    "Aug",
                    "Sep",
                    "Oct",
                    "Nov",
                    "Dec"
                ];
                function P() {
                    var t2 = new Date, e2 = [
                        E(t2.getHours()),
                        E(t2.getMinutes()),
                        E(t2.getSeconds())
                    ].join(":");
                    return [
                        t2.getDate(),
                        j[t2.getMonth()],
                        e2
                    ].join(" ");
                }
                function x(t2, e2) {
                    return Object.prototype.hasOwnProperty.call(t2, e2);
                }
                e.log = function() {
                    console.log("%s - %s", P(), e.format.apply(e, arguments));
                }, e.inherits = r2(104), e._extend = function(t2, e2) {
                    if (!e2 || !w(e2)) return t2;
                    for(var r5 = Object.keys(e2), n6 = r5.length; n6--;)t2[r5[n6]] = e2[r5[n6]];
                    return t2;
                };
                var T = "undefined" != typeof Symbol ? Symbol("util.promisify.custom") : void 0;
                function N(t2, e2) {
                    if (!t2) {
                        var r5 = new Error("Promise was rejected with a falsy value");
                        r5.reason = t2, t2 = r5;
                    }
                    return e2(t2);
                }
                e.promisify = function(t2) {
                    if ("function" != typeof t2) throw new TypeError('The "original" argument must be of type Function');
                    if (T && t2[T]) {
                        var e2;
                        if ("function" != typeof (e2 = t2[T])) throw new TypeError('The "util.promisify.custom" argument must be of type Function');
                        return Object.defineProperty(e2, T, {
                            value: e2,
                            enumerable: !1,
                            writable: !1,
                            configurable: !0
                        }), e2;
                    }
                    function e2() {
                        for(var e3, r7, n6 = new Promise(function(t3, n7) {
                            e3 = t3, r7 = n7;
                        }), o9 = [], i8 = 0; i8 < arguments.length; i8++)o9.push(arguments[i8]);
                        o9.push(function(t3, n7) {
                            t3 ? r7(t3) : e3(n7);
                        });
                        try {
                            t2.apply(this, o9);
                        } catch (t3) {
                            r7(t3);
                        }
                        return n6;
                    }
                    return Object.setPrototypeOf(e2, Object.getPrototypeOf(t2)), T && Object.defineProperty(e2, T, {
                        value: e2,
                        enumerable: !1,
                        writable: !1,
                        configurable: !0
                    }), Object.defineProperties(e2, o3(t2));
                }, e.promisify.custom = T, e.callbackify = function(e3) {
                    if ("function" != typeof e3) throw new TypeError('The "original" argument must be of type Function');
                    function r7() {
                        for(var r8 = [], n6 = 0; n6 < arguments.length; n6++)r8.push(arguments[n6]);
                        var o9 = r8.pop();
                        if ("function" != typeof o9) throw new TypeError("The last argument must be of type Function");
                        var i8 = this, s7 = function() {
                            return o9.apply(i8, arguments);
                        };
                        e3.apply(this, r8).then(function(e4) {
                            t1.nextTick(s7, null, e4);
                        }, function(e4) {
                            t1.nextTick(N, e4, s7);
                        });
                    }
                    return Object.setPrototypeOf(r7, Object.getPrototypeOf(e3)), Object.defineProperties(r7, o3(e3)), r7;
                };
            }).call(this, r2(11));
        },
        function(t, e3, r2) {
            "use strict";
            var n3 = r2(14);
            /*!
 * Module exports.
 */ t.exports = n3, n3.messages = r2(130), n3.Messages = n3.messages, n3.DocumentNotFoundError = r2(131), n3.CastError = r2(13), n3.ValidationError = r2(33), n3.ValidatorError = r2(73), n3.VersionError = r2(132), n3.ParallelSaveError = r2(133), n3.OverwriteModelError = r2(134), n3.MissingSchemaError = r2(135), n3.DivergentArrayError = r2(136), n3.StrictModeError = r2(34);
        },
        function(t, e3, r2) {
            "use strict";
            (function(n3) {
                /*!
 * Module dependencies.
 */ function o3(t1) {
                    return (o3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t2) {
                        return typeof t2;
                    } : function(t2) {
                        return t2 && "function" == typeof Symbol && t2.constructor === Symbol && t2 !== Symbol.prototype ? "symbol" : typeof t2;
                    })(t1);
                }
                var i7 = r2(5), s3 = r2(7), a9 = r2(52), u6 = r2(74), c3 = r2(3), l2 = r2(137), f3 = r2(22), p2 = r2(0).schemaTypeSymbol, h = r2(4), y2 = r2(1), d = r2(0).validatorErrorSymbol, _ = r2(0).documentIsModified, v = r2(0).populateModelSymbol, m = i7.CastError, g = i7.ValidatorError;
                function b(t1, e4, r7) {
                    this[p2] = !0, this.path = t1, this.instance = r7, this.validators = [], this.getters = this.constructor.hasOwnProperty("getters") ? this.constructor.getters.slice() : [], this.setters = [], this.splitPath(), e4 = e4 || {
                    };
                    for(var n6 = this.constructor.defaultOptions || {
                    }, i8 = 0, a10 = Object.keys(n6); i8 < a10.length; i8++){
                        var u8 = a10[i8];
                        n6.hasOwnProperty(u8) && !e4.hasOwnProperty(u8) && (e4[u8] = n6[u8]);
                    }
                    null == e4.select && delete e4.select;
                    var c5 = this.OptionsConstructor || s3;
                    this.options = new c5(e4), this._index = null, y2.hasUserDefinedProperty(this.options, "immutable") && (this.$immutable = this.options.immutable, l2(this));
                    for(var f6 = 0, h1 = Object.keys(this.options); f6 < h1.length; f6++){
                        var d1 = h1[f6];
                        if ("cast" !== d1) {
                            if (y2.hasUserDefinedProperty(this.options, d1) && "function" == typeof this[d1]) {
                                if ("index" === d1 && this._index) {
                                    if (!1 === e4.index) {
                                        var _1 = this._index;
                                        if ("object" === o3(_1) && null != _1) {
                                            if (_1.unique) throw new Error('Path "' + this.path + '" may not have `index` set to false and `unique` set to true');
                                            if (_1.sparse) throw new Error('Path "' + this.path + '" may not have `index` set to false and `sparse` set to true');
                                        }
                                        this._index = !1;
                                    }
                                    continue;
                                }
                                var v1 = e4[d1];
                                if ("default" === d1) {
                                    this.default(v1);
                                    continue;
                                }
                                var m1 = Array.isArray(v1) ? v1 : [
                                    v1
                                ];
                                this[d1].apply(this, m1);
                            }
                        } else this.castFunction(this.options[d1]);
                    }
                    Object.defineProperty(this, "$$context", {
                        enumerable: !1,
                        configurable: !1,
                        writable: !0,
                        value: null
                    });
                }
                /*!
 * The class that Mongoose uses internally to instantiate this SchemaType's `options` property.
 */ b.prototype.OptionsConstructor = s3, /*!
 * ignore
 */ b.prototype.splitPath = function() {
                    return null != this._presplitPath ? this._presplitPath : null != this.path ? (this._presplitPath = -1 === this.path.indexOf(".") ? [
                        this.path
                    ] : this.path.split("."), this._presplitPath) : void 0;
                }, b.cast = function(t1) {
                    return 0 === arguments.length || (!1 === t1 && (t1 = function(t2) {
                        return t2;
                    }), this._cast = t1), this._cast;
                }, b.prototype.castFunction = function(t1) {
                    return 0 === arguments.length || (!1 === t1 && (t1 = this.constructor._defaultCaster || function(t2) {
                        return t2;
                    }), this._castFunction = t1), this._castFunction;
                }, b.prototype.cast = function() {
                    throw new Error("Base SchemaType class does not implement a `cast()` function");
                }, b.set = function(t1, e4) {
                    this.hasOwnProperty("defaultOptions") || (this.defaultOptions = Object.assign({
                    }, this.defaultOptions)), this.defaultOptions[t1] = e4;
                }, b.get = function(t1) {
                    this.getters = this.hasOwnProperty("getters") ? this.getters : [], this.getters.push(t1);
                }, b.prototype.default = function(t1) {
                    if (1 === arguments.length) {
                        if ((void 0) === t1) return void (this.defaultValue = void 0);
                        if (null != t1 && t1.instanceOfSchema) throw new i7("Cannot set default value of path `" + this.path + "` to a mongoose Schema instance.");
                        return this.defaultValue = t1, this.defaultValue;
                    }
                    return arguments.length > 1 && (this.defaultValue = y2.args(arguments)), this.defaultValue;
                }, b.prototype.index = function(t1) {
                    return this._index = t1, y2.expires(this._index), this;
                }, b.prototype.unique = function(t1) {
                    if (!1 === this._index) {
                        if (!t1) return;
                        throw new Error('Path "' + this.path + '" may not have `index` set to false and `unique` set to true');
                    }
                    return null == this._index || !0 === this._index ? this._index = {
                    } : "string" == typeof this._index && (this._index = {
                        type: this._index
                    }), this._index.unique = t1, this;
                }, b.prototype.text = function(t1) {
                    if (!1 === this._index) {
                        if (!t1) return;
                        throw new Error('Path "' + this.path + '" may not have `index` set to false and `text` set to true');
                    }
                    return null === this._index || (void 0) === this._index || "boolean" == typeof this._index ? this._index = {
                    } : "string" == typeof this._index && (this._index = {
                        type: this._index
                    }), this._index.text = t1, this;
                }, b.prototype.sparse = function(t1) {
                    if (!1 === this._index) {
                        if (!t1) return;
                        throw new Error('Path "' + this.path + '" may not have `index` set to false and `sparse` set to true');
                    }
                    return null == this._index || "boolean" == typeof this._index ? this._index = {
                    } : "string" == typeof this._index && (this._index = {
                        type: this._index
                    }), this._index.sparse = t1, this;
                }, b.prototype.immutable = function(t1) {
                    return this.$immutable = t1, l2(this), this;
                }, b.prototype.transform = function(t1) {
                    return this.options.transform = t1, this;
                }, b.prototype.set = function(t1) {
                    if ("function" != typeof t1) throw new TypeError("A setter must be a function.");
                    return this.setters.push(t1), this;
                }, b.prototype.get = function(t1) {
                    if ("function" != typeof t1) throw new TypeError("A getter must be a function.");
                    return this.getters.push(t1), this;
                }, b.prototype.validate = function(t1, e4, r7) {
                    var n6, s7, a10, u9;
                    if ("function" == typeof t1 || t1 && "RegExp" === y2.getFunctionName(t1.constructor)) return "function" == typeof e4 ? (n6 = {
                        validator: t1,
                        message: e4
                    }).type = r7 || "user defined" : e4 instanceof Object && !r7 ? ((n6 = y2.clone(e4)).message || (n6.message = n6.msg), n6.validator = t1, n6.type = n6.type || "user defined") : (null == e4 && (e4 = i7.messages.general.default), r7 || (r7 = "user defined"), n6 = {
                        message: e4,
                        type: r7,
                        validator: t1
                    }), n6.isAsync && w(), this.validators.push(n6), this;
                    for(s7 = 0, a10 = arguments.length; s7 < a10; s7++){
                        if (u9 = arguments[s7], !y2.isPOJO(u9)) {
                            var c5 = "Invalid validator. Received (" + o3(u9) + ") " + u9 + ". See http://mongoosejs.com/docs/api.html#schematype_SchemaType-validate";
                            throw new Error(c5);
                        }
                        this.validate(u9.validator, u9);
                    }
                    return this;
                };
                /*!
 * ignore
 */ var w = h.deprecate(function() {
                }, "Mongoose: the `isAsync` option for custom validators is deprecated. Make your async validators return a promise instead: https://mongoosejs.com/docs/validation.html#async-custom-validators");
                /*!
 * ignore
 */ function O(t1) {
                    return this.castForQuery(t1);
                }
                /*!
 * ignore
 */ /*!
 * Just like handleArray, except also allows `[]` because surprisingly
 * `$in: [1, []]` works fine
 */ function S(t1) {
                    var e4 = this;
                    return Array.isArray(t1) ? t1.map(function(t2) {
                        return Array.isArray(t2) && 0 === t2.length ? t2 : e4.castForQuery(t2);
                    }) : [
                        this.castForQuery(t1)
                    ];
                }
                /*!
 * ignore
 */ b.prototype.required = function(t1, e4) {
                    var r7 = {
                    };
                    if (arguments.length > 0 && null == t1) return this.validators = this.validators.filter(function(t2) {
                        return t2.validator !== this.requiredValidator;
                    }, this), this.isRequired = !1, delete this.originalRequiredValue, this;
                    if ("object" === o3(t1) && (e4 = (r7 = t1).message || e4, t1 = t1.isRequired), !1 === t1) return this.validators = this.validators.filter(function(t2) {
                        return t2.validator !== this.requiredValidator;
                    }, this), this.isRequired = !1, delete this.originalRequiredValue, this;
                    var n6 = this;
                    this.isRequired = !0, this.requiredValidator = function(e5) {
                        var r8 = c3(this, "$__.cachedRequired");
                        if (null != r8 && !this.$__isSelected(n6.path) && !this[_](n6.path)) return !0;
                        if (null != r8 && n6.path in r8) {
                            var o9 = !r8[n6.path] || n6.checkRequired(e5, this);
                            return delete r8[n6.path], o9;
                        }
                        return "function" == typeof t1 && !t1.apply(this) || n6.checkRequired(e5, this);
                    }, this.originalRequiredValue = t1, "string" == typeof t1 && (e4 = t1, t1 = void 0);
                    var s7 = e4 || i7.messages.general.required;
                    return this.validators.unshift(Object.assign({
                    }, r7, {
                        validator: this.requiredValidator,
                        message: s7,
                        type: "required"
                    })), this;
                }, b.prototype.ref = function(t1) {
                    return this.options.ref = t1, this;
                }, b.prototype.getDefault = function(t1, e4) {
                    var r7 = "function" == typeof this.defaultValue ? this.defaultValue.call(t1) : this.defaultValue;
                    if (null != r7) {
                        "object" !== o3(r7) || this.options && this.options.shared || (r7 = y2.clone(r7));
                        var n6 = this.applySetters(r7, t1, e4);
                        return n6 && n6.$isSingleNested && (n6.$__parent = t1), n6;
                    }
                    return r7;
                }, /*!
 * Applies setters without casting
 *
 * @api private
 */ b.prototype._applySetters = function(t1, e4, r7) {
                    var n7 = t1;
                    if (r7) return n7;
                    for(var o10 = this.setters, i8 = o10.length - 1; i8 >= 0; i8--)n7 = o10[i8].call(e4, n7, this);
                    return n7;
                }, /*!
 * ignore
 */ b.prototype._castNullish = function(t1) {
                    return t1;
                }, b.prototype.applySetters = function(t1, e4, r7, n7, o10) {
                    var i8 = this._applySetters(t1, e4, r7, n7, o10);
                    return null == i8 ? this._castNullish(i8) : i8 = this.cast(i8, e4, r7, n7, o10);
                }, b.prototype.applyGetters = function(t1, e4) {
                    var r7 = t1, n7 = this.getters, o10 = n7.length;
                    if (0 === o10) return r7;
                    for(var i8 = 0; i8 < o10; ++i8)r7 = n7[i8].call(e4, r7, this);
                    return r7;
                }, b.prototype.select = function(t1) {
                    return this.selected = !!t1, this;
                }, b.prototype.doValidate = function(t1, e4, r7, n7) {
                    var i8 = !1, s7 = this.path, a10 = this.validators.filter(function(t2) {
                        return null != t2 && "object" === o3(t2);
                    }), u9 = a10.length;
                    if (!u9) return e4(null);
                    var c6 = this;
                    function l5(t2, r8) {
                        if (!i8) {
                            if ((void 0) === t2 || t2) (--u9) <= 0 && f3(function() {
                                e4(null);
                            });
                            else {
                                var n8 = r8.ErrorConstructor || g;
                                (i8 = new n8(r8))[d] = !0, f3(function() {
                                    e4(i8);
                                });
                            }
                        }
                    }
                    a10.forEach(function(e5) {
                        if (!i8) {
                            var o10, a11 = e5.validator, u10 = y2.clone(e5);
                            if (u10.path = n7 && n7.path ? n7.path : s7, u10.value = t1, a11 instanceof RegExp) l5(a11.test(t1), u10);
                            else if ("function" == typeof a11) {
                                if ((void 0) !== t1 || a11 === c6.requiredValidator) {
                                    if (u10.isAsync) !/*!
 * Handle async validators
 */ function(t2, e6, r8, n9, o11) {
                                        var i9 = !1, s8 = t2.call(e6, r8, function(t3, e7) {
                                            i9 || (i9 = !0, e7 && (n9.message = e7), o11(t3, n9));
                                        });
                                        "boolean" == typeof s8 ? (i9 = !0, o11(s8, n9)) : s8 && "function" == typeof s8.then && s8.then(function(t3) {
                                            i9 || (i9 = !0, o11(t3, n9));
                                        }, function(t3) {
                                            i9 || (i9 = !0, n9.reason = t3, n9.message = t3.message, o11(!1, n9));
                                        });
                                    }(a11, r7, t1, u10, l5);
                                    else {
                                        try {
                                            o10 = u10.propsParameter ? a11.call(r7, t1, u10) : a11.call(r7, t1);
                                        } catch (t2) {
                                            o10 = !1, u10.reason = t2, t2.message && (u10.message = t2.message);
                                        }
                                        null != o10 && "function" == typeof o10.then ? o10.then(function(t2) {
                                            l5(t2, u10);
                                        }, function(t2) {
                                            u10.reason = t2, u10.message = t2.message, l5(o10 = !1, u10);
                                        }) : l5(o10, u10);
                                    }
                                } else l5(!0, u10);
                            }
                        }
                    });
                }, b.prototype.doValidateSync = function(t1, e4, r7) {
                    var n7 = this.path;
                    if (!this.validators.length) return null;
                    var i8 = this.validators;
                    if ((void 0) === t1) {
                        if (!(this.validators.length > 0 && "required" === this.validators[0].type)) return null;
                        i8 = [
                            this.validators[0]
                        ];
                    }
                    var s7 = null;
                    function a10(t2, e5) {
                        if (!s7 && (void 0) !== t2 && !t2) {
                            var r8 = e5.ErrorConstructor || g;
                            (s7 = new r8(e5))[d] = !0;
                        }
                    }
                    return i8.forEach(function(i9) {
                        if (!s7 && null != i9 && "object" === o3(i9)) {
                            var u9, c6 = i9.validator, l5 = y2.clone(i9);
                            if (l5.path = r7 && r7.path ? r7.path : n7, l5.value = t1, !c6.isAsync) {
                                if (c6 instanceof RegExp) a10(c6.test(t1), l5);
                                else if ("function" == typeof c6) {
                                    try {
                                        u9 = l5.propsParameter ? c6.call(e4, t1, l5) : c6.call(e4, t1);
                                    } catch (t2) {
                                        u9 = !1, l5.reason = t2;
                                    }
                                    null != u9 && "function" == typeof u9.then || a10(u9, l5);
                                }
                            }
                        }
                    }), s7;
                }, b._isRef = function(t1, e4, r7, o11) {
                    var i8 = o11 && t1.options && (t1.options.ref || t1.options.refPath);
                    if (!i8 && r7 && null != r7.$__) {
                        var s7 = r7.$__fullPath(t1.path);
                        i8 = (r7.ownerDocument ? r7.ownerDocument() : r7).populated(s7) || r7.populated(t1.path);
                    }
                    return !!i8 && (null == e4 || !(n3.isBuffer(e4) || "Binary" === e4._bsontype || !y2.isObject(e4)) || o11);
                }, /*!
 * ignore
 */ b.prototype._castRef = function(t1, e4, r7) {
                    if (null == t1) return t1;
                    if (null != t1.$__) return t1.$__.wasPopulated = !0, t1;
                    if (n3.isBuffer(t1) || !y2.isObject(t1)) {
                        if (r7) return t1;
                        throw new m(this.instance, t1, this.path, null, this);
                    }
                    var o11 = e4.$__fullPath(this.path), i8 = (e4.ownerDocument ? e4.ownerDocument() : e4).populated(o11, !0), s8 = t1;
                    return e4.$__.populated && e4.$__.populated[o11] && e4.$__.populated[o11].options && e4.$__.populated[o11].options.options && e4.$__.populated[o11].options.options.lean || ((s8 = new i8.options[v](t1)).$__.wasPopulated = !0), s8;
                }, b.prototype.$conditionalHandlers = {
                    $all: function(t1) {
                        var e4 = this;
                        return Array.isArray(t1) ? t1.map(function(t2) {
                            return e4.castForQuery(t2);
                        }) : [
                            this.castForQuery(t1)
                        ];
                    },
                    $eq: O,
                    $in: S,
                    $ne: O,
                    $nin: S,
                    $exists: a9,
                    $type: u6
                }, /*!
 * Wraps `castForQuery` to handle context
 */ b.prototype.castForQueryWrapper = function(t1) {
                    if (this.$$context = t1.context, "$conditional" in t1) {
                        var e4 = this.castForQuery(t1.$conditional, t1.val);
                        return this.$$context = null, e4;
                    }
                    if (t1.$skipQueryCastForUpdate || t1.$applySetters) {
                        var r7 = this._castForQuery(t1.val);
                        return this.$$context = null, r7;
                    }
                    var n7 = this.castForQuery(t1.val);
                    return this.$$context = null, n7;
                }, b.prototype.castForQuery = function(t1, e5) {
                    var r9;
                    if (2 === arguments.length) {
                        if (!(r9 = this.$conditionalHandlers[t1])) throw new Error("Can't use " + t1);
                        return r9.call(this, e5);
                    }
                    return e5 = t1, this._castForQuery(e5);
                }, /*!
 * Internal switch for runSetters
 *
 * @api private
 */ b.prototype._castForQuery = function(t1) {
                    return this.applySetters(t1, this.$$context);
                }, b.checkRequired = function(t1) {
                    return arguments.length > 0 && (this._checkRequired = t1), this._checkRequired;
                }, b.prototype.checkRequired = function(t1) {
                    return null != t1;
                }, /*!
 * ignore
 */ b.prototype.clone = function() {
                    var t1 = Object.assign({
                    }, this.options), e5 = new this.constructor(this.path, t1, this.instance);
                    return e5.validators = this.validators.slice(), (void 0) !== this.requiredValidator && (e5.requiredValidator = this.requiredValidator), (void 0) !== this.defaultValue && (e5.defaultValue = this.defaultValue), (void 0) !== this.$immutable && (void 0) === this.options.immutable && (e5.$immutable = this.$immutable, l2(e5)), (void 0) !== this._index && (e5._index = this._index), (void 0) !== this.selected && (e5.selected = this.selected), (void 0) !== this.isRequired && (e5.isRequired = this.isRequired), (void 0) !== this.originalRequiredValue && (e5.originalRequiredValue = this.originalRequiredValue), e5.getters = this.getters.slice(), e5.setters = this.setters.slice(), e5;
                }, /*!
 * Module exports.
 */ t.exports = e3 = b, e3.CastError = m, e3.ValidatorError = g;
            }).call(this, r2(2).Buffer);
        },
        function(t, e3, r2) {
            "use strict";
            var n3 = r2(26), o3 = function t1(e5) {
                if ((function(t2, e6) {
                    if (!(t2 instanceof e6)) throw new TypeError("Cannot call a class as a function");
                })(this, t1), null == e5) return this;
                Object.assign(this, n3(e5));
            }, i7 = r2(8);
            Object.defineProperty(o3.prototype, "type", i7), Object.defineProperty(o3.prototype, "validate", i7), Object.defineProperty(o3.prototype, "cast", i7), Object.defineProperty(o3.prototype, "required", i7), Object.defineProperty(o3.prototype, "default", i7), Object.defineProperty(o3.prototype, "ref", i7), Object.defineProperty(o3.prototype, "select", i7), Object.defineProperty(o3.prototype, "index", i7), Object.defineProperty(o3.prototype, "unique", i7), Object.defineProperty(o3.prototype, "immutable", i7), Object.defineProperty(o3.prototype, "sparse", i7), Object.defineProperty(o3.prototype, "text", i7), Object.defineProperty(o3.prototype, "transform", i7), t.exports = o3;
        },
        function(t, e3, r2) {
            "use strict";
            t.exports = Object.freeze({
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            });
        },
        function(t, e3) {
            function r2(t1) {
                return (r2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t2) {
                    return typeof t2;
                } : function(t2) {
                    return t2 && "function" == typeof Symbol && t2.constructor === Symbol && t2 !== Symbol.prototype ? "symbol" : typeof t2;
                })(t1);
            }
            var n3;
            n3 = (function() {
                return this;
            })();
            try {
                n3 = n3 || new Function("return this")();
            } catch (t1) {
                "object" === ("undefined" == typeof window ? "undefined" : r2(window)) && (n3 = window);
            }
            t.exports = n3;
        },
        function(t, e3, r2) {
            "use strict";
            var n3 = r2(15).get().ObjectId, o3 = r2(0).objectIdSymbol;
            /*!
 * Getter for convenience with populate, see gh-6115
 */ Object.defineProperty(n3.prototype, "_id", {
                enumerable: !1,
                configurable: !0,
                get: function() {
                    return this;
                }
            }), n3.prototype[o3] = !0, t.exports = n3;
        },
        function(t, e3) {
            var r2, n3, o3 = t.exports = {
            };
            function i7() {
                throw new Error("setTimeout has not been defined");
            }
            function s3() {
                throw new Error("clearTimeout has not been defined");
            }
            function a9(t1) {
                if (r2 === setTimeout) return setTimeout(t1, 0);
                if ((r2 === i7 || !r2) && setTimeout) return r2 = setTimeout, setTimeout(t1, 0);
                try {
                    return r2(t1, 0);
                } catch (e5) {
                    try {
                        return r2.call(null, t1, 0);
                    } catch (e6) {
                        return r2.call(this, t1, 0);
                    }
                }
            }
            !function() {
                try {
                    r2 = "function" == typeof setTimeout ? setTimeout : i7;
                } catch (t1) {
                    r2 = i7;
                }
                try {
                    n3 = "function" == typeof clearTimeout ? clearTimeout : s3;
                } catch (t1) {
                    n3 = s3;
                }
            }();
            var u6, c3 = [], l2 = !1, f3 = -1;
            function p2() {
                l2 && u6 && (l2 = !1, u6.length ? c3 = u6.concat(c3) : f3 = -1, c3.length && h());
            }
            function h() {
                if (!l2) {
                    var t1 = a9(p2);
                    l2 = !0;
                    for(var e5 = c3.length; e5;){
                        for(u6 = c3, c3 = []; (++f3) < e5;)u6 && u6[f3].run();
                        f3 = -1, e5 = c3.length;
                    }
                    u6 = null, l2 = !1, (function(t2) {
                        if (n3 === clearTimeout) return clearTimeout(t2);
                        if ((n3 === s3 || !n3) && clearTimeout) return n3 = clearTimeout, clearTimeout(t2);
                        try {
                            n3(t2);
                        } catch (e6) {
                            try {
                                return n3.call(null, t2);
                            } catch (e7) {
                                return n3.call(this, t2);
                            }
                        }
                    })(t1);
                }
            }
            function y2(t2, e6) {
                this.fun = t2, this.array = e6;
            }
            function d2() {
            }
            o3.nextTick = function(t2) {
                var e6 = new Array(arguments.length - 1);
                if (arguments.length > 1) for(var r9 = 1; r9 < arguments.length; r9++)e6[r9 - 1] = arguments[r9];
                c3.push(new y2(t2, e6)), 1 !== c3.length || l2 || a9(h);
            }, y2.prototype.run = function() {
                this.fun.apply(null, this.array);
            }, o3.title = "browser", o3.browser = !0, o3.env = {
            }, o3.argv = [], o3.version = "", o3.versions = {
            }, o3.on = d2, o3.addListener = d2, o3.once = d2, o3.off = d2, o3.removeListener = d2, o3.removeAllListeners = d2, o3.emit = d2, o3.prependListener = d2, o3.prependOnceListener = d2, o3.listeners = function(t2) {
                return [];
            }, o3.binding = function(t2) {
                throw new Error("process.binding is not supported");
            }, o3.cwd = function() {
                return "/";
            }, o3.chdir = function(t2) {
                throw new Error("process.chdir is not supported");
            }, o3.umask = function() {
                return 0;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            (function(e6) {
                /*!
 * Module dependencies.
 */ function n3(t3, e7, r9) {
                    return e7 in t3 ? Object.defineProperty(t3, e7, {
                        value: r9,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t3[e7] = r9, t3;
                }
                function o3(t3, e7) {
                    var r9 = "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
                    if (!r9) {
                        if (Array.isArray(t3) || (r9 = (function(t4, e8) {
                            if (!t4) return;
                            if ("string" == typeof t4) return i7(t4, e8);
                            var r10 = Object.prototype.toString.call(t4).slice(8, -1);
                            "Object" === r10 && t4.constructor && (r10 = t4.constructor.name);
                            if ("Map" === r10 || "Set" === r10) return Array.from(t4);
                            if ("Arguments" === r10 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r10)) return i7(t4, e8);
                        })(t3)) || e7 && t3 && "number" == typeof t3.length) {
                            r9 && (t3 = r9);
                            var n7 = 0, o11 = function() {
                            };
                            return {
                                s: o11,
                                n: function() {
                                    return n7 >= t3.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t3[n7++]
                                    };
                                },
                                e: function(t4) {
                                    throw t4;
                                },
                                f: o11
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var s3, a9 = !0, u6 = !1;
                    return {
                        s: function() {
                            r9 = r9.call(t3);
                        },
                        n: function() {
                            var t4 = r9.next();
                            return a9 = t4.done, t4;
                        },
                        e: function(t4) {
                            u6 = !0, s3 = t4;
                        },
                        f: function() {
                            try {
                                a9 || null == r9.return || r9.return();
                            } finally{
                                if (u6) throw s3;
                            }
                        }
                    };
                }
                function i7(t3, e7) {
                    (null == e7 || e7 > t3.length) && (e7 = t3.length);
                    for(var r9 = 0, n9 = new Array(e7); r9 < e7; r9++)n9[r9] = t3[r9];
                    return n9;
                }
                function s3(t3) {
                    return (s3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
                        return typeof t4;
                    } : function(t4) {
                        return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
                    })(t3);
                }
                var a9, u6, c3, l2 = r2(19).EventEmitter, f3 = r2(112), p2 = r2(5), h = r2(28), y2 = r2(75), d2 = r2(138), _2 = r2(139), v2 = r2(54), m2 = r2(34), g = r2(33), b2 = r2(73), w3 = r2(55), O = r2(27), S = r2(87), A = r2(58).compile, $ = r2(58).defineKey, E = r2(174).flatten, j = r2(3), P = r2(175), x = r2(91), T = r2(176), N = r2(22), k = r2(59), B = r2(177), C = r2(4).inspect, R = r2(17).internalToObjectOptions, D = r2(50), M = r2(178), I = r2(1), F = r2(180), L = I.clone, U = I.deepEqual, V = I.isMongooseObject, q = Symbol("mongoose.Array#atomicsBackup"), W = r2(0).arrayAtomicsSymbol, H = r2(0).documentArrayParent, Y = r2(0).documentIsModified, K = r2(0).documentModifiedPaths, z = r2(0).documentSchemaSymbol, Q = r2(0).getSymbol, J = r2(0).populateModelSymbol, G = r2(0).scopeSymbol, X = r2(35).schemaMixedSymbol, Z = I.specialProperties;
                function tt(t3, e7, r9, n9) {
                    var i8 = this;
                    "object" === s3(r9) && null != r9 && (r9 = (n9 = r9).skipId), n9 = Object.assign({
                    }, n9);
                    var a10 = j(n9, "defaults", !0);
                    if (n9.defaults = a10, null == this.$__schema) {
                        var u11 = I.isObject(e7) && !e7.instanceOfSchema ? new v2(e7) : e7;
                        this.$__setSchema(u11), e7 = r9, r9 = n9, n9 = arguments[4] || {
                        };
                    }
                    if (this.$__ = new f3, this.$__.emitter = new l2, this.isNew = !("isNew" in n9) || n9.isNew, this.errors = void 0, this.$__.$options = n9 || {
                    }, this.$locals = {
                    }, this.$op = null, null != t3 && "object" !== s3(t3)) throw new d2(t3, "obj", "Document");
                    var c7 = this.$__schema;
                    "boolean" == typeof e7 || "throw" === e7 ? (this.$__.strictMode = e7, e7 = void 0) : (this.$__.strictMode = c7.options.strict, this.$__.selected = e7);
                    var p4, h1 = c7.requiredPaths(!0), y3 = o3(h1);
                    try {
                        for(y3.s(); !(p4 = y3.n()).done;){
                            var _3 = p4.value;
                            this.$__.activePaths.require(_3);
                        }
                    } catch (t4) {
                        y3.e(t4);
                    } finally{
                        y3.f();
                    }
                    this.$__.emitter.setMaxListeners(0);
                    var m3 = null;
                    I.isPOJO(e7) && (m3 = B(e7));
                    var g1 = !1 === m3 && e7 ? rt(e7) : {
                    };
                    if (null == this._doc && (this.$__buildDoc(t3, e7, r9, m3, g1, !1), a10 && nt(this, e7, r9, m3, g1, !0, {
                        isNew: this.isNew
                    })), t3 && (this.$__original_set ? this.$__original_set(t3, void 0, !0) : this.$set(t3, void 0, !0), t3 instanceof tt && (this.isNew = t3.isNew)), n9.willInit && a10 ? l2.prototype.once.call(this, "init", function() {
                        nt(i8, e7, r9, m3, g1, !1, n9.skipDefaults, i8.isNew);
                    }) : a10 && nt(this, e7, r9, m3, g1, !1, n9.skipDefaults, this.isNew), this.$__._id = this._id, !this.$__.strictMode && t3) {
                        var b1 = this, w1 = Object.keys(this._doc);
                        w1.forEach(function(t4) {
                            t4 in c7.tree || $(t4, null, b1);
                        });
                    }
                    ut(this);
                }
                /*!
 * Document exposes the NodeJS event emitter API, so you can use
 * `on`, `once`, etc.
 */ for(var et in I.each([
                    "on",
                    "once",
                    "emit",
                    "listeners",
                    "removeListener",
                    "setMaxListeners",
                    "removeAllListeners",
                    "addListener"
                ], function(t3) {
                    tt.prototype[t3] = function() {
                        return this.$__.emitter[t3].apply(this.$__.emitter, arguments);
                    };
                }), tt.prototype.constructor = tt, l2.prototype)tt[et] = l2.prototype[et];
                /*!
 * ignore
 */ function rt(t3) {
                    for(var e7 = {
                    }, r9 = 0, n9 = Object.keys(t3); r9 < n9.length; r9++){
                        var i8, s8 = [], a10 = o3(n9[r9].split("."));
                        try {
                            for(a10.s(); !(i8 = a10.n()).done;){
                                var u12 = i8.value;
                                s8.push(u12), e7[s8.join(".")] = 1;
                            }
                        } catch (t4) {
                            a10.e(t4);
                        } finally{
                            a10.f();
                        }
                    }
                    return e7;
                }
                /*!
 * ignore
 */ function nt(t3, e7, r9, n9, o12, i9, s9) {
                    for(var a12 = Object.keys(t3.$__schema.paths), u13 = a12.length, c7 = 0; c7 < u13; ++c7){
                        var l6 = void 0, f6 = "", p4 = a12[c7];
                        if ("_id" !== p4 || !r9) for(var h1 = t3.$__schema.paths[p4], y3 = h1.splitPath(), d3 = y3.length, _4 = !1, v3 = t3._doc, m3 = 0; m3 < d3 && null != v3; ++m3){
                            var g1 = y3[m3];
                            if (f6 += (f6.length ? "." : "") + g1, !0 === n9) {
                                if (f6 in e7) break;
                            } else if (!1 === n9 && e7 && !_4) {
                                if (f6 in e7) _4 = !0;
                                else if (!o12[f6]) break;
                            }
                            if (m3 === d3 - 1) {
                                if ((void 0) !== v3[g1]) break;
                                if ("function" == typeof h1.defaultValue) {
                                    if (!h1.defaultValue.$runBeforeSetters && i9) break;
                                    if (h1.defaultValue.$runBeforeSetters && !i9) break;
                                } else if (!i9) continue;
                                if (s9 && s9[f6]) break;
                                if (e7 && null !== n9) {
                                    if (!0 === n9) {
                                        if (p4 in e7) continue;
                                        try {
                                            l6 = h1.getDefault(t3, !1);
                                        } catch (e8) {
                                            t3.invalidate(p4, e8);
                                            break;
                                        }
                                        (void 0) !== l6 && (v3[g1] = l6, t3.$__.activePaths.default(p4));
                                    } else if (_4) {
                                        try {
                                            l6 = h1.getDefault(t3, !1);
                                        } catch (e8) {
                                            t3.invalidate(p4, e8);
                                            break;
                                        }
                                        (void 0) !== l6 && (v3[g1] = l6, t3.$__.activePaths.default(p4));
                                    }
                                } else {
                                    try {
                                        l6 = h1.getDefault(t3, !1);
                                    } catch (e8) {
                                        t3.invalidate(p4, e8);
                                        break;
                                    }
                                    (void 0) !== l6 && (v3[g1] = l6, t3.$__.activePaths.default(p4));
                                }
                            } else v3 = v3[g1];
                        }
                    }
                }
                function ot(t3) {
                    if (null == t3) return !0;
                    if ("object" !== s3(t3) || Array.isArray(t3)) return !1;
                    for(var e7 = 0, r9 = Object.keys(t3); e7 < r9.length; e7++){
                        if (!ot(t3[r9[e7]])) return !1;
                    }
                    return !0;
                }
                /*!
 * ignore
 */ function it(t3) {
                    var e7 = {
                    };
                    !/*!
 * ignore
 */ function(t4) {
                        Object.keys(t4.$__.activePaths.states.require).forEach(function(e8) {
                            var r9 = t4.$__schema.path(e8);
                            null != r9 && "function" == typeof r9.originalRequiredValue && (t4.$__.cachedRequired[e8] = r9.originalRequiredValue.call(t4, t4));
                        });
                    }(t3);
                    var r9 = new Set(Object.keys(t3.$__.activePaths.states.require).filter(function(e8) {
                        return !(!t3.$__isSelected(e8) && !t3.isModified(e8)) && (!(e8 in t3.$__.cachedRequired) || t3.$__.cachedRequired[e8]);
                    }));
                    function n9(t4) {
                        r9.add(t4);
                    }
                    Object.keys(t3.$__.activePaths.states.init).forEach(n9), Object.keys(t3.$__.activePaths.states.modify).forEach(n9), Object.keys(t3.$__.activePaths.states.default).forEach(n9);
                    var i9, s9 = t3.$getAllSubdocs(), a12 = t3.modifiedPaths(), u13 = o3(s9);
                    try {
                        for(u13.s(); !(i9 = u13.n()).done;){
                            var c7 = i9.value;
                            if (c7.$basePath) {
                                var l7, f7 = o3(r9);
                                try {
                                    for(f7.s(); !(l7 = f7.n()).done;){
                                        var p5 = l7.value;
                                        (null === p5 || p5.startsWith(c7.$basePath + ".")) && r9.delete(p5);
                                    }
                                } catch (t4) {
                                    f7.e(t4);
                                } finally{
                                    f7.f();
                                }
                                !t3.isModified(c7.$basePath, a12) || t3.isDirectModified(c7.$basePath) || t3.$isDefault(c7.$basePath) || (r9.add(c7.$basePath), e7[c7.$basePath] = !0);
                            }
                        }
                    } catch (t4) {
                        u13.e(t4);
                    } finally{
                        u13.f();
                    }
                    var h2, y4 = o3(r9);
                    try {
                        for(y4.s(); !(h2 = y4.n()).done;){
                            var d4 = h2.value, _5 = t3.$__schema.path(d4);
                            if (_5 && _5.$isMongooseArray && (!_5.$isMongooseDocumentArray || j(_5, "schemaOptions.required"))) v4(t3.$__getValue(d4), r9, d4);
                        }
                    } catch (t4) {
                        y4.e(t4);
                    } finally{
                        y4.f();
                    }
                    function v4(t4, e8, r10) {
                        if (null != t4) for(var n10 = t4.length, o12 = 0; o12 < n10; ++o12)Array.isArray(t4[o12]) ? v4(t4[o12], e8, r10 + "." + o12) : e8.add(r10 + "." + o12);
                    }
                    var m4, g2 = {
                        skipArrays: !0
                    }, b2 = o3(r9);
                    try {
                        for(b2.s(); !(m4 = b2.n()).done;){
                            var w2 = m4.value;
                            if (t3.$__schema.nested[w2]) {
                                var O1 = t3.$__getValue(w2);
                                V(O1) && (O1 = O1.toObject({
                                    transform: !1
                                }));
                                var S1 = E(O1, w2, g2, t3.$__schema);
                                Object.keys(S1).forEach(n9);
                            }
                        }
                    } catch (t4) {
                        b2.e(t4);
                    } finally{
                        b2.f();
                    }
                    var A1, $1 = o3(r9);
                    try {
                        for($1.s(); !(A1 = $1.n()).done;){
                            var P1 = A1.value;
                            if (t3.$__schema.singleNestedPaths.hasOwnProperty(P1)) r9.delete(P1);
                            else {
                                var x1 = t3.$__schema.path(P1);
                                if (x1 && x1.$isSchemaMap) {
                                    var T1 = t3.$__getValue(P1);
                                    if (null != T1) {
                                        var N1, k1 = o3(T1.keys());
                                        try {
                                            for(k1.s(); !(N1 = k1.n()).done;){
                                                var B1 = N1.value;
                                                r9.add(P1 + "." + B1);
                                            }
                                        } catch (t4) {
                                            k1.e(t4);
                                        } finally{
                                            k1.f();
                                        }
                                    }
                                }
                            }
                        }
                    } catch (t4) {
                        $1.e(t4);
                    } finally{
                        $1.f();
                    }
                    return [
                        r9 = Array.from(r9),
                        e7
                    ];
                }
                /*!
 * ignore
 */ /*!
 * ignore
 */ function st(t3, e7) {
                    var r9, n9 = new Set(e7), i9 = new Map([]), s9 = o3(e7);
                    try {
                        for(s9.s(); !(r9 = s9.n()).done;){
                            var a12 = r9.value;
                            if (-1 !== a12.indexOf(".")) for(var u13 = a12.split("."), c8 = u13[0], l8 = 1; l8 < u13.length; ++l8)i9.set(c8, a12), c8 = c8 + "." + u13[l8];
                        }
                    } catch (t4) {
                        s9.e(t4);
                    } finally{
                        s9.f();
                    }
                    var f8, p6 = [], h2 = o3(t3);
                    try {
                        for(h2.s(); !(f8 = h2.n()).done;){
                            var y4 = f8.value;
                            n9.has(y4) ? p6.push(y4) : i9.has(y4) && p6.push(i9.get(y4));
                        }
                    } catch (t4) {
                        h2.e(t4);
                    } finally{
                        h2.f();
                    }
                    return p6;
                }
                /*!
 * ignore
 */ function at(t3, e7) {
                    return e7 = new Set(e7), t3 = t3.filter(function(t4) {
                        return !e7.has(t4);
                    });
                }
                /*!
 * Runs queued functions
 */ function ut(t3) {
                    var e7 = t3.$__schema && t3.$__schema.callQueue;
                    if (e7.length) {
                        var r9, n9 = o3(e7);
                        try {
                            for(n9.s(); !(r9 = n9.n()).done;){
                                var i9 = r9.value;
                                "pre" !== i9[0] && "post" !== i9[0] && "on" !== i9[0] && t3[i9[0]].apply(t3, i9[1]);
                            }
                        } catch (t4) {
                            n9.e(t4);
                        } finally{
                            n9.f();
                        }
                    }
                }
                /*!
 * ignore
 */ /*!
 * Applies virtuals properties to `json`.
 */ function ct(t3, e7, r10, n10) {
                    var o12, i10, s9, a13 = t3.$__schema, u14 = Object.keys(a13.virtuals), c9 = u14.length, l9 = c9, f8 = t3._doc, p6 = j(n10, "aliases", !0), h2 = null;
                    if (Array.isArray(r10.virtuals)) h2 = new Set(r10.virtuals);
                    else if (r10.virtuals && r10.virtuals.pathsToSkip) {
                        h2 = new Set(u14);
                        for(var y5 = 0; y5 < r10.virtuals.pathsToSkip.length; y5++)h2.has(r10.virtuals.pathsToSkip[y5]) && h2.delete(r10.virtuals.pathsToSkip[y5]);
                    }
                    if (!f8) return e7;
                    for(r10 = r10 || {
                    }, c9 = 0; c9 < l9; ++c9)if (o12 = u14[c9], (null == h2 || h2.has(o12)) && (p6 || !a13.aliases.hasOwnProperty(o12))) {
                        if (i10 = o12, null != r10.path) {
                            if (!o12.startsWith(r10.path + ".")) continue;
                            i10 = o12.substr(r10.path.length + 1);
                        }
                        var d5 = i10.split(".");
                        if ((void 0) !== (s9 = L(t3.get(o12), r10))) {
                            var _6 = d5.length;
                            f8 = e7;
                            for(var v4 = 0; v4 < _6 - 1; ++v4)f8[d5[v4]] = f8[d5[v4]] || {
                            }, f8 = f8[d5[v4]];
                            f8[d5[_6 - 1]] = s9;
                        }
                    }
                    return e7;
                }
                /*!
 * Applies virtuals properties to `json`.
 *
 * @param {Document} self
 * @param {Object} json
 * @return {Object} `json`
 */ function lt(t3, e7) {
                    if (F(e7)) throw new Error("`transform` function must be synchronous, but the transform on path `" + t3 + "` returned a promise.");
                }
                /*!
 * ignore
 */ tt.prototype.$__schema, tt.prototype.schema, Object.defineProperty(tt.prototype, "$locals", {
                    configurable: !1,
                    enumerable: !1,
                    writable: !0
                }), tt.prototype.isNew, Object.defineProperty(tt.prototype, "$where", {
                    configurable: !1,
                    enumerable: !1,
                    writable: !0
                }), tt.prototype.id, tt.prototype.errors, tt.prototype.$op, tt.prototype.$__buildDoc = function(t3, e7, r10, n10, o12) {
                    for(var i10 = {
                    }, s9 = Object.keys(this.$__schema.paths).filter(function(t4) {
                        return !t4.includes("$*");
                    }), a13 = s9.length, u14 = 0; u14 < a13; ++u14){
                        var c9 = s9[u14];
                        if ("_id" === c9) {
                            if (r10) continue;
                            if (t3 && "_id" in t3) continue;
                        }
                        for(var l9 = this.$__schema.paths[c9].splitPath(), f8 = l9.length, p6 = f8 - 1, h2 = "", y6 = i10, d6 = !1, _7 = 0; _7 < f8; ++_7){
                            var v5 = l9[_7];
                            if (h2 += (h2.length ? "." : "") + v5, !0 === n10) {
                                if (h2 in e7) break;
                            } else if (!1 === n10 && e7 && !d6) {
                                if (h2 in e7) d6 = !0;
                                else if (!o12[h2]) break;
                            }
                            _7 < p6 && (y6 = y6[v5] || (y6[v5] = {
                            }));
                        }
                    }
                    this._doc = i10;
                }, /*!
 * Converts to POJO when you use the document for querying
 */ tt.prototype.toBSON = function() {
                    return this.toObject(R);
                }, tt.prototype.init = function(t3, e7, r10) {
                    return "function" == typeof e7 && (r10 = e7, e7 = null), this.$__init(t3, e7), r10 && r10(null, this), this;
                }, /*!
 * ignore
 */ tt.prototype.$__init = function(t3, e7) {
                    if (this.isNew = !1, this.$init = !0, e7 = e7 || {
                    }, null != t3._id && e7.populated && e7.populated.length) {
                        var r10, n10 = String(t3._id), i10 = o3(e7.populated);
                        try {
                            for(i10.s(); !(r10 = i10.n()).done;){
                                var s9 = r10.value;
                                if (s9.isVirtual ? this.populated(s9.path, I.getValue(s9.path, t3), s9) : this.populated(s9.path, s9._docs[n10], s9), null != s9._childDocs) {
                                    var a13, u14 = o3(s9._childDocs);
                                    try {
                                        for(u14.s(); !(a13 = u14.n()).done;){
                                            var c10 = a13.value;
                                            null != c10 && null != c10.$__ && (c10.$__.parent = this);
                                        }
                                    } catch (t4) {
                                        u14.e(t4);
                                    } finally{
                                        u14.f();
                                    }
                                    s9._childDocs = [];
                                }
                            }
                        } catch (t4) {
                            i10.e(t4);
                        } finally{
                            i10.f();
                        }
                    }
                    /*!
 * Init helper.
 *
 * @param {Object} self document instance
 * @param {Object} obj raw mongodb doc
 * @param {Object} doc object we are initializing
 * @api private
 */ return (function t4(e8, r11, n11, o12, i11) {
                        i11 = i11 || "";
                        var s10, a14, u15, c11 = Object.keys(r11), l10 = c11.length, f9 = 0;
                        for(; f9 < l10;)p7(f9++);
                        function p7(l11) {
                            if (u15 = c11[l11], a14 = i11 + u15, s10 = e8.$__schema.path(a14), !e8.$__schema.$isRootDiscriminator || e8.$__isSelected(a14)) {
                                if (!s10 && I.isPOJO(r11[u15])) n11[u15] || (n11[u15] = {
                                }), t4(e8, r11[u15], n11[u15], o12, a14 + ".");
                                else if (s10) {
                                    if (null === r11[u15]) n11[u15] = s10._castNullish(null);
                                    else if ((void 0) !== r11[u15]) {
                                        var f10 = (r11[u15].$__ || {
                                        }).wasPopulated || null;
                                        if (s10 && !f10) try {
                                            n11[u15] = s10.cast(r11[u15], e8, !0);
                                        } catch (t5) {
                                            e8.invalidate(t5.path, new b2({
                                                path: t5.path,
                                                message: t5.message,
                                                type: "cast",
                                                value: t5.value,
                                                reason: t5
                                            }));
                                        }
                                        else n11[u15] = r11[u15];
                                    }
                                    e8.isModified(a14) || e8.$__.activePaths.init(a14);
                                } else n11[u15] = r11[u15];
                            }
                        }
                    })(this, t3, this._doc, e7), /*!
 * If populating a path within a document array, make sure each
 * subdoc within the array knows its subpaths are populated.
 *
 * ####Example:
 *     const doc = await Article.findOne().populate('comments.author');
 *     doc.comments[0].populated('author'); // Should be set
 */ (function(t5, e8) {
                        if (null == t5._id || null == e8 || 0 === e8.length) return;
                        var r11, n11 = String(t5._id), i11 = o3(e8);
                        try {
                            for(i11.s(); !(r11 = i11.n()).done;){
                                var s10 = r11.value;
                                if (!s10.isVirtual) for(var a14 = s10.path.split("."), u15 = 0; u15 < a14.length - 1; ++u15){
                                    var c11 = a14.slice(0, u15 + 1).join("."), l10 = a14.slice(u15 + 1).join("."), f9 = t5.get(c11);
                                    if (null != f9 && f9.isMongooseDocumentArray) {
                                        for(var p7 = 0; p7 < f9.length; ++p7)f9[p7].populated(l10, null == s10._docs[n11] ? [] : s10._docs[n11][p7], s10);
                                        break;
                                    }
                                }
                            }
                        } catch (t6) {
                            i11.e(t6);
                        } finally{
                            i11.f();
                        }
                    })(this, e7.populated), this.emit("init", this), this.constructor.emit("init", this), this.$__._id = this._id, this;
                }, tt.prototype.update = function() {
                    var t3 = I.args(arguments);
                    t3.unshift({
                        _id: this._id
                    });
                    var e7 = this.constructor.update.apply(this.constructor, t3);
                    return null != this.$session() && ("session" in e7.options || (e7.options.session = this.$session())), e7;
                }, tt.prototype.updateOne = function(t3, e7, r11) {
                    var n11 = this, o12 = this.constructor.updateOne({
                        _id: this._id
                    }, t3, e7);
                    return o12.pre(function(t4) {
                        n11.constructor._middleware.execPre("updateOne", n11, [
                            n11
                        ], t4);
                    }), o12.post(function(t4) {
                        n11.constructor._middleware.execPost("updateOne", n11, [
                            n11
                        ], {
                        }, t4);
                    }), null != this.$session() && ("session" in o12.options || (o12.options.session = this.$session())), null != r11 ? o12.exec(r11) : o12;
                }, tt.prototype.replaceOne = function() {
                    var t3 = I.args(arguments);
                    return t3.unshift({
                        _id: this._id
                    }), this.constructor.replaceOne.apply(this.constructor, t3);
                }, tt.prototype.$session = function(t3) {
                    if (0 === arguments.length) return null != this.$__.session && this.$__.session.hasEnded ? (this.$__.session = null, null) : this.$__.session;
                    if (null != t3 && t3.hasEnded) throw new p2("Cannot set a document's session to a session that has ended. Make sure you haven't called `endSession()` on the session you are passing to `$session()`.");
                    if (this.$__.session = t3, !this.ownerDocument) {
                        var e7, r11 = this.$getAllSubdocs(), n11 = o3(r11);
                        try {
                            for(n11.s(); !(e7 = n11.n()).done;){
                                var i11 = e7.value;
                                i11.$session(t3);
                            }
                        } catch (t4) {
                            n11.e(t4);
                        } finally{
                            n11.f();
                        }
                    }
                    return t3;
                }, tt.prototype.overwrite = function(t3) {
                    for(var e8 = 0, r12 = Array.from(new Set(Object.keys(this._doc).concat(Object.keys(t3)))); e8 < r12.length; e8++){
                        var n12 = r12[e8];
                        "_id" !== n12 && (this.$__schema.options.versionKey && n12 === this.$__schema.options.versionKey || this.$__schema.options.discriminatorKey && n12 === this.$__schema.options.discriminatorKey || this.$set(n12, t3[n12]));
                    }
                    return this;
                }, tt.prototype.$set = function(t3, e8, r12, i12) {
                    var a15 = this;
                    I.isPOJO(r12) && (i12 = r12, r12 = void 0);
                    var u16, c12, l11, f11, d7 = (i12 = i12 || {
                    }).merge, _8 = r12 && !0 !== r12, v6 = !0 === r12, g2 = this.$__schema.options.typeKey, b2 = 0, w3 = "strict" in i12 ? i12.strict : this.$__.strictMode;
                    if (_8 && ((this.$__.adhocPaths || (this.$__.adhocPaths = {
                    }))[t3] = this.$__schema.interpretAsType(t3, r12, this.$__schema.options)), null == t3) {
                        var O2 = t3;
                        t3 = e8, e8 = O2;
                    } else {
                        if ("string" != typeof t3) {
                            if (t3 instanceof tt && (t3 = t3.$__isNested ? t3.toObject() : t3._doc), null == t3) {
                                var A1 = t3;
                                t3 = e8, e8 = A1;
                            }
                            f11 = e8 ? e8 + "." : "";
                            var $1 = (u16 = Object.keys(t3)).length, E1 = j(i12, "_skipMinimizeTopLevel", !1);
                            if (0 === $1 && E1) return delete i12._skipMinimizeTopLevel, e8 && this.$set(e8, {
                            }), this;
                            for(var T2 = 0; T2 < $1; ++T2){
                                var N2 = f11 + (l11 = u16[T2]);
                                if (c12 = this.$__schema.pathType(N2), !0 !== r12 || f11 || null == t3[l11] || "nested" !== c12 || null == this._doc[l11] || 0 !== Object.keys(this._doc[l11]).length ? i12 = Object.assign({
                                }, i12, {
                                    _skipMinimizeTopLevel: !1
                                }) : (delete this._doc[l11], i12 = Object.assign({
                                }, i12, {
                                    _skipMinimizeTopLevel: !0
                                })), !("object" !== s3(t3[l11]) || I.isNativeObject(t3[l11]) || I.isMongooseType(t3[l11]) || null == t3[l11] || "virtual" === c12 || "real" === c12 || "adhocOrUndefined" === c12 || this.$__path(N2) instanceof h || this.$__schema.paths[N2] && this.$__schema.paths[N2].options && this.$__schema.paths[N2].options.ref)) this.$__.$setCalled.add(f11 + l11), this.$set(t3[l11], f11 + l11, v6, i12);
                                else if (w3) {
                                    if (v6 && (void 0) === t3[l11] && (void 0) !== this.get(N2)) continue;
                                    if ("adhocOrUndefined" === c12 && (c12 = P(this, N2, {
                                        typeOnly: !0
                                    })), "real" === c12 || "virtual" === c12) {
                                        var k2 = t3[l11];
                                        this.$__schema.paths[N2] && this.$__schema.paths[N2].$isSingleNested && t3[l11] instanceof tt && (k2 = k2.toObject({
                                            virtuals: !1,
                                            transform: !1
                                        })), this.$set(f11 + l11, k2, v6, i12);
                                    } else if ("nested" === c12 && t3[l11] instanceof tt) this.$set(f11 + l11, t3[l11].toObject({
                                        transform: !1
                                    }), v6, i12);
                                    else if ("throw" === w3) throw "nested" === c12 ? new y2(l11, t3[l11]) : new m2(l11);
                                } else (void 0) !== t3[l11] && this.$set(f11 + l11, t3[l11], v6, i12);
                            }
                            return this;
                        }
                        this.$__.$setCalled.add(t3);
                    }
                    var B2, C1 = this.$__schema.pathType(t3);
                    if ("adhocOrUndefined" === C1 && (C1 = P(this, t3, {
                        typeOnly: !0
                    })), e8 = x(e8), "nested" === C1 && e8) {
                        if ("object" === s3(e8) && null != e8) {
                            var R1 = null != this.$__.savedState && this.$__.savedState.hasOwnProperty(t3);
                            if (null != this.$__.savedState && !this.isNew && !this.$__.savedState.hasOwnProperty(t3)) {
                                var M1 = this.$__getValue(t3);
                                this.$__.savedState[t3] = M1;
                                for(var F1 = 0, L1 = Object.keys(M1 || {
                                }); F1 < L1.length; F1++){
                                    var U1 = L1[F1];
                                    this.$__.savedState[t3 + "." + U1] = M1[U1];
                                }
                            }
                            if (d7) return this.$set(e8, t3, v6);
                            this.$__setValue(t3, null), S(this, t3);
                            var V1 = Object.keys(e8);
                            this.$__setValue(t3, {
                            });
                            for(var q1 = 0, W1 = V1; q1 < W1.length; q1++){
                                var H1 = W1[q1];
                                this.$set(t3 + "." + H1, e8[H1], v6);
                            }
                            return R1 && I.deepEqual(this.$__.savedState[t3], e8) ? this.unmarkModified(t3) : this.markModified(t3), S(this, t3, {
                                skipDocArrays: !0
                            }), this;
                        }
                        return this.invalidate(t3, new p2.CastError("Object", e8, t3)), this;
                    }
                    var Y1 = -1 === t3.indexOf(".") ? [
                        t3
                    ] : t3.split(".");
                    if ("string" == typeof this.$__schema.aliases[Y1[0]] && (Y1[0] = this.$__schema.aliases[Y1[0]]), "adhocOrUndefined" === C1 && w3) {
                        var K1;
                        for(b2 = 0; b2 < Y1.length; ++b2){
                            var z1 = Y1.slice(0, b2 + 1).join(".");
                            if (b2 + 1 < Y1.length && "virtual" === this.$__schema.pathType(z1)) return D.set(t3, e8, this), this;
                            if (null != (B2 = this.$__schema.path(z1)) && B2 instanceof h) {
                                K1 = !0;
                                break;
                            }
                        }
                        if (null == B2 && (B2 = P(this, t3)), !K1 && !B2) {
                            if ("throw" === w3) throw new m2(t3);
                            return this;
                        }
                    } else {
                        if ("virtual" === C1) return (B2 = this.$__schema.virtualpath(t3)).applySetters(e8, this), this;
                        B2 = this.$__path(t3);
                    }
                    var Q1, G1 = this._doc, X1 = "";
                    for(b2 = 0; b2 < Y1.length - 1; ++b2)G1 = G1[Y1[b2]], X1 += (X1.length > 0 ? "." : "") + Y1[b2], G1 || (this.$set(X1, {
                    }), this.$__isSelected(X1) || this.unmarkModified(X1), G1 = this.$__getValue(X1));
                    if (Y1.length <= 1) Q1 = t3;
                    else {
                        for(b2 = 0; b2 < Y1.length; ++b2){
                            var Z1 = Y1.slice(0, b2 + 1).join(".");
                            if (null === this.get(Z1, null, {
                                getters: !1
                            })) {
                                Q1 = Z1;
                                break;
                            }
                        }
                        Q1 || (Q1 = t3);
                    }
                    var et1 = null != a15.$__.$options.priorDoc ? a15.$__.$options.priorDoc.$__getValue(t3) : v6 ? void 0 : a15.$__getValue(t3);
                    if (!B2) return this.$__set(Q1, t3, v6, Y1, B2, e8, et1), this;
                    if ((B2.$isSingleNested || B2.$isMongooseArray) && /*!
 * ignore
 */ (function(t4, e9) {
                        if (!t4.$__.validationError) return;
                        for(var r13 = Object.keys(t4.$__.validationError.errors), n13 = 0, o12 = r13; n13 < o12.length; n13++){
                            var i13 = o12[n13];
                            i13.startsWith(e9 + ".") && delete t4.$__.validationError.errors[i13];
                        }
                        0 === Object.keys(t4.$__.validationError.errors).length && (t4.$__.validationError = null);
                    })(this, t3), B2.$isSingleNested && null != e8 && d7) {
                        e8 instanceof tt && (e8 = e8.toObject({
                            virtuals: !1,
                            transform: !1
                        }));
                        for(var rt1 = 0, nt1 = Object.keys(e8); rt1 < nt1.length; rt1++){
                            var ot1 = nt1[rt1];
                            this.$set(t3 + "." + ot1, e8[ot1], v6, i12);
                        }
                        return this;
                    }
                    var it1 = !0;
                    try {
                        var st1, at1 = function() {
                            if (null == B2.options) return !1;
                            if (!(e8 instanceof tt)) return !1;
                            var t4 = e8.constructor, r13 = B2.options.ref;
                            if (null != r13 && (r13 === t4.modelName || r13 === t4.baseModelName)) return !0;
                            var n13 = B2.options.refPath;
                            if (null == n13) return !1;
                            var o12 = e8.get(n13);
                            return o12 === t4.modelName || o12 === t4.baseModelName;
                        }(), ut1 = !1;
                        if (at1 && e8 instanceof tt && (this.populated(t3, e8._id, n3({
                        }, J, e8.constructor)), e8.$__.wasPopulated = !0, ut1 = !0), B2.options && Array.isArray(B2.options[g2]) && B2.options[g2].length && B2.options[g2][0].ref && /*!
 * ignore
 */ (function(t4, e9) {
                            if (!Array.isArray(t4)) return !1;
                            if (0 === t4.length) return !1;
                            var r13, n13 = o3(t4);
                            try {
                                for(n13.s(); !(r13 = n13.n()).done;){
                                    var i14 = r13.value;
                                    if (!(i14 instanceof tt)) return !1;
                                    if (null == i14.constructor.modelName) return !1;
                                    if (i14.constructor.modelName != e9 && i14.constructor.baseModelName != e9) return !1;
                                }
                            } catch (t5) {
                                n13.e(t5);
                            } finally{
                                n13.f();
                            }
                            return !0;
                        })(e8, B2.options[g2][0].ref)) {
                            st1 = n3({
                            }, J, e8[0].constructor), this.populated(t3, e8.map(function(t4) {
                                return t4._id;
                            }), st1);
                            var ct1, lt1 = o3(e8);
                            try {
                                for(lt1.s(); !(ct1 = lt1.n()).done;)ct1.value.$__.wasPopulated = !0;
                            } catch (t4) {
                                lt1.e(t4);
                            } finally{
                                lt1.f();
                            }
                            ut1 = !0;
                        }
                        if (null == this.$__schema.singleNestedPaths[t3] && (e8 = B2.applySetters(e8, this, !1, et1)), B2.$isMongooseDocumentArray && Array.isArray(e8) && e8.length > 0 && null != e8[0] && null != e8[0].$__ && null != e8[0].$__.populated) {
                            for(var ft = Object.keys(e8[0].$__.populated), pt = function() {
                                var r13 = yt[ht];
                                a15.populated(t3 + "." + r13, e8.map(function(t4) {
                                    return t4.populated(r13);
                                }), e8[0].$__.populated[r13].options);
                            }, ht = 0, yt = ft; ht < yt.length; ht++)pt();
                            ut1 = !0;
                        }
                        if (!ut1 && this.$__.populated) {
                            if (Array.isArray(e8) && this.$__.populated[t3]) for(var dt = 0; dt < e8.length; ++dt)e8[dt] instanceof tt && (e8[dt] = e8[dt]._id);
                            delete this.$__.populated[t3];
                        }
                        B2.$isSingleNested && null != e8 && (function(t4, e9, r13) {
                            var n13 = e9.schema;
                            if (null == n13) return;
                            for(var o12 = 0, i15 = Object.keys(n13.paths); o12 < i15.length; o12++){
                                var s11 = i15[o12], a16 = n13.paths[s11];
                                if (null != a16.$immutableSetter) {
                                    var u17 = null == r13 ? void 0 : r13.$__getValue(s11);
                                    a16.$immutableSetter.call(t4, u17);
                                }
                            }
                        })(e8, B2, et1), this.$markValid(t3);
                    } catch (r13) {
                        r13 instanceof p2.StrictModeError && r13.isImmutableError ? this.invalidate(t3, r13) : r13 instanceof p2.CastError ? (this.invalidate(r13.path, r13), r13.$originalErrorPath && this.invalidate(t3, new p2.CastError(B2.instance, e8, t3, r13.$originalErrorPath))) : this.invalidate(t3, new p2.CastError(B2.instance, e8, t3, r13)), it1 = !1;
                    }
                    return it1 && (this.$__set(Q1, t3, v6, Y1, B2, e8, et1), null != this.$__.savedState && (this.isNew || this.$__.savedState.hasOwnProperty(t3) ? this.$__.savedState.hasOwnProperty(t3) && I.deepEqual(e8, this.$__.savedState[t3]) && this.unmarkModified(t3) : this.$__.savedState[t3] = et1)), B2.$isSingleNested && (this.isDirectModified(t3) || null == e8) && S(this, t3), this;
                }, tt.prototype.set = tt.prototype.$set, tt.prototype.$__shouldModify = function(t3, e8, r12, n13, o12, i12, s12) {
                    return !!this.isNew || null == this.$__schema.singleNestedPaths[e8] && ((void 0) === i12 && !this.$__isSelected(e8) || ((void 0) !== i12 || !(e8 in this.$__.activePaths.states.default)) && !(this.populated(e8) && i12 instanceof tt && U(i12._id, s12)) && (!U(i12, s12 || I.getValue(e8, this)) || !(r12 || null == i12 || !(e8 in this.$__.activePaths.states.default) || !U(i12, o12.getDefault(this, r12)))));
                }, tt.prototype.$__set = function(t3, e8, n13, o12, i12, s12, a15) {
                    c3 = c3 || r2(29);
                    var l11 = this.$__shouldModify(t3, e8, n13, o12, i12, s12, a15), f11 = this;
                    l11 && (this.markModified(t3), u6 || (u6 = r2(85)), s12 && s12.isMongooseArray && (s12._registerAtomic("$set", s12), s12.isMongooseDocumentArray && s12.forEach(function(t4) {
                        t4 && t4.__parentArray && (t4.__parentArray = s12);
                    }), this.$__.activePaths.forEach(function(t4) {
                        t4.startsWith(e8 + ".") && f11.$__.activePaths.ignore(t4);
                    })));
                    for(var p8 = this._doc, h3 = 0, y7 = o12.length, d7 = ""; h3 < y7; h3++){
                        var _8 = h3 + 1 === y7;
                        if (d7 += d7 ? "." + o12[h3] : o12[h3], Z.has(o12[h3])) return;
                        _8 ? p8 instanceof Map ? p8.set(o12[h3], s12) : p8[o12[h3]] = s12 : (I.isPOJO(p8[o12[h3]]) || p8[o12[h3]] && p8[o12[h3]] instanceof c3 || p8[o12[h3]] && p8[o12[h3]].$isSingleNested || p8[o12[h3]] && Array.isArray(p8[o12[h3]]) || (p8[o12[h3]] = p8[o12[h3]] || {
                        }), p8 = p8[o12[h3]]);
                    }
                }, tt.prototype.$__getValue = function(t3) {
                    return I.getValue(t3, this._doc);
                }, tt.prototype.$__setValue = function(t3, e8) {
                    return I.setValue(t3, e8, this._doc), this;
                }, tt.prototype.get = function(t3, e8, r12) {
                    var n13;
                    r12 = r12 || {
                    }, e8 && (n13 = this.$__schema.interpretAsType(t3, e8, this.$__schema.options));
                    var o12 = this.$__path(t3);
                    if (null == o12 && (o12 = this.$__schema.virtualpath(t3)), o12 instanceof h) {
                        var i12 = this.$__schema.virtualpath(t3);
                        null != i12 && (o12 = i12);
                    }
                    var s12 = -1 === t3.indexOf(".") ? [
                        t3
                    ] : t3.split("."), a15 = this._doc;
                    if (o12 instanceof w3) return o12.applyGetters(void 0, this);
                    "string" == typeof this.$__schema.aliases[s12[0]] && (s12[0] = this.$__schema.aliases[s12[0]]);
                    for(var u16 = 0, c12 = s12.length; u16 < c12; u16++)a15 && a15._doc && (a15 = a15._doc), a15 = null == a15 ? void 0 : a15 instanceof Map ? a15.get(s12[u16], {
                        getters: !1
                    }) : u16 === c12 - 1 ? I.getValue(s12[u16], a15) : a15[s12[u16]];
                    if (n13 && (a15 = n13.cast(a15)), null != o12 && !1 !== r12.getters) a15 = o12.applyGetters(a15, this);
                    else if (this.$__schema.nested[t3] && r12.virtuals) return ct(this, I.clone(a15) || {
                    }, {
                        path: t3
                    });
                    return a15;
                }, /*!
 * ignore
 */ tt.prototype[Q] = tt.prototype.get, tt.prototype.$__path = function(t3) {
                    var e8 = this.$__.adhocPaths, r12 = e8 && e8.hasOwnProperty(t3) ? e8[t3] : null;
                    return r12 || this.$__schema.path(t3);
                }, tt.prototype.markModified = function(t3, e8) {
                    this.$__.activePaths.modify(t3), null == e8 || this.ownerDocument || (this.$__.pathsToScopes[t3] = e8);
                }, tt.prototype.unmarkModified = function(t3) {
                    this.$__.activePaths.init(t3), delete this.$__.pathsToScopes[t3];
                }, tt.prototype.$ignore = function(t3) {
                    this.$__.activePaths.ignore(t3);
                }, tt.prototype.directModifiedPaths = function() {
                    return Object.keys(this.$__.activePaths.states.modify);
                }, tt.prototype.$isEmpty = function(t3) {
                    var e8 = {
                        minimize: !0,
                        virtuals: !1,
                        getters: !1,
                        transform: !1
                    };
                    if (arguments.length > 0) {
                        var r12 = this.get(t3);
                        return null == r12 || "object" === s3(r12) && (I.isPOJO(r12) ? ot(r12) : 0 === Object.keys(r12.toObject(e8)).length);
                    }
                    return 0 === Object.keys(this.toObject(e8)).length;
                }, tt.prototype.modifiedPaths = function(t3) {
                    t3 = t3 || {
                    };
                    var e8 = Object.keys(this.$__.activePaths.states.modify), r13 = this;
                    return e8.reduce(function(e9, n13) {
                        var i15 = n13.split(".");
                        if (e9 = e9.concat(i15.reduce(function(t4, e10, r14) {
                            return t4.concat(i15.slice(0, r14).concat(e10).join("."));
                        }, []).filter(function(t4) {
                            return -1 === e9.indexOf(t4);
                        })), !t3.includeChildren) return e9;
                        var a15 = r13.get(n13);
                        if (null != a15 && "object" === s3(a15)) {
                            if (a15._doc && (a15 = a15._doc), Array.isArray(a15)) {
                                for(var u16 = a15.length, c12 = 0; c12 < u16; ++c12)if (-1 === e9.indexOf(n13 + "." + c12) && (e9.push(n13 + "." + c12), null != a15[c12] && a15[c12].$__)) {
                                    var l11, f11 = o3(a15[c12].modifiedPaths());
                                    try {
                                        for(f11.s(); !(l11 = f11.n()).done;){
                                            var p8 = l11.value;
                                            e9.push(n13 + "." + c12 + "." + p8);
                                        }
                                    } catch (t4) {
                                        f11.e(t4);
                                    } finally{
                                        f11.f();
                                    }
                                }
                            } else Object.keys(a15).filter(function(t4) {
                                return -1 === e9.indexOf(n13 + "." + t4);
                            }).forEach(function(t4) {
                                e9.push(n13 + "." + t4);
                            });
                        }
                        return e9;
                    }, []);
                }, tt.prototype[K] = tt.prototype.modifiedPaths, tt.prototype.isModified = function(t3, e8) {
                    if (t3) {
                        Array.isArray(t3) || (t3 = t3.split(" "));
                        var r13 = e8 || this[K](), n13 = Object.keys(this.$__.activePaths.states.modify);
                        return t3.some(function(t4) {
                            return !!~r13.indexOf(t4);
                        }) || t3.some(function(t4) {
                            return n13.some(function(e9) {
                                return e9 === t4 || t4.startsWith(e9 + ".");
                            });
                        });
                    }
                    return this.$__.activePaths.some("modify");
                }, tt.prototype[Y] = tt.prototype.isModified, tt.prototype.$isDefault = function(t3) {
                    var e8 = this;
                    if (null == t3) return this.$__.activePaths.some("default");
                    if ("string" == typeof t3 && -1 === t3.indexOf(" ")) return this.$__.activePaths.states.default.hasOwnProperty(t3);
                    var r14 = t3;
                    return Array.isArray(r14) || (r14 = r14.split(" ")), r14.some(function(t4) {
                        return e8.$__.activePaths.states.default.hasOwnProperty(t4);
                    });
                }, tt.prototype.$isDeleted = function(t3) {
                    return 0 === arguments.length ? !!this.$__.isDeleted : (this.$__.isDeleted = !!t3, this);
                }, tt.prototype.isDirectModified = function(t3) {
                    var e8 = this;
                    if (null == t3) return this.$__.activePaths.some("modify");
                    if ("string" == typeof t3 && -1 === t3.indexOf(" ")) return this.$__.activePaths.states.modify.hasOwnProperty(t3);
                    var r14 = t3;
                    return Array.isArray(r14) || (r14 = r14.split(" ")), r14.some(function(t4) {
                        return e8.$__.activePaths.states.modify.hasOwnProperty(t4);
                    });
                }, tt.prototype.isInit = function(t3) {
                    var e8 = this;
                    if (null == t3) return this.$__.activePaths.some("init");
                    if ("string" == typeof t3 && -1 === t3.indexOf(" ")) return this.$__.activePaths.states.init.hasOwnProperty(t3);
                    var r14 = t3;
                    return Array.isArray(r14) || (r14 = r14.split(" ")), r14.some(function(t4) {
                        return e8.$__.activePaths.states.init.hasOwnProperty(t4);
                    });
                }, tt.prototype.isSelected = function(t3) {
                    var e8 = this;
                    if (null == this.$__.selected) return !0;
                    if ("_id" === t3) return 0 !== this.$__.selected._id;
                    if (-1 !== t3.indexOf(" ") && (t3 = t3.split(" ")), Array.isArray(t3)) return t3.some(function(t4) {
                        return e8.$__isSelected(t4);
                    });
                    var r14 = Object.keys(this.$__.selected), n14 = null;
                    if (1 === r14.length && "_id" === r14[0]) return 0 === this.$__.selected._id;
                    for(var o12 = 0, i15 = r14; o12 < i15.length; o12++){
                        var s12 = i15[o12];
                        if ("_id" !== s12 && k(this.$__.selected[s12])) {
                            n14 = !!this.$__.selected[s12];
                            break;
                        }
                    }
                    if (null === n14) return !0;
                    if (t3 in this.$__.selected) return n14;
                    for(var a15 = t3 + ".", u18 = 0, c13 = r14; u18 < c13.length; u18++){
                        var l12 = c13[u18];
                        if ("_id" !== l12) {
                            if (l12.startsWith(a15)) return n14 || l12 !== a15;
                            if (a15.startsWith(l12 + ".")) return n14;
                        }
                    }
                    return !n14;
                }, tt.prototype.$__isSelected = tt.prototype.isSelected, tt.prototype.isDirectSelected = function(t3) {
                    var e8 = this;
                    if (null == this.$__.selected) return !0;
                    if ("_id" === t3) return 0 !== this.$__.selected._id;
                    if (-1 !== t3.indexOf(" ") && (t3 = t3.split(" ")), Array.isArray(t3)) return t3.some(function(t4) {
                        return e8.isDirectSelected(t4);
                    });
                    var r14 = Object.keys(this.$__.selected), n14 = null;
                    if (1 === r14.length && "_id" === r14[0]) return 0 === this.$__.selected._id;
                    for(var o12 = 0, i15 = r14; o12 < i15.length; o12++){
                        var s13 = i15[o12];
                        if ("_id" !== s13 && k(this.$__.selected[s13])) {
                            n14 = !!this.$__.selected[s13];
                            break;
                        }
                    }
                    return null === n14 || (this.$__.selected.hasOwnProperty(t3) ? n14 : !n14);
                }, tt.prototype.validate = function(t3, e8, r14) {
                    var n14, o12 = this;
                    if (this.$op = "validate", null != this.ownerDocument || (this.$__.validating ? n14 = new _2(this, {
                        parentStack: e8 && e8.parentStack,
                        conflictStack: this.$__.validating.stack
                    }) : this.$__.validating = new _2(this, {
                        parentStack: e8 && e8.parentStack
                    })), 1 === arguments.length ? "object" !== s3(arguments[0]) || Array.isArray(arguments[0]) ? "function" == typeof arguments[0] && (r14 = arguments[0], e8 = null, t3 = null) : (e8 = arguments[0], r14 = null, t3 = null) : "function" == typeof t3 ? (r14 = t3, e8 = null, t3 = null) : "function" == typeof e8 && (r14 = e8, e8 = t3, t3 = null), e8 && "string" == typeof e8.pathsToSkip) {
                        var i15 = -1 === e8.pathsToSkip.indexOf(" ");
                        e8.pathsToSkip = i15 ? [
                            e8.pathsToSkip
                        ] : e8.pathsToSkip.split(" ");
                    }
                    return O(r14, function(r15) {
                        if (null != n14) return r15(n14);
                        o12.$__validate(t3, e8, function(t4) {
                            o12.$op = null, r15(t4);
                        });
                    }, this.constructor.events);
                }, tt.prototype.$__validate = function(t3, e8, r14) {
                    var n14 = this;
                    "function" == typeof t3 ? (r14 = t3, e8 = null, t3 = null) : "function" == typeof e8 && (r14 = e8, e8 = null);
                    var i16, a15 = e8 && "object" === s3(e8) && "validateModifiedOnly" in e8, u18 = j(e8, "pathsToSkip", null);
                    i16 = a15 ? !!e8.validateModifiedOnly : this.$__schema.options.validateModifiedOnly;
                    var c13 = this, l13 = function() {
                        var t4 = n14.$__.validationError;
                        if (n14.$__.validationError = void 0, i16 && null != t4) {
                            for(var e9 = 0, r15 = Object.keys(t4.errors); e9 < r15.length; e9++){
                                var o12 = r15[e9];
                                n14.isModified(o12) || delete t4.errors[o12];
                            }
                            0 === Object.keys(t4.errors).length && (t4 = void 0);
                        }
                        if (n14.$__.cachedRequired = {
                        }, n14.emit("validate", c13), n14.constructor.emit("validate", c13), n14.$__.validating = null, t4) {
                            for(var s14 in t4.errors)!n14[H] && t4.errors[s14] instanceof p2.CastError && n14.invalidate(s14, t4.errors[s14]);
                            return t4;
                        }
                    }, f12 = it(this), h3 = i16 ? f12[0].filter(function(t4) {
                        return n14.isModified(t4);
                    }) : f12[0], y7 = f12[1];
                    if ("string" == typeof t3 && (t3 = t3.split(" ")), Array.isArray(t3) ? h3 = st(h3, t3) : u18 && (h3 = at(h3, u18)), 0 === h3.length) return N(function() {
                        var t4 = l13();
                        if (t4) return c13.$__schema.s.hooks.execPost("validate:error", c13, [
                            c13
                        ], {
                            error: t4
                        }, function(t5) {
                            r14(t5);
                        });
                        r14(null, c13);
                    });
                    var d7, _9 = {
                    }, v6 = 0, m4 = o3(h3);
                    try {
                        for(m4.s(); !(d7 = m4.n()).done;)b3(d7.value);
                    } catch (t4) {
                        m4.e(t4);
                    } finally{
                        m4.f();
                    }
                    function b3(t4) {
                        null == t4 || _9[t4] || (_9[t4] = !0, v6++, N(function() {
                            var e10 = c13.$__schema.path(t4);
                            if (!e10) return (--v6) || w4();
                            if (c13.$isValid(t4)) {
                                if (null != e10[X] && t4 !== e10.path) return (--v6) || w4();
                                var r16, n15 = c13.$__getValue(t4);
                                null == n15 && (r16 = c13.populated(t4)) && (n15 = r16);
                                var o13 = t4 in c13.$__.pathsToScopes ? c13.$__.pathsToScopes[t4] : c13, s15 = {
                                    skipSchemaValidators: y7[t4],
                                    path: t4,
                                    validateModifiedOnly: i16
                                };
                                e10.doValidate(n15, function(r17) {
                                    if (r17 && (!e10.$isMongooseDocumentArray || r17.$isArrayValidatorError)) {
                                        if (e10.$isSingleNested && r17 instanceof g && !1 === e10.schema.options.storeSubdocValidationError) return (--v6) || w4();
                                        c13.invalidate(t4, r17, void 0, !0);
                                    }
                                    (--v6) || w4();
                                }, o13, s15);
                            } else (--v6) || w4();
                        }));
                    }
                    function w4() {
                        var t4 = l13();
                        if (t4) return c13.$__schema.s.hooks.execPost("validate:error", c13, [
                            c13
                        ], {
                            error: t4
                        }, function(t5) {
                            r14(t5);
                        });
                        r14(null, c13);
                    }
                }, tt.prototype.validateSync = function(t3, e8) {
                    var r14 = this, n14 = this;
                    1 !== arguments.length || "object" !== s3(arguments[0]) || Array.isArray(arguments[0]) || (e8 = arguments[0], t3 = null);
                    var o14, i16 = e8 && "object" === s3(e8) && "validateModifiedOnly" in e8;
                    o14 = i16 ? !!e8.validateModifiedOnly : this.$__schema.options.validateModifiedOnly;
                    var a15 = e8 && e8.pathsToSkip;
                    if ("string" == typeof t3) {
                        var u18 = -1 === t3.indexOf(" ");
                        t3 = u18 ? [
                            t3
                        ] : t3.split(" ");
                    } else "string" == typeof a15 && -1 !== a15.indexOf(" ") && (a15 = a15.split(" "));
                    var c13 = it(this), l13 = o14 ? c13[0].filter(function(t4) {
                        return r14.isModified(t4);
                    }) : c13[0], f12 = c13[1];
                    Array.isArray(t3) ? l13 = st(l13, t3) : Array.isArray(a15) && (l13 = at(l13, a15));
                    var h3 = {
                    };
                    l13.forEach(function(t4) {
                        if (!h3[t4]) {
                            h3[t4] = !0;
                            var e10 = n14.$__schema.path(t4);
                            if (e10 && n14.$isValid(t4)) {
                                var r17 = n14.$__getValue(t4), i17 = e10.doValidateSync(r17, n14, {
                                    skipSchemaValidators: f12[t4],
                                    path: t4,
                                    validateModifiedOnly: o14
                                });
                                if (i17 && (!e10.$isMongooseDocumentArray || i17.$isArrayValidatorError)) {
                                    if (e10.$isSingleNested && i17 instanceof g && !1 === e10.schema.options.storeSubdocValidationError) return;
                                    n14.invalidate(t4, i17, void 0, !0);
                                }
                            }
                        }
                    });
                    var y7 = n14.$__.validationError;
                    if (n14.$__.validationError = void 0, n14.emit("validate", n14), n14.constructor.emit("validate", n14), y7) for(var d7 in y7.errors)y7.errors[d7] instanceof p2.CastError && n14.invalidate(d7, y7.errors[d7]);
                    return y7;
                }, tt.prototype.invalidate = function(t3, e8, r14, n14) {
                    if (this.$__.validationError || (this.$__.validationError = new g(this)), !this.$__.validationError.errors[t3]) return e8 && "string" != typeof e8 || (e8 = new b2({
                        path: t3,
                        message: e8,
                        type: n14 || "user defined",
                        value: r14
                    })), this.$__.validationError === e8 || this.$__.validationError.addError(t3, e8), this.$__.validationError;
                }, tt.prototype.$markValid = function(t3) {
                    this.$__.validationError && this.$__.validationError.errors[t3] && (delete this.$__.validationError.errors[t3], 0 === Object.keys(this.$__.validationError.errors).length && (this.$__.validationError = null));
                }, tt.prototype.$isValid = function(t3) {
                    var e8 = this;
                    return null == this.$__.validationError || 0 === Object.keys(this.$__.validationError.errors).length || null != t3 && (-1 !== t3.indexOf(" ") && (t3 = t3.split(" ")), Array.isArray(t3) ? t3.some(function(t4) {
                        return null == e8.$__.validationError.errors[t4];
                    }) : null == this.$__.validationError.errors[t3]);
                }, tt.prototype.$__reset = function() {
                    var t3 = this;
                    return a9 || (a9 = r2(18)), this.$__.activePaths.map("init", "modify", function(e8) {
                        return t3.$__getValue(e8);
                    }).filter(function(t4) {
                        return t4 && t4 instanceof Array && t4.isMongooseDocumentArray && t4.length;
                    }).forEach(function(e8) {
                        for(var r14 = e8.length; r14--;){
                            var n14 = e8[r14];
                            n14 && n14.$__reset();
                        }
                        t3.$__.activePaths.init(e8.$path()), e8[q] = e8[W], e8[W] = {
                        };
                    }), this.$__.activePaths.map("init", "modify", function(e8) {
                        return t3.$__getValue(e8);
                    }).filter(function(t4) {
                        return t4 && t4.$isSingleNested;
                    }).forEach(function(e8) {
                        e8.$__reset(), e8.$__parent === t3 ? t3.$__.activePaths.init(e8.$basePath) : null != e8.$__parent && e8.$__parent.ownerDocument && e8.$__parent.$__reset();
                    }), this.$__dirty().forEach(function(t4) {
                        var e8 = t4.value;
                        e8 && e8[W] && (e8[q] = e8[W], e8[W] = {
                        });
                    }), this.$__.backup = {
                    }, this.$__.backup.activePaths = {
                        modify: Object.assign({
                        }, this.$__.activePaths.states.modify),
                        default: Object.assign({
                        }, this.$__.activePaths.states.default)
                    }, this.$__.backup.validationError = this.$__.validationError, this.$__.backup.errors = this.errors, this.$__.activePaths.clear("modify"), this.$__.activePaths.clear("default"), this.$__.validationError = void 0, this.errors = void 0, t3 = this, this.$__schema.requiredPaths().forEach(function(e8) {
                        t3.$__.activePaths.require(e8);
                    }), this;
                }, /*!
 * ignore
 */ tt.prototype.$__undoReset = function() {
                    if (null != this.$__.backup && null != this.$__.backup.activePaths) {
                        this.$__.activePaths.states.modify = this.$__.backup.activePaths.modify, this.$__.activePaths.states.default = this.$__.backup.activePaths.default, this.$__.validationError = this.$__.backup.validationError, this.errors = this.$__.backup.errors;
                        var t3, e8 = o3(this.$__dirty());
                        try {
                            for(e8.s(); !(t3 = e8.n()).done;){
                                var r14 = t3.value.value;
                                r14 && r14[W] && r14[q] && (r14[W] = r14[q]);
                            }
                        } catch (t4) {
                            e8.e(t4);
                        } finally{
                            e8.f();
                        }
                        var n16, i16 = o3(this.$getAllSubdocs());
                        try {
                            for(i16.s(); !(n16 = i16.n()).done;)n16.value.$__undoReset();
                        } catch (t4) {
                            i16.e(t4);
                        } finally{
                            i16.f();
                        }
                    }
                }, tt.prototype.$__dirty = function() {
                    var t4 = this, e11 = this.$__.activePaths.map("modify", function(e12) {
                        return {
                            path: e12,
                            value: t4.$__getValue(e12),
                            schema: t4.$__path(e12)
                        };
                    });
                    (e11 = e11.concat(this.$__.activePaths.map("default", function(e12) {
                        if ("_id" !== e12 && null != t4.$__getValue(e12)) return {
                            path: e12,
                            value: t4.$__getValue(e12),
                            schema: t4.$__path(e12)
                        };
                    }))).sort(function(t5, e12) {
                        return t5.path < e12.path ? -1 : t5.path > e12.path ? 1 : 0;
                    });
                    var r18, n17, o14 = [];
                    return e11.forEach(function(t5) {
                        t5 && (null == r18 || 0 !== t5.path.indexOf(r18) ? (r18 = t5.path + ".", o14.push(t5), n17 = t5) : null != n17 && null != n17.value && null != n17.value[W] && n17.value.hasAtomics() && (n17.value[W] = {
                        }, n17.value[W].$set = n17.value));
                    }), n17 = r18 = null, o14;
                }, tt.prototype.$__setSchema = function(t4) {
                    t4.plugin(T, {
                        deduplicate: !0
                    }), A(t4.tree, this, void 0, t4.options);
                    for(var e11 = 0, r18 = Object.keys(t4.virtuals); e11 < r18.length; e11++){
                        var n17 = r18[e11];
                        t4.virtuals[n17]._applyDefaultGetters();
                    }
                    null == t4.path("schema") && (this.schema = t4), this.$__schema = t4, this[z] = t4;
                }, tt.prototype.$__getArrayPathsToValidate = function() {
                    return a9 || (a9 = r2(18)), this.$__.activePaths.map("init", "modify", (function(t4) {
                        return this.$__getValue(t4);
                    }).bind(this)).filter(function(t4) {
                        return t4 && t4 instanceof Array && t4.isMongooseDocumentArray && t4.length;
                    }).reduce(function(t4, e11) {
                        return t4.concat(e11);
                    }, []).filter(function(t4) {
                        return t4;
                    });
                }, tt.prototype.$getAllSubdocs = function() {
                    function t4(e11, r18, n18) {
                        var o14 = e11, i18 = !1;
                        if (n18 && (e11 instanceof tt && e11[z].paths[n18] ? o14 = e11._doc[n18] : e11 instanceof tt && e11[z].nested[n18] ? (o14 = e11._doc[n18], i18 = !0) : o14 = e11[n18]), o14 instanceof c3) r18.push(o14);
                        else if (o14 instanceof Map) r18 = Array.from(o14.keys()).reduce(function(e12, r19) {
                            return t4(o14.get(r19), e12, null);
                        }, r18);
                        else if (o14 && o14.$isSingleNested) (r18 = Object.keys(o14._doc).reduce(function(e12, r19) {
                            return t4(o14._doc, e12, r19);
                        }, r18)).push(o14);
                        else if (o14 && o14.isMongooseDocumentArray) o14.forEach(function(e12) {
                            e12 && e12._doc && (r18 = Object.keys(e12._doc).reduce(function(r19, n19) {
                                return t4(e12._doc, r19, n19);
                            }, r18), e12 instanceof c3 && r18.push(e12));
                        });
                        else if (i18 && null != o14) for(var s16 = 0, a15 = Object.keys(o14); s16 < a15.length; s16++){
                            var u19 = a15[s16];
                            t4(o14, r18, u19);
                        }
                        return r18;
                    }
                    a9 || (a9 = r2(18)), c3 = c3 || r2(29);
                    for(var e11 = [], n18 = 0, o14 = Object.keys(this._doc); n18 < o14.length; n18++)t4(this, e11, o14[n18]);
                    return e11;
                }, tt.prototype.$__handleReject = function(t4) {
                    this.listeners("error").length ? this.emit("error", t4) : this.constructor.listeners && this.constructor.listeners("error").length && this.constructor.emit("error", t4);
                }, tt.prototype.$toObject = function(t4, r18) {
                    var n18, o14, i18 = {
                        transform: !0,
                        flattenDecimals: !0
                    }, s16 = r18 ? "toJSON" : "toObject", a15 = j(this, "constructor.base.options." + s16, {
                    }), u20 = j(this, "$__schema.options", {
                    });
                    i18 = I.options(i18, L(a15)), i18 = I.options(i18, L(u20[s16] || {
                    })), (t4 = I.isPOJO(t4) ? L(t4) : {
                    })._calledWithOptions = t4._calledWithOptions || L(t4), n18 = null != t4._calledWithOptions.minimize ? t4.minimize : null != i18.minimize ? i18.minimize : u20.minimize, o14 = null != t4._calledWithOptions.flattenMaps ? t4.flattenMaps : null != i18.flattenMaps ? i18.flattenMaps : u20.flattenMaps;
                    var c13 = Object.assign(I.clone(t4), {
                        _isNested: !0,
                        json: r18,
                        minimize: n18,
                        flattenMaps: o14
                    });
                    if (I.hasUserDefinedProperty(t4, "getters") && (c13.getters = t4.getters), I.hasUserDefinedProperty(t4, "virtuals") && (c13.virtuals = t4.virtuals), (t4.depopulate || j(t4, "_parentOptions.depopulate", !1)) && t4._isNested && this.$__.wasPopulated) return L(this._id, c13);
                    (t4 = I.options(i18, t4))._isNested = !0, t4.json = r18, t4.minimize = n18, c13._parentOptions = t4, c13._skipSingleNestedGetters = !0;
                    var l13 = Object.assign({
                    }, c13);
                    l13._skipSingleNestedGetters = !1;
                    var f12 = t4.transform, p9 = L(this._doc, c13) || {
                    };
                    t4.getters && (!function(t5, e11, r19) {
                        var n19, o15, i19 = t5.$__schema, s17 = Object.keys(i19.paths), a17 = s17.length, u21 = t5._doc;
                        if (!u21) return e11;
                        for(; a17--;){
                            var c14 = (n19 = s17[a17]).split("."), l14 = c14.length, f13 = l14 - 1, p10 = e11, h3 = void 0;
                            if (u21 = t5._doc, t5.$__isSelected(n19)) for(var y7 = 0; y7 < l14; ++y7){
                                if (h3 = c14[y7], o15 = u21[h3], y7 === f13) {
                                    var d7 = t5.get(n19);
                                    p10[h3] = L(d7, r19);
                                } else {
                                    if (null == o15) {
                                        h3 in u21 && (p10[h3] = o15);
                                        break;
                                    }
                                    p10 = p10[h3] || (p10[h3] = {
                                    });
                                }
                                u21 = o15;
                            }
                        }
                    }(this, p9, l13), t4.minimize && (p9 = /*!
 * Minimizes an object, removing undefined values and empty objects
 *
 * @param {Object} object to minimize
 * @return {Object}
 */ (function t5(r19) {
                        var n19, o15, i19, s17 = Object.keys(r19), a17 = s17.length;
                        for(; a17--;)o15 = s17[a17], i19 = r19[o15], I.isObject(i19) && !e6.isBuffer(i19) && (r19[o15] = t5(i19)), (void 0) !== r19[o15] ? n19 = !0 : delete r19[o15];
                        return n19 ? r19 : void 0;
                    })(p9) || {
                    })), (t4.virtuals || t4.getters && !1 !== t4.virtuals) && ct(this, p9, l13, t4), !1 === t4.versionKey && this.$__schema.options.versionKey && delete p9[this.$__schema.options.versionKey];
                    var h4 = t4.transform;
                    if (h4 && (function(t6, e11) {
                        var r19 = t6.$__schema, n19 = Object.keys(r19.paths || {
                        });
                        if (!t6._doc) return e11;
                        for(var o15 = 0, i19 = n19; o15 < i19.length; o15++){
                            var s17 = i19[o15], a17 = r19.paths[s17];
                            if ("function" == typeof a17.options.transform) {
                                var u21 = t6.get(s17), c15 = a17.options.transform.call(t6, u21);
                                lt(s17, c15), I.setValue(s17, c15, e11);
                            } else if (null != a17.$embeddedSchemaType && "function" == typeof a17.$embeddedSchemaType.options.transform) {
                                for(var l15 = [].concat(t6.get(s17)), f14 = a17.$embeddedSchemaType.options.transform, p11 = 0; p11 < l15.length; ++p11){
                                    var h5 = f14.call(t6, l15[p11]);
                                    l15[p11] = h5, lt(s17, h5);
                                }
                                e11[s17] = l15;
                            }
                        }
                    })(this, p9), t4.useProjection && (function(t6, e11) {
                        var r19 = t6.$__schema, n19 = Object.keys(r19.paths || {
                        });
                        if (!t6._doc) return e11;
                        var o15 = t6.$__.selected;
                        (void 0) === o15 && (o15 = {
                        }, M.applyPaths(o15, r19));
                        if (null == o15 || 0 === Object.keys(o15).length) return e11;
                        for(var i19 = 0, s18 = n19; i19 < s18.length; i19++){
                            var a18 = s18[i19];
                            null == o15[a18] || o15[a18] || delete e11[a18];
                        }
                    })(this, p9), !0 === h4 || u20.toObject && h4) {
                        var y8 = t4.json ? u20.toJSON : u20.toObject;
                        y8 && (h4 = "function" == typeof t4.transform ? t4.transform : y8.transform);
                    } else t4.transform = f12;
                    if ("function" == typeof h4) {
                        var d8 = h4(this, p9, t4);
                        (void 0) !== d8 && (p9 = d8);
                    }
                    return p9;
                }, tt.prototype.toObject = function(t4) {
                    return this.$toObject(t4);
                }, tt.prototype.toJSON = function(t4) {
                    return this.$toObject(t4, !0);
                }, tt.prototype.parent = function() {
                    return this.$__.parent;
                }, tt.prototype.$parent = tt.prototype.parent, tt.prototype.inspect = function(t4) {
                    var e11;
                    I.isPOJO(t4) && ((e11 = t4).minimize = !1);
                    var r18 = this.toObject(e11);
                    return null == r18 ? "MongooseDocument { " + r18 + " }" : r18;
                }, C.custom && /*!
  * Avoid Node deprecation warning DEP0079
  */ (tt.prototype[C.custom] = tt.prototype.inspect), tt.prototype.toString = function() {
                    var t4 = this.inspect();
                    return "string" == typeof t4 ? t4 : C(t4);
                }, tt.prototype.equals = function(t4) {
                    if (!t4) return !1;
                    var e11 = this.$__getValue("_id"), r18 = null != t4.$__ ? t4.$__getValue("_id") : t4;
                    return e11 || r18 ? e11 && e11.equals ? e11.equals(r18) : e11 === r18 : U(this, t4);
                }, tt.prototype.populate = function() {
                    if (0 === arguments.length) return this;
                    var t4, e11 = this.$__.populate || (this.$__.populate = {
                    }), r18 = I.args(arguments);
                    if ("function" == typeof r18[r18.length - 1] && (t4 = r18.pop()), r18.length) {
                        var n18, i18 = I.populate.apply(null, r18), s16 = o3(i18);
                        try {
                            for(s16.s(); !(n18 = s16.n()).done;){
                                var a15 = n18.value;
                                e11[a15.path] = a15;
                            }
                        } catch (t5) {
                            s16.e(t5);
                        } finally{
                            s16.f();
                        }
                    }
                    if (t4) {
                        var u20 = I.object.vals(e11);
                        this.$__.populate = void 0;
                        var c13 = this.constructor;
                        if (this.$__isNested) {
                            c13 = this.$__[G].constructor;
                            var l13 = this.$__.nestedPath;
                            u20.forEach(function(t5) {
                                t5.path = l13 + "." + t5.path;
                            });
                        }
                        if (null != this.$session()) {
                            var f12 = this.$session();
                            u20.forEach(function(t5) {
                                null != t5.options ? "session" in t5.options || (t5.options.session = f12) : t5.options = {
                                    session: f12
                                };
                            });
                        }
                        c13.populate(this, u20, t4);
                    }
                    return this;
                }, tt.prototype.$getPopulatedDocs = function() {
                    var t4 = [];
                    null != this.$__.populated && (t4 = t4.concat(Object.keys(this.$__.populated))), null != this.$$populatedVirtuals && (t4 = t4.concat(Object.keys(this.$$populatedVirtuals)));
                    var e11, r18 = [], n19 = o3(t4);
                    try {
                        for(n19.s(); !(e11 = n19.n()).done;){
                            var i19 = e11.value, s18 = this.get(i19);
                            Array.isArray(s18) ? r18 = r18.concat(s18) : s18 instanceof tt && r18.push(s18);
                        }
                    } catch (t5) {
                        n19.e(t5);
                    } finally{
                        n19.f();
                    }
                    return r18;
                }, tt.prototype.execPopulate = function(t4) {
                    var e11 = this, r18 = null != t4 && "function" != typeof t4;
                    return r18 ? this.populate.apply(this, arguments).execPopulate() : O(t4, function(t5) {
                        e11.populate(t5);
                    }, this.constructor.events);
                }, tt.prototype.populated = function(t4, e11, r18) {
                    if (null == e11 || !0 === e11) {
                        if (!this.$__.populated) return;
                        var n19 = t4.endsWith(".$*") ? t4.replace(/\.\$\*$/, "") : t4, o14 = this.$__.populated[n19];
                        return o14 ? !0 === e11 ? o14 : o14.value : void 0;
                    }
                    this.$__.populated || (this.$__.populated = {
                    }), this.$__.populated[t4] = {
                        value: e11,
                        options: r18
                    };
                    for(var i20 = t4.split("."), s19 = 0; s19 < i20.length - 1; ++s19){
                        var a19 = i20.slice(0, s19 + 1).join("."), u22 = this.get(a19);
                        if (null != u22 && null != u22.$__ && this.populated(a19)) {
                            var c16 = i20.slice(s19 + 1).join(".");
                            u22.populated(c16, e11, r18);
                            break;
                        }
                    }
                    return e11;
                }, tt.prototype.depopulate = function(t4) {
                    var e11;
                    "string" == typeof t4 && (t4 = t4.split(" "));
                    var r18 = this.$$populatedVirtuals ? Object.keys(this.$$populatedVirtuals) : [], n20 = j(this, "$__.populated", {
                    });
                    if (0 === arguments.length) {
                        var i20, s19 = o3(r18);
                        try {
                            for(s19.s(); !(i20 = s19.n()).done;){
                                var a20 = i20.value;
                                delete this.$$populatedVirtuals[a20], delete this._doc[a20], delete n20[a20];
                            }
                        } catch (t5) {
                            s19.e(t5);
                        } finally{
                            s19.f();
                        }
                        for(var u23 = Object.keys(n20), c17 = 0, l16 = u23; c17 < l16.length; c17++){
                            var f15 = l16[c17];
                            (e11 = this.populated(f15)) && (delete n20[f15], I.setValue(f15, e11, this._doc));
                        }
                        return this;
                    }
                    var p9, h4 = o3(t4);
                    try {
                        for(h4.s(); !(p9 = h4.n()).done;){
                            var y9 = p9.value;
                            e11 = this.populated(y9), delete n20[y9], -1 !== r18.indexOf(y9) ? (delete this.$$populatedVirtuals[y9], delete this._doc[y9]) : e11 && I.setValue(y9, e11, this._doc);
                        }
                    } catch (t5) {
                        h4.e(t5);
                    } finally{
                        h4.f();
                    }
                    return this;
                }, tt.prototype.$__fullPath = function(t4) {
                    return t4 || "";
                }, tt.prototype.getChanges = function() {
                    var t4 = this.$__delta();
                    return t4 ? t4[1] : {
                    };
                }, /*!
 * Module exports.
 */ tt.ValidationError = g, t2.exports = tt;
            }).call(this, r2(2).Buffer);
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n3(t4) {
                return (n3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t5) {
                    return typeof t5;
                } : function(t5) {
                    return t5 && "function" == typeof Symbol && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
                })(t4);
            }
            function o3(t4, e6) {
                if (!(t4 instanceof e6)) throw new TypeError("Cannot call a class as a function");
            }
            function i7(t4, e6) {
                for(var r18 = 0; r18 < e6.length; r18++){
                    var n20 = e6[r18];
                    n20.enumerable = n20.enumerable || !1, n20.configurable = !0, "value" in n20 && (n20.writable = !0), Object.defineProperty(t4, n20.key, n20);
                }
            }
            function s3(t4, e6) {
                return (s3 = Object.setPrototypeOf || function(t5, e11) {
                    return t5.__proto__ = e11, t5;
                })(t4, e6);
            }
            function a9(t4) {
                var e6 = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t5) {
                        return !1;
                    }
                }();
                return function() {
                    var r18, n21 = c3(t4);
                    if (e6) {
                        var o15 = c3(this).constructor;
                        r18 = Reflect.construct(n21, arguments, o15);
                    } else r18 = n21.apply(this, arguments);
                    return u6(this, r18);
                };
            }
            function u6(t4, e6) {
                if (e6 && ("object" === n3(e6) || "function" == typeof e6)) return e6;
                if ((void 0) !== e6) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t5) {
                    if ((void 0) === t5) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t5;
                })(t4);
            }
            function c3(t4) {
                return (c3 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t5) {
                    return t5.__proto__ || Object.getPrototypeOf(t5);
                })(t4);
            }
            var l2 = r2(14), f3 = r2(3), p2 = r2(4), h4 = function(t4) {
                !function(t5, e6) {
                    if ("function" != typeof e6 && null !== e6) throw new TypeError("Super expression must either be null or a function");
                    t5.prototype = Object.create(e6 && e6.prototype, {
                        constructor: {
                            value: t5,
                            writable: !0,
                            configurable: !0
                        }
                    }), e6 && s3(t5, e6);
                }(l17, t4);
                var e6, r18, n21, c18 = a9(l17);
                function l17(t5, e11, r19, n22, i21) {
                    var s20;
                    if (o3(this, l17), arguments.length > 0) {
                        var a21 = y2(e11), f16 = d2(e11), p9 = _2(i21), h6 = v2(null, t5, a21, r19, p9, f16);
                        (s20 = c18.call(this, h6)).init(t5, e11, r19, n22, i21);
                    } else s20 = c18.call(this, v2());
                    return u6(s20);
                }
                return e6 = l17, r18 = [
                    {
                        key: "toJSON",
                        value: function() {
                            return {
                                stringValue: this.stringValue,
                                valueType: this.valueType,
                                kind: this.kind,
                                value: this.value,
                                path: this.path,
                                reason: this.reason,
                                name: this.name,
                                message: this.message
                            };
                        }
                    },
                    {
                        key: "init",
                        value: function(t5, e11, r19, n22, o16) {
                            this.stringValue = y2(e11), this.messageFormat = _2(o16), this.kind = t5, this.value = e11, this.path = r19, this.reason = n22, this.valueType = d2(e11);
                        }
                    },
                    {
                        key: "copy",
                        value: function(t5) {
                            this.messageFormat = t5.messageFormat, this.stringValue = t5.stringValue, this.kind = t5.kind, this.value = t5.value, this.path = t5.path, this.reason = t5.reason, this.message = t5.message, this.valueType = t5.valueType;
                        }
                    },
                    {
                        key: "setModel",
                        value: function(t5) {
                            this.model = t5, this.message = v2(t5, this.kind, this.stringValue, this.path, this.messageFormat, this.valueType);
                        }
                    }
                ], i7(e6.prototype, r18), n21 && i7(e6, n21), l17;
            }(l2);
            function y2(t4) {
                var e6 = p2.inspect(t4);
                return (e6 = e6.replace(/^'|'$/g, '"')).startsWith('"') || (e6 = '"' + e6 + '"'), e6;
            }
            function d2(t4) {
                if (null == t4) return "" + t4;
                var e6 = n3(t4);
                return "object" !== e6 || "function" != typeof t4.constructor ? e6 : t4.constructor.name;
            }
            function _2(t4) {
                var e6 = f3(t4, "options.cast", null);
                if ("string" == typeof e6) return e6;
            }
            /*!
 * ignore
 */ function v2(t4, e6, r18, n21, o16, i21) {
                if (null != o16) {
                    var s20 = o16.replace("{KIND}", e6).replace("{VALUE}", r18).replace("{PATH}", n21);
                    return null != t4 && (s20 = s20.replace("{MODEL}", t4.modelName)), s20;
                }
                var a22 = "Cast to " + e6 + " failed for value " + r18 + (i21 ? " (type " + i21 + ")" : "") + ' at path "' + n21 + '"';
                return null != t4 && (a22 += ' for model "' + t4.modelName + '"'), a22;
            }
            /*!
 * exports
 */ Object.defineProperty(h4.prototype, "name", {
                value: "CastError"
            }), t2.exports = h4;
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * ignore
 */ function n3(t4) {
                return (n3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t5) {
                    return typeof t5;
                } : function(t5) {
                    return t5 && "function" == typeof Symbol && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
                })(t4);
            }
            function o3(t4, e6) {
                if (!(t4 instanceof e6)) throw new TypeError("Cannot call a class as a function");
            }
            function i7(t4, e6) {
                if (e6 && ("object" === n3(e6) || "function" == typeof e6)) return e6;
                if ((void 0) !== e6) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t5) {
                    if ((void 0) === t5) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t5;
                })(t4);
            }
            function s3(t4) {
                var e6 = "function" == typeof Map ? new Map : void 0;
                return (s3 = function(t5) {
                    if (null === t5 || (r18 = t5, -1 === Function.toString.call(r18).indexOf("[native code]"))) return t5;
                    var r18;
                    if ("function" != typeof t5) throw new TypeError("Super expression must either be null or a function");
                    if ((void 0) !== e6) {
                        if (e6.has(t5)) return e6.get(t5);
                        e6.set(t5, n21);
                    }
                    function n21() {
                        return a9(t5, arguments, l2(this).constructor);
                    }
                    return n21.prototype = Object.create(t5.prototype, {
                        constructor: {
                            value: n21,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), c3(n21, t5);
                })(t4);
            }
            function a9(t4, e6, r18) {
                return (a9 = u6() ? Reflect.construct : function(t5, e11, r19) {
                    var n21 = [
                        null
                    ];
                    n21.push.apply(n21, e11);
                    var o16 = new (Function.bind.apply(t5, n21));
                    return r19 && c3(o16, r19.prototype), o16;
                }).apply(null, arguments);
            }
            function u6() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                    })), !0;
                } catch (t4) {
                    return !1;
                }
            }
            function c3(t4, e6) {
                return (c3 = Object.setPrototypeOf || function(t5, e11) {
                    return t5.__proto__ = e11, t5;
                })(t4, e6);
            }
            function l2(t4) {
                return (l2 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t5) {
                    return t5.__proto__ || Object.getPrototypeOf(t5);
                })(t4);
            }
            var f3 = function(t4) {
                !function(t5, e6) {
                    if ("function" != typeof e6 && null !== e6) throw new TypeError("Super expression must either be null or a function");
                    t5.prototype = Object.create(e6 && e6.prototype, {
                        constructor: {
                            value: t5,
                            writable: !0,
                            configurable: !0
                        }
                    }), e6 && c3(t5, e6);
                }(s21, t4);
                var e6, r18, n21 = (e6 = s21, r18 = u6(), function() {
                    var t5, n22 = l2(e6);
                    if (r18) {
                        var o16 = l2(this).constructor;
                        t5 = Reflect.construct(n22, arguments, o16);
                    } else t5 = n22.apply(this, arguments);
                    return i7(this, t5);
                });
                function s21() {
                    return o3(this, s21), n21.apply(this, arguments);
                }
                return s21;
            }(s3(Error));
            Object.defineProperty(f3.prototype, "name", {
                value: "MongooseError"
            }), t2.exports = f3;
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * ignore
 */ var n3 = null;
            t2.exports.get = function() {
                return n3;
            }, t2.exports.set = function(t4) {
                n3 = t4;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            (function(e6) {
                function r18(t4, r19) {
                    return new e6(t4, r19);
                }
                t2.exports = {
                    normalizedFunctionString: function(t4) {
                        return t4.toString().replace(/function *\(/, "function (");
                    },
                    allocBuffer: "function" == typeof e6.alloc ? function() {
                        return e6.alloc.apply(e6, arguments);
                    } : r18,
                    toBuffer: "function" == typeof e6.from ? function() {
                        return e6.from.apply(e6, arguments);
                    } : r18
                };
            }).call(this, r2(2).Buffer);
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * ignore
 */ e3.internalToObjectOptions = {
                transform: !1,
                virtuals: !1,
                getters: !1,
                _skipDepopulateTopLevel: !0,
                depopulate: !0,
                flattenDecimals: !1,
                useProjection: !1
            };
        },
        function(t2, e3, r2) {
            "use strict";
            (function(e6) {
                /*!
 * Module dependencies.
 */ function n3(t4) {
                    return (n3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t5) {
                        return typeof t5;
                    } : function(t5) {
                        return t5 && "function" == typeof Symbol && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
                    })(t4);
                }
                function o3(t4, e11) {
                    var r18 = "undefined" != typeof Symbol && t4[Symbol.iterator] || t4["@@iterator"];
                    if (!r18) {
                        if (Array.isArray(t4) || (r18 = (function(t5, e12) {
                            if (!t5) return;
                            if ("string" == typeof t5) return i7(t5, e12);
                            var r19 = Object.prototype.toString.call(t5).slice(8, -1);
                            "Object" === r19 && t5.constructor && (r19 = t5.constructor.name);
                            if ("Map" === r19 || "Set" === r19) return Array.from(t5);
                            if ("Arguments" === r19 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r19)) return i7(t5, e12);
                        })(t4)) || e11 && t4 && "number" == typeof t4.length) {
                            r18 && (t4 = r18);
                            var n21 = 0, o17 = function() {
                            };
                            return {
                                s: o17,
                                n: function() {
                                    return n21 >= t4.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t4[n21++]
                                    };
                                },
                                e: function(t5) {
                                    throw t5;
                                },
                                f: o17
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var s3, a9 = !0, u6 = !1;
                    return {
                        s: function() {
                            r18 = r18.call(t4);
                        },
                        n: function() {
                            var t5 = r18.next();
                            return a9 = t5.done, t5;
                        },
                        e: function(t5) {
                            u6 = !0, s3 = t5;
                        },
                        f: function() {
                            try {
                                a9 || null == r18.return || r18.return();
                            } finally{
                                if (u6) throw s3;
                            }
                        }
                    };
                }
                function i7(t4, e11) {
                    (null == e11 || e11 > t4.length) && (e11 = t4.length);
                    for(var r18 = 0, n22 = new Array(e11); r18 < e11; r18++)n22[r18] = t4[r18];
                    return n22;
                }
                function s3(t4, e11) {
                    if (!(t4 instanceof e11)) throw new TypeError("Cannot call a class as a function");
                }
                function a9(t4, e11) {
                    for(var r18 = 0; r18 < e11.length; r18++){
                        var n22 = e11[r18];
                        n22.enumerable = n22.enumerable || !1, n22.configurable = !0, "value" in n22 && (n22.writable = !0), Object.defineProperty(t4, n22.key, n22);
                    }
                }
                function u6(t4, e11, r18) {
                    return (u6 = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(t5, e12, r19) {
                        var n23 = function(t6, e13) {
                            for(; !Object.prototype.hasOwnProperty.call(t6, e13) && null !== (t6 = p2(t6)););
                            return t6;
                        }(t5, e12);
                        if (n23) {
                            var o18 = Object.getOwnPropertyDescriptor(n23, e12);
                            return o18.get ? o18.get.call(r19) : o18.value;
                        }
                    })(t4, e11, r18 || t4);
                }
                function c3(t4, e11) {
                    return (c3 = Object.setPrototypeOf || function(t5, e12) {
                        return t5.__proto__ = e12, t5;
                    })(t4, e11);
                }
                function l2(t4) {
                    var e11 = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                        if (Reflect.construct.sham) return !1;
                        if ("function" == typeof Proxy) return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                            })), !0;
                        } catch (t5) {
                            return !1;
                        }
                    }();
                    return function() {
                        var r18, n23 = p2(t4);
                        if (e11) {
                            var o19 = p2(this).constructor;
                            r18 = Reflect.construct(n23, arguments, o19);
                        } else r18 = n23.apply(this, arguments);
                        return f3(this, r18);
                    };
                }
                function f3(t4, e11) {
                    if (e11 && ("object" === n3(e11) || "function" == typeof e11)) return e11;
                    if ((void 0) !== e11) throw new TypeError("Derived constructors may only return object or undefined");
                    return (function(t5) {
                        if ((void 0) === t5) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return t5;
                    })(t4);
                }
                function p2(t4) {
                    return (p2 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t5) {
                        return t5.__proto__ || Object.getPrototypeOf(t5);
                    })(t4);
                }
                var h4 = r2(86), y2 = r2(12), d2 = r2(10), _2 = r2(89), v2 = r2(37), m2 = r2(17).internalToObjectOptions, g2 = r2(4), b2 = r2(1), w3 = r2(0).arrayAtomicsSymbol, O3 = r2(0).arrayParentSymbol, S2 = r2(0).arrayPathSymbol, A2 = r2(0).arraySchemaSymbol, $2 = r2(0).documentArrayParent, E2 = Array.prototype.push, j = function(t4) {
                    !function(t5, e11) {
                        if ("function" != typeof e11 && null !== e11) throw new TypeError("Super expression must either be null or a function");
                        t5.prototype = Object.create(e11 && e11.prototype, {
                            constructor: {
                                value: t5,
                                writable: !0,
                                configurable: !0
                            }
                        }), e11 && c3(t5, e11);
                    }(n23, t4);
                    var r18 = l2(n23);
                    function n23() {
                        return s3(this, n23), r18.apply(this, arguments);
                    }
                    return (function(t5, e11, r19) {
                        e11 && a9(t5.prototype, e11), r19 && a9(t5, r19);
                    })(n23, [
                        {
                            key: "isMongooseDocumentArray",
                            get: function() {
                                return !0;
                            }
                        },
                        {
                            key: "toBSON",
                            value: function() {
                                return this.toObject(m2);
                            }
                        },
                        {
                            key: "map",
                            value: function() {
                                var t5 = u6(p2(n23.prototype), "map", this).apply(this, arguments);
                                return t5[A2] = null, t5[S2] = null, t5[O3] = null, t5;
                            }
                        },
                        {
                            key: "_cast",
                            value: function(t5, r19) {
                                if (null == this[A2]) return t5;
                                var n24 = this[A2].casterConstructor;
                                if ((n24.$isMongooseDocumentArray ? t5 && t5.isMongooseDocumentArray : t5 instanceof n24) || t5 && t5.constructor && t5.constructor.baseCasterConstructor === n24) return t5[$2] && t5.__parentArray || (t5[$2] = this[O3], t5.__parentArray = this), t5.$setIndex(r19), t5;
                                if (null == t5) return null;
                                if ((e6.isBuffer(t5) || t5 instanceof d2 || !b2.isObject(t5)) && (t5 = {
                                    _id: t5
                                }), t5 && n24.discriminators && n24.schema && n24.schema.options && n24.schema.options.discriminatorKey) {
                                    if ("string" == typeof t5[n24.schema.options.discriminatorKey] && n24.discriminators[t5[n24.schema.options.discriminatorKey]]) n24 = n24.discriminators[t5[n24.schema.options.discriminatorKey]];
                                    else {
                                        var o20 = v2(n24.discriminators, t5[n24.schema.options.discriminatorKey]);
                                        o20 && (n24 = o20);
                                    }
                                }
                                return n24.$isMongooseDocumentArray ? n24.cast(t5, this, void 0, void 0, r19) : new n24(t5, this, void 0, void 0, r19);
                            }
                        },
                        {
                            key: "id",
                            value: function(t5) {
                                var e11, r19, n24;
                                try {
                                    e11 = _2(t5).toString();
                                } catch (t6) {
                                    e11 = null;
                                }
                                var i21, s21 = o3(this);
                                try {
                                    for(s21.s(); !(i21 = s21.n()).done;){
                                        var a22 = i21.value;
                                        if (a22 && null != (n24 = a22.get("_id"))) {
                                            if (n24 instanceof y2) {
                                                if (r19 || (r19 = String(t5)), r19 == n24._id) return a22;
                                            } else if (t5 instanceof d2 || n24 instanceof d2) {
                                                if (e11 == n24) return a22;
                                            } else if (t5 == n24 || b2.deepEqual(t5, n24)) return a22;
                                        }
                                    }
                                } catch (t6) {
                                    s21.e(t6);
                                } finally{
                                    s21.f();
                                }
                                return null;
                            }
                        },
                        {
                            key: "toObject",
                            value: function(t5) {
                                return [].concat(this.map(function(e11) {
                                    return null == e11 ? null : "function" != typeof e11.toObject ? e11 : e11.toObject(t5);
                                }));
                            }
                        },
                        {
                            key: "slice",
                            value: function() {
                                var t5 = u6(p2(n23.prototype), "slice", this).apply(this, arguments);
                                return t5[O3] = this[O3], t5[S2] = this[S2], t5;
                            }
                        },
                        {
                            key: "push",
                            value: function() {
                                var t5 = u6(p2(n23.prototype), "push", this).apply(this, arguments);
                                return P2(this), t5;
                            }
                        },
                        {
                            key: "pull",
                            value: function() {
                                var t5 = u6(p2(n23.prototype), "pull", this).apply(this, arguments);
                                return P2(this), t5;
                            }
                        },
                        {
                            key: "shift",
                            value: function() {
                                var t5 = u6(p2(n23.prototype), "shift", this).apply(this, arguments);
                                return P2(this), t5;
                            }
                        },
                        {
                            key: "splice",
                            value: function() {
                                var t5 = u6(p2(n23.prototype), "splice", this).apply(this, arguments);
                                return P2(this), t5;
                            }
                        },
                        {
                            key: "inspect",
                            value: function() {
                                return this.toObject();
                            }
                        },
                        {
                            key: "create",
                            value: function(t5) {
                                var e11 = this[A2].casterConstructor;
                                if (t5 && e11.discriminators && e11.schema && e11.schema.options && e11.schema.options.discriminatorKey) {
                                    if ("string" == typeof t5[e11.schema.options.discriminatorKey] && e11.discriminators[t5[e11.schema.options.discriminatorKey]]) e11 = e11.discriminators[t5[e11.schema.options.discriminatorKey]];
                                    else {
                                        var r19 = v2(e11.discriminators, t5[e11.schema.options.discriminatorKey]);
                                        r19 && (e11 = r19);
                                    }
                                }
                                return new e11(t5, this);
                            }
                        },
                        {
                            key: "notify",
                            value: function(t5) {
                                var e11 = this;
                                return function r20(n24, o21) {
                                    for(var i21 = (o21 = o21 || e11).length; i21--;)if (null != o21[i21]) {
                                        switch(t5){
                                            case "save":
                                                n24 = e11[i21];
                                        }
                                        o21[i21].isMongooseArray ? r20(n24, o21[i21]) : o21[i21] && o21[i21].emit(t5, n24);
                                    }
                                };
                            }
                        },
                        {
                            key: "_markModified",
                            value: function(t5, e11) {
                                var r20, n24 = this[O3];
                                if (n24) {
                                    if (r20 = this[S2], arguments.length) {
                                        if (null != e11) {
                                            var o21 = t5.__index;
                                            r20 = r20 + "." + o21 + "." + e11;
                                        } else r20 = r20 + "." + t5;
                                    }
                                    if (null != r20 && r20.endsWith(".$")) return this;
                                    n24.markModified(r20, arguments.length > 0 ? t5 : n24);
                                }
                                return this;
                            }
                        }
                    ]), n23;
                }(h4);
                /*!
 * If this is a document array, each element may contain single
 * populated paths, so we need to modify the top-level document's
 * populated cache. See gh-8247, gh-8265.
 */ function P2(t4) {
                    var e11 = t4[O3];
                    if (e11 && null != e11.$__.populated) {
                        var r18, n23 = o3(Object.keys(e11.$__.populated).filter(function(e12) {
                            return e12.startsWith(t4[S2] + ".");
                        }));
                        try {
                            var i21 = function() {
                                var n24 = r18.value, o22 = n24.slice((t4[S2] + ".").length);
                                if (!Array.isArray(e11.$__.populated[n24].value)) return "continue";
                                e11.$__.populated[n24].value = t4.map(function(t5) {
                                    return t5.populated(o22);
                                });
                            };
                            for(n23.s(); !(r18 = n23.n()).done;)i21();
                        } catch (t5) {
                            n23.e(t5);
                        } finally{
                            n23.f();
                        }
                    }
                }
                g2.inspect.custom && (j.prototype[g2.inspect.custom] = j.prototype.inspect), /*!
 * Module exports.
 */ t2.exports = function(t4, e11, r20) {
                    var n24 = new j;
                    if (n24[w3] = {
                    }, n24[A2] = void 0, Array.isArray(t4) && (t4[S2] === e11 && t4[O3] === r20 && (n24[w3] = Object.assign({
                    }, t4[w3])), t4.forEach(function(t5) {
                        E2.call(n24, t5);
                    })), n24[S2] = e11, r20 && r20 instanceof y2) for(n24[O3] = r20, n24[A2] = r20.schema.path(e11); null != n24 && null != n24[A2] && n24[A2].$isMongooseArray && !n24[A2].$isMongooseDocumentArray;)n24[A2] = n24[A2].casterConstructor;
                    return n24;
                };
            }).call(this, r2(2).Buffer);
        },
        function(t2, e3, r2) {
            "use strict";
            function n3(t4) {
                return (n3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t5) {
                    return typeof t5;
                } : function(t5) {
                    return t5 && "function" == typeof Symbol && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
                })(t4);
            }
            var o3, i7 = "object" === ("undefined" == typeof Reflect ? "undefined" : n3(Reflect)) ? Reflect : null, s3 = i7 && "function" == typeof i7.apply ? i7.apply : function(t4, e6, r20) {
                return Function.prototype.apply.call(t4, e6, r20);
            };
            o3 = i7 && "function" == typeof i7.ownKeys ? i7.ownKeys : Object.getOwnPropertySymbols ? function(t4) {
                return Object.getOwnPropertyNames(t4).concat(Object.getOwnPropertySymbols(t4));
            } : function(t4) {
                return Object.getOwnPropertyNames(t4);
            };
            var a9 = Number.isNaN || function(t4) {
                return t4 != t4;
            };
            function u6() {
                u6.init.call(this);
            }
            t2.exports = u6, t2.exports.once = function(t4, e6) {
                return new Promise(function(r20, n24) {
                    function o22(r21) {
                        t4.removeListener(e6, i22), n24(r21);
                    }
                    function i22() {
                        "function" == typeof t4.removeListener && t4.removeListener("error", o22), r20([].slice.call(arguments));
                    }
                    m2(t4, e6, i22, {
                        once: !0
                    }), "error" !== e6 && (function(t5, e11, r21) {
                        "function" == typeof t5.on && m2(t5, "error", e11, r21);
                    })(t4, o22, {
                        once: !0
                    });
                });
            }, u6.EventEmitter = u6, u6.prototype._events = void 0, u6.prototype._eventsCount = 0, u6.prototype._maxListeners = void 0;
            var c3 = 10;
            function l2(t4) {
                if ("function" != typeof t4) throw new TypeError('The "listener" argument must be of type Function. Received type ' + n3(t4));
            }
            function f3(t4) {
                return (void 0) === t4._maxListeners ? u6.defaultMaxListeners : t4._maxListeners;
            }
            function p2(t4, e6, r20, n24) {
                var o22, i22, s21, a23;
                if (l2(r20), (void 0) === (i22 = t4._events) ? (i22 = t4._events = Object.create(null), t4._eventsCount = 0) : ((void 0) !== i22.newListener && (t4.emit("newListener", e6, r20.listener ? r20.listener : r20), i22 = t4._events), s21 = i22[e6]), (void 0) === s21) s21 = i22[e6] = r20, ++t4._eventsCount;
                else if ("function" == typeof s21 ? s21 = i22[e6] = n24 ? [
                    r20,
                    s21
                ] : [
                    s21,
                    r20
                ] : n24 ? s21.unshift(r20) : s21.push(r20), (o22 = f3(t4)) > 0 && s21.length > o22 && !s21.warned) {
                    s21.warned = !0;
                    var u24 = new Error("Possible EventEmitter memory leak detected. " + s21.length + " " + String(e6) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                    u24.name = "MaxListenersExceededWarning", u24.emitter = t4, u24.type = e6, u24.count = s21.length, a23 = u24, console && console.warn && console.warn(a23);
                }
                return t4;
            }
            function h4() {
                if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, 0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
            }
            function y2(t4, e6, r20) {
                var n24 = {
                    fired: !1,
                    wrapFn: void 0,
                    target: t4,
                    type: e6,
                    listener: r20
                }, o22 = h4.bind(n24);
                return o22.listener = r20, n24.wrapFn = o22, o22;
            }
            function d2(t4, e6, r20) {
                var n24 = t4._events;
                if ((void 0) === n24) return [];
                var o22 = n24[e6];
                return (void 0) === o22 ? [] : "function" == typeof o22 ? r20 ? [
                    o22.listener || o22
                ] : [
                    o22
                ] : r20 ? (function(t5) {
                    for(var e11 = new Array(t5.length), r21 = 0; r21 < e11.length; ++r21)e11[r21] = t5[r21].listener || t5[r21];
                    return e11;
                })(o22) : v2(o22, o22.length);
            }
            function _2(t4) {
                var e6 = this._events;
                if ((void 0) !== e6) {
                    var r20 = e6[t4];
                    if ("function" == typeof r20) return 1;
                    if ((void 0) !== r20) return r20.length;
                }
                return 0;
            }
            function v2(t4, e6) {
                for(var r21 = new Array(e6), n24 = 0; n24 < e6; ++n24)r21[n24] = t4[n24];
                return r21;
            }
            function m2(t4, e6, r21, o22) {
                if ("function" == typeof t4.on) o22.once ? t4.once(e6, r21) : t4.on(e6, r21);
                else {
                    if ("function" != typeof t4.addEventListener) throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + n3(t4));
                    t4.addEventListener(e6, function n24(i22) {
                        o22.once && t4.removeEventListener(e6, n24), r21(i22);
                    });
                }
            }
            Object.defineProperty(u6, "defaultMaxListeners", {
                enumerable: !0,
                get: function() {
                    return c3;
                },
                set: function(t4) {
                    if ("number" != typeof t4 || t4 < 0 || a9(t4)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + t4 + ".");
                    c3 = t4;
                }
            }), u6.init = function() {
                (void 0) !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
            }, u6.prototype.setMaxListeners = function(t4) {
                if ("number" != typeof t4 || t4 < 0 || a9(t4)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + t4 + ".");
                return this._maxListeners = t4, this;
            }, u6.prototype.getMaxListeners = function() {
                return f3(this);
            }, u6.prototype.emit = function(t4) {
                for(var e6 = [], r21 = 1; r21 < arguments.length; r21++)e6.push(arguments[r21]);
                var n24 = "error" === t4, o22 = this._events;
                if ((void 0) !== o22) n24 = n24 && (void 0) === o22.error;
                else if (!n24) return !1;
                if (n24) {
                    var i22;
                    if (e6.length > 0 && (i22 = e6[0]), i22 instanceof Error) throw i22;
                    var a23 = new Error("Unhandled error." + (i22 ? " (" + i22.message + ")" : ""));
                    throw a23.context = i22, a23;
                }
                var u25 = o22[t4];
                if ((void 0) === u25) return !1;
                if ("function" == typeof u25) s3(u25, this, e6);
                else {
                    var c18 = u25.length, l17 = v2(u25, c18);
                    for(r21 = 0; r21 < c18; ++r21)s3(l17[r21], this, e6);
                }
                return !0;
            }, u6.prototype.addListener = function(t4, e6) {
                return p2(this, t4, e6, !1);
            }, u6.prototype.on = u6.prototype.addListener, u6.prototype.prependListener = function(t4, e6) {
                return p2(this, t4, e6, !0);
            }, u6.prototype.once = function(t4, e6) {
                return l2(e6), this.on(t4, y2(this, t4, e6)), this;
            }, u6.prototype.prependOnceListener = function(t4, e6) {
                return l2(e6), this.prependListener(t4, y2(this, t4, e6)), this;
            }, u6.prototype.removeListener = function(t4, e6) {
                var r21, n24, o22, i23, s21;
                if (l2(e6), (void 0) === (n24 = this._events)) return this;
                if ((void 0) === (r21 = n24[t4])) return this;
                if (r21 === e6 || r21.listener === e6) 0 == --this._eventsCount ? this._events = Object.create(null) : (delete n24[t4], n24.removeListener && this.emit("removeListener", t4, r21.listener || e6));
                else if ("function" != typeof r21) {
                    for(o22 = -1, i23 = r21.length - 1; i23 >= 0; i23--)if (r21[i23] === e6 || r21[i23].listener === e6) {
                        s21 = r21[i23].listener, o22 = i23;
                        break;
                    }
                    if (o22 < 0) return this;
                    0 === o22 ? r21.shift() : (function(t5, e11) {
                        for(; e11 + 1 < t5.length; e11++)t5[e11] = t5[e11 + 1];
                        t5.pop();
                    })(r21, o22), 1 === r21.length && (n24[t4] = r21[0]), (void 0) !== n24.removeListener && this.emit("removeListener", t4, s21 || e6);
                }
                return this;
            }, u6.prototype.off = u6.prototype.removeListener, u6.prototype.removeAllListeners = function(t4) {
                var e6, r21, n24;
                if ((void 0) === (r21 = this._events)) return this;
                if ((void 0) === r21.removeListener) return 0 === arguments.length ? (this._events = Object.create(null), this._eventsCount = 0) : (void 0) !== r21[t4] && (0 == --this._eventsCount ? this._events = Object.create(null) : delete r21[t4]), this;
                if (0 === arguments.length) {
                    var o22, i23 = Object.keys(r21);
                    for(n24 = 0; n24 < i23.length; ++n24)"removeListener" !== (o22 = i23[n24]) && this.removeAllListeners(o22);
                    return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this;
                }
                if ("function" == typeof (e6 = r21[t4])) this.removeListener(t4, e6);
                else if ((void 0) !== e6) for(n24 = e6.length - 1; n24 >= 0; n24--)this.removeListener(t4, e6[n24]);
                return this;
            }, u6.prototype.listeners = function(t4) {
                return d2(this, t4, !0);
            }, u6.prototype.rawListeners = function(t4) {
                return d2(this, t4, !1);
            }, u6.listenerCount = function(t4, e6) {
                return "function" == typeof t4.listenerCount ? t4.listenerCount(e6) : _2.call(t4, e6);
            }, u6.prototype.listenerCount = _2, u6.prototype.eventNames = function() {
                return this._eventsCount > 0 ? o3(this._events) : [];
            };
        },
        function(t2, e3, r2) {
            "use strict";
            t2.exports = r2(15).get().Decimal128;
        },
        function(t2, e3, r2) {
            "use strict";
            (function(e6) {
                /*!
 * Determines if `arg` is an object.
 *
 * @param {Object|Array|String|Function|RegExp|any} arg
 * @api private
 * @return {Boolean}
 */ t2.exports = function(t4) {
                    return !!e6.isBuffer(t4) || "[object Object]" === Object.prototype.toString.call(t4);
                };
            }).call(this, r2(2).Buffer);
        },
        function(t2, e3, r2) {
            "use strict";
            (function(e6) {
                /*!
 * Centralize this so we can more easily work around issues with people
 * stubbing out `process.nextTick()` in tests using sinon:
 * https://github.com/sinonjs/lolex#automatically-incrementing-mocked-time
 * See gh-6074
 */ var r21 = e6.nextTick.bind(e6);
                t2.exports = function(t4) {
                    return r21(t4);
                };
            }).call(this, r2(11));
        },
        function(t2, e3, r2) {
            "use strict";
            (function(e6) {
                function n3(t4) {
                    return (n3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t5) {
                        return typeof t5;
                    } : function(t5) {
                        return t5 && "function" == typeof Symbol && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
                    })(t4);
                }
                var o3 = r2(118);
                /*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */ function i7(t4, e11) {
                    if (t4 === e11) return 0;
                    for(var r21 = t4.length, n24 = e11.length, o23 = 0, i24 = Math.min(r21, n24); o23 < i24; ++o23)if (t4[o23] !== e11[o23]) {
                        r21 = t4[o23], n24 = e11[o23];
                        break;
                    }
                    return r21 < n24 ? -1 : n24 < r21 ? 1 : 0;
                }
                function s3(t4) {
                    return e6.Buffer && "function" == typeof e6.Buffer.isBuffer ? e6.Buffer.isBuffer(t4) : !(null == t4 || !t4._isBuffer);
                }
                var a9 = r2(4), u6 = Object.prototype.hasOwnProperty, c3 = Array.prototype.slice, l2 = "foo" === (function() {
                }).name;
                function f3(t4) {
                    return Object.prototype.toString.call(t4);
                }
                function p2(t4) {
                    return !s3(t4) && "function" == typeof e6.ArrayBuffer && ("function" == typeof ArrayBuffer.isView ? ArrayBuffer.isView(t4) : !!t4 && (t4 instanceof DataView || !!(t4.buffer && t4.buffer instanceof ArrayBuffer)));
                }
                var h4 = t2.exports = g2, y2 = /\s*function\s+([^\(\s]*)\s*/;
                function d2(t4) {
                    if (a9.isFunction(t4)) {
                        if (l2) return t4.name;
                        var e11 = t4.toString().match(y2);
                        return e11 && e11[1];
                    }
                }
                function _2(t4, e12) {
                    return "string" == typeof t4 ? t4.length < e12 ? t4 : t4.slice(0, e12) : t4;
                }
                function v2(t4) {
                    if (l2 || !a9.isFunction(t4)) return a9.inspect(t4);
                    var e12 = d2(t4);
                    return "[Function" + (e12 ? ": " + e12 : "") + "]";
                }
                function m2(t4, e12, r21, n24, o23) {
                    throw new h4.AssertionError({
                        message: r21,
                        actual: t4,
                        expected: e12,
                        operator: n24,
                        stackStartFunction: o23
                    });
                }
                function g2(t4, e12) {
                    t4 || m2(t4, !0, e12, "==", h4.ok);
                }
                function b2(t4, e12, r21, o23) {
                    if (t4 === e12) return !0;
                    if (s3(t4) && s3(e12)) return 0 === i7(t4, e12);
                    if (a9.isDate(t4) && a9.isDate(e12)) return t4.getTime() === e12.getTime();
                    if (a9.isRegExp(t4) && a9.isRegExp(e12)) return t4.source === e12.source && t4.global === e12.global && t4.multiline === e12.multiline && t4.lastIndex === e12.lastIndex && t4.ignoreCase === e12.ignoreCase;
                    if (null !== t4 && "object" === n3(t4) || null !== e12 && "object" === n3(e12)) {
                        if (p2(t4) && p2(e12) && f3(t4) === f3(e12) && !(t4 instanceof Float32Array || t4 instanceof Float64Array)) return 0 === i7(new Uint8Array(t4.buffer), new Uint8Array(e12.buffer));
                        if (s3(t4) !== s3(e12)) return !1;
                        var u25 = (o23 = o23 || {
                            actual: [],
                            expected: []
                        }).actual.indexOf(t4);
                        return -1 !== u25 && u25 === o23.expected.indexOf(e12) || (o23.actual.push(t4), o23.expected.push(e12), (function(t5, e13, r22, n24) {
                            if (null == t5 || null == e13) return !1;
                            if (a9.isPrimitive(t5) || a9.isPrimitive(e13)) return t5 === e13;
                            if (r22 && Object.getPrototypeOf(t5) !== Object.getPrototypeOf(e13)) return !1;
                            var o24 = w3(t5), i24 = w3(e13);
                            if (o24 && !i24 || !o24 && i24) return !1;
                            if (o24) return t5 = c3.call(t5), e13 = c3.call(e13), b2(t5, e13, r22);
                            var s21, u26, l18 = A2(t5), f17 = A2(e13);
                            if (l18.length !== f17.length) return !1;
                            for(l18.sort(), f17.sort(), u26 = l18.length - 1; u26 >= 0; u26--)if (l18[u26] !== f17[u26]) return !1;
                            for(u26 = l18.length - 1; u26 >= 0; u26--)if (s21 = l18[u26], !b2(t5[s21], e13[s21], r22, n24)) return !1;
                            return !0;
                        })(t4, e12, r21, o23));
                    }
                    return r21 ? t4 === e12 : t4 == e12;
                }
                function w3(t4) {
                    return "[object Arguments]" == Object.prototype.toString.call(t4);
                }
                function O3(t4, e12) {
                    if (!t4 || !e12) return !1;
                    if ("[object RegExp]" == Object.prototype.toString.call(e12)) return e12.test(t4);
                    try {
                        if (t4 instanceof e12) return !0;
                    } catch (t5) {
                    }
                    return !Error.isPrototypeOf(e12) && !0 === e12.call({
                    }, t4);
                }
                function S2(t4, e12, r21, n24) {
                    var o23;
                    if ("function" != typeof e12) throw new TypeError('"block" argument must be a function');
                    "string" == typeof r21 && (n24 = r21, r21 = null), o23 = (function(t5) {
                        var e13;
                        try {
                            t5();
                        } catch (t6) {
                            e13 = t6;
                        }
                        return e13;
                    })(e12), n24 = (r21 && r21.name ? " (" + r21.name + ")." : ".") + (n24 ? " " + n24 : "."), t4 && !o23 && m2(o23, r21, "Missing expected exception" + n24);
                    var i24 = "string" == typeof n24, s21 = !t4 && o23 && !r21;
                    if ((!t4 && a9.isError(o23) && i24 && O3(o23, r21) || s21) && m2(o23, r21, "Got unwanted exception" + n24), t4 && o23 && r21 && !O3(o23, r21) || !t4 && o23) throw o23;
                }
                h4.AssertionError = function(t4) {
                    this.name = "AssertionError", this.actual = t4.actual, this.expected = t4.expected, this.operator = t4.operator, t4.message ? (this.message = t4.message, this.generatedMessage = !1) : (this.message = (function(t5) {
                        return _2(v2(t5.actual), 128) + " " + t5.operator + " " + _2(v2(t5.expected), 128);
                    })(this), this.generatedMessage = !0);
                    var e12 = t4.stackStartFunction || m2;
                    if (Error.captureStackTrace) Error.captureStackTrace(this, e12);
                    else {
                        var r21 = new Error;
                        if (r21.stack) {
                            var n24 = r21.stack, o23 = d2(e12), i24 = n24.indexOf("\n" + o23);
                            if (i24 >= 0) {
                                var s21 = n24.indexOf("\n", i24 + 1);
                                n24 = n24.substring(s21 + 1);
                            }
                            this.stack = n24;
                        }
                    }
                }, a9.inherits(h4.AssertionError, Error), h4.fail = m2, h4.ok = g2, h4.equal = function(t4, e12, r22) {
                    t4 != e12 && m2(t4, e12, r22, "==", h4.equal);
                }, h4.notEqual = function(t4, e12, r22) {
                    t4 == e12 && m2(t4, e12, r22, "!=", h4.notEqual);
                }, h4.deepEqual = function(t4, e12, r22) {
                    b2(t4, e12, !1) || m2(t4, e12, r22, "deepEqual", h4.deepEqual);
                }, h4.deepStrictEqual = function(t4, e12, r22) {
                    b2(t4, e12, !0) || m2(t4, e12, r22, "deepStrictEqual", h4.deepStrictEqual);
                }, h4.notDeepEqual = function(t4, e12, r22) {
                    b2(t4, e12, !1) && m2(t4, e12, r22, "notDeepEqual", h4.notDeepEqual);
                }, h4.notDeepStrictEqual = function t4(e12, r22, n25) {
                    b2(e12, r22, !0) && m2(e12, r22, n25, "notDeepStrictEqual", t4);
                }, h4.strictEqual = function(t5, e12, r22) {
                    t5 !== e12 && m2(t5, e12, r22, "===", h4.strictEqual);
                }, h4.notStrictEqual = function(t5, e12, r22) {
                    t5 === e12 && m2(t5, e12, r22, "!==", h4.notStrictEqual);
                }, h4.throws = function(t5, e12, r22) {
                    S2(!0, t5, e12, r22);
                }, h4.doesNotThrow = function(t5, e12, r22) {
                    S2(!1, t5, e12, r22);
                }, h4.ifError = function(t5) {
                    if (t5) throw t5;
                }, h4.strict = o3(function t5(e12, r22) {
                    e12 || m2(e12, !0, r22, "==", t5);
                }, h4, {
                    equal: h4.strictEqual,
                    deepEqual: h4.deepStrictEqual,
                    notEqual: h4.notStrictEqual,
                    notDeepEqual: h4.notDeepStrictEqual
                }), h4.strict.strict = h4.strict;
                var A2 = Object.keys || function(t6) {
                    var e12 = [];
                    for(var r22 in t6)u6.call(t6, r22) && e12.push(r22);
                    return e12;
                };
            }).call(this, r2(9));
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * If `val` is an object, returns constructor name, if possible. Otherwise returns undefined.
 */ t2.exports = function(t4) {
                if (null != t4 && "function" == typeof t4.constructor) return t4.constructor.name;
            };
        },
        function(t2, e3) {
            function r2(t4, e6) {
                if (!(this instanceof r2)) return new r2(t4, e6);
                this._bsontype = "Long", this.low_ = 0 | t4, this.high_ = 0 | e6;
            }
            r2.prototype.toInt = function() {
                return this.low_;
            }, r2.prototype.toNumber = function() {
                return this.high_ * r2.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
            }, r2.prototype.toBigInt = function() {
                return BigInt(this.toString());
            }, r2.prototype.toJSON = function() {
                return this.toString();
            }, r2.prototype.toString = function(t4) {
                var e6 = t4 || 10;
                if (e6 < 2 || 36 < e6) throw Error("radix out of range: " + e6);
                if (this.isZero()) return "0";
                if (this.isNegative()) {
                    if (this.equals(r2.MIN_VALUE)) {
                        var n3 = r2.fromNumber(e6), o3 = this.div(n3), i7 = o3.multiply(n3).subtract(this);
                        return o3.toString(e6) + i7.toInt().toString(e6);
                    }
                    return "-" + this.negate().toString(e6);
                }
                var s3 = r2.fromNumber(Math.pow(e6, 6));
                i7 = this;
                for(var a9 = ""; !i7.isZero();){
                    var u6 = i7.div(s3), c3 = i7.subtract(u6.multiply(s3)).toInt().toString(e6);
                    if ((i7 = u6).isZero()) return c3 + a9;
                    for(; c3.length < 6;)c3 = "0" + c3;
                    a9 = "" + c3 + a9;
                }
            }, r2.prototype.getHighBits = function() {
                return this.high_;
            }, r2.prototype.getLowBits = function() {
                return this.low_;
            }, r2.prototype.getLowBitsUnsigned = function() {
                return this.low_ >= 0 ? this.low_ : r2.TWO_PWR_32_DBL_ + this.low_;
            }, r2.prototype.getNumBitsAbs = function() {
                if (this.isNegative()) return this.equals(r2.MIN_VALUE) ? 64 : this.negate().getNumBitsAbs();
                for(var t4 = 0 !== this.high_ ? this.high_ : this.low_, e6 = 31; e6 > 0 && 0 == (t4 & 1 << e6); e6--);
                return 0 !== this.high_ ? e6 + 33 : e6 + 1;
            }, r2.prototype.isZero = function() {
                return 0 === this.high_ && 0 === this.low_;
            }, r2.prototype.isNegative = function() {
                return this.high_ < 0;
            }, r2.prototype.isOdd = function() {
                return 1 == (1 & this.low_);
            }, r2.prototype.equals = function(t4) {
                return this.high_ === t4.high_ && this.low_ === t4.low_;
            }, r2.prototype.notEquals = function(t4) {
                return this.high_ !== t4.high_ || this.low_ !== t4.low_;
            }, r2.prototype.lessThan = function(t4) {
                return this.compare(t4) < 0;
            }, r2.prototype.lessThanOrEqual = function(t4) {
                return this.compare(t4) <= 0;
            }, r2.prototype.greaterThan = function(t4) {
                return this.compare(t4) > 0;
            }, r2.prototype.greaterThanOrEqual = function(t4) {
                return this.compare(t4) >= 0;
            }, r2.prototype.compare = function(t4) {
                if (this.equals(t4)) return 0;
                var e6 = this.isNegative(), r22 = t4.isNegative();
                return e6 && !r22 ? -1 : !e6 && r22 ? 1 : this.subtract(t4).isNegative() ? -1 : 1;
            }, r2.prototype.negate = function() {
                return this.equals(r2.MIN_VALUE) ? r2.MIN_VALUE : this.not().add(r2.ONE);
            }, r2.prototype.add = function(t4) {
                var e6 = this.high_ >>> 16, n25 = 65535 & this.high_, o24 = this.low_ >>> 16, i25 = 65535 & this.low_, s3 = t4.high_ >>> 16, a9 = 65535 & t4.high_, u26 = t4.low_ >>> 16, c19 = 0, l2 = 0, f3 = 0, p2 = 0;
                return f3 += (p2 += i25 + (65535 & t4.low_)) >>> 16, p2 &= 65535, l2 += (f3 += o24 + u26) >>> 16, f3 &= 65535, c19 += (l2 += n25 + a9) >>> 16, l2 &= 65535, c19 += e6 + s3, c19 &= 65535, r2.fromBits(f3 << 16 | p2, c19 << 16 | l2);
            }, r2.prototype.subtract = function(t4) {
                return this.add(t4.negate());
            }, r2.prototype.multiply = function(t4) {
                if (this.isZero()) return r2.ZERO;
                if (t4.isZero()) return r2.ZERO;
                if (this.equals(r2.MIN_VALUE)) return t4.isOdd() ? r2.MIN_VALUE : r2.ZERO;
                if (t4.equals(r2.MIN_VALUE)) return this.isOdd() ? r2.MIN_VALUE : r2.ZERO;
                if (this.isNegative()) return t4.isNegative() ? this.negate().multiply(t4.negate()) : this.negate().multiply(t4).negate();
                if (t4.isNegative()) return this.multiply(t4.negate()).negate();
                if (this.lessThan(r2.TWO_PWR_24_) && t4.lessThan(r2.TWO_PWR_24_)) return r2.fromNumber(this.toNumber() * t4.toNumber());
                var e6 = this.high_ >>> 16, n25 = 65535 & this.high_, o24 = this.low_ >>> 16, i25 = 65535 & this.low_, s3 = t4.high_ >>> 16, a9 = 65535 & t4.high_, u26 = t4.low_ >>> 16, c19 = 65535 & t4.low_, l2 = 0, f3 = 0, p2 = 0, h4 = 0;
                return p2 += (h4 += i25 * c19) >>> 16, h4 &= 65535, f3 += (p2 += o24 * c19) >>> 16, p2 &= 65535, f3 += (p2 += i25 * u26) >>> 16, p2 &= 65535, l2 += (f3 += n25 * c19) >>> 16, f3 &= 65535, l2 += (f3 += o24 * u26) >>> 16, f3 &= 65535, l2 += (f3 += i25 * a9) >>> 16, f3 &= 65535, l2 += e6 * c19 + n25 * u26 + o24 * a9 + i25 * s3, l2 &= 65535, r2.fromBits(p2 << 16 | h4, l2 << 16 | f3);
            }, r2.prototype.div = function(t4) {
                if (t4.isZero()) throw Error("division by zero");
                if (this.isZero()) return r2.ZERO;
                if (this.equals(r2.MIN_VALUE)) {
                    if (t4.equals(r2.ONE) || t4.equals(r2.NEG_ONE)) return r2.MIN_VALUE;
                    if (t4.equals(r2.MIN_VALUE)) return r2.ONE;
                    var e6 = this.shiftRight(1).div(t4).shiftLeft(1);
                    if (e6.equals(r2.ZERO)) return t4.isNegative() ? r2.ONE : r2.NEG_ONE;
                    var n25 = this.subtract(t4.multiply(e6));
                    return e6.add(n25.div(t4));
                }
                if (t4.equals(r2.MIN_VALUE)) return r2.ZERO;
                if (this.isNegative()) return t4.isNegative() ? this.negate().div(t4.negate()) : this.negate().div(t4).negate();
                if (t4.isNegative()) return this.div(t4.negate()).negate();
                var o24 = r2.ZERO;
                for(n25 = this; n25.greaterThanOrEqual(t4);){
                    e6 = Math.max(1, Math.floor(n25.toNumber() / t4.toNumber()));
                    for(var i25 = Math.ceil(Math.log(e6) / Math.LN2), s3 = i25 <= 48 ? 1 : Math.pow(2, i25 - 48), a9 = r2.fromNumber(e6), u26 = a9.multiply(t4); u26.isNegative() || u26.greaterThan(n25);)e6 -= s3, u26 = (a9 = r2.fromNumber(e6)).multiply(t4);
                    a9.isZero() && (a9 = r2.ONE), o24 = o24.add(a9), n25 = n25.subtract(u26);
                }
                return o24;
            }, r2.prototype.modulo = function(t4) {
                return this.subtract(this.div(t4).multiply(t4));
            }, r2.prototype.not = function() {
                return r2.fromBits(~this.low_, ~this.high_);
            }, r2.prototype.and = function(t4) {
                return r2.fromBits(this.low_ & t4.low_, this.high_ & t4.high_);
            }, r2.prototype.or = function(t4) {
                return r2.fromBits(this.low_ | t4.low_, this.high_ | t4.high_);
            }, r2.prototype.xor = function(t4) {
                return r2.fromBits(this.low_ ^ t4.low_, this.high_ ^ t4.high_);
            }, r2.prototype.shiftLeft = function(t4) {
                if (0 === (t4 &= 63)) return this;
                var e12 = this.low_;
                if (t4 < 32) {
                    var n26 = this.high_;
                    return r2.fromBits(e12 << t4, n26 << t4 | e12 >>> 32 - t4);
                }
                return r2.fromBits(0, e12 << t4 - 32);
            }, r2.prototype.shiftRight = function(t4) {
                if (0 === (t4 &= 63)) return this;
                var e12 = this.high_;
                if (t4 < 32) {
                    var n27 = this.low_;
                    return r2.fromBits(n27 >>> t4 | e12 << 32 - t4, e12 >> t4);
                }
                return r2.fromBits(e12 >> t4 - 32, e12 >= 0 ? 0 : -1);
            }, r2.prototype.shiftRightUnsigned = function(t4) {
                if (0 === (t4 &= 63)) return this;
                var e12 = this.high_;
                if (t4 < 32) {
                    var n28 = this.low_;
                    return r2.fromBits(n28 >>> t4 | e12 << 32 - t4, e12 >>> t4);
                }
                return 32 === t4 ? r2.fromBits(e12, 0) : r2.fromBits(e12 >>> t4 - 32, 0);
            }, r2.fromInt = function(t4) {
                if (-128 <= t4 && t4 < 128) {
                    var e12 = r2.INT_CACHE_[t4];
                    if (e12) return e12;
                }
                var n29 = new r2(0 | t4, t4 < 0 ? -1 : 0);
                return -128 <= t4 && t4 < 128 && (r2.INT_CACHE_[t4] = n29), n29;
            }, r2.fromNumber = function(t4) {
                return isNaN(t4) || !isFinite(t4) ? r2.ZERO : t4 <= -r2.TWO_PWR_63_DBL_ ? r2.MIN_VALUE : t4 + 1 >= r2.TWO_PWR_63_DBL_ ? r2.MAX_VALUE : t4 < 0 ? r2.fromNumber(-t4).negate() : new r2(t4 % r2.TWO_PWR_32_DBL_ | 0, t4 / r2.TWO_PWR_32_DBL_ | 0);
            }, r2.fromBigInt = function(t4) {
                return r2.fromString(t4.toString(10), 10);
            }, r2.fromBits = function(t4, e13) {
                return new r2(t4, e13);
            }, r2.fromString = function(t4, e13) {
                if (0 === t4.length) throw Error("number format error: empty string");
                var n29 = e13 || 10;
                if (n29 < 2 || 36 < n29) throw Error("radix out of range: " + n29);
                if ("-" === t4.charAt(0)) return r2.fromString(t4.substring(1), n29).negate();
                if (t4.indexOf("-") >= 0) throw Error('number format error: interior "-" character: ' + t4);
                for(var o24 = r2.fromNumber(Math.pow(n29, 8)), i26 = r2.ZERO, s22 = 0; s22 < t4.length; s22 += 8){
                    var a24 = Math.min(8, t4.length - s22), u27 = parseInt(t4.substring(s22, s22 + a24), n29);
                    if (a24 < 8) {
                        var c19 = r2.fromNumber(Math.pow(n29, a24));
                        i26 = i26.multiply(c19).add(r2.fromNumber(u27));
                    } else i26 = (i26 = i26.multiply(o24)).add(r2.fromNumber(u27));
                }
                return i26;
            }, r2.INT_CACHE_ = {
            }, r2.TWO_PWR_16_DBL_ = 65536, r2.TWO_PWR_24_DBL_ = 16777216, r2.TWO_PWR_32_DBL_ = r2.TWO_PWR_16_DBL_ * r2.TWO_PWR_16_DBL_, r2.TWO_PWR_31_DBL_ = r2.TWO_PWR_32_DBL_ / 2, r2.TWO_PWR_48_DBL_ = r2.TWO_PWR_32_DBL_ * r2.TWO_PWR_16_DBL_, r2.TWO_PWR_64_DBL_ = r2.TWO_PWR_32_DBL_ * r2.TWO_PWR_32_DBL_, r2.TWO_PWR_63_DBL_ = r2.TWO_PWR_64_DBL_ / 2, r2.ZERO = r2.fromInt(0), r2.ONE = r2.fromInt(1), r2.NEG_ONE = r2.fromInt(-1), r2.MAX_VALUE = r2.fromBits(-1, 2147483647), r2.MIN_VALUE = r2.fromBits(0, -2147483648), r2.TWO_PWR_24_ = r2.fromInt(16777216), t2.exports = r2, t2.exports.Long = r2;
        },
        function(t2, e3, r2) {
            "use strict";
            function n29(t4, e13) {
                var r22 = "undefined" != typeof Symbol && t4[Symbol.iterator] || t4["@@iterator"];
                if (!r22) {
                    if (Array.isArray(t4) || (r22 = (function(t5, e14) {
                        if (!t5) return;
                        if ("string" == typeof t5) return o24(t5, e14);
                        var r23 = Object.prototype.toString.call(t5).slice(8, -1);
                        "Object" === r23 && t5.constructor && (r23 = t5.constructor.name);
                        if ("Map" === r23 || "Set" === r23) return Array.from(t5);
                        if ("Arguments" === r23 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r23)) return o24(t5, e14);
                    })(t4)) || e13 && t4 && "number" == typeof t4.length) {
                        r22 && (t4 = r22);
                        var n30 = 0, i26 = function() {
                        };
                        return {
                            s: i26,
                            n: function() {
                                return n30 >= t4.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t4[n30++]
                                };
                            },
                            e: function(t5) {
                                throw t5;
                            },
                            f: i26
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s22, a25 = !0, u28 = !1;
                return {
                    s: function() {
                        r22 = r22.call(t4);
                    },
                    n: function() {
                        var t5 = r22.next();
                        return a25 = t5.done, t5;
                    },
                    e: function(t5) {
                        u28 = !0, s22 = t5;
                    },
                    f: function() {
                        try {
                            a25 || null == r22.return || r22.return();
                        } finally{
                            if (u28) throw s22;
                        }
                    }
                };
            }
            function o24(t4, e13) {
                (null == e13 || e13 > t4.length) && (e13 = t4.length);
                for(var r22 = 0, n31 = new Array(e13); r22 < e13; r22++)n31[r22] = t4[r22];
                return n31;
            }
            var i27 = r2(65), s22 = r2(20), a25 = r2(10), u28 = r2(51), c20 = r2(31), l2 = r2(66), f3 = r2(67), p2 = r2(21), h4 = r2(0), y2 = r2(1);
            /*!
 * Object clone with Mongoose natives support.
 *
 * If options.minimize is true, creates a minimal data object. Empty objects and undefined values will not be cloned. This makes the data payload sent to MongoDB as small as possible.
 *
 * Functions are never cloned.
 *
 * @param {Object} obj the object to clone
 * @param {Object} options
 * @param {Boolean} isArrayChild true if cloning immediately underneath an array. Special case for minimize.
 * @return {Object} the cloned object
 * @api private
 */ function d2(t4, e13, r22) {
                if (null == t4) return t4;
                if (Array.isArray(t4)) return (function(t5, e14) {
                    var r23, o25 = [], i28 = n29(t5);
                    try {
                        for(i28.s(); !(r23 = i28.n()).done;){
                            var s23 = r23.value;
                            o25.push(d2(s23, e14, !0));
                        }
                    } catch (t6) {
                        i28.e(t6);
                    } finally{
                        i28.f();
                    }
                    return o25;
                })(t4, e13);
                if (c20(t4)) return e13 && e13._skipSingleNestedGetters && t4.$isSingleNested && (e13 = Object.assign({
                }, e13, {
                    getters: !1
                })), y2.isPOJO(t4) && null != t4.$__ && null != t4._doc ? t4._doc : e13 && e13.json && "function" == typeof t4.toJSON ? t4.toJSON(e13) : t4.toObject(e13);
                if (t4.constructor) switch(l2(t4.constructor)){
                    case "Object":
                        return _2(t4, e13, r22);
                    case "Date":
                        return new t4.constructor(+t4);
                    case "RegExp":
                        return i27(t4);
                }
                return t4 instanceof a25 ? new a25(t4.id) : f3(t4, "Decimal128") ? e13 && e13.flattenDecimals ? t4.toJSON() : s22.fromString(t4.toString()) : !t4.constructor && p2(t4) ? _2(t4, e13, r22) : t4[h4.schemaTypeSymbol] ? t4.clone() : e13 && e13.bson && "function" == typeof t4.toBSON ? t4 : null != t4.valueOf ? t4.valueOf() : _2(t4, e13, r22);
            }
            /*!
 * ignore
 */ function _2(t4, e13, r22) {
                for(var n31, o25 = e13 && e13.minimize, i28 = {
                }, s24 = 0, a26 = Object.keys(t4); s24 < a26.length; s24++){
                    var c21 = a26[s24];
                    if (!u28.has(c21)) {
                        var l18 = d2(t4[c21], e13);
                        o25 && (void 0) === l18 || (!1 === o25 && (void 0) === l18 ? delete i28[c21] : (n31 || (n31 = !0), i28[c21] = l18));
                    }
                }
                return o25 && !r22 ? n31 && i28 : i28;
            }
            t2.exports = d2;
        },
        function(t2, e3, r2) {
            "use strict";
            var n29 = r2(68), o24 = r2(22), i27 = Symbol("mongoose:emitted");
            t2.exports = function(t4, e13, r22, s22) {
                return "function" == typeof t4 ? e13(function(e14) {
                    if (null == e14) t4.apply(this, arguments);
                    else {
                        null != r22 && null != r22.listeners && r22.listeners("error").length > 0 && !e14[i27] && (e14[i27] = !0, r22.emit("error", e14));
                        try {
                            t4(e14);
                        } catch (e15) {
                            return o24(function() {
                                throw e15;
                            });
                        }
                    }
                }) : new (s22 = s22 || n29.get())(function(t5, n31) {
                    e13(function(e14, o25) {
                        return null != e14 ? (null != r22 && null != r22.listeners && r22.listeners("error").length > 0 && !e14[i27] && (e14[i27] = !0, r22.emit("error", e14)), n31(e14)) : arguments.length > 2 ? t5(Array.prototype.slice.call(arguments, 1)) : void t5(o25);
                    });
                });
            };
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ var n29 = r2(6), o24 = r2(35), i27 = r2(21), s22 = r2(1);
            function a25(t4, e13) {
                if (e13 && e13.default) {
                    var r22 = e13.default;
                    Array.isArray(r22) && 0 === r22.length ? e13.default = Array : !e13.shared && i27(r22) && 0 === Object.keys(r22).length && (e13.default = function() {
                        return {
                        };
                    });
                }
                n29.call(this, t4, e13, "Mixed"), this[o24.schemaMixedSymbol] = !0;
            }
            a25.schemaName = "Mixed", a25.defaultOptions = {
            }, /*!
 * Inherits from SchemaType.
 */ a25.prototype = Object.create(n29.prototype), a25.prototype.constructor = a25, a25.get = n29.get, a25.set = n29.set, a25.prototype.cast = function(t4) {
                return t4 instanceof Error ? s22.errorToPOJO(t4) : t4;
            }, a25.prototype.castForQuery = function(t4, e13) {
                return 2 === arguments.length ? e13 : t4;
            }, /*!
 * Module exports.
 */ t2.exports = a25;
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ var n29 = r2(62)(), o24 = r2(19).EventEmitter, i27 = r2(33), s22 = r2(22), a25 = r2(17).internalToObjectOptions, u28 = r2(3), c20 = r2(27), l2 = r2(4), f3 = r2(0).documentArrayParent, p2 = r2(0).validatorErrorSymbol;
            function h4(t4, e13, r23, o25, i28) {
                var s24 = {
                };
                null != e13 && e13.isMongooseDocumentArray ? (this.__parentArray = e13, this[f3] = e13.$parent()) : (this.__parentArray = void 0, this[f3] = void 0), this.$setIndex(i28), this.$isDocumentArrayElement = !0, null != this[f3] && (s24.defaults = this[f3].$__.$options.defaults), n29.call(this, t4, o25, r23, s24);
                var a26 = this;
                this.on("isNew", function(t5) {
                    a26.isNew = t5;
                }), a26.on("save", function() {
                    a26.constructor.emit("save", a26);
                });
            }
            /*!
 * Inherit from Document
 */ for(var y2 in h4.prototype = Object.create(n29.prototype), h4.prototype.constructor = h4, o24.prototype)h4[y2] = o24.prototype[y2];
            h4.prototype.toBSON = function() {
                return this.toObject(a25);
            }, /*!
 * ignore
 */ h4.prototype.$setIndex = function(t4) {
                if (this.__index = t4, null != u28(this, "$__.validationError", null)) for(var e13 = 0, r23 = Object.keys(this.$__.validationError.errors); e13 < r23.length; e13++){
                    var n31 = r23[e13];
                    this.invalidate(n31, this.$__.validationError.errors[n31]);
                }
            }, h4.prototype.markModified = function(t4) {
                if (this.$__.activePaths.modify(t4), this.__parentArray) {
                    var e13 = this.__parentArray.$path() + ".0." + t4;
                    this.isNew && this.ownerDocument().$__isSelected(e13) ? this.__parentArray._markModified() : this.__parentArray._markModified(this, t4);
                }
            }, /*!
 * ignore
 */ h4.prototype.populate = function() {
                throw new Error('Mongoose does not support calling populate() on nested docs. Instead of `doc.arr[0].populate("path")`, use `doc.populate("arr.0.path")`');
            }, h4.prototype.save = function(t4, e14) {
                var r23 = this;
                return "function" == typeof t4 && (e14 = t4, t4 = {
                }), (t4 = t4 || {
                }).suppressWarning || console.warn("mongoose: calling `save()` on a subdoc does **not** save the document to MongoDB, it only runs save middleware. Use `subdoc.save({ suppressWarning: true })` to hide this warning if you're sure this behavior is right for your app."), c20(e14, function(t5) {
                    r23.$__save(t5);
                });
            }, h4.prototype.$__save = function(t4) {
                var e14 = this;
                return s22(function() {
                    return t4(null, e14);
                });
            }, /*!
 * no-op for hooks
 */ h4.prototype.$__remove = function(t4) {
                if (null != t4) return t4(null, this);
            }, h4.prototype.remove = function(t4, e14) {
                if ("function" != typeof t4 || e14 || (e14 = t4, t4 = void 0), !this.__parentArray || t4 && t4.noop) return this.$__remove(e14), this;
                var r23;
                if (!this.willRemove) {
                    if (!(r23 = this._doc._id)) throw new Error("For your own good, Mongoose does not know how to remove an EmbeddedDocument that has no _id");
                    this.__parentArray.pull({
                        _id: r23
                    }), this.willRemove = !0, /*!
 * Registers remove event listeners for triggering
 * on subdocuments.
 *
 * @param {EmbeddedDocument} sub
 * @api private
 */ (function(t5) {
                        var e15 = t5.ownerDocument();
                        function r24() {
                            e15.removeListener("save", r24), e15.removeListener("remove", r24), t5.emit("remove", t5), t5.constructor.emit("remove", t5), e15 = t5 = null;
                        }
                        e15.on("save", r24), e15.on("remove", r24);
                    })(this);
                }
                return this.$__remove(e14), this;
            }, h4.prototype.update = function() {
                throw new Error("The #update method is not available on EmbeddedDocuments");
            }, h4.prototype.inspect = function() {
                return this.toObject({
                    transform: !1,
                    virtuals: !1,
                    flattenDecimals: !1
                });
            }, l2.inspect.custom && /*!
  * Avoid Node deprecation warning DEP0079
  */ (h4.prototype[l2.inspect.custom] = h4.prototype.inspect), h4.prototype.invalidate = function(t4, e14, r23) {
                if (n29.prototype.invalidate.call(this, t4, e14, r23), !this[f3] || null == this.__index) {
                    if (e14[p2] || e14 instanceof i27) return this.ownerDocument().$__.validationError;
                    throw e14;
                }
                var o25 = this.__index, s24 = [
                    this.__parentArray.$path(),
                    o25,
                    t4
                ].join(".");
                return this[f3].invalidate(s24, e14, r23), this.ownerDocument().$__.validationError;
            }, h4.prototype.$markValid = function(t4) {
                if (this[f3]) {
                    var e14 = this.__index;
                    if ((void 0) !== e14) {
                        var r23 = [
                            this.__parentArray.$path(),
                            e14,
                            t4
                        ].join(".");
                        this[f3].$markValid(r23);
                    }
                }
            }, /*!
 * ignore
 */ h4.prototype.$ignore = function(t4) {
                if (n29.prototype.$ignore.call(this, t4), this[f3]) {
                    var e15 = this.__index;
                    if ((void 0) !== e15) {
                        var r24 = [
                            this.__parentArray.$path(),
                            e15,
                            t4
                        ].join(".");
                        this[f3].$ignore(r24);
                    }
                }
            }, h4.prototype.$isValid = function(t4) {
                return (void 0) === this.__index || !this[f3] || !this[f3].$__.validationError || !this[f3].$__.validationError.errors[this.$__fullPath(t4)];
            }, h4.prototype.ownerDocument = function() {
                if (this.$__.ownerDocument) return this.$__.ownerDocument;
                var t4 = this[f3];
                if (!t4) return this;
                for(; t4[f3] || t4.$__parent;)t4 = t4[f3] || t4.$__parent;
                return this.$__.ownerDocument = t4, this.$__.ownerDocument;
            }, h4.prototype.$__fullPath = function(t4) {
                if (!this.$__.fullPath) {
                    var e16 = this;
                    if (!e16[f3]) return t4;
                    for(var r25 = []; e16[f3] || e16.$__parent;)e16[f3] ? r25.unshift(e16.__parentArray.$path()) : r25.unshift(e16.$basePath), e16 = e16[f3] || e16.$__parent;
                    this.$__.fullPath = r25.join("."), this.$__.ownerDocument || (this.$__.ownerDocument = e16);
                }
                return t4 ? this.$__.fullPath + "." + t4 : this.$__.fullPath;
            }, h4.prototype.parent = function() {
                return this[f3];
            }, h4.prototype.$parent = h4.prototype.parent, h4.prototype.parentArray = function() {
                return this.__parentArray;
            }, /*!
 * Module exports.
 */ t2.exports = h4;
        },
        function(t2, e3, r2) {
            (function(e17) {
                if ((void 0) !== e17) var n29 = r2(2).Buffer;
                var o24 = r2(16);
                function i27(t4, e18) {
                    if (!(this instanceof i27)) return new i27(t4, e18);
                    if (!(null == t4 || "string" == typeof t4 || n29.isBuffer(t4) || t4 instanceof Uint8Array || Array.isArray(t4))) throw new Error("only String, Buffer, Uint8Array or Array accepted");
                    if (this._bsontype = "Binary", t4 instanceof Number ? (this.sub_type = t4, this.position = 0) : (this.sub_type = null == e18 ? s24 : e18, this.position = 0), null == t4 || t4 instanceof Number) (void 0) !== n29 ? this.buffer = o24.allocBuffer(i27.BUFFER_SIZE) : "undefined" != typeof Uint8Array ? this.buffer = new Uint8Array(new ArrayBuffer(i27.BUFFER_SIZE)) : this.buffer = new Array(i27.BUFFER_SIZE), this.position = 0;
                    else {
                        if ("string" == typeof t4) {
                            if ((void 0) !== n29) this.buffer = o24.toBuffer(t4);
                            else {
                                if ("undefined" == typeof Uint8Array && "[object Array]" !== Object.prototype.toString.call(t4)) throw new Error("only String, Buffer, Uint8Array or Array accepted");
                                this.buffer = a25(t4);
                            }
                        } else this.buffer = t4;
                        this.position = t4.length;
                    }
                }
                i27.prototype.put = function(t4) {
                    if (null != t4.length && "number" != typeof t4 && 1 !== t4.length) throw new Error("only accepts single character String, Uint8Array or Array");
                    if ("number" != typeof t4 && t4 < 0 || t4 > 255) throw new Error("only accepts number in a valid unsigned byte range 0-255");
                    var e18 = null;
                    if (e18 = "string" == typeof t4 ? t4.charCodeAt(0) : null != t4.length ? t4[0] : t4, this.buffer.length > this.position) this.buffer[this.position++] = e18;
                    else if ((void 0) !== n29 && n29.isBuffer(this.buffer)) {
                        var r26 = o24.allocBuffer(i27.BUFFER_SIZE + this.buffer.length);
                        this.buffer.copy(r26, 0, 0, this.buffer.length), this.buffer = r26, this.buffer[this.position++] = e18;
                    } else {
                        r26 = null, r26 = "[object Uint8Array]" === Object.prototype.toString.call(this.buffer) ? new Uint8Array(new ArrayBuffer(i27.BUFFER_SIZE + this.buffer.length)) : new Array(i27.BUFFER_SIZE + this.buffer.length);
                        for(var s22 = 0; s22 < this.buffer.length; s22++)r26[s22] = this.buffer[s22];
                        this.buffer = r26, this.buffer[this.position++] = e18;
                    }
                }, i27.prototype.write = function(t4, e18) {
                    if (e18 = "number" == typeof e18 ? e18 : this.position, this.buffer.length < e18 + t4.length) {
                        var r27 = null;
                        if ((void 0) !== n29 && n29.isBuffer(this.buffer)) r27 = o24.allocBuffer(this.buffer.length + t4.length), this.buffer.copy(r27, 0, 0, this.buffer.length);
                        else if ("[object Uint8Array]" === Object.prototype.toString.call(this.buffer)) {
                            r27 = new Uint8Array(new ArrayBuffer(this.buffer.length + t4.length));
                            for(var i28 = 0; i28 < this.position; i28++)r27[i28] = this.buffer[i28];
                        }
                        this.buffer = r27;
                    }
                    if ((void 0) !== n29 && n29.isBuffer(t4) && n29.isBuffer(this.buffer)) t4.copy(this.buffer, e18, 0, t4.length), this.position = e18 + t4.length > this.position ? e18 + t4.length : this.position;
                    else if ((void 0) !== n29 && "string" == typeof t4 && n29.isBuffer(this.buffer)) this.buffer.write(t4, e18, "binary"), this.position = e18 + t4.length > this.position ? e18 + t4.length : this.position;
                    else if ("[object Uint8Array]" === Object.prototype.toString.call(t4) || "[object Array]" === Object.prototype.toString.call(t4) && "string" != typeof t4) {
                        for(i28 = 0; i28 < t4.length; i28++)this.buffer[e18++] = t4[i28];
                        this.position = e18 > this.position ? e18 : this.position;
                    } else if ("string" == typeof t4) {
                        for(i28 = 0; i28 < t4.length; i28++)this.buffer[e18++] = t4.charCodeAt(i28);
                        this.position = e18 > this.position ? e18 : this.position;
                    }
                }, i27.prototype.read = function(t4, e18) {
                    if (e18 = e18 && e18 > 0 ? e18 : this.position, this.buffer.slice) return this.buffer.slice(t4, t4 + e18);
                    for(var r28 = "undefined" != typeof Uint8Array ? new Uint8Array(new ArrayBuffer(e18)) : new Array(e18), n32 = 0; n32 < e18; n32++)r28[n32] = this.buffer[t4++];
                    return r28;
                }, i27.prototype.value = function(t4) {
                    if ((t4 = null != t4 && t4) && (void 0) !== n29 && n29.isBuffer(this.buffer) && this.buffer.length === this.position) return this.buffer;
                    if ((void 0) !== n29 && n29.isBuffer(this.buffer)) return t4 ? this.buffer.slice(0, this.position) : this.buffer.toString("binary", 0, this.position);
                    if (t4) {
                        if (null != this.buffer.slice) return this.buffer.slice(0, this.position);
                        for(var e18 = "[object Uint8Array]" === Object.prototype.toString.call(this.buffer) ? new Uint8Array(new ArrayBuffer(this.position)) : new Array(this.position), r28 = 0; r28 < this.position; r28++)e18[r28] = this.buffer[r28];
                        return e18;
                    }
                    return u28(this.buffer, 0, this.position);
                }, i27.prototype.length = function() {
                    return this.position;
                }, i27.prototype.toJSON = function() {
                    return null != this.buffer ? this.buffer.toString("base64") : "";
                }, i27.prototype.toString = function(t4) {
                    return null != this.buffer ? this.buffer.slice(0, this.position).toString(t4) : "";
                };
                var s24 = 0, a25 = function(t4) {
                    for(var e19 = "undefined" != typeof Uint8Array ? new Uint8Array(new ArrayBuffer(t4.length)) : new Array(t4.length), r29 = 0; r29 < t4.length; r29++)e19[r29] = t4.charCodeAt(r29);
                    return e19;
                }, u28 = function(t4, e19, r29) {
                    for(var n32 = "", o25 = e19; o25 < r29; o25++)n32 += String.fromCharCode(t4[o25]);
                    return n32;
                };
                i27.BUFFER_SIZE = 256, i27.SUBTYPE_DEFAULT = 0, i27.SUBTYPE_FUNCTION = 1, i27.SUBTYPE_BYTE_ARRAY = 2, i27.SUBTYPE_UUID_OLD = 3, i27.SUBTYPE_UUID = 4, i27.SUBTYPE_MD5 = 5, i27.SUBTYPE_USER_DEFINED = 128, t2.exports = i27, t2.exports.Binary = i27;
            }).call(this, r2(9));
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Returns if `v` is a mongoose object that has a `toObject()` method we can use.
 *
 * This is for compatibility with libs like Date.js which do foolish things to Natives.
 *
 * @param {any} v
 * @api private
 */ t2.exports = function(t4) {
                return null != t4 && (null != t4.$__ || t4.isMongooseArray || t4.isMongooseBuffer || t4.$isMongooseMap);
            };
        },
        function(t2, e3, r2) {
            "use strict";
            var n29 = [
                "find",
                "findOne",
                "update",
                "updateMany",
                "updateOne",
                "replaceOne",
                "remove",
                "count",
                "distinct",
                "findAndModify",
                "aggregate",
                "findStream",
                "deleteOne",
                "deleteMany"
            ];
            function o24() {
            }
            for(var i27 = 0, s24 = n29.length; i27 < s24; ++i27){
                var a25 = n29[i27];
                o24.prototype[a25] = u28(a25);
            }
            function u28(t4) {
                return function() {
                    throw new Error("collection." + t4 + " not implemented");
                };
            }
            t2.exports = o24, o24.methods = n29;
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module requirements
 */ function n29(t4) {
                return (n29 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t5) {
                    return typeof t5;
                } : function(t5) {
                    return t5 && "function" == typeof Symbol && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
                })(t4);
            }
            function o24(t4, e17) {
                for(var r29 = 0; r29 < e17.length; r29++){
                    var n32 = e17[r29];
                    n32.enumerable = n32.enumerable || !1, n32.configurable = !0, "value" in n32 && (n32.writable = !0), Object.defineProperty(t4, n32.key, n32);
                }
            }
            function i27(t4, e17) {
                return (i27 = Object.setPrototypeOf || function(t5, e19) {
                    return t5.__proto__ = e19, t5;
                })(t4, e17);
            }
            function s24(t4) {
                var e17 = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t5) {
                        return !1;
                    }
                }();
                return function() {
                    var r29, n33 = u28(t4);
                    if (e17) {
                        var o25 = u28(this).constructor;
                        r29 = Reflect.construct(n33, arguments, o25);
                    } else r29 = n33.apply(this, arguments);
                    return a26(this, r29);
                };
            }
            function a26(t4, e17) {
                if (e17 && ("object" === n29(e17) || "function" == typeof e17)) return e17;
                if ((void 0) !== e17) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t5) {
                    if ((void 0) === t5) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t5;
                })(t4);
            }
            function u28(t4) {
                return (u28 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t5) {
                    return t5.__proto__ || Object.getPrototypeOf(t5);
                })(t4);
            }
            var c20 = r2(14), l2 = r2(24), f3 = r2(4), p2 = function(t4) {
                !function(t5, e17) {
                    if ("function" != typeof e17 && null !== e17) throw new TypeError("Super expression must either be null or a function");
                    t5.prototype = Object.create(e17 && e17.prototype, {
                        constructor: {
                            value: t5,
                            writable: !0,
                            configurable: !0
                        }
                    }), e17 && i27(t5, e17);
                }(u29, t4);
                var e17, r29, n33, a27 = s24(u29);
                function u29(t5) {
                    var e19, r30;
                    return (function(t6, e20) {
                        if (!(t6 instanceof e20)) throw new TypeError("Cannot call a class as a function");
                    })(this, u29), r30 = "model" === l2(t5) ? t5.constructor.modelName + " validation failed" : "Validation failed", (e19 = a27.call(this, r30)).errors = {
                    }, e19._message = r30, t5 && (t5.errors = e19.errors), e19;
                }
                return e17 = u29, r29 = [
                    {
                        key: "toString",
                        value: function() {
                            return this.name + ": " + h4(this);
                        }
                    },
                    {
                        key: "inspect",
                        value: function() {
                            return Object.assign(new Error(this.message), this);
                        }
                    },
                    {
                        key: "addError",
                        value: function(t5, e19) {
                            this.errors[t5] = e19, this.message = this._message + ": " + h4(this);
                        }
                    }
                ], o24(e17.prototype, r29), n33 && o24(e17, n33), u29;
            }(c20);
            /*!
 * ignore
 */ function h4(t4) {
                for(var e17, r29 = Object.keys(t4.errors || {
                }), n33 = r29.length, o26 = [], i29 = 0; i29 < n33; ++i29)e17 = r29[i29], t4 !== t4.errors[e17] && o26.push(e17 + ": " + t4.errors[e17].message);
                return o26.join(", ");
            }
            /*!
 * Module exports
 */ f3.inspect.custom && /*!
  * Avoid Node deprecation warning DEP0079
  */ (p2.prototype[f3.inspect.custom] = p2.prototype.inspect), Object.defineProperty(p2.prototype, "toJSON", {
                enumerable: !1,
                writable: !1,
                configurable: !0,
                value: function() {
                    return Object.assign({
                    }, this, {
                        name: this.name,
                        message: this.message
                    });
                }
            }), Object.defineProperty(p2.prototype, "name", {
                value: "ValidationError"
            }), t2.exports = p2;
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n29(t4) {
                return (n29 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t5) {
                    return typeof t5;
                } : function(t5) {
                    return t5 && "function" == typeof Symbol && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
                })(t4);
            }
            function o24(t4, e17) {
                return (o24 = Object.setPrototypeOf || function(t5, e19) {
                    return t5.__proto__ = e19, t5;
                })(t4, e17);
            }
            function i27(t4) {
                var e17 = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t5) {
                        return !1;
                    }
                }();
                return function() {
                    var r29, n33 = a26(t4);
                    if (e17) {
                        var o26 = a26(this).constructor;
                        r29 = Reflect.construct(n33, arguments, o26);
                    } else r29 = n33.apply(this, arguments);
                    return s24(this, r29);
                };
            }
            function s24(t4, e17) {
                if (e17 && ("object" === n29(e17) || "function" == typeof e17)) return e17;
                if ((void 0) !== e17) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t5) {
                    if ((void 0) === t5) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t5;
                })(t4);
            }
            function a26(t4) {
                return (a26 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t5) {
                    return t5.__proto__ || Object.getPrototypeOf(t5);
                })(t4);
            }
            var u28 = function(t4) {
                !function(t5, e17) {
                    if ("function" != typeof e17 && null !== e17) throw new TypeError("Super expression must either be null or a function");
                    t5.prototype = Object.create(e17 && e17.prototype, {
                        constructor: {
                            value: t5,
                            writable: !0,
                            configurable: !0
                        }
                    }), e17 && o24(t5, e17);
                }(r29, t4);
                var e17 = i27(r29);
                function r29(t5, n33, o27) {
                    var i29;
                    return (function(t6, e19) {
                        if (!(t6 instanceof e19)) throw new TypeError("Cannot call a class as a function");
                    })(this, r29), n33 = n33 || "Field `" + t5 + "` is not in schema and strict mode is set to throw.", (i29 = e17.call(this, n33)).isImmutableError = !!o27, i29.path = t5, i29;
                }
                return r29;
            }(r2(5));
            Object.defineProperty(u28.prototype, "name", {
                value: "StrictModeError"
            }), t2.exports = u28;
        },
        function(t2, e3, r2) {
            "use strict";
            e3.schemaMixedSymbol = Symbol.for("mongoose:schema_mixed"), e3.builtInMiddleware = Symbol.for("mongoose:built-in-middleware");
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module requirements.
 */ var n29 = r2(80);
            /*!
 * @ignore
 */ /*!
 * @ignore
 */ function o24(t4) {
                return n29.cast()(t4);
            }
            e3.castToNumber = o24, e3.castArraysOfNumbers = function t4(e17, r29) {
                e17.forEach(function(n33, i27) {
                    Array.isArray(n33) ? t4(n33, r29) : e17[i27] = o24.call(r29, n33);
                });
            };
        },
        function(t2, e3, r2) {
            "use strict";
            var n29 = r2(82);
            /*!
* returns discriminator by discriminatorMapping.value
*
* @param {Model} model
* @param {string} value
*/ t2.exports = function(t4, e17) {
                if (null == t4) return null;
                for(var r29 = 0, o24 = Object.keys(t4); r29 < o24.length; r29++){
                    var i27 = t4[o24[r29]];
                    if (i27.schema && i27.schema.discriminatorMapping && n29(i27.schema.discriminatorMapping.value, e17)) return i27;
                }
                return null;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module exports.
 */ e3.Array = r2(85), e3.Buffer = r2(88), e3.Document = e3.Embedded = r2(29), e3.DocumentArray = r2(18), e3.Decimal128 = r2(20), e3.ObjectId = r2(10), e3.Map = r2(90), e3.Subdocument = r2(92);
        },
        function(t2, e3, r2) {
            "use strict";
            var n29 = r2(60), o24 = r2(25), i29 = r2(40), s24 = r2(41), a26 = r2(42), u28 = r2(43), c20 = r2(44), l2 = r2(61), f3 = r2(45), p2 = r2(46), h4 = r2(47), y2 = r2(48), d2 = r2(49), _2 = r2(30), v2 = r2(105), m2 = r2(106), g2 = r2(108), b2 = r2(16), w3 = b2.allocBuffer(17825792), O3 = function() {
            };
            O3.prototype.serialize = function(t4, e17) {
                var r29 = "boolean" == typeof (e17 = e17 || {
                }).checkKeys && e17.checkKeys, n33 = "boolean" == typeof e17.serializeFunctions && e17.serializeFunctions, o27 = "boolean" != typeof e17.ignoreUndefined || e17.ignoreUndefined, i30 = "number" == typeof e17.minInternalBufferSize ? e17.minInternalBufferSize : 17825792;
                w3.length < i30 && (w3 = b2.allocBuffer(i30));
                var s25 = m2(w3, t4, r29, 0, 0, n33, o27, []), a27 = b2.allocBuffer(s25);
                return w3.copy(a27, 0, 0, a27.length), a27;
            }, O3.prototype.serializeWithBufferAndIndex = function(t4, e17, r29) {
                var n33 = "boolean" == typeof (r29 = r29 || {
                }).checkKeys && r29.checkKeys, o27 = "boolean" == typeof r29.serializeFunctions && r29.serializeFunctions, i30 = "boolean" != typeof r29.ignoreUndefined || r29.ignoreUndefined, s25 = "number" == typeof r29.index ? r29.index : 0;
                return m2(e17, t4, n33, s25 || 0, 0, o27, i30) - 1;
            }, O3.prototype.deserialize = function(t4, e17) {
                return v2(t4, e17);
            }, O3.prototype.calculateObjectSize = function(t4, e17) {
                var r29 = "boolean" == typeof (e17 = e17 || {
                }).serializeFunctions && e17.serializeFunctions, n33 = "boolean" != typeof e17.ignoreUndefined || e17.ignoreUndefined;
                return g2(t4, r29, n33);
            }, O3.prototype.deserializeStream = function(t4, e17, r29, n33, o27, i30) {
                i30 = null != i30 ? i30 : {
                };
                for(var s25 = e17, a27 = 0; a27 < r29; a27++){
                    var u29 = t4[s25] | t4[s25 + 1] << 8 | t4[s25 + 2] << 16 | t4[s25 + 3] << 24;
                    i30.index = s25, n33[o27 + a27] = this.deserialize(t4, i30), s25 += u29;
                }
                return s25;
            }, O3.BSON_INT32_MAX = 2147483647, O3.BSON_INT32_MIN = -2147483648, O3.BSON_INT64_MAX = Math.pow(2, 63) - 1, O3.BSON_INT64_MIN = -Math.pow(2, 63), O3.JS_INT_MAX = 9007199254740992, O3.JS_INT_MIN = -9007199254740992, O3.BSON_DATA_NUMBER = 1, O3.BSON_DATA_STRING = 2, O3.BSON_DATA_OBJECT = 3, O3.BSON_DATA_ARRAY = 4, O3.BSON_DATA_BINARY = 5, O3.BSON_DATA_OID = 7, O3.BSON_DATA_BOOLEAN = 8, O3.BSON_DATA_DATE = 9, O3.BSON_DATA_NULL = 10, O3.BSON_DATA_REGEXP = 11, O3.BSON_DATA_CODE = 13, O3.BSON_DATA_SYMBOL = 14, O3.BSON_DATA_CODE_W_SCOPE = 15, O3.BSON_DATA_INT = 16, O3.BSON_DATA_TIMESTAMP = 17, O3.BSON_DATA_LONG = 18, O3.BSON_DATA_MIN_KEY = 255, O3.BSON_DATA_MAX_KEY = 127, O3.BSON_BINARY_SUBTYPE_DEFAULT = 0, O3.BSON_BINARY_SUBTYPE_FUNCTION = 1, O3.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2, O3.BSON_BINARY_SUBTYPE_UUID = 3, O3.BSON_BINARY_SUBTYPE_MD5 = 4, O3.BSON_BINARY_SUBTYPE_USER_DEFINED = 128, t2.exports = O3, t2.exports.Code = f3, t2.exports.Map = n29, t2.exports.Symbol = c20, t2.exports.BSON = O3, t2.exports.DBRef = d2, t2.exports.Binary = _2, t2.exports.ObjectID = a26, t2.exports.Long = o24, t2.exports.Timestamp = s24, t2.exports.Double = i29, t2.exports.Int32 = l2, t2.exports.MinKey = h4, t2.exports.MaxKey = y2, t2.exports.BSONRegExp = u28, t2.exports.Decimal128 = p2;
        },
        function(t2, e3) {
            function r2(t4) {
                if (!(this instanceof r2)) return new r2(t4);
                this._bsontype = "Double", this.value = t4;
            }
            r2.prototype.valueOf = function() {
                return this.value;
            }, r2.prototype.toJSON = function() {
                return this.value;
            }, t2.exports = r2, t2.exports.Double = r2;
        },
        function(t2, e3) {
            function r2(t4, e17) {
                if (!(this instanceof r2)) return new r2(t4, e17);
                this._bsontype = "Timestamp", this.low_ = 0 | t4, this.high_ = 0 | e17;
            }
            r2.prototype.toInt = function() {
                return this.low_;
            }, r2.prototype.toNumber = function() {
                return this.high_ * r2.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
            }, r2.prototype.toJSON = function() {
                return this.toString();
            }, r2.prototype.toString = function(t4) {
                var e17 = t4 || 10;
                if (e17 < 2 || 36 < e17) throw Error("radix out of range: " + e17);
                if (this.isZero()) return "0";
                if (this.isNegative()) {
                    if (this.equals(r2.MIN_VALUE)) {
                        var n29 = r2.fromNumber(e17), o24 = this.div(n29), i29 = o24.multiply(n29).subtract(this);
                        return o24.toString(e17) + i29.toInt().toString(e17);
                    }
                    return "-" + this.negate().toString(e17);
                }
                var s24 = r2.fromNumber(Math.pow(e17, 6));
                i29 = this;
                for(var a26 = ""; !i29.isZero();){
                    var u28 = i29.div(s24), c20 = i29.subtract(u28.multiply(s24)).toInt().toString(e17);
                    if ((i29 = u28).isZero()) return c20 + a26;
                    for(; c20.length < 6;)c20 = "0" + c20;
                    a26 = "" + c20 + a26;
                }
            }, r2.prototype.getHighBits = function() {
                return this.high_;
            }, r2.prototype.getLowBits = function() {
                return this.low_;
            }, r2.prototype.getLowBitsUnsigned = function() {
                return this.low_ >= 0 ? this.low_ : r2.TWO_PWR_32_DBL_ + this.low_;
            }, r2.prototype.getNumBitsAbs = function() {
                if (this.isNegative()) return this.equals(r2.MIN_VALUE) ? 64 : this.negate().getNumBitsAbs();
                for(var t4 = 0 !== this.high_ ? this.high_ : this.low_, e17 = 31; e17 > 0 && 0 == (t4 & 1 << e17); e17--);
                return 0 !== this.high_ ? e17 + 33 : e17 + 1;
            }, r2.prototype.isZero = function() {
                return 0 === this.high_ && 0 === this.low_;
            }, r2.prototype.isNegative = function() {
                return this.high_ < 0;
            }, r2.prototype.isOdd = function() {
                return 1 == (1 & this.low_);
            }, r2.prototype.equals = function(t4) {
                return this.high_ === t4.high_ && this.low_ === t4.low_;
            }, r2.prototype.notEquals = function(t4) {
                return this.high_ !== t4.high_ || this.low_ !== t4.low_;
            }, r2.prototype.lessThan = function(t4) {
                return this.compare(t4) < 0;
            }, r2.prototype.lessThanOrEqual = function(t4) {
                return this.compare(t4) <= 0;
            }, r2.prototype.greaterThan = function(t4) {
                return this.compare(t4) > 0;
            }, r2.prototype.greaterThanOrEqual = function(t4) {
                return this.compare(t4) >= 0;
            }, r2.prototype.compare = function(t4) {
                if (this.equals(t4)) return 0;
                var e17 = this.isNegative(), r29 = t4.isNegative();
                return e17 && !r29 ? -1 : !e17 && r29 ? 1 : this.subtract(t4).isNegative() ? -1 : 1;
            }, r2.prototype.negate = function() {
                return this.equals(r2.MIN_VALUE) ? r2.MIN_VALUE : this.not().add(r2.ONE);
            }, r2.prototype.add = function(t4) {
                var e17 = this.high_ >>> 16, n33 = 65535 & this.high_, o27 = this.low_ >>> 16, i30 = 65535 & this.low_, s24 = t4.high_ >>> 16, a26 = 65535 & t4.high_, u30 = t4.low_ >>> 16, c22 = 0, l2 = 0, f3 = 0, p2 = 0;
                return f3 += (p2 += i30 + (65535 & t4.low_)) >>> 16, p2 &= 65535, l2 += (f3 += o27 + u30) >>> 16, f3 &= 65535, c22 += (l2 += n33 + a26) >>> 16, l2 &= 65535, c22 += e17 + s24, c22 &= 65535, r2.fromBits(f3 << 16 | p2, c22 << 16 | l2);
            }, r2.prototype.subtract = function(t4) {
                return this.add(t4.negate());
            }, r2.prototype.multiply = function(t4) {
                if (this.isZero()) return r2.ZERO;
                if (t4.isZero()) return r2.ZERO;
                if (this.equals(r2.MIN_VALUE)) return t4.isOdd() ? r2.MIN_VALUE : r2.ZERO;
                if (t4.equals(r2.MIN_VALUE)) return this.isOdd() ? r2.MIN_VALUE : r2.ZERO;
                if (this.isNegative()) return t4.isNegative() ? this.negate().multiply(t4.negate()) : this.negate().multiply(t4).negate();
                if (t4.isNegative()) return this.multiply(t4.negate()).negate();
                if (this.lessThan(r2.TWO_PWR_24_) && t4.lessThan(r2.TWO_PWR_24_)) return r2.fromNumber(this.toNumber() * t4.toNumber());
                var e17 = this.high_ >>> 16, n33 = 65535 & this.high_, o27 = this.low_ >>> 16, i30 = 65535 & this.low_, s24 = t4.high_ >>> 16, a26 = 65535 & t4.high_, u30 = t4.low_ >>> 16, c22 = 65535 & t4.low_, l2 = 0, f3 = 0, p2 = 0, h4 = 0;
                return p2 += (h4 += i30 * c22) >>> 16, h4 &= 65535, f3 += (p2 += o27 * c22) >>> 16, p2 &= 65535, f3 += (p2 += i30 * u30) >>> 16, p2 &= 65535, l2 += (f3 += n33 * c22) >>> 16, f3 &= 65535, l2 += (f3 += o27 * u30) >>> 16, f3 &= 65535, l2 += (f3 += i30 * a26) >>> 16, f3 &= 65535, l2 += e17 * c22 + n33 * u30 + o27 * a26 + i30 * s24, l2 &= 65535, r2.fromBits(p2 << 16 | h4, l2 << 16 | f3);
            }, r2.prototype.div = function(t4) {
                if (t4.isZero()) throw Error("division by zero");
                if (this.isZero()) return r2.ZERO;
                if (this.equals(r2.MIN_VALUE)) {
                    if (t4.equals(r2.ONE) || t4.equals(r2.NEG_ONE)) return r2.MIN_VALUE;
                    if (t4.equals(r2.MIN_VALUE)) return r2.ONE;
                    var e17 = this.shiftRight(1).div(t4).shiftLeft(1);
                    if (e17.equals(r2.ZERO)) return t4.isNegative() ? r2.ONE : r2.NEG_ONE;
                    var n33 = this.subtract(t4.multiply(e17));
                    return e17.add(n33.div(t4));
                }
                if (t4.equals(r2.MIN_VALUE)) return r2.ZERO;
                if (this.isNegative()) return t4.isNegative() ? this.negate().div(t4.negate()) : this.negate().div(t4).negate();
                if (t4.isNegative()) return this.div(t4.negate()).negate();
                var o27 = r2.ZERO;
                for(n33 = this; n33.greaterThanOrEqual(t4);){
                    e17 = Math.max(1, Math.floor(n33.toNumber() / t4.toNumber()));
                    for(var i30 = Math.ceil(Math.log(e17) / Math.LN2), s24 = i30 <= 48 ? 1 : Math.pow(2, i30 - 48), a26 = r2.fromNumber(e17), u30 = a26.multiply(t4); u30.isNegative() || u30.greaterThan(n33);)e17 -= s24, u30 = (a26 = r2.fromNumber(e17)).multiply(t4);
                    a26.isZero() && (a26 = r2.ONE), o27 = o27.add(a26), n33 = n33.subtract(u30);
                }
                return o27;
            }, r2.prototype.modulo = function(t4) {
                return this.subtract(this.div(t4).multiply(t4));
            }, r2.prototype.not = function() {
                return r2.fromBits(~this.low_, ~this.high_);
            }, r2.prototype.and = function(t4) {
                return r2.fromBits(this.low_ & t4.low_, this.high_ & t4.high_);
            }, r2.prototype.or = function(t4) {
                return r2.fromBits(this.low_ | t4.low_, this.high_ | t4.high_);
            }, r2.prototype.xor = function(t4) {
                return r2.fromBits(this.low_ ^ t4.low_, this.high_ ^ t4.high_);
            }, r2.prototype.shiftLeft = function(t4) {
                if (0 === (t4 &= 63)) return this;
                var e19 = this.low_;
                if (t4 < 32) {
                    var n34 = this.high_;
                    return r2.fromBits(e19 << t4, n34 << t4 | e19 >>> 32 - t4);
                }
                return r2.fromBits(0, e19 << t4 - 32);
            }, r2.prototype.shiftRight = function(t4) {
                if (0 === (t4 &= 63)) return this;
                var e19 = this.high_;
                if (t4 < 32) {
                    var n35 = this.low_;
                    return r2.fromBits(n35 >>> t4 | e19 << 32 - t4, e19 >> t4);
                }
                return r2.fromBits(e19 >> t4 - 32, e19 >= 0 ? 0 : -1);
            }, r2.prototype.shiftRightUnsigned = function(t4) {
                if (0 === (t4 &= 63)) return this;
                var e19 = this.high_;
                if (t4 < 32) {
                    var n36 = this.low_;
                    return r2.fromBits(n36 >>> t4 | e19 << 32 - t4, e19 >>> t4);
                }
                return 32 === t4 ? r2.fromBits(e19, 0) : r2.fromBits(e19 >>> t4 - 32, 0);
            }, r2.fromInt = function(t4) {
                if (-128 <= t4 && t4 < 128) {
                    var e19 = r2.INT_CACHE_[t4];
                    if (e19) return e19;
                }
                var n37 = new r2(0 | t4, t4 < 0 ? -1 : 0);
                return -128 <= t4 && t4 < 128 && (r2.INT_CACHE_[t4] = n37), n37;
            }, r2.fromNumber = function(t4) {
                return isNaN(t4) || !isFinite(t4) ? r2.ZERO : t4 <= -r2.TWO_PWR_63_DBL_ ? r2.MIN_VALUE : t4 + 1 >= r2.TWO_PWR_63_DBL_ ? r2.MAX_VALUE : t4 < 0 ? r2.fromNumber(-t4).negate() : new r2(t4 % r2.TWO_PWR_32_DBL_ | 0, t4 / r2.TWO_PWR_32_DBL_ | 0);
            }, r2.fromBits = function(t4, e20) {
                return new r2(t4, e20);
            }, r2.fromString = function(t4, e20) {
                if (0 === t4.length) throw Error("number format error: empty string");
                var n37 = e20 || 10;
                if (n37 < 2 || 36 < n37) throw Error("radix out of range: " + n37);
                if ("-" === t4.charAt(0)) return r2.fromString(t4.substring(1), n37).negate();
                if (t4.indexOf("-") >= 0) throw Error('number format error: interior "-" character: ' + t4);
                for(var o27 = r2.fromNumber(Math.pow(n37, 8)), i31 = r2.ZERO, s25 = 0; s25 < t4.length; s25 += 8){
                    var a27 = Math.min(8, t4.length - s25), u31 = parseInt(t4.substring(s25, s25 + a27), n37);
                    if (a27 < 8) {
                        var c22 = r2.fromNumber(Math.pow(n37, a27));
                        i31 = i31.multiply(c22).add(r2.fromNumber(u31));
                    } else i31 = (i31 = i31.multiply(o27)).add(r2.fromNumber(u31));
                }
                return i31;
            }, r2.INT_CACHE_ = {
            }, r2.TWO_PWR_16_DBL_ = 65536, r2.TWO_PWR_24_DBL_ = 16777216, r2.TWO_PWR_32_DBL_ = r2.TWO_PWR_16_DBL_ * r2.TWO_PWR_16_DBL_, r2.TWO_PWR_31_DBL_ = r2.TWO_PWR_32_DBL_ / 2, r2.TWO_PWR_48_DBL_ = r2.TWO_PWR_32_DBL_ * r2.TWO_PWR_16_DBL_, r2.TWO_PWR_64_DBL_ = r2.TWO_PWR_32_DBL_ * r2.TWO_PWR_32_DBL_, r2.TWO_PWR_63_DBL_ = r2.TWO_PWR_64_DBL_ / 2, r2.ZERO = r2.fromInt(0), r2.ONE = r2.fromInt(1), r2.NEG_ONE = r2.fromInt(-1), r2.MAX_VALUE = r2.fromBits(-1, 2147483647), r2.MIN_VALUE = r2.fromBits(0, -2147483648), r2.TWO_PWR_24_ = r2.fromInt(16777216), t2.exports = r2, t2.exports.Timestamp = r2;
        },
        function(t2, e3, r2) {
            (function(e20, n37) {
                var o27 = "inspect", i31 = r2(16), s25 = parseInt(16777215 * Math.random(), 10), a28 = new RegExp("^[0-9a-fA-F]{24}$");
                try {
                    if (e20 && e20.from) {
                        var u32 = !0;
                        o27 = r2(4).inspect.custom || "inspect";
                    }
                } catch (t4) {
                    u32 = !1;
                }
                for(var c23 = function t4(e21) {
                    if (e21 instanceof t4) return e21;
                    if (!(this instanceof t4)) return new t4(e21);
                    if (this._bsontype = "ObjectID", null == e21 || "number" == typeof e21) return this.id = this.generate(e21), void (t4.cacheHexString && (this.__id = this.toString("hex")));
                    var r29 = t4.isValid(e21);
                    if (!r29 && null != e21) throw new Error("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters");
                    if (r29 && "string" == typeof e21 && 24 === e21.length && u32) return new t4(i31.toBuffer(e21, "hex"));
                    if (r29 && "string" == typeof e21 && 24 === e21.length) return t4.createFromHexString(e21);
                    if (null == e21 || 12 !== e21.length) {
                        if (null != e21 && "function" == typeof e21.toHexString) return e21;
                        throw new Error("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters");
                    }
                    this.id = e21, t4.cacheHexString && (this.__id = this.toString("hex"));
                }, l2 = [], f3 = 0; f3 < 256; f3++)l2[f3] = (f3 <= 15 ? "0" : "") + f3.toString(16);
                c23.prototype.toHexString = function() {
                    if (c23.cacheHexString && this.__id) return this.__id;
                    var t5 = "";
                    if (!this.id || !this.id.length) throw new Error("invalid ObjectId, ObjectId.id must be either a string or a Buffer, but is [" + JSON.stringify(this.id) + "]");
                    if (this.id instanceof h4) return t5 = y2(this.id), c23.cacheHexString && (this.__id = t5), t5;
                    for(var e21 = 0; e21 < this.id.length; e21++)t5 += l2[this.id.charCodeAt(e21)];
                    return c23.cacheHexString && (this.__id = t5), t5;
                }, c23.prototype.get_inc = function() {
                    return c23.index = (c23.index + 1) % 16777215;
                }, c23.prototype.getInc = function() {
                    return this.get_inc();
                }, c23.prototype.generate = function(t5) {
                    "number" != typeof t5 && (t5 = ~~(Date.now() / 1000));
                    var e21 = ((void 0) === n37 || 1 === n37.pid ? Math.floor(100000 * Math.random()) : n37.pid) % 65535, r29 = this.get_inc(), o28 = i31.allocBuffer(12);
                    return o28[3] = 255 & t5, o28[2] = t5 >> 8 & 255, o28[1] = t5 >> 16 & 255, o28[0] = t5 >> 24 & 255, o28[6] = 255 & s25, o28[5] = s25 >> 8 & 255, o28[4] = s25 >> 16 & 255, o28[8] = 255 & e21, o28[7] = e21 >> 8 & 255, o28[11] = 255 & r29, o28[10] = r29 >> 8 & 255, o28[9] = r29 >> 16 & 255, o28;
                }, c23.prototype.toString = function(t5) {
                    return this.id && this.id.copy ? this.id.toString("string" == typeof t5 ? t5 : "hex") : this.toHexString();
                }, c23.prototype[o27] = c23.prototype.toString, c23.prototype.toJSON = function() {
                    return this.toHexString();
                }, c23.prototype.equals = function(t5) {
                    return t5 instanceof c23 ? this.toString() === t5.toString() : "string" == typeof t5 && c23.isValid(t5) && 12 === t5.length && this.id instanceof h4 ? t5 === this.id.toString("binary") : "string" == typeof t5 && c23.isValid(t5) && 24 === t5.length ? t5.toLowerCase() === this.toHexString() : "string" == typeof t5 && c23.isValid(t5) && 12 === t5.length ? t5 === this.id : !(null == t5 || !(t5 instanceof c23 || t5.toHexString)) && t5.toHexString() === this.toHexString();
                }, c23.prototype.getTimestamp = function() {
                    var t5 = new Date, e21 = this.id[3] | this.id[2] << 8 | this.id[1] << 16 | this.id[0] << 24;
                    return t5.setTime(1000 * Math.floor(e21)), t5;
                }, c23.index = ~~(16777215 * Math.random()), c23.createPk = function() {
                    return new c23;
                }, c23.createFromTime = function(t5) {
                    var e21 = i31.toBuffer([
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ]);
                    return e21[3] = 255 & t5, e21[2] = t5 >> 8 & 255, e21[1] = t5 >> 16 & 255, e21[0] = t5 >> 24 & 255, new c23(e21);
                };
                var p2 = [];
                for(f3 = 0; f3 < 10;)p2[48 + f3] = f3++;
                for(; f3 < 16;)p2[55 + f3] = p2[87 + f3] = f3++;
                var h4 = e20, y2 = function(t5) {
                    return t5.toString("hex");
                };
                c23.createFromHexString = function(t5) {
                    if ((void 0) === t5 || null != t5 && 24 !== t5.length) throw new Error("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters");
                    if (u32) return new c23(i31.toBuffer(t5, "hex"));
                    for(var e21 = new h4(12), r29 = 0, n38 = 0; n38 < 24;)e21[r29++] = p2[t5.charCodeAt(n38++)] << 4 | p2[t5.charCodeAt(n38++)];
                    return new c23(e21);
                }, c23.isValid = function(t5) {
                    return null != t5 && ("number" == typeof t5 || ("string" == typeof t5 ? 12 === t5.length || 24 === t5.length && a28.test(t5) : t5 instanceof c23 || t5 instanceof h4 || "function" == typeof t5.toHexString && (t5.id instanceof h4 || "string" == typeof t5.id) && (12 === t5.id.length || 24 === t5.id.length && a28.test(t5.id))));
                }, Object.defineProperty(c23.prototype, "generationTime", {
                    enumerable: !0,
                    get: function() {
                        return this.id[3] | this.id[2] << 8 | this.id[1] << 16 | this.id[0] << 24;
                    },
                    set: function(t5) {
                        this.id[3] = 255 & t5, this.id[2] = t5 >> 8 & 255, this.id[1] = t5 >> 16 & 255, this.id[0] = t5 >> 24 & 255;
                    }
                }), t2.exports = c23, t2.exports.ObjectID = c23, t2.exports.ObjectId = c23;
            }).call(this, r2(2).Buffer, r2(11));
        },
        function(t2, e3) {
            function r2(t4, e20) {
                if (!(this instanceof r2)) return new r2;
                this._bsontype = "BSONRegExp", this.pattern = t4 || "", this.options = e20 || "";
                for(var n37 = 0; n37 < this.options.length; n37++)if ("i" !== this.options[n37] && "m" !== this.options[n37] && "x" !== this.options[n37] && "l" !== this.options[n37] && "s" !== this.options[n37] && "u" !== this.options[n37]) throw new Error("the regular expression options [" + this.options[n37] + "] is not supported");
            }
            t2.exports = r2, t2.exports.BSONRegExp = r2;
        },
        function(t2, e3, r2) {
            (function(e20) {
                var n37 = e20 && r2(4).inspect.custom || "inspect";
                function o27(t4) {
                    if (!(this instanceof o27)) return new o27(t4);
                    this._bsontype = "Symbol", this.value = t4;
                }
                o27.prototype.valueOf = function() {
                    return this.value;
                }, o27.prototype.toString = function() {
                    return this.value;
                }, o27.prototype[n37] = function() {
                    return this.value;
                }, o27.prototype.toJSON = function() {
                    return this.value;
                }, t2.exports = o27, t2.exports.Symbol = o27;
            }).call(this, r2(2).Buffer);
        },
        function(t2, e3) {
            var r2 = function t4(e20, r29) {
                if (!(this instanceof t4)) return new t4(e20, r29);
                this._bsontype = "Code", this.code = e20, this.scope = r29;
            };
            r2.prototype.toJSON = function() {
                return {
                    scope: this.scope,
                    code: this.code
                };
            }, t2.exports = r2, t2.exports.Code = r2;
        },
        function(t2, e3, r2) {
            "use strict";
            var n37 = r2(25), o27 = /^(\+|-)?(\d+|(\d*\.\d*))?(E|e)?([-+])?(\d+)?$/, i31 = /^(\+|-)?(Infinity|inf)$/i, s25 = /^(\+|-)?NaN$/i, a28 = 6176, u33 = [
                124,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ].reverse(), c23 = [
                248,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ].reverse(), l2 = [
                120,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ].reverse(), f3 = /^([-+])?(\d+)?$/, p2 = r2(16), h4 = function(t4) {
                return !isNaN(parseInt(t4, 10));
            }, y2 = function(t4) {
                var e20 = n37.fromNumber(1000000000), r29 = n37.fromNumber(0), o28 = 0;
                if (!(t4.parts[0] || t4.parts[1] || t4.parts[2] || t4.parts[3])) return {
                    quotient: t4,
                    rem: r29
                };
                for(o28 = 0; o28 <= 3; o28++)r29 = (r29 = r29.shiftLeft(32)).add(new n37(t4.parts[o28], 0)), t4.parts[o28] = r29.div(e20).low_, r29 = r29.modulo(e20);
                return {
                    quotient: t4,
                    rem: r29
                };
            }, d2 = function(t4) {
                this._bsontype = "Decimal128", this.bytes = t4;
            };
            d2.fromString = function(t4) {
                var e20, r29 = !1, y10 = !1, _2 = !1, v2 = 0, m2 = 0, g2 = 0, b2 = 0, w3 = 0, O3 = [
                    0
                ], S2 = 0, A2 = 0, $2 = 0, E2 = 0, j = 0, P2 = 0, x2 = [
                    0,
                    0
                ], T3 = [
                    0,
                    0
                ], N3 = 0;
                if ((t4 = t4.trim()).length >= 7000) throw new Error(t4 + " not a valid Decimal128 string");
                var k3 = t4.match(o27), B2 = t4.match(i31), C = t4.match(s25);
                if (!k3 && !B2 && !C || 0 === t4.length) throw new Error(t4 + " not a valid Decimal128 string");
                if (k3 && k3[4] && (void 0) === k3[2]) throw new Error(t4 + " not a valid Decimal128 string");
                if ("+" !== t4[N3] && "-" !== t4[N3] || (r29 = "-" === t4[N3++]), !h4(t4[N3]) && "." !== t4[N3]) {
                    if ("i" === t4[N3] || "I" === t4[N3]) return new d2(p2.toBuffer(r29 ? c23 : l2));
                    if ("N" === t4[N3]) return new d2(p2.toBuffer(u33));
                }
                for(; h4(t4[N3]) || "." === t4[N3];)if ("." !== t4[N3]) S2 < 34 && ("0" !== t4[N3] || _2) && (_2 || (w3 = m2), _2 = !0, O3[A2++] = parseInt(t4[N3], 10), S2 += 1), _2 && (g2 += 1), y10 && (b2 += 1), m2 += 1, N3 += 1;
                else {
                    if (y10) return new d2(p2.toBuffer(u33));
                    y10 = !0, N3 += 1;
                }
                if (y10 && !m2) throw new Error(t4 + " not a valid Decimal128 string");
                if ("e" === t4[N3] || "E" === t4[N3]) {
                    var R2 = t4.substr(++N3).match(f3);
                    if (!R2 || !R2[2]) return new d2(p2.toBuffer(u33));
                    j = parseInt(R2[0], 10), N3 += R2[0].length;
                }
                if (t4[N3]) return new d2(p2.toBuffer(u33));
                if ($2 = 0, S2) {
                    if (E2 = S2 - 1, v2 = g2, 0 !== j && 1 !== v2) for(; "0" === t4[w3 + v2 - 1];)v2 -= 1;
                } else $2 = 0, E2 = 0, O3[0] = 0, g2 = 1, S2 = 1, v2 = 0;
                for(j <= b2 && b2 - j > 16384 ? j = -6176 : j -= b2; j > 6111;){
                    if ((E2 += 1) - $2 > 34) {
                        var D = O3.join("");
                        if (D.match(/^0+$/)) {
                            j = 6111;
                            break;
                        }
                        return new d2(p2.toBuffer(r29 ? c23 : l2));
                    }
                    j -= 1;
                }
                for(; j < -6176 || S2 < g2;){
                    if (0 === E2) {
                        j = -6176, v2 = 0;
                        break;
                    }
                    if (S2 < g2 ? g2 -= 1 : E2 -= 1, !(j < 6111)) {
                        if ((D = O3.join("")).match(/^0+$/)) {
                            j = 6111;
                            break;
                        }
                        return new d2(p2.toBuffer(r29 ? c23 : l2));
                    }
                    j += 1;
                }
                if (E2 - $2 + 1 < v2 && "0" !== t4[v2]) {
                    var M2 = m2;
                    y10 && -6176 === j && (w3 += 1, M2 += 1);
                    var I = parseInt(t4[w3 + E2 + 1], 10), F2 = 0;
                    if (I >= 5 && (F2 = 1, 5 === I)) for(F2 = O3[E2] % 2 == 1, P2 = w3 + E2 + 2; P2 < M2; P2++)if (parseInt(t4[P2], 10)) {
                        F2 = 1;
                        break;
                    }
                    if (F2) for(var L2 = E2; L2 >= 0 && (++O3[L2]) > 9; L2--)if (O3[L2] = 0, 0 === L2) {
                        if (!(j < 6111)) return new d2(p2.toBuffer(r29 ? c23 : l2));
                        j += 1, O3[L2] = 1;
                    }
                }
                if (x2 = n37.fromNumber(0), T3 = n37.fromNumber(0), 0 === v2) x2 = n37.fromNumber(0), T3 = n37.fromNumber(0);
                else if (E2 - $2 < 17) for(L2 = $2, T3 = n37.fromNumber(O3[L2++]), x2 = new n37(0, 0); L2 <= E2; L2++)T3 = (T3 = T3.multiply(n37.fromNumber(10))).add(n37.fromNumber(O3[L2]));
                else {
                    for(L2 = $2, x2 = n37.fromNumber(O3[L2++]); L2 <= E2 - 17; L2++)x2 = (x2 = x2.multiply(n37.fromNumber(10))).add(n37.fromNumber(O3[L2]));
                    for(T3 = n37.fromNumber(O3[L2++]); L2 <= E2; L2++)T3 = (T3 = T3.multiply(n37.fromNumber(10))).add(n37.fromNumber(O3[L2]));
                }
                var U2, V2, q2, W2, H2 = function(t5, e21) {
                    if (!t5 && !e21) return {
                        high: n37.fromNumber(0),
                        low: n37.fromNumber(0)
                    };
                    var r30 = t5.shiftRightUnsigned(32), o28 = new n37(t5.getLowBits(), 0), i32 = e21.shiftRightUnsigned(32), s26 = new n37(e21.getLowBits(), 0), a29 = r30.multiply(i32), u34 = r30.multiply(s26), c24 = o28.multiply(i32), l19 = o28.multiply(s26);
                    return a29 = a29.add(u34.shiftRightUnsigned(32)), u34 = new n37(u34.getLowBits(), 0).add(c24).add(l19.shiftRightUnsigned(32)), {
                        high: a29 = a29.add(u34.shiftRightUnsigned(32)),
                        low: l19 = u34.shiftLeft(32).add(new n37(l19.getLowBits(), 0))
                    };
                }(x2, n37.fromString("100000000000000000"));
                H2.low = H2.low.add(T3), U2 = H2.low, V2 = T3, q2 = U2.high_ >>> 0, W2 = V2.high_ >>> 0, (q2 < W2 || q2 === W2 && U2.low_ >>> 0 < V2.low_ >>> 0) && (H2.high = H2.high.add(n37.fromNumber(1))), e20 = j + a28;
                var Y = {
                    low: n37.fromNumber(0),
                    high: n37.fromNumber(0)
                };
                H2.high.shiftRightUnsigned(49).and(n37.fromNumber(1)).equals(n37.fromNumber) ? (Y.high = Y.high.or(n37.fromNumber(3).shiftLeft(61)), Y.high = Y.high.or(n37.fromNumber(e20).and(n37.fromNumber(16383).shiftLeft(47))), Y.high = Y.high.or(H2.high.and(n37.fromNumber(140737488355327)))) : (Y.high = Y.high.or(n37.fromNumber(16383 & e20).shiftLeft(49)), Y.high = Y.high.or(H2.high.and(n37.fromNumber(562949953421311)))), Y.low = H2.low, r29 && (Y.high = Y.high.or(n37.fromString("9223372036854775808")));
                var K2 = p2.allocBuffer(16);
                return N3 = 0, K2[N3++] = 255 & Y.low.low_, K2[N3++] = Y.low.low_ >> 8 & 255, K2[N3++] = Y.low.low_ >> 16 & 255, K2[N3++] = Y.low.low_ >> 24 & 255, K2[N3++] = 255 & Y.low.high_, K2[N3++] = Y.low.high_ >> 8 & 255, K2[N3++] = Y.low.high_ >> 16 & 255, K2[N3++] = Y.low.high_ >> 24 & 255, K2[N3++] = 255 & Y.high.low_, K2[N3++] = Y.high.low_ >> 8 & 255, K2[N3++] = Y.high.low_ >> 16 & 255, K2[N3++] = Y.high.low_ >> 24 & 255, K2[N3++] = 255 & Y.high.high_, K2[N3++] = Y.high.high_ >> 8 & 255, K2[N3++] = Y.high.high_ >> 16 & 255, K2[N3++] = Y.high.high_ >> 24 & 255, new d2(K2);
            };
            a28 = 6176, d2.prototype.toString = function() {
                for(var t4, e20, r29, o28, i32, s26, u34 = 0, c24 = new Array(36), l19 = 0; l19 < c24.length; l19++)c24[l19] = 0;
                var f17, p12, h7, d9, _2, v2 = 0, m2 = !1, g2 = {
                    parts: new Array(4)
                }, b2 = [];
                v2 = 0;
                var w3 = this.bytes;
                if (o28 = w3[v2++] | w3[v2++] << 8 | w3[v2++] << 16 | w3[v2++] << 24, r29 = w3[v2++] | w3[v2++] << 8 | w3[v2++] << 16 | w3[v2++] << 24, e20 = w3[v2++] | w3[v2++] << 8 | w3[v2++] << 16 | w3[v2++] << 24, t4 = w3[v2++] | w3[v2++] << 8 | w3[v2++] << 16 | w3[v2++] << 24, v2 = 0, ({
                    low: new n37(o28, r29),
                    high: new n37(e20, t4)
                }).high.lessThan(n37.ZERO) && b2.push("-"), (i32 = t4 >> 26 & 31) >> 3 == 3) {
                    if (30 === i32) return b2.join("") + "Infinity";
                    if (31 === i32) return "NaN";
                    s26 = t4 >> 15 & 16383, h7 = 8 + (t4 >> 14 & 1);
                } else h7 = t4 >> 14 & 7, s26 = t4 >> 17 & 16383;
                if (f17 = s26 - a28, g2.parts[0] = (16383 & t4) + ((15 & h7) << 14), g2.parts[1] = e20, g2.parts[2] = r29, g2.parts[3] = o28, 0 === g2.parts[0] && 0 === g2.parts[1] && 0 === g2.parts[2] && 0 === g2.parts[3]) m2 = !0;
                else for(_2 = 3; _2 >= 0; _2--){
                    var O3 = 0, S2 = y2(g2);
                    if (g2 = S2.quotient, O3 = S2.rem.low_) for(d9 = 8; d9 >= 0; d9--)c24[9 * _2 + d9] = O3 % 10, O3 = Math.floor(O3 / 10);
                }
                if (m2) u34 = 1, c24[v2] = 0;
                else for(u34 = 36, l19 = 0; !c24[v2];)l19++, u34 -= 1, v2 += 1;
                if ((p12 = u34 - 1 + f17) >= 34 || p12 <= -7 || f17 > 0) {
                    for(b2.push(c24[v2++]), u34 -= 1, b2.push("."), l19 = 0; l19 < u34; l19++)b2.push(c24[v2++]);
                    b2.push("E"), p12 > 0 ? b2.push("+" + p12) : b2.push(p12);
                } else if (f17 >= 0) for(l19 = 0; l19 < u34; l19++)b2.push(c24[v2++]);
                else {
                    var A2 = u34 + f17;
                    if (A2 > 0) for(l19 = 0; l19 < A2; l19++)b2.push(c24[v2++]);
                    else b2.push("0");
                    for(b2.push("."); (A2++) < 0;)b2.push("0");
                    for(l19 = 0; l19 < u34 - Math.max(A2 - 1, 0); l19++)b2.push(c24[v2++]);
                }
                return b2.join("");
            }, d2.prototype.toJSON = function() {
                return {
                    $numberDecimal: this.toString()
                };
            }, t2.exports = d2, t2.exports.Decimal128 = d2;
        },
        function(t2, e3) {
            function r2() {
                if (!(this instanceof r2)) return new r2;
                this._bsontype = "MinKey";
            }
            t2.exports = r2, t2.exports.MinKey = r2;
        },
        function(t2, e3) {
            function r2() {
                if (!(this instanceof r2)) return new r2;
                this._bsontype = "MaxKey";
            }
            t2.exports = r2, t2.exports.MaxKey = r2;
        },
        function(t2, e3) {
            function r2(t4, e20, n37) {
                if (!(this instanceof r2)) return new r2(t4, e20, n37);
                this._bsontype = "DBRef", this.namespace = t4, this.oid = e20, this.db = n37;
            }
            r2.prototype.toJSON = function() {
                return {
                    $ref: this.namespace,
                    $id: this.oid,
                    $db: null == this.db ? "" : this.db
                };
            }, t2.exports = r2, t2.exports.DBRef = r2;
        },
        function(t2, e3, r2) {
            "use strict";
            t2.exports = r2(115);
        },
        function(t2, e3, r2) {
            "use strict";
            t2.exports = new Set([
                "__proto__",
                "constructor",
                "prototype"
            ]);
        },
        function(t2, e3, r2) {
            "use strict";
            var n37 = r2(53);
            /*!
 * ignore
 */ t2.exports = function(t4) {
                var e20 = null != this ? this.path : null;
                return n37(t4, e20);
            };
        },
        function(t2, e3, r2) {
            "use strict";
            var n37 = r2(13);
            /*!
 * Given a value, cast it to a boolean, or throw a `CastError` if the value
 * cannot be casted. `null` and `undefined` are considered valid.
 *
 * @param {Any} value
 * @param {String} [path] optional the path to set on the CastError
 * @return {Boolean|null|undefined}
 * @throws {CastError} if `value` is not one of the allowed values
 * @api private
 */ t2.exports = function(e20, r29) {
                if (t2.exports.convertToTrue.has(e20)) return !0;
                if (t2.exports.convertToFalse.has(e20)) return !1;
                if (null == e20) return e20;
                throw new n37("boolean", e20, r29);
            }, t2.exports.convertToTrue = new Set([
                !0,
                "true",
                1,
                "1",
                "yes"
            ]), t2.exports.convertToFalse = new Set([
                !1,
                "false",
                0,
                "0",
                "no"
            ]);
        },
        function(t2, e3, r2) {
            "use strict";
            (function(n37) {
                /*!
 * Module dependencies.
 */ function o27(t4, e20, r29) {
                    return e20 in t4 ? Object.defineProperty(t4, e20, {
                        value: r29,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t4[e20] = r29, t4;
                }
                function i31(t4) {
                    return (i31 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t5) {
                        return typeof t5;
                    } : function(t5) {
                        return t5 && "function" == typeof Symbol && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
                    })(t4);
                }
                function s25(t4, e20) {
                    var r29 = "undefined" != typeof Symbol && t4[Symbol.iterator] || t4["@@iterator"];
                    if (!r29) {
                        if (Array.isArray(t4) || (r29 = (function(t5, e21) {
                            if (!t5) return;
                            if ("string" == typeof t5) return a28(t5, e21);
                            var r30 = Object.prototype.toString.call(t5).slice(8, -1);
                            "Object" === r30 && t5.constructor && (r30 = t5.constructor.name);
                            if ("Map" === r30 || "Set" === r30) return Array.from(t5);
                            if ("Arguments" === r30 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r30)) return a28(t5, e21);
                        })(t4)) || e20 && t4 && "number" == typeof t4.length) {
                            r29 && (t4 = r29);
                            var n38 = 0, o28 = function() {
                            };
                            return {
                                s: o28,
                                n: function() {
                                    return n38 >= t4.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t4[n38++]
                                    };
                                },
                                e: function(t5) {
                                    throw t5;
                                },
                                f: o28
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var i32, s26 = !0, u33 = !1;
                    return {
                        s: function() {
                            r29 = r29.call(t4);
                        },
                        n: function() {
                            var t5 = r29.next();
                            return s26 = t5.done, t5;
                        },
                        e: function(t5) {
                            u33 = !0, i32 = t5;
                        },
                        f: function() {
                            try {
                                s26 || null == r29.return || r29.return();
                            } finally{
                                if (u33) throw i32;
                            }
                        }
                    };
                }
                function a28(t4, e20) {
                    (null == e20 || e20 > t4.length) && (e20 = t4.length);
                    for(var r29 = 0, n39 = new Array(e20); r29 < e20; r29++)n39[r29] = t4[r29];
                    return n39;
                }
                var u33, c23 = r2(19).EventEmitter, l2 = r2(140), f3 = r2(14), p2 = r2(6), h4 = r2(7), y2 = r2(141), d2 = r2(55), _2 = r2(76), v2 = r2(0).arrayParentSymbol, m2 = r2(3), g2 = r2(24), b2 = r2(142), w3 = r2(72), O4 = r2(50), S3 = r2(15).get().ReadPreference, A3 = r2(143), $2 = r2(4), E2 = r2(1), j = r2(147), P2 = r2(148).middlewareFunctions, x2 = r2(78).middlewareFunctions, T3 = P2.concat(x2).reduce(function(t4, e20) {
                    return t4.add(e20);
                }, new Set), N3 = 0;
                function k3(t4, e20) {
                    if (!(this instanceof k3)) return new k3(t4, e20);
                    if (this.obj = t4, this.paths = {
                    }, this.aliases = {
                    }, this.subpaths = {
                    }, this.virtuals = {
                    }, this.singleNestedPaths = {
                    }, this.nested = {
                    }, this.inherits = {
                    }, this.callQueue = [], this._indexes = [], this.methods = {
                    }, this.methodOptions = {
                    }, this.statics = {
                    }, this.tree = {
                    }, this.query = {
                    }, this.childSchemas = [], this.plugins = [], this.$id = ++N3, this.mapPaths = [], this.s = {
                        hooks: new l2
                    }, this.options = this.defaultOptions(e20), Array.isArray(t4)) {
                        var r29, n39 = s25(t4);
                        try {
                            for(n39.s(); !(r29 = n39.n()).done;){
                                var o29 = r29.value;
                                this.add(o29);
                            }
                        } catch (t5) {
                            n39.e(t5);
                        } finally{
                            n39.f();
                        }
                    } else t4 && this.add(t4);
                    var i32 = t4 && t4._id && E2.isObject(t4._id);
                    !this.paths._id && !this.options.noId && this.options._id && !i32 && _2(this), this.setupTimestamp(this.options.timestamps);
                }
                /*!
 * Create virtual properties with alias field
 */ /*!
 * Inherit from EventEmitter.
 */ k3.prototype = Object.create(c23.prototype), k3.prototype.constructor = k3, k3.prototype.instanceOfSchema = !0, /*!
 * ignore
 */ Object.defineProperty(k3.prototype, "$schemaType", {
                    configurable: !1,
                    enumerable: !1,
                    writable: !0
                }), Object.defineProperty(k3.prototype, "childSchemas", {
                    configurable: !1,
                    enumerable: !0,
                    writable: !0
                }), k3.prototype.obj, k3.prototype.paths, k3.prototype.tree, k3.prototype.clone = function() {
                    var t4 = this, e20 = new (null == this.base ? k3 : this.base.Schema)({
                    }, this._userProvidedOptions);
                    return e20.base = this.base, e20.obj = this.obj, e20.options = E2.clone(this.options), e20.callQueue = this.callQueue.map(function(t5) {
                        return t5;
                    }), e20.methods = E2.clone(this.methods), e20.methodOptions = E2.clone(this.methodOptions), e20.statics = E2.clone(this.statics), e20.query = E2.clone(this.query), e20.plugins = Array.prototype.slice.call(this.plugins), e20._indexes = E2.clone(this._indexes), e20.s.hooks = this.s.hooks.clone(), e20.tree = E2.clone(this.tree), e20.paths = E2.clone(this.paths), e20.nested = E2.clone(this.nested), e20.subpaths = E2.clone(this.subpaths), e20.singleNestedPaths = E2.clone(this.singleNestedPaths), e20.childSchemas = /*!
 * ignore
 */ (function(t5) {
                        for(var e21 = [], r30 = 0, n40 = Object.keys(t5.paths); r30 < n40.length; r30++){
                            var o30 = n40[r30], i32 = t5.paths[o30];
                            (i32.$isMongooseDocumentArray || i32.$isSingleNested) && e21.push({
                                schema: i32.schema,
                                model: i32.caster
                            });
                        }
                        return e21;
                    })(e20), e20.virtuals = E2.clone(this.virtuals), e20.$globalPluginsApplied = this.$globalPluginsApplied, e20.$isRootDiscriminator = this.$isRootDiscriminator, e20.$implicitlyCreated = this.$implicitlyCreated, e20.mapPaths = [].concat(this.mapPaths), null != this.discriminatorMapping && (e20.discriminatorMapping = Object.assign({
                    }, this.discriminatorMapping)), null != this.discriminators && (e20.discriminators = Object.assign({
                    }, this.discriminators)), e20.aliases = Object.assign({
                    }, this.aliases), e20.on("init", function(e21) {
                        return t4.emit("init", e21);
                    }), e20;
                }, k3.prototype.pick = function(t4, e20) {
                    var r30 = new k3({
                    }, e20 || this.options);
                    if (!Array.isArray(t4)) throw new f3('Schema#pick() only accepts an array argument, got "' + i31(t4) + '"');
                    var n40, a29 = s25(t4);
                    try {
                        for(a29.s(); !(n40 = a29.n()).done;){
                            var u34 = n40.value;
                            if (this.nested[u34]) r30.add(o27({
                            }, u34, m2(this.tree, u34)));
                            else {
                                var c24 = this.path(u34);
                                if (null == c24) throw new f3("Path `" + u34 + "` is not in the schema");
                                r30.add(o27({
                                }, u34, c24));
                            }
                        }
                    } catch (t5) {
                        a29.e(t5);
                    } finally{
                        a29.f();
                    }
                    return r30;
                }, k3.prototype.defaultOptions = function(t4) {
                    t4 && !1 === t4.safe && (t4.safe = {
                        w: 0
                    }), t4 && t4.safe && 0 === t4.safe.w && (t4.versionKey = !1), this._userProvidedOptions = null == t4 ? {
                    } : E2.clone(t4);
                    var e20 = m2(this, "base.options", {
                    });
                    if ((t4 = E2.options({
                        strict: !("strict" in e20) || e20.strict,
                        strictQuery: "strictQuery" in e20 && e20.strictQuery,
                        bufferCommands: !0,
                        capped: !1,
                        versionKey: "__v",
                        optimisticConcurrency: !1,
                        discriminatorKey: "__t",
                        minimize: !0,
                        autoIndex: null,
                        shardKey: null,
                        read: null,
                        validateBeforeSave: !0,
                        noId: !1,
                        _id: !0,
                        noVirtualId: !1,
                        id: !0,
                        typeKey: "type",
                        typePojoToMixed: !("typePojoToMixed" in e20) || e20.typePojoToMixed
                    }, E2.clone(t4))).read && (t4.read = S3(t4.read)), t4.optimisticConcurrency && !t4.versionKey) throw new f3("Must set `versionKey` if using `optimisticConcurrency`");
                    return t4;
                }, k3.prototype.add = function(t4, e20) {
                    if (t4 instanceof k3 || null != t4 && t4.instanceOfSchema) return w3(this, t4), this;
                    if (!1 === t4._id && null == e20 && (this.options._id = !1), "__proto__." === (e20 = e20 || "") || "constructor." === e20 || "prototype." === e20) return this;
                    for(var r30 = 0, n40 = Object.keys(t4); r30 < n40.length; r30++){
                        var i33 = n40[r30], a29 = e20 + i33;
                        if (null == t4[i33]) throw new TypeError("Invalid value for schema path `" + a29 + '`, got value "' + t4[i33] + '"');
                        if ("_id" !== i33 || !1 !== t4[i33]) {
                            if (t4[i33] instanceof d2 || "VirtualType" === m2(t4[i33], "constructor.name", null)) this.virtual(t4[i33]);
                            else {
                                if (Array.isArray(t4[i33]) && 1 === t4[i33].length && null == t4[i33][0]) throw new TypeError("Invalid value for schema Array path `" + a29 + '`, got value "' + t4[i33][0] + '"');
                                if (E2.isPOJO(t4[i33]) || t4[i33] instanceof h4) {
                                    if (Object.keys(t4[i33]).length < 1) e20 && (this.nested[e20.substr(0, e20.length - 1)] = !0), this.path(a29, t4[i33]);
                                    else if (!t4[i33][this.options.typeKey] || "type" === this.options.typeKey && t4[i33].type.type) this.nested[a29] = !0, this.add(t4[i33], a29 + ".");
                                    else if (!this.options.typePojoToMixed && E2.isPOJO(t4[i33][this.options.typeKey])) {
                                        e20 && (this.nested[e20.substr(0, e20.length - 1)] = !0);
                                        var u35 = new k3(t4[i33][this.options.typeKey], {
                                            typePojoToMixed: !1
                                        }), c25 = Object.assign({
                                        }, t4[i33], o27({
                                        }, this.options.typeKey, u35));
                                        this.path(e20 + i33, c25);
                                    } else e20 && (this.nested[e20.substr(0, e20.length - 1)] = !0), this.path(e20 + i33, t4[i33]);
                                } else e20 && (this.nested[e20.substr(0, e20.length - 1)] = !0), this.path(e20 + i33, t4[i33]);
                            }
                        }
                    }
                    return (function(t5, e21) {
                        var r31, n41 = s25(e21 = e21 || Object.keys(t5.paths));
                        try {
                            for(n41.s(); !(r31 = n41.n()).done;){
                                var o31 = r31.value, i34 = m2(t5.paths[o31], "options");
                                if (null != i34) {
                                    var a30 = t5.paths[o31].path, u36 = i34.alias;
                                    if (u36) {
                                        if ("string" != typeof u36) throw new Error("Invalid value for alias option on " + a30 + ", got " + u36);
                                        t5.aliases[u36] = a30, t5.virtual(u36).get(function(t6) {
                                            return function() {
                                                return "function" == typeof this.get ? this.get(t6) : this[t6];
                                            };
                                        }(a30)).set(function(t6) {
                                            return function(e22) {
                                                return this.$set(t6, e22);
                                            };
                                        }(a30));
                                    }
                                }
                            }
                        } catch (t6) {
                            n41.e(t6);
                        } finally{
                            n41.f();
                        }
                    })(this, Object.keys(t4).map(function(t5) {
                        return e20 ? e20 + t5 : t5;
                    })), this;
                }, k3.reserved = Object.create(null), k3.prototype.reserved = k3.reserved;
                var B2 = k3.reserved;
                /*!
 * ignore
 */ function C(t4) {
                    return /\.\d+/.test(t4) ? t4.replace(/\.\d+\./g, ".$.").replace(/\.\d+$/, ".$") : t4;
                }
                /*!
 * ignore
 */ function R3(t4, e20) {
                    if (0 === t4.mapPaths.length) return null;
                    var r30, n40 = s25(t4.mapPaths);
                    try {
                        for(n40.s(); !(r30 = n40.n()).done;){
                            var o32 = r30.value.path;
                            if (new RegExp("^" + o32.replace(/\.\$\*/g, "\\.[^.]+") + "$").test(e20)) return t4.paths[o32];
                        }
                    } catch (t5) {
                        n40.e(t5);
                    } finally{
                        n40.f();
                    }
                    return null;
                }
                /*!
 * ignore. Deprecated re: #6405
 */ function D(t4, e20) {
                    var r30 = e20.split(/\.(\d+)\.|\.(\d+)$/).filter(Boolean);
                    if (r30.length < 2) return t4.paths.hasOwnProperty(r30[0]) ? t4.paths[r30[0]] : "adhocOrUndefined";
                    var n40 = t4.path(r30[0]), o33 = !1;
                    if (!n40) return "adhocOrUndefined";
                    for(var i35 = r30.length - 1, s26 = 1; s26 < r30.length; ++s26){
                        o33 = !1;
                        var a31 = r30[s26];
                        if (s26 === i35 && n40 && !/\D/.test(a31)) {
                            n40 = n40.$isMongooseDocumentArray ? n40.$embeddedSchemaType : n40 instanceof u33.Array ? n40.caster : void 0;
                            break;
                        }
                        if (/\D/.test(a31)) {
                            if (!n40 || !n40.schema) {
                                n40 = void 0;
                                break;
                            }
                            o33 = "nested" === n40.schema.pathType(a31), n40 = n40.schema.path(a31);
                        } else n40 instanceof u33.Array && s26 !== i35 && (n40 = n40.caster);
                    }
                    return t4.subpaths[e20] = n40, n40 ? "real" : o33 ? "nested" : "adhocOrUndefined";
                }
                /*!
 * ignore
 */ B2.prototype = B2.emit = B2.listeners = B2.on = B2.removeListener = B2.collection = B2.errors = B2.get = B2.init = B2.isModified = B2.isNew = B2.populated = B2.remove = B2.save = B2.toObject = B2.validate = 1, k3.prototype.path = function(t4, e20) {
                    var r30 = C(t4);
                    if ((void 0) === e20) {
                        var n40 = function(t5, e21, r31) {
                            if (t5.paths.hasOwnProperty(e21)) return t5.paths[e21];
                            if (t5.subpaths.hasOwnProperty(r31)) return t5.subpaths[r31];
                            if (t5.singleNestedPaths.hasOwnProperty(r31) && "object" === i31(t5.singleNestedPaths[r31])) return t5.singleNestedPaths[r31];
                            return null;
                        }(this, t4, r30);
                        if (null != n40) return n40;
                        var o33 = R3(this, t4);
                        return null != o33 ? o33 : null != (n40 = this.hasMixedParent(r30)) ? n40 : /\.\d+\.?.*$/.test(t4) ? (function(t5, e21) {
                            return D(t5, e21), t5.subpaths[e21];
                        })(this, t4) : void 0;
                    }
                    var a32 = t4.split(".")[0];
                    if (B2[a32]) throw new Error("`" + a32 + "` may not be used as a schema pathname");
                    "object" === i31(e20) && E2.hasUserDefinedProperty(e20, "ref") && j(e20.ref, t4);
                    var u37, c26 = t4.split(/\./), l19 = c26.pop(), f17 = this.tree, h7 = "", y10 = s25(c26);
                    try {
                        for(y10.s(); !(u37 = y10.n()).done;){
                            var d9 = u37.value;
                            if (h7 = h7 += (h7.length > 0 ? "." : "") + d9, f17[d9] || (this.nested[h7] = !0, f17[d9] = {
                            }), "object" !== i31(f17[d9])) {
                                var _9 = "Cannot set nested path `" + t4 + "`. Parent path `" + h7 + "` already set to type " + f17[d9].name + ".";
                                throw new Error(_9);
                            }
                            f17 = f17[d9];
                        }
                    } catch (t5) {
                        y10.e(t5);
                    } finally{
                        y10.f();
                    }
                    f17[l19] = E2.clone(e20), this.paths[t4] = this.interpretAsType(t4, e20, this.options);
                    var v6 = this.paths[t4];
                    if (v6.$isSchemaMap) {
                        var m4 = t4 + ".$*", g3 = {
                            type: {
                            }
                        };
                        if (E2.hasUserDefinedProperty(e20, "of")) g3 = E2.isPOJO(e20.of) && Object.keys(e20.of).length > 0 && !E2.hasUserDefinedProperty(e20.of, this.options.typeKey) ? new k3(e20.of) : e20.of;
                        E2.hasUserDefinedProperty(e20, "ref") && (g3 = {
                            type: g3,
                            ref: e20.ref
                        }), this.paths[m4] = this.interpretAsType(m4, g3, this.options), this.mapPaths.push(this.paths[m4]), v6.$__schemaType = this.paths[m4];
                    }
                    if (v6.$isSingleNested) {
                        for(var b3 = 0, w4 = Object.keys(v6.schema.paths); b3 < w4.length; b3++){
                            var O5 = w4[b3];
                            this.singleNestedPaths[t4 + "." + O5] = v6.schema.paths[O5];
                        }
                        for(var S4 = 0, A4 = Object.keys(v6.schema.singleNestedPaths); S4 < A4.length; S4++){
                            var $3 = A4[S4];
                            this.singleNestedPaths[t4 + "." + $3] = v6.schema.singleNestedPaths[$3];
                        }
                        for(var P3 = 0, x3 = Object.keys(v6.schema.subpaths); P3 < x3.length; P3++){
                            var T4 = x3[P3];
                            this.singleNestedPaths[t4 + "." + T4] = v6.schema.subpaths[T4];
                        }
                        for(var N4 = 0, M3 = Object.keys(v6.schema.nested); N4 < M3.length; N4++){
                            var I = M3[N4];
                            this.singleNestedPaths[t4 + "." + I] = "nested";
                        }
                        Object.defineProperty(v6.schema, "base", {
                            configurable: !0,
                            enumerable: !1,
                            writable: !1,
                            value: this.base
                        }), v6.caster.base = this.base, this.childSchemas.push({
                            schema: v6.schema,
                            model: v6.caster
                        });
                    } else v6.$isMongooseDocumentArray && (Object.defineProperty(v6.schema, "base", {
                        configurable: !0,
                        enumerable: !1,
                        writable: !1,
                        value: this.base
                    }), v6.casterConstructor.base = this.base, this.childSchemas.push({
                        schema: v6.schema,
                        model: v6.casterConstructor
                    }));
                    if (v6.$isMongooseArray && v6.caster instanceof p2) {
                        for(var F3 = t4, L3 = v6, U2 = []; L3.$isMongooseArray;)F3 += ".$", L3.$isMongooseDocumentArray ? (L3.$embeddedSchemaType._arrayPath = F3, L3.$embeddedSchemaType._arrayParentPath = t4, L3 = L3.$embeddedSchemaType.clone()) : (L3.caster._arrayPath = F3, L3.caster._arrayParentPath = t4, L3 = L3.caster.clone()), L3.path = F3, U2.push(L3);
                        for(var V2 = 0, q2 = U2; V2 < q2.length; V2++){
                            var W2 = q2[V2];
                            this.subpaths[W2.path] = W2;
                        }
                    }
                    if (v6.$isMongooseDocumentArray) {
                        for(var H2 = 0, Y = Object.keys(v6.schema.paths); H2 < Y.length; H2++){
                            var K2 = Y[H2], z2 = v6.schema.paths[K2];
                            this.subpaths[t4 + "." + K2] = z2, "object" === i31(z2) && null != z2 && (z2.$isUnderneathDocArray = !0);
                        }
                        for(var Q = 0, J = Object.keys(v6.schema.subpaths); Q < J.length; Q++){
                            var G = J[Q], X = v6.schema.subpaths[G];
                            this.subpaths[t4 + "." + G] = X, "object" === i31(X) && null != X && (X.$isUnderneathDocArray = !0);
                        }
                        for(var Z2 = 0, tt = Object.keys(v6.schema.singleNestedPaths); Z2 < tt.length; Z2++){
                            var et = tt[Z2], rt2 = v6.schema.singleNestedPaths[et];
                            this.subpaths[t4 + "." + et] = rt2, "object" === i31(rt2) && null != rt2 && (rt2.$isUnderneathDocArray = !0);
                        }
                    }
                    return this;
                }, Object.defineProperty(k3.prototype, "base", {
                    configurable: !0,
                    enumerable: !1,
                    writable: !0,
                    value: null
                }), k3.prototype.interpretAsType = function(t4, e20, r30) {
                    if (e20 instanceof p2) {
                        if (e20.path === t4) return e20;
                        var o34 = e20.clone();
                        return o34.path = t4, o34;
                    }
                    var s26 = null != this.base ? this.base.Schema.Types : k3.Types;
                    if (!(E2.isPOJO(e20) || e20 instanceof h4) && "Object" !== E2.getFunctionName(e20.constructor)) {
                        var a32 = e20;
                        (e20 = {
                        })[r30.typeKey] = a32;
                    }
                    var u37, c26 = !e20[r30.typeKey] || "type" === r30.typeKey && e20.type.type ? {
                    } : e20[r30.typeKey];
                    if (E2.isPOJO(c26) || "mixed" === c26) return new s26.Mixed(t4, e20);
                    if (Array.isArray(c26) || c26 === Array || "array" === c26 || c26 === s26.Array) {
                        var l19 = c26 === Array || "array" === c26 ? e20.cast || e20.of : c26[0];
                        if (l19 && l19.instanceOfSchema) {
                            if (!(l19 instanceof k3)) throw new TypeError("Schema for array path `" + t4 + "` is from a different copy of the Mongoose module. Please make sure you're using the same version of Mongoose everywhere with `npm list mongoose`.");
                            return new s26.DocumentArray(t4, l19, e20);
                        }
                        if (l19 && l19[r30.typeKey] && l19[r30.typeKey].instanceOfSchema) {
                            if (!(l19[r30.typeKey] instanceof k3)) throw new TypeError("Schema for array path `" + t4 + "` is from a different copy of the Mongoose module. Please make sure you're using the same version of Mongoose everywhere with `npm list mongoose`.");
                            return new s26.DocumentArray(t4, l19[r30.typeKey], e20, l19);
                        }
                        if (Array.isArray(l19)) return new s26.Array(t4, this.interpretAsType(t4, l19, r30), e20);
                        if ("string" == typeof l19) l19 = s26[l19.charAt(0).toUpperCase() + l19.substring(1)];
                        else if (l19 && (!l19[r30.typeKey] || "type" === r30.typeKey && l19.type.type) && E2.isPOJO(l19)) {
                            if (Object.keys(l19).length) {
                                var f17 = {
                                    minimize: r30.minimize
                                };
                                r30.typeKey && (f17.typeKey = r30.typeKey), r30.hasOwnProperty("strict") && (f17.strict = r30.strict), r30.hasOwnProperty("typePojoToMixed") && (f17.typePojoToMixed = r30.typePojoToMixed), this._userProvidedOptions.hasOwnProperty("_id") ? f17._id = this._userProvidedOptions._id : k3.Types.DocumentArray.defaultOptions && null != k3.Types.DocumentArray.defaultOptions._id && (f17._id = k3.Types.DocumentArray.defaultOptions._id);
                                var y10 = new k3(l19, f17);
                                return y10.$implicitlyCreated = !0, new s26.DocumentArray(t4, y10, e20);
                            }
                            return new s26.Array(t4, s26.Mixed, e20);
                        }
                        if (l19 && ("ClockDate" === (u37 = "string" == typeof (c26 = !l19[r30.typeKey] || "type" === r30.typeKey && l19.type.type ? l19 : l19[r30.typeKey]) ? c26 : c26.schemaName || E2.getFunctionName(c26)) && (u37 = "Date"), !s26.hasOwnProperty(u37))) throw new TypeError("Invalid schema configuration: " + "`".concat(u37, "` is not a valid type within the array `").concat(t4, "`.") + "See http://bit.ly/mongoose-schematypes for a list of valid schema types.");
                        return new s26.Array(t4, l19 || s26.Mixed, e20, r30);
                    }
                    if (c26 && c26.instanceOfSchema) return new s26.Embedded(c26, t4, e20);
                    if ((u37 = n37.isBuffer(c26) ? "Buffer" : "function" == typeof c26 || "object" === i31(c26) ? c26.schemaName || E2.getFunctionName(c26) : null == c26 ? "" + c26 : c26.toString()) && (u37 = u37.charAt(0).toUpperCase() + u37.substring(1)), "ObjectID" === u37 && (u37 = "ObjectId"), "ClockDate" === u37 && (u37 = "Date"), null == s26[u37]) throw new TypeError("Invalid schema configuration: `".concat(u37, "` is not ") + "a valid type at path `".concat(t4, "`. See ") + "http://bit.ly/mongoose-schematypes for a list of valid schema types.");
                    return new s26[u37](t4, e20);
                }, k3.prototype.eachPath = function(t4) {
                    for(var e20 = Object.keys(this.paths), r30 = e20.length, n41 = 0; n41 < r30; ++n41)t4(e20[n41], this.paths[e20[n41]]);
                    return this;
                }, k3.prototype.requiredPaths = function(t4) {
                    if (this._requiredpaths && !t4) return this._requiredpaths;
                    for(var e20 = Object.keys(this.paths), r30 = e20.length, n41 = []; r30--;){
                        var o35 = e20[r30];
                        this.paths[o35].isRequired && n41.push(o35);
                    }
                    return this._requiredpaths = n41, this._requiredpaths;
                }, k3.prototype.indexedPaths = function() {
                    return this._indexedpaths || (this._indexedpaths = this.indexes()), this._indexedpaths;
                }, k3.prototype.pathType = function(t4) {
                    var e20 = C(t4);
                    if (this.paths.hasOwnProperty(t4)) return "real";
                    if (this.virtuals.hasOwnProperty(t4)) return "virtual";
                    if (this.nested.hasOwnProperty(t4)) return "nested";
                    if (this.subpaths.hasOwnProperty(e20) || this.subpaths.hasOwnProperty(t4)) return "real";
                    var r30 = this.singleNestedPaths.hasOwnProperty(e20) || this.singleNestedPaths.hasOwnProperty(t4);
                    return r30 ? "nested" === r30 ? "nested" : "real" : null != R3(this, t4) ? "real" : /\.\d+\.|\.\d+$/.test(t4) ? D(this, t4) : "adhocOrUndefined";
                }, k3.prototype.hasMixedParent = function(t4) {
                    var e20 = t4.split(/\./g);
                    t4 = "";
                    for(var r30 = 0; r30 < e20.length; ++r30)if (t4 = r30 > 0 ? t4 + "." + e20[r30] : e20[r30], this.paths.hasOwnProperty(t4) && this.paths[t4] instanceof u33.Mixed) return this.paths[t4];
                    return null;
                }, k3.prototype.setupTimestamp = function(t4) {
                    return A3(this, t4);
                }, k3.prototype.queue = function(t4, e20) {
                    return this.callQueue.push([
                        t4,
                        e20
                    ]), this;
                }, k3.prototype.pre = function(t4) {
                    if (t4 instanceof RegExp) {
                        var e20, r30 = Array.prototype.slice.call(arguments, 1), n41 = s25(T3);
                        try {
                            for(n41.s(); !(e20 = n41.n()).done;){
                                var o36 = e20.value;
                                t4.test(o36) && this.pre.apply(this, [
                                    o36
                                ].concat(r30));
                            }
                        } catch (t5) {
                            n41.e(t5);
                        } finally{
                            n41.f();
                        }
                        return this;
                    }
                    if (Array.isArray(t4)) {
                        var i35, a33 = Array.prototype.slice.call(arguments, 1), u37 = s25(t4);
                        try {
                            for(u37.s(); !(i35 = u37.n()).done;){
                                var c26 = i35.value;
                                this.pre.apply(this, [
                                    c26
                                ].concat(a33));
                            }
                        } catch (t5) {
                            u37.e(t5);
                        } finally{
                            u37.f();
                        }
                        return this;
                    }
                    return this.s.hooks.pre.apply(this.s.hooks, arguments), this;
                }, k3.prototype.post = function(t4) {
                    if (t4 instanceof RegExp) {
                        var e21, r31 = Array.prototype.slice.call(arguments, 1), n42 = s25(T3);
                        try {
                            for(n42.s(); !(e21 = n42.n()).done;){
                                var o37 = e21.value;
                                t4.test(o37) && this.post.apply(this, [
                                    o37
                                ].concat(r31));
                            }
                        } catch (t5) {
                            n42.e(t5);
                        } finally{
                            n42.f();
                        }
                        return this;
                    }
                    if (Array.isArray(t4)) {
                        var i36, a34 = Array.prototype.slice.call(arguments, 1), u38 = s25(t4);
                        try {
                            for(u38.s(); !(i36 = u38.n()).done;){
                                var c27 = i36.value;
                                this.post.apply(this, [
                                    c27
                                ].concat(a34));
                            }
                        } catch (t5) {
                            u38.e(t5);
                        } finally{
                            u38.f();
                        }
                        return this;
                    }
                    return this.s.hooks.post.apply(this.s.hooks, arguments), this;
                }, k3.prototype.plugin = function(t4, e22) {
                    if ("function" != typeof t4) throw new Error('First param to `schema.plugin()` must be a function, got "' + i31(t4) + '"');
                    if (e22 && e22.deduplicate) {
                        var r32, n43 = s25(this.plugins);
                        try {
                            for(n43.s(); !(r32 = n43.n()).done;){
                                if (r32.value.fn === t4) return this;
                            }
                        } catch (t5) {
                            n43.e(t5);
                        } finally{
                            n43.f();
                        }
                    }
                    return this.plugins.push({
                        fn: t4,
                        opts: e22
                    }), t4(this, e22), this;
                }, k3.prototype.method = function(t4, e22, r33) {
                    if ("string" != typeof t4) for(var n44 in t4)this.methods[n44] = t4[n44], this.methodOptions[n44] = E2.clone(r33);
                    else this.methods[t4] = e22, this.methodOptions[t4] = E2.clone(r33);
                    return this;
                }, k3.prototype.static = function(t4, e22) {
                    if ("string" != typeof t4) for(var r33 in t4)this.statics[r33] = t4[r33];
                    else this.statics[t4] = e22;
                    return this;
                }, k3.prototype.index = function(t4, e22) {
                    return t4 || (t4 = {
                    }), e22 || (e22 = {
                    }), e22.expires && E2.expires(e22), this._indexes.push([
                        t4,
                        e22
                    ]), this;
                }, k3.prototype.set = function(t4, e22, r33) {
                    if (1 === arguments.length) return this.options[t4];
                    switch(t4){
                        case "read":
                            this.options[t4] = S3(e22, r33), this._userProvidedOptions[t4] = this.options[t4];
                            break;
                        case "safe":
                            M4(this.options, e22), this._userProvidedOptions[t4] = this.options[t4];
                            break;
                        case "timestamps":
                            this.setupTimestamp(e22), this.options[t4] = e22, this._userProvidedOptions[t4] = this.options[t4];
                            break;
                        case "_id":
                            this.options[t4] = e22, this._userProvidedOptions[t4] = this.options[t4], e22 && !this.paths._id ? _2(this) : !e22 && null != this.paths._id && this.paths._id.auto && this.remove("_id");
                            break;
                        default:
                            this.options[t4] = e22, this._userProvidedOptions[t4] = this.options[t4];
                    }
                    return this;
                };
                /*!
 * ignore
 */ var M4 = $2.deprecate(function(t4, e22) {
                    t4.safe = !1 === e22 ? {
                        w: 0
                    } : e22;
                }, "Mongoose: The `safe` option for schemas is deprecated. Use the `writeConcern` option instead: http://bit.ly/mongoose-write-concern");
                k3.prototype.get = function(t4) {
                    return this.options[t4];
                };
                var I = "2d 2dsphere hashed text".split(" ");
                /*!
 * ignore
 */ function F4(t4, e22) {
                    var r33, n44 = e22.split("."), o38 = n44.pop(), i37 = t4.tree, a35 = s25(n44);
                    try {
                        for(a35.s(); !(r33 = a35.n()).done;)i37 = i37[r33.value];
                    } catch (t5) {
                        a35.e(t5);
                    } finally{
                        a35.f();
                    }
                    delete i37[o38];
                }
                /*!
 * ignore
 */ function L4(t4) {
                    return t4.startsWith("$[") && t4.endsWith("]");
                }
                /*!
 * Module exports.
 */ Object.defineProperty(k3, "indexTypes", {
                    get: function() {
                        return I;
                    },
                    set: function() {
                        throw new Error("Cannot overwrite Schema.indexTypes");
                    }
                }), k3.prototype.indexes = function() {
                    return b2(this);
                }, k3.prototype.virtual = function(t4, e22) {
                    var r33 = this;
                    if (t4 instanceof d2 || "VirtualType" === g2(t4)) return this.virtual(t4.path, t4.options);
                    if (e22 = new y2(e22), E2.hasUserDefinedProperty(e22, [
                        "ref",
                        "refPath"
                    ])) {
                        if (null == e22.localField) throw new Error("Reference virtuals require `localField` option");
                        if (null == e22.foreignField) throw new Error("Reference virtuals require `foreignField` option");
                        this.pre("init", function(r34) {
                            if (O4.has(t4, r34)) {
                                var n44 = O4.get(t4, r34);
                                this.$$populatedVirtuals || (this.$$populatedVirtuals = {
                                }), e22.justOne || e22.count ? this.$$populatedVirtuals[t4] = Array.isArray(n44) ? n44[0] : n44 : this.$$populatedVirtuals[t4] = Array.isArray(n44) ? n44 : null == n44 ? [] : [
                                    n44
                                ], O4.unset(t4, r34);
                            }
                        });
                        var n45 = this.virtual(t4);
                        return n45.options = e22, n45.set(function(r34) {
                            this.$$populatedVirtuals || (this.$$populatedVirtuals = {
                            }), e22.justOne || e22.count ? (this.$$populatedVirtuals[t4] = Array.isArray(r34) ? r34[0] : r34, "object" !== i31(this.$$populatedVirtuals[t4]) && (this.$$populatedVirtuals[t4] = e22.count ? r34 : null)) : (this.$$populatedVirtuals[t4] = Array.isArray(r34) ? r34 : null == r34 ? [] : [
                                r34
                            ], this.$$populatedVirtuals[t4] = this.$$populatedVirtuals[t4].filter(function(t5) {
                                return t5 && "object" === i31(t5);
                            }));
                        }), "function" == typeof e22.get && n45.get(e22.get), n45;
                    }
                    var o38 = this.virtuals, s26 = t4.split(".");
                    if ("real" === this.pathType(t4)) throw new Error('Virtual path "' + t4 + '" conflicts with a real path in the schema');
                    o38[t4] = s26.reduce(function(r34, n46, o39) {
                        return r34[n46] || (r34[n46] = o39 === s26.length - 1 ? new d2(e22, t4) : {
                        }), r34[n46];
                    }, this.tree);
                    for(var a35 = s26[0], u39 = 0; u39 < s26.length - 1; ++u39){
                        if (null != this.paths[a35] && this.paths[a35].$isMongooseDocumentArray) {
                            if ("break" === (function() {
                                var t5 = s26.slice(u39 + 1).join(".");
                                return r33.paths[a35].schema.virtual(t5).get(function(e23, r34, n46) {
                                    var o39 = n46.__parentArray[v2], i37 = a35 + "." + n46.__index + "." + t5;
                                    return o39.get(i37);
                                }), "break";
                            })()) break;
                        }
                        a35 += "." + s26[u39 + 1];
                    }
                    return o38[t4];
                }, k3.prototype.virtualpath = function(t4) {
                    return this.virtuals.hasOwnProperty(t4) ? this.virtuals[t4] : null;
                }, k3.prototype.remove = function(t4) {
                    return "string" == typeof t4 && (t4 = [
                        t4
                    ]), Array.isArray(t4) && t4.forEach(function(t5) {
                        if (null != this.path(t5) || this.nested[t5]) {
                            if (this.nested[t5]) {
                                var e22, r33 = s25(Object.keys(this.paths).concat(Object.keys(this.nested)));
                                try {
                                    for(r33.s(); !(e22 = r33.n()).done;){
                                        var n46 = e22.value;
                                        n46.startsWith(t5 + ".") && (delete this.paths[n46], delete this.nested[n46], F4(this, n46));
                                    }
                                } catch (t6) {
                                    r33.e(t6);
                                } finally{
                                    r33.f();
                                }
                                return delete this.nested[t5], void F4(this, t5);
                            }
                            delete this.paths[t5], F4(this, t5);
                        }
                    }, this), this;
                }, k3.prototype.loadClass = function(t4, e23) {
                    return t4 === Object.prototype || t4 === Function.prototype || t4.prototype.hasOwnProperty("$isMongooseModelPrototype") || (this.loadClass(Object.getPrototypeOf(t4), e23), e23 || Object.getOwnPropertyNames(t4).forEach(function(e24) {
                        if (!e24.match(/^(length|name|prototype|constructor|__proto__)$/)) {
                            var r34 = Object.getOwnPropertyDescriptor(t4, e24);
                            r34.hasOwnProperty("value") && this.static(e24, r34.value);
                        }
                    }, this), Object.getOwnPropertyNames(t4.prototype).forEach(function(r35) {
                        if (!r35.match(/^(constructor)$/)) {
                            var n47 = Object.getOwnPropertyDescriptor(t4.prototype, r35);
                            e23 || "function" == typeof n47.value && this.method(r35, n47.value), "function" == typeof n47.get && (this.virtuals[r35] && (this.virtuals[r35].getters = []), this.virtual(r35).get(n47.get)), "function" == typeof n47.set && (this.virtuals[r35] && (this.virtuals[r35].setters = []), this.virtual(r35).set(n47.set));
                        }
                    }, this)), this;
                }, /*!
 * ignore
 */ k3.prototype._getSchema = function(t4) {
                    var e23 = this.path(t4), r35 = [];
                    if (e23) return e23.$fullPath = t4, e23;
                    for(var n48 = t4.split("."), o38 = 0; o38 < n48.length; ++o38)("$" === n48[o38] || L4(n48[o38])) && (n48[o38] = "0");
                    return (function t5(e24, n49) {
                        for(var o39, i37, s26 = e24.length + 1; s26--;)if (i37 = e24.slice(0, s26).join("."), o39 = n49.path(i37)) {
                            if (r35.push(i37), o39.caster) {
                                if (o39.caster instanceof u33.Mixed) return o39.caster.$fullPath = r35.join("."), o39.caster;
                                if (s26 !== e24.length && o39.schema) {
                                    var a35 = void 0;
                                    return "$" === e24[s26] || L4(e24[s26]) ? s26 + 1 === e24.length ? o39 : ((a35 = t5(e24.slice(s26 + 1), o39.schema)) && (a35.$isUnderneathDocArray = a35.$isUnderneathDocArray || !o39.schema.$isSingleNested), a35) : ((a35 = t5(e24.slice(s26), o39.schema)) && (a35.$isUnderneathDocArray = a35.$isUnderneathDocArray || !o39.schema.$isSingleNested), a35);
                                }
                            } else if (o39.$isSchemaMap) return s26 + 1 >= e24.length ? o39 : t5(e24.slice(s26 + 1), o39.$__schemaType.schema);
                            return o39.$fullPath = r35.join("."), o39;
                        }
                    })(n48, this);
                }, /*!
 * ignore
 */ k3.prototype._getPathType = function(t4) {
                    if (this.path(t4)) return "real";
                    return (function t5(e23, r35) {
                        for(var n48, o38, i37 = e23.length + 1; i37--;){
                            if (o38 = e23.slice(0, i37).join("."), n48 = r35.path(o38)) return n48.caster ? n48.caster instanceof u33.Mixed ? {
                                schema: n48,
                                pathType: "mixed"
                            } : i37 !== e23.length && n48.schema ? "$" === e23[i37] || L4(e23[i37]) ? i37 === e23.length - 1 ? {
                                schema: n48,
                                pathType: "nested"
                            } : t5(e23.slice(i37 + 1), n48.schema) : t5(e23.slice(i37), n48.schema) : {
                                schema: n48,
                                pathType: n48.$isSingleNested ? "nested" : "array"
                            } : {
                                schema: n48,
                                pathType: "real"
                            };
                            if (i37 === e23.length && r35.nested[o38]) return {
                                schema: r35,
                                pathType: "nested"
                            };
                        }
                        return {
                            schema: n48 || r35,
                            pathType: "undefined"
                        };
                    })(t4.split("."), this);
                }, t2.exports = e3 = k3, k3.Types = u33 = r2(56), /*!
 * ignore
 */ e3.ObjectId = u33.ObjectId;
            }).call(this, r2(2).Buffer);
        },
        function(t2, e3, r2) {
            "use strict";
            var n37 = r2(1);
            function o27(t4, e23) {
                this.path = e23, this.getters = [], this.setters = [], this.options = Object.assign({
                }, t4);
            }
            o27.prototype._applyDefaultGetters = function() {
                if (!(this.getters.length > 0 || this.setters.length > 0)) {
                    var t4 = "$" + this.path;
                    this.getters.push(function() {
                        return this[t4];
                    }), this.setters.push(function(e23) {
                        this[t4] = e23;
                    });
                }
            }, /*!
 * ignore
 */ o27.prototype.clone = function() {
                var t5 = new o27(this.options, this.path);
                return t5.getters = [].concat(this.getters), t5.setters = [].concat(this.setters), t5;
            }, o27.prototype.get = function(t5) {
                return this.getters.push(t5), this;
            }, o27.prototype.set = function(t5) {
                return this.setters.push(t5), this;
            }, o27.prototype.applyGetters = function(t5, e23) {
                n37.hasUserDefinedProperty(this.options, [
                    "ref",
                    "refPath"
                ]) && e23.$$populatedVirtuals && e23.$$populatedVirtuals.hasOwnProperty(this.path) && (t5 = e23.$$populatedVirtuals[this.path]);
                for(var r35 = t5, o38 = this.getters.length - 1; o38 >= 0; o38--)r35 = this.getters[o38].call(e23, r35, this, e23);
                return r35;
            }, o27.prototype.applySetters = function(t5, e23) {
                for(var r35 = t5, n48 = this.setters.length - 1; n48 >= 0; n48--)r35 = this.setters[n48].call(e23, r35, this, e23);
                return r35;
            }, /*!
 * exports
 */ t2.exports = o27;
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module exports.
 */ e3.String = r2(149), e3.Number = r2(80), e3.Boolean = r2(153), e3.DocumentArray = r2(154), e3.Embedded = r2(161), e3.Array = r2(57), e3.Buffer = r2(163), e3.Date = r2(165), e3.ObjectId = r2(168), e3.Mixed = r2(28), e3.Decimal128 = e3.Decimal = r2(170), e3.Map = r2(172), e3.Oid = e3.ObjectId, e3.Object = e3.Mixed, e3.Bool = e3.Boolean, e3.ObjectID = e3.ObjectId;
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n37(t5, e23) {
                var r35 = "undefined" != typeof Symbol && t5[Symbol.iterator] || t5["@@iterator"];
                if (!r35) {
                    if (Array.isArray(t5) || (r35 = (function(t6, e24) {
                        if (!t6) return;
                        if ("string" == typeof t6) return o27(t6, e24);
                        var r36 = Object.prototype.toString.call(t6).slice(8, -1);
                        "Object" === r36 && t6.constructor && (r36 = t6.constructor.name);
                        if ("Map" === r36 || "Set" === r36) return Array.from(t6);
                        if ("Arguments" === r36 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r36)) return o27(t6, e24);
                    })(t5)) || e23 && t5 && "number" == typeof t5.length) {
                        r35 && (t5 = r35);
                        var n48 = 0, i31 = function() {
                        };
                        return {
                            s: i31,
                            n: function() {
                                return n48 >= t5.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t5[n48++]
                                };
                            },
                            e: function(t6) {
                                throw t6;
                            },
                            f: i31
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s25, a28 = !0, u33 = !1;
                return {
                    s: function() {
                        r35 = r35.call(t5);
                    },
                    n: function() {
                        var t6 = r35.next();
                        return a28 = t6.done, t6;
                    },
                    e: function(t6) {
                        u33 = !0, s25 = t6;
                    },
                    f: function() {
                        try {
                            a28 || null == r35.return || r35.return();
                        } finally{
                            if (u33) throw s25;
                        }
                    }
                };
            }
            function o27(t5, e23) {
                (null == e23 || e23 > t5.length) && (e23 = t5.length);
                for(var r35 = 0, n49 = new Array(e23); r35 < e23; r35++)n49[r35] = t5[r35];
                return n49;
            }
            var i37, s25, a28 = r2(52), u33 = r2(74), c23 = r2(14), l2 = r2(155), f3 = r2(6), p2 = f3.CastError, h4 = r2(28), y2 = r2(156), d2 = r2(157), _2 = r2(3), v2 = r2(83), m2 = r2(4), g2 = r2(1), b2 = r2(36).castToNumber, w3 = r2(84), O4 = r2(37), S3 = Symbol("mongoose#isNestedArray"), A3 = Object.freeze({
            });
            function $2(t5, e23, n49, o38) {
                s25 || (s25 = r2(38).Embedded);
                var i38, a36, u39 = "type";
                if (o38 && o38.typeKey && (u39 = o38.typeKey), this.schemaOptions = o38, e23) {
                    var c28 = {
                    };
                    g2.isPOJO(e23) && (e23[u39] ? (delete (c28 = g2.clone(e23))[u39], e23 = e23[u39]) : e23 = h4), null != n49 && null != n49.ref && null == c28.ref && (c28.ref = n49.ref), e23 === Object && (e23 = h4);
                    var l20 = "string" == typeof e23 ? e23 : g2.getFunctionName(e23), p12 = r2(56), y11 = p12.hasOwnProperty(l20) ? p12[l20] : e23;
                    if (this.casterConstructor = y11, this.casterConstructor instanceof $2 && (this.casterConstructor[S3] = !0), "function" != typeof y11 || y11.$isArraySubdocument || y11.$isSchemaMap) this.caster = y11, this.caster instanceof s25 || (this.caster.path = t5);
                    else {
                        var d10 = this.caster instanceof s25 ? null : t5;
                        this.caster = new y11(d10, c28);
                    }
                    this.$embeddedSchemaType = this.caster;
                }
                if (this.$isMongooseArray = !0, f3.call(this, t5, n49, "Array"), null != this.defaultValue && (i38 = this.defaultValue, a36 = "function" == typeof i38), !("defaultValue" in this) || (void 0) !== this.defaultValue) {
                    var _10 = function() {
                        var t6 = [];
                        return a36 ? t6 = i38.call(this) : null != i38 && (t6 = t6.concat(i38)), t6;
                    };
                    _10.$runBeforeSetters = !a36, this.default(_10);
                }
            }
            $2.schemaName = "Array", $2.options = {
                castNonArrays: !0
            }, /*!
 * ignore
 */ $2.defaultOptions = {
            }, $2.set = f3.set, /*!
 * Inherits from SchemaType.
 */ $2.prototype = Object.create(f3.prototype), $2.prototype.constructor = $2, $2.prototype.OptionsConstructor = l2, /*!
 * ignore
 */ $2._checkRequired = f3.prototype.checkRequired, $2.checkRequired = f3.checkRequired, $2.prototype.checkRequired = function(t5, e23) {
                return f3._isRef(this, t5, e23, !0) ? !!t5 : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : $2.checkRequired())(t5);
            }, $2.prototype.enum = function() {
                for(var t5 = this;;){
                    var e23 = _2(t5, "caster.instance");
                    if ("Array" !== e23) {
                        if ("String" !== e23 && "Number" !== e23) throw new Error("`enum` can only be set on an array of strings or numbers , not " + e23);
                        break;
                    }
                    t5 = t5.caster;
                }
                var r35 = arguments;
                return !Array.isArray(arguments) && g2.isObject(arguments) && (r35 = g2.object.vals(r35)), t5.caster.enum.apply(t5.caster, r35), this;
            }, $2.prototype.applyGetters = function(t5, e24) {
                if (null != e24 && null != e24.$__ && e24.populated(this.path)) return t5;
                var r35 = f3.prototype.applyGetters.call(this, t5, e24);
                if (Array.isArray(r35)) for(var n49 = r35.length, o38 = 0; o38 < n49; ++o38)r35[o38] = this.caster.applyGetters(r35[o38], e24);
                return r35;
            }, $2.prototype._applySetters = function(t5, e24, r35, n49) {
                if (this.casterConstructor.$isMongooseArray && $2.options.castNonArrays && !this[S3]) {
                    for(var o38 = 0, i38 = this; null != i38 && i38.$isMongooseArray && !i38.$isMongooseDocumentArray;)++o38, i38 = i38.casterConstructor;
                    if (null != t5 && t5.length > 0) {
                        var s26 = y2(t5);
                        if (s26.min === s26.max && s26.max < o38 && s26.containsNonArrayItem) for(var a36 = s26.max; a36 < o38; ++a36)t5 = [
                            t5
                        ];
                    }
                }
                return f3.prototype._applySetters.call(this, t5, e24, r35, n49);
            }, $2.prototype.cast = function(t5, e24, n49, o39, s27) {
                var a37, u39;
                if (i37 || (i37 = r2(38).Array), Array.isArray(t5)) {
                    var l21 = t5.length;
                    if (!l21 && e24) {
                        var f18 = e24.schema.indexedPaths(), y12 = this.path;
                        for(a37 = 0, u39 = f18.length; a37 < u39; ++a37){
                            var d11 = f18[a37][0][y12];
                            if ("2dsphere" === d11 || "2d" === d11) return;
                        }
                        var _11 = this.path.endsWith(".coordinates") ? this.path.substr(0, this.path.lastIndexOf(".")) : null;
                        if (null != _11) for(a37 = 0, u39 = f18.length; a37 < u39; ++a37){
                            if ("2dsphere" === f18[a37][0][_11]) return;
                        }
                    }
                    if (t5 = i37(t5, (s27 = s27 || A3).path || this._arrayPath || this.path, e24, this), n49 && null != e24 && null != e24.$__ && e24.populated(this.path)) return t5;
                    var v6 = this.caster, g4 = v6.$isMongooseArray, b4 = "Number" === v6.instance;
                    if (v6 && this.casterConstructor !== h4) try {
                        for(a37 = 0; a37 < l21; a37++){
                            if (b4 && (void 0) === t5[a37]) throw new c23("Mongoose number arrays disallow storing undefined");
                            var w5 = {
                            };
                            g4 && (null != s27.arrayPath || null != v6._arrayParentPath) && (w5.arrayPathIndex = a37), t5[a37] = v6.applySetters(t5[a37], e24, n49, void 0, w5);
                        }
                    } catch (e25) {
                        throw new p2("[" + e25.kind + "]", m2.inspect(t5), this.path + "." + a37, e25, this);
                    }
                    return t5;
                }
                if (n49 || $2.options.castNonArrays) return e24 && n49 && e24.markModified(this.path), this.cast([
                    t5
                ], e24, n49);
                throw new p2("Array", m2.inspect(t5), this.path, null, this);
            }, /*!
 * ignore
 */ $2.prototype._castForPopulate = function(t5, e24) {
                if (i37 || (i37 = r2(38).Array), Array.isArray(t5)) {
                    var n49, o39 = t5.length, s27 = this.caster;
                    if (s27 && this.casterConstructor !== h4) try {
                        for(n49 = 0; n49 < o39; n49++){
                            var a37 = {
                            };
                            s27.$isMongooseArray && null != s27._arrayParentPath && (a37.arrayPathIndex = n49), t5[n49] = s27.cast(t5[n49], e24, !1, void 0, a37);
                        }
                    } catch (e25) {
                        throw new p2("[" + e25.kind + "]", m2.inspect(t5), this.path + "." + n49, e25, this);
                    }
                    return t5;
                }
                throw new p2("Array", m2.inspect(t5), this.path, null, this);
            }, /*!
 * Ignore
 */ $2.prototype.discriminator = function(t5, e24) {
                for(var r35 = this; r35.$isMongooseArray && !r35.$isMongooseDocumentArray;)if (null == (r35 = r35.casterConstructor) || "function" == typeof r35) throw new c23("You can only add an embedded discriminator on a document array, " + this.path + " is a plain array");
                return r35.discriminator(t5, e24);
            }, /*!
 * ignore
 */ $2.prototype.clone = function() {
                var t5 = Object.assign({
                }, this.options), e24 = new this.constructor(this.path, this.caster, t5, this.schemaOptions);
                return e24.validators = this.validators.slice(), (void 0) !== this.requiredValidator && (e24.requiredValidator = this.requiredValidator), e24;
            }, $2.prototype.castForQuery = function(t5, e24) {
                var r35, n50, o40 = this;
                if (2 === arguments.length) {
                    if (!(r35 = this.$conditionalHandlers[t5])) throw new Error("Can't use " + t5 + " with Array.");
                    n50 = r35.call(this, e24);
                } else {
                    n50 = t5;
                    var i39 = this.casterConstructor;
                    if (n50 && i39.discriminators && i39.schema && i39.schema.options && i39.schema.options.discriminatorKey) {
                        if ("string" == typeof n50[i39.schema.options.discriminatorKey] && i39.discriminators[n50[i39.schema.options.discriminatorKey]]) i39 = i39.discriminators[n50[i39.schema.options.discriminatorKey]];
                        else {
                            var s28 = O4(i39.discriminators, n50[i39.schema.options.discriminatorKey]);
                            s28 && (i39 = s28);
                        }
                    }
                    var a38 = this.casterConstructor.prototype, u39 = a38 && (a38.castForQuery || a38.cast);
                    !u39 && i39.castForQuery && (u39 = i39.castForQuery);
                    var c29 = this.caster;
                    Array.isArray(n50) ? (this.setters.reverse().forEach(function(t6) {
                        n50 = t6.call(o40, n50, o40);
                    }), n50 = n50.map(function(t6) {
                        return g2.isObject(t6) && t6.$elemMatch ? t6 : u39 ? t6 = u39.call(c29, t6) : null != t6 ? t6 = new i39(t6) : t6;
                    })) : u39 ? n50 = u39.call(c29, n50) : null != n50 && (n50 = new i39(n50));
                }
                return n50;
            };
            var E2 = $2.prototype.$conditionalHandlers = {
            };
            function j(t5) {
                return function(e24) {
                    if (!Array.isArray(e24)) throw new TypeError("conditional " + t5 + " requires an array");
                    var r35, o40 = [], i40 = n37(e24);
                    try {
                        for(i40.s(); !(r35 = i40.n()).done;){
                            var s29 = r35.value;
                            o40.push(d2(this.casterConstructor.schema, s29));
                        }
                    } catch (t6) {
                        i40.e(t6);
                    } finally{
                        i40.f();
                    }
                    return o40;
                };
            }
            E2.$all = function(t5) {
                return Array.isArray(t5) || (t5 = [
                    t5
                ]), t5 = t5.map(function(t6) {
                    if (g2.isObject(t6)) {
                        var e24 = {
                        };
                        return e24[this.path] = t6, d2(this.casterConstructor.schema, e24)[this.path];
                    }
                    return t6;
                }, this), this.castForQuery(t5);
            }, E2.$options = String, E2.$elemMatch = function(t5) {
                for(var e25 = Object.keys(t5), r35 = e25.length, n50 = 0; n50 < r35; ++n50){
                    var o40 = e25[n50], i40 = t5[o40];
                    v2(o40) && null != i40 && (t5[o40] = this.castForQuery(o40, i40));
                }
                var s30 = _2(this, "casterConstructor.schema.options.discriminatorKey"), a39 = _2(this, "casterConstructor.schema.discriminators", {
                });
                return null != s30 && null != t5[s30] && null != a39[t5[s30]] ? d2(a39[t5[s30]], t5) : d2(this.casterConstructor.schema, t5);
            }, E2.$geoIntersects = w3.cast$geoIntersects, E2.$or = j("$or"), E2.$and = j("$and"), E2.$nor = j("$nor"), E2.$near = E2.$nearSphere = w3.cast$near, E2.$within = E2.$geoWithin = w3.cast$within, E2.$size = E2.$minDistance = E2.$maxDistance = b2, E2.$exists = a28, E2.$type = u33, E2.$eq = E2.$gt = E2.$gte = E2.$lt = E2.$lte = E2.$ne = E2.$regex = $2.prototype.castForQuery, E2.$nin = f3.prototype.$conditionalHandlers.$nin, E2.$in = f3.prototype.$conditionalHandlers.$in, /*!
 * Module exports.
 */ t2.exports = $2;
        },
        function(t2, e3, r2) {
            "use strict";
            var n37, o27 = r2(0).documentSchemaSymbol, i37 = r2(3), s25 = r2(17).internalToObjectOptions, a28 = r2(1), u33 = r2(0).getSymbol, c23 = r2(0).scopeSymbol;
            /*!
 * Compiles schemas.
 */ function l2(t5, e25, o41, i41) {
                n37 = n37 || r2(12);
                for(var s30, u40, c30 = Object.keys(t5), l22 = c30.length, p2 = 0; p2 < l22; ++p2)s30 = t5[u40 = c30[p2]], f3(u40, a28.isPOJO(s30) && Object.keys(s30).length && (!s30[i41.typeKey] || "type" === i41.typeKey && s30.type.type) ? s30 : null, e25, o41, c30, i41);
            }
            /*!
 * Defines the accessor named prop on the incoming prototype.
 */ function f3(t5, e25, f19, p2, h4, y2) {
                n37 = n37 || r2(12);
                var d2 = (p2 ? p2 + "." : "") + t5;
                p2 = p2 || "", e25 ? Object.defineProperty(f19, t5, {
                    enumerable: !0,
                    configurable: !0,
                    get: function() {
                        var t6, r35, s30 = this;
                        if (this.$__.getters || (this.$__.getters = {
                        }), !this.$__.getters[d2]) {
                            var u40 = Object.create(n37.prototype, (t6 = this, r35 = {
                            }, Object.getOwnPropertyNames(t6).forEach(function(e26) {
                                -1 === [
                                    "isNew",
                                    "$__",
                                    "errors",
                                    "_doc",
                                    "$locals",
                                    "$op",
                                    "__parentArray",
                                    "__index",
                                    "$isDocumentArrayElement"
                                ].indexOf(e26) || (r35[e26] = Object.getOwnPropertyDescriptor(t6, e26), r35[e26].enumerable = !1);
                            }), r35));
                            p2 || (u40.$__[c23] = this), u40.$__.nestedPath = d2, Object.defineProperty(u40, "schema", {
                                enumerable: !1,
                                configurable: !0,
                                writable: !1,
                                value: f19.schema
                            }), Object.defineProperty(u40, "$__schema", {
                                enumerable: !1,
                                configurable: !0,
                                writable: !1,
                                value: f19.schema
                            }), Object.defineProperty(u40, o27, {
                                enumerable: !1,
                                configurable: !0,
                                writable: !1,
                                value: f19.schema
                            }), Object.defineProperty(u40, "toObject", {
                                enumerable: !1,
                                configurable: !0,
                                writable: !1,
                                value: function() {
                                    return a28.clone(s30.get(d2, null, {
                                        virtuals: i37(this, "schema.options.toObject.virtuals", null)
                                    }));
                                }
                            }), Object.defineProperty(u40, "$__get", {
                                enumerable: !1,
                                configurable: !0,
                                writable: !1,
                                value: function() {
                                    return s30.get(d2, null, {
                                        virtuals: i37(this, "schema.options.toObject.virtuals", null)
                                    });
                                }
                            }), Object.defineProperty(u40, "toJSON", {
                                enumerable: !1,
                                configurable: !0,
                                writable: !1,
                                value: function() {
                                    return s30.get(d2, null, {
                                        virtuals: i37(s30, "schema.options.toJSON.virtuals", null)
                                    });
                                }
                            }), Object.defineProperty(u40, "$__isNested", {
                                enumerable: !1,
                                configurable: !0,
                                writable: !1,
                                value: !0
                            });
                            var h7 = Object.freeze({
                                minimize: !0,
                                virtuals: !1,
                                getters: !1,
                                transform: !1
                            });
                            Object.defineProperty(u40, "$isEmpty", {
                                enumerable: !1,
                                configurable: !0,
                                writable: !1,
                                value: function() {
                                    return 0 === Object.keys(this.get(d2, null, h7) || {
                                    }).length;
                                }
                            }), Object.defineProperty(u40, "$__parent", {
                                enumerable: !1,
                                configurable: !0,
                                writable: !1,
                                value: this
                            }), l2(e25, u40, d2, y2), this.$__.getters[d2] = u40;
                        }
                        return this.$__.getters[d2];
                    },
                    set: function(t6) {
                        null != t6 && t6.$__isNested ? t6 = t6.$__get() : t6 instanceof n37 && !t6.$__isNested && (t6 = t6.toObject(s25)), (this.$__[c23] || this).$set(d2, t6);
                    }
                }) : Object.defineProperty(f19, t5, {
                    enumerable: !0,
                    configurable: !0,
                    get: function() {
                        return this[u33].call(this.$__[c23] || this, d2);
                    },
                    set: function(t6) {
                        this.$set.call(this.$__[c23] || this, d2, t6);
                    }
                });
            }
            /*!
 * exports
 */ e3.compile = l2, e3.defineKey = f3;
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * ignore
 */ function n37(t5) {
                return (n37 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t6) {
                    return typeof t6;
                } : function(t6) {
                    return t6 && "function" == typeof Symbol && t6.constructor === Symbol && t6 !== Symbol.prototype ? "symbol" : typeof t6;
                })(t5);
            }
            t2.exports = function(t5) {
                return null == t5 || "object" !== n37(t5) || !("$meta" in t5) && !("$slice" in t5);
            };
        },
        function(t2, e3, r2) {
            "use strict";
            (function(e25) {
                if ((void 0) !== e25.Map) t2.exports = e25.Map, t2.exports.Map = e25.Map;
                else {
                    var r35 = function(t5) {
                        this._keys = [], this._values = {
                        };
                        for(var e26 = 0; e26 < t5.length; e26++)if (null != t5[e26]) {
                            var r36 = t5[e26], n37 = r36[0], o27 = r36[1];
                            this._keys.push(n37), this._values[n37] = {
                                v: o27,
                                i: this._keys.length - 1
                            };
                        }
                    };
                    r35.prototype.clear = function() {
                        this._keys = [], this._values = {
                        };
                    }, r35.prototype.delete = function(t5) {
                        var e26 = this._values[t5];
                        return null != e26 && (delete this._values[t5], this._keys.splice(e26.i, 1), !0);
                    }, r35.prototype.entries = function() {
                        var t5 = this, e26 = 0;
                        return {
                            next: function() {
                                var r37 = t5._keys[e26++];
                                return {
                                    value: (void 0) !== r37 ? [
                                        r37,
                                        t5._values[r37].v
                                    ] : void 0,
                                    done: (void 0) === r37
                                };
                            }
                        };
                    }, r35.prototype.forEach = function(t5, e26) {
                        e26 = e26 || this;
                        for(var r37 = 0; r37 < this._keys.length; r37++){
                            var n50 = this._keys[r37];
                            t5.call(e26, this._values[n50].v, n50, e26);
                        }
                    }, r35.prototype.get = function(t5) {
                        return this._values[t5] ? this._values[t5].v : void 0;
                    }, r35.prototype.has = function(t5) {
                        return null != this._values[t5];
                    }, r35.prototype.keys = function() {
                        var t5 = this, e26 = 0;
                        return {
                            next: function() {
                                var r37 = t5._keys[e26++];
                                return {
                                    value: (void 0) !== r37 ? r37 : void 0,
                                    done: (void 0) === r37
                                };
                            }
                        };
                    }, r35.prototype.set = function(t5, e26) {
                        return this._values[t5] ? (this._values[t5].v = e26, this) : (this._keys.push(t5), this._values[t5] = {
                            v: e26,
                            i: this._keys.length - 1
                        }, this);
                    }, r35.prototype.values = function() {
                        var t5 = this, e26 = 0;
                        return {
                            next: function() {
                                var r37 = t5._keys[e26++];
                                return {
                                    value: (void 0) !== r37 ? t5._values[r37].v : void 0,
                                    done: (void 0) === r37
                                };
                            }
                        };
                    }, Object.defineProperty(r35.prototype, "size", {
                        enumerable: !0,
                        get: function() {
                            return this._keys.length;
                        }
                    }), t2.exports = r35, t2.exports.Map = r35;
                }
            }).call(this, r2(9));
        },
        function(t2, e3) {
            var r2 = function t5(e25) {
                if (!(this instanceof t5)) return new t5(e25);
                this._bsontype = "Int32", this.value = e25;
            };
            r2.prototype.valueOf = function() {
                return this.value;
            }, r2.prototype.toJSON = function() {
                return this.value;
            }, t2.exports = r2, t2.exports.Int32 = r2;
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ var n51 = r2(12), o41 = r2(181), i37 = !1;
            t2.exports = function() {
                return i37 ? o41 : n51;
            }, /*!
 * ignore
 */ t2.exports.setBrowser = function(t5) {
                i37 = t5;
            };
        },
        function(t2, e3) {
            t2.exports = function(t5, e25, r2) {
                var n51 = [], o41 = t5.length;
                if (0 === o41) return n51;
                var i37 = e25 < 0 ? Math.max(0, e25 + o41) : e25 || 0;
                for((void 0) !== r2 && (o41 = r2 < 0 ? r2 + o41 : r2); (o41--) > i37;)n51[o41 - i37] = t5[o41];
                return n51;
            };
        },
        function(t2, e3, r2) {
            /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */ var n51 = r2(2), o41 = n51.Buffer;
            function i37(t5, e25) {
                for(var r37 in t5)e25[r37] = t5[r37];
            }
            function s25(t5, e25, r37) {
                return o41(t5, e25, r37);
            }
            o41.from && o41.alloc && o41.allocUnsafe && o41.allocUnsafeSlow ? t2.exports = n51 : (i37(n51, e3), e3.Buffer = s25), s25.prototype = Object.create(o41.prototype), i37(o41, s25), s25.from = function(t5, e25, r37) {
                if ("number" == typeof t5) throw new TypeError("Argument must not be a number");
                return o41(t5, e25, r37);
            }, s25.alloc = function(t5, e25, r37) {
                if ("number" != typeof t5) throw new TypeError("Argument must be a number");
                var n52 = o41(t5);
                return (void 0) !== e25 ? "string" == typeof r37 ? n52.fill(e25, r37) : n52.fill(e25) : n52.fill(0), n52;
            }, s25.allocUnsafe = function(t5) {
                if ("number" != typeof t5) throw new TypeError("Argument must be a number");
                return o41(t5);
            }, s25.allocUnsafeSlow = function(t5) {
                if ("number" != typeof t5) throw new TypeError("Argument must be a number");
                return n51.SlowBuffer(t5);
            };
        },
        function(t2, e3) {
            function r2(t5) {
                return (r2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t6) {
                    return typeof t6;
                } : function(t6) {
                    return t6 && "function" == typeof Symbol && t6.constructor === Symbol && t6 !== Symbol.prototype ? "symbol" : typeof t6;
                })(t5);
            }
            var n51 = Object.prototype.toString;
            t2.exports = function(t5) {
                if ("object" != r2(e25 = t5) || "[object RegExp]" != n51.call(e25)) throw new TypeError("Not a RegExp");
                var e25, o41 = [];
                t5.global && o41.push("g"), t5.multiline && o41.push("m"), t5.ignoreCase && o41.push("i"), t5.dotAll && o41.push("s"), t5.unicode && o41.push("u"), t5.sticky && o41.push("y");
                var i37 = new RegExp(t5.source, o41.join(""));
                return "number" == typeof t5.lastIndex && (i37.lastIndex = t5.lastIndex), i37;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            t2.exports = function(t5) {
                return t5.name ? t5.name : (t5.toString().trim().match(/^function\s*([^\s(]+)/) || [])[1];
            };
        },
        function(t2, e3, r2) {
            "use strict";
            var n51 = r2(3);
            /*!
 * Get the bson type, if it exists
 */ t2.exports = function(t5, e25) {
                return n51(t5, "_bsontype", void 0) === e25;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            (function(e25) {
                /*!
 * ignore
 */ var n51 = r2(23), o41 = r2(119), i37 = {
                    _promise: null,
                    get: function() {
                        return i37._promise;
                    },
                    set: function(t5) {
                        n51.ok("function" == typeof t5, "mongoose.Promise must be a function, got ".concat(t5)), i37._promise = t5, o41.Promise = t5;
                    }
                };
                /*!
 * Use native promises by default
 */ i37.set(e25.Promise), t2.exports = i37;
            }).call(this, r2(9));
        },
        function(t2, e3, r2) {
            "use strict";
            (function(t5, n51) {
                /*!
 * Module dependencies.
 */ function o41(t6) {
                    return (o41 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t7) {
                        return typeof t7;
                    } : function(t7) {
                        return t7 && "function" == typeof Symbol && t7.constructor === Symbol && t7 !== Symbol.prototype ? "symbol" : typeof t7;
                    })(t6);
                }
                var i37 = r2(121).Buffer, s25 = r2(65), a28 = [
                    "__proto__",
                    "constructor",
                    "prototype"
                ], u33 = e3.clone = function t6(r37, n52) {
                    if (null == r37) return r37;
                    if (Array.isArray(r37)) return e3.cloneArray(r37, n52);
                    if (r37.constructor) {
                        if (/ObjectI[dD]$/.test(r37.constructor.name)) return "function" == typeof r37.clone ? r37.clone() : new r37.constructor(r37.id);
                        if ("ReadPreference" === r37.constructor.name) return new r37.constructor(r37.mode, t6(r37.tags, n52));
                        if ("Binary" == r37._bsontype && r37.buffer && r37.value) return "function" == typeof r37.clone ? r37.clone() : new r37.constructor(r37.value(!0), r37.sub_type);
                        if ("Date" === r37.constructor.name || "Function" === r37.constructor.name) return new r37.constructor(+r37);
                        if ("RegExp" === r37.constructor.name) return s25(r37);
                        if ("Buffer" === r37.constructor.name) return e3.cloneBuffer(r37);
                    }
                    return l22(r37) ? e3.cloneObject(r37, n52) : r37.valueOf ? r37.valueOf() : void 0;
                };
                /*!
 * ignore
 */ e3.cloneObject = function(t7, e25) {
                    for(var r37, n52, o42 = e25 && e25.minimize, i41 = {
                    }, s30 = 0, c23 = Object.keys(t7); s30 < c23.length; s30++){
                        var l2 = c23[s30];
                        -1 === a28.indexOf(l2) && (n52 = u33(t7[l2], e25), o42 && (void 0) === n52 || (r37 || (r37 = !0), i41[l2] = n52));
                    }
                    return o42 ? r37 && i41 : i41;
                }, e3.cloneArray = function(t7, e25) {
                    for(var r37 = [], n52 = 0, o42 = t7.length; n52 < o42; n52++)r37.push(u33(t7[n52], e25));
                    return r37;
                }, e3.tick = function(t7) {
                    if ("function" == typeof t7) return function() {
                        var e25 = arguments;
                        f3(function() {
                            t7.apply(this, e25);
                        });
                    };
                }, e3.merge = function t7(r37, n52) {
                    for(var o42, i41 = Object.keys(n52), s30 = i41.length; s30--;)o42 = i41[s30], -1 === a28.indexOf(o42) && ((void 0) === r37[o42] ? r37[o42] = n52[o42] : e3.isObject(n52[o42]) ? t7(r37[o42], n52[o42]) : r37[o42] = n52[o42]);
                }, e3.mergeClone = function t8(r37, n52) {
                    for(var o42, i41 = Object.keys(n52), s30 = i41.length; s30--;)o42 = i41[s30], -1 === a28.indexOf(o42) && ((void 0) === r37[o42] ? r37[o42] = u33(n52[o42]) : e3.isObject(n52[o42]) ? t8(r37[o42], n52[o42]) : r37[o42] = u33(n52[o42]));
                }, e3.readPref = function(t9) {
                    switch(t9){
                        case "p":
                            t9 = "primary";
                            break;
                        case "pp":
                            t9 = "primaryPreferred";
                            break;
                        case "s":
                            t9 = "secondary";
                            break;
                        case "sp":
                            t9 = "secondaryPreferred";
                            break;
                        case "n":
                            t9 = "nearest";
                    }
                    return t9;
                }, e3.readConcern = function(t9) {
                    if ("string" == typeof t9) {
                        switch(t9){
                            case "l":
                                t9 = "local";
                                break;
                            case "a":
                                t9 = "available";
                                break;
                            case "m":
                                t9 = "majority";
                                break;
                            case "lz":
                                t9 = "linearizable";
                                break;
                            case "s":
                                t9 = "snapshot";
                        }
                        t9 = {
                            level: t9
                        };
                    }
                    return t9;
                };
                var c23 = Object.prototype.toString;
                e3.toString = function(t9) {
                    return c23.call(t9);
                };
                var l22 = e3.isObject = function(t9) {
                    return "[object Object]" == e3.toString(t9);
                };
                e3.isArray = function(t9) {
                    return Array.isArray(t9) || "object" == o41(t9) && "[object Array]" == e3.toString(t9);
                }, e3.keys = Object.keys, e3.create = "function" == typeof Object.create ? Object.create : function(t9) {
                    if (arguments.length > 1) throw new Error("Adding properties is not supported");
                    function e25() {
                    }
                    return e25.prototype = t9, new e25;
                }, e3.inherits = function(t9, r37) {
                    t9.prototype = e3.create(r37.prototype), t9.prototype.constructor = t9;
                };
                var f3 = e3.soon = "function" == typeof t5 ? t5 : n51.nextTick;
                e3.cloneBuffer = function(t9) {
                    var e25 = i37.alloc(t9.length);
                    return t9.copy(e25, 0, 0, t9.length), e25;
                }, e3.isArgumentsObject = function(t9) {
                    return "[object Arguments]" === Object.prototype.toString.call(t9);
                };
            }).call(this, r2(70).setImmediate, r2(11));
        },
        function(t2, e3, r2) {
            (function(t5) {
                var n51 = (void 0) !== t5 && t5 || "undefined" != typeof self && self || window, o41 = Function.prototype.apply;
                function i37(t6, e25) {
                    this._id = t6, this._clearFn = e25;
                }
                e3.setTimeout = function() {
                    return new i37(o41.call(setTimeout, n51, arguments), clearTimeout);
                }, e3.setInterval = function() {
                    return new i37(o41.call(setInterval, n51, arguments), clearInterval);
                }, e3.clearTimeout = e3.clearInterval = function(t6) {
                    t6 && t6.close();
                }, i37.prototype.unref = i37.prototype.ref = function() {
                }, i37.prototype.close = function() {
                    this._clearFn.call(n51, this._id);
                }, e3.enroll = function(t6, e25) {
                    clearTimeout(t6._idleTimeoutId), t6._idleTimeout = e25;
                }, e3.unenroll = function(t6) {
                    clearTimeout(t6._idleTimeoutId), t6._idleTimeout = -1;
                }, e3._unrefActive = e3.active = function(t6) {
                    clearTimeout(t6._idleTimeoutId);
                    var e25 = t6._idleTimeout;
                    e25 >= 0 && (t6._idleTimeoutId = setTimeout(function() {
                        t6._onTimeout && t6._onTimeout();
                    }, e25));
                }, r2(120), e3.setImmediate = "undefined" != typeof self && self.setImmediate || (void 0) !== t5 && t5.setImmediate || this && this.setImmediate, e3.clearImmediate = "undefined" != typeof self && self.clearImmediate || (void 0) !== t5 && t5.clearImmediate || this && this.clearImmediate;
            }).call(this, r2(9));
        },
        function(t2, e3, r2) {
            "use strict";
            (function(t5, r37, n51, o41) {
                function i37(t6) {
                    return (i37 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t7) {
                        return typeof t7;
                    } : function(t7) {
                        return t7 && "function" == typeof Symbol && t7.constructor === Symbol && t7 !== Symbol.prototype ? "symbol" : typeof t7;
                    })(t6);
                }
                e3.isNode = (void 0) !== t5 && "object" == i37(r37) && "object" == ((void 0) === n51 ? "undefined" : i37(n51)) && "function" == typeof o41 && t5.argv, e3.isMongo = !e3.isNode && "function" == typeof printjson && "function" == typeof ObjectId && "function" == typeof rs && "function" == typeof sh, e3.isBrowser = !e3.isNode && !e3.isMongo && "undefined" != typeof window, e3.type = e3.isNode ? "node" : e3.isMongo ? "mongo" : e3.isBrowser ? "browser" : "unknown";
            }).call(this, r2(11), r2(126)(t2), r2(9), r2(2).Buffer);
        },
        function(t2, e3, r2) {
            "use strict";
            t2.exports = function(t5, e25, r37) {
                for(var n51 = {
                }, o41 = 0, i37 = Object.keys(e25.tree); o41 < i37.length; o41++){
                    var s25 = i37[o41];
                    r37 && (t5.paths[s25] || t5.nested[s25] || t5.singleNestedPaths[s25]) || (n51[s25] = e25.tree[s25]);
                }
                for(var a28 in t5.add(n51), t5.callQueue = t5.callQueue.concat(e25.callQueue), t5.method(e25.methods), t5.static(e25.statics), e25.query)t5.query[a28] = e25.query[a28];
                for(var u33 in e25.virtuals)t5.virtuals[u33] = e25.virtuals[u33].clone();
                t5.s.hooks.merge(e25.s.hooks, !1);
            };
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n51(t5) {
                return (n51 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t6) {
                    return typeof t6;
                } : function(t6) {
                    return t6 && "function" == typeof Symbol && t6.constructor === Symbol && t6 !== Symbol.prototype ? "symbol" : typeof t6;
                })(t5);
            }
            function o41(t5, e25) {
                for(var r37 = 0; r37 < e25.length; r37++){
                    var n52 = e25[r37];
                    n52.enumerable = n52.enumerable || !1, n52.configurable = !0, "value" in n52 && (n52.writable = !0), Object.defineProperty(t5, n52.key, n52);
                }
            }
            function i37(t5, e25) {
                return (i37 = Object.setPrototypeOf || function(t6, e26) {
                    return t6.__proto__ = e26, t6;
                })(t5, e25);
            }
            function s30(t5) {
                var e25 = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t6) {
                        return !1;
                    }
                }();
                return function() {
                    var r37, n53 = u33(t5);
                    if (e25) {
                        var o42 = u33(this).constructor;
                        r37 = Reflect.construct(n53, arguments, o42);
                    } else r37 = n53.apply(this, arguments);
                    return a28(this, r37);
                };
            }
            function a28(t5, e25) {
                if (e25 && ("object" === n51(e25) || "function" == typeof e25)) return e25;
                if ((void 0) !== e25) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t6) {
                    if ((void 0) === t6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t6;
                })(t5);
            }
            function u33(t5) {
                return (u33 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t6) {
                    return t6.__proto__ || Object.getPrototypeOf(t6);
                })(t5);
            }
            var c23 = r2(5), l22 = function(t5) {
                !function(t6, e25) {
                    if ("function" != typeof e25 && null !== e25) throw new TypeError("Super expression must either be null or a function");
                    t6.prototype = Object.create(e25 && e25.prototype, {
                        constructor: {
                            value: t6,
                            writable: !0,
                            configurable: !0
                        }
                    }), e25 && i37(t6, e25);
                }(u41, t5);
                var e25, r37, n53, a39 = s30(u41);
                function u41(t6) {
                    var e26;
                    !function(t7, e27) {
                        if (!(t7 instanceof e27)) throw new TypeError("Cannot call a class as a function");
                    }(this, u41);
                    var r38 = t6.message;
                    r38 || (r38 = c23.messages.general.default);
                    var n54 = f3(r38, t6);
                    return e26 = a39.call(this, n54), t6 = Object.assign({
                    }, t6, {
                        message: n54
                    }), e26.properties = t6, e26.kind = t6.type, e26.path = t6.path, e26.value = t6.value, e26.reason = t6.reason, e26;
                }
                /*!
   * toString helper
   * TODO remove? This defaults to `${this.name}: ${this.message}`
   */ return e25 = u41, r37 = [
                    {
                        key: "toString",
                        value: function() {
                            return this.message;
                        }
                    },
                    {
                        key: "toJSON",
                        value: function() {
                            return Object.assign({
                                name: this.name,
                                message: this.message
                            }, this);
                        }
                    }
                ], o41(e25.prototype, r37), n53 && o41(e25, n53), u41;
            }(c23);
            /*!
 * Formats error messages
 */ function f3(t5, e25) {
                if ("function" == typeof t5) return t5(e25);
                for(var r37 = 0, n53 = Object.keys(e25); r37 < n53.length; r37++){
                    var o43 = n53[r37];
                    "message" !== o43 && (t5 = t5.replace("{" + o43.toUpperCase() + "}", e25[o43]));
                }
                return t5;
            }
            /*!
 * exports
 */ Object.defineProperty(l22.prototype, "name", {
                value: "ValidatorError"
            }), /*!
 * The object used to define this validator. Not enumerable to hide
 * it from `require('util').inspect()` output re: gh-3925
 */ Object.defineProperty(l22.prototype, "properties", {
                enumerable: !1,
                writable: !0,
                value: null
            }), l22.prototype.formatMessage = f3, t2.exports = l22;
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * ignore
 */ t2.exports = function(t5) {
                if (Array.isArray(t5)) {
                    if (!t5.every(function(t6) {
                        return "number" == typeof t6 || "string" == typeof t6;
                    })) throw new Error("$type array values must be strings or numbers");
                    return t5;
                }
                if ("number" != typeof t5 && "string" != typeof t5) throw new Error("$type parameter must be number, string, or array of numbers and strings");
                return t5;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n51(t5) {
                return (n51 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t6) {
                    return typeof t6;
                } : function(t6) {
                    return t6 && "function" == typeof Symbol && t6.constructor === Symbol && t6 !== Symbol.prototype ? "symbol" : typeof t6;
                })(t5);
            }
            function o41(t5, e25) {
                return (o41 = Object.setPrototypeOf || function(t6, e26) {
                    return t6.__proto__ = e26, t6;
                })(t5, e25);
            }
            function i37(t5) {
                var e25 = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t6) {
                        return !1;
                    }
                }();
                return function() {
                    var r37, n53 = a28(t5);
                    if (e25) {
                        var o44 = a28(this).constructor;
                        r37 = Reflect.construct(n53, arguments, o44);
                    } else r37 = n53.apply(this, arguments);
                    return s30(this, r37);
                };
            }
            function s30(t5, e25) {
                if (e25 && ("object" === n51(e25) || "function" == typeof e25)) return e25;
                if ((void 0) !== e25) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t6) {
                    if ((void 0) === t6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t6;
                })(t5);
            }
            function a28(t5) {
                return (a28 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t6) {
                    return t6.__proto__ || Object.getPrototypeOf(t6);
                })(t5);
            }
            var u33 = function(t5) {
                !function(t6, e25) {
                    if ("function" != typeof e25 && null !== e25) throw new TypeError("Super expression must either be null or a function");
                    t6.prototype = Object.create(e25 && e25.prototype, {
                        constructor: {
                            value: t6,
                            writable: !0,
                            configurable: !0
                        }
                    }), e25 && o41(t6, e25);
                }(r37, t5);
                var e25 = i37(r37);
                function r37(t6, n53) {
                    var o45;
                    !function(t7, e26) {
                        if (!(t7 instanceof e26)) throw new TypeError("Cannot call a class as a function");
                    }(this, r37);
                    var i41 = Array.isArray(n53) ? "array" : "primitive value";
                    return (o45 = e25.call(this, "Tried to set nested object field `" + t6 + "` to ".concat(i41, " `") + n53 + "` and strict mode is set to throw.")).path = t6, o45;
                }
                return r37;
            }(r2(5));
            Object.defineProperty(u33.prototype, "name", {
                value: "ObjectExpectedError"
            }), t2.exports = u33;
        },
        function(t2, e3, r2) {
            "use strict";
            t2.exports = function(t5) {
                var e25 = {
                    _id: {
                        auto: !0
                    }
                };
                e25._id[t5.options.typeKey] = "ObjectId", t5.add(e25);
            };
        },
        function(t2, e3, r2) {
            "use strict";
            t2.exports = /*!
 * ignore
 */ function(t5, e25) {
                if (null == t5) return null;
                if ("boolean" == typeof t5) return e25;
                if ("boolean" == typeof t5[e25]) return t5[e25] ? e25 : null;
                if (!(e25 in t5)) return e25;
                return t5[e25];
            };
        },
        function(t2, e3, r2) {
            "use strict";
            var n51 = r2(35), o41 = r2(27);
            /*!
 * Register hooks for this model
 *
 * @param {Model} model
 * @param {Schema} schema
 */ function i37(t5, e25, r37) {
                var s30 = {
                    useErrorHandlers: !0,
                    numCallbackParams: 1,
                    nullResultByDefault: !0,
                    contextParameter: !0
                }, a28 = (r37 = r37 || {
                }).decorateDoc ? t5 : t5.prototype;
                t5.$appliedHooks = !0;
                for(var u33 = 0, c23 = Object.keys(e25.paths); u33 < c23.length; u33++){
                    var l22 = c23[u33], f3 = e25.paths[l22], p2 = null;
                    if (f3.$isSingleNested) p2 = f3.caster;
                    else {
                        if (!f3.$isMongooseDocumentArray) continue;
                        p2 = f3.Constructor;
                    }
                    if (!p2.$appliedHooks && (i37(p2, f3.schema, r37), null != p2.discriminators)) for(var h4 = 0, y2 = Object.keys(p2.discriminators); h4 < y2.length; h4++){
                        var d2 = y2[h4];
                        i37(p2.discriminators[d2], p2.discriminators[d2].schema, r37);
                    }
                }
                var _2 = e25.s.hooks.filter(function(t6) {
                    return "updateOne" === t6.name || "deleteOne" === t6.name ? !!t6.document : "remove" === t6.name || "init" === t6.name ? null == t6.document || !!t6.document : null == t6.query && null == t6.document || !1 !== t6.document;
                }).filter(function(t6) {
                    return !e25.methods[t6.name] || !t6.fn[n51.builtInMiddleware];
                });
                t5._middleware = _2, a28.$__originalValidate = a28.$__originalValidate || a28.$__validate;
                for(var v2 = 0, m2 = [
                    "save",
                    "validate",
                    "remove",
                    "deleteOne"
                ]; v2 < m2.length; v2++){
                    var g2 = m2[v2], b2 = "validate" === g2 ? "$__originalValidate" : "$__".concat(g2), w3 = _2.createWrapper(g2, a28[b2], null, s30);
                    a28["$__".concat(g2)] = w3;
                }
                a28.$__init = _2.createWrapperSync("init", a28.$__init, null, s30);
                for(var O4 = Object.keys(e25.methods), S3 = Object.assign({
                }, s30, {
                    checkForPromise: !0
                }), A3 = function() {
                    var e26 = E2[$2];
                    if (!_2.hasHooks(e26)) return "continue";
                    var r38 = a28[e26];
                    a28[e26] = function() {
                        var r39 = this, n53 = Array.prototype.slice.call(arguments), i41 = n53.slice(-1).pop(), s31 = "function" == typeof i41 ? n53.slice(0, n53.length - 1) : n53;
                        return o41(i41, function(t6) {
                            return r39["$__".concat(e26)].apply(r39, s31.concat([
                                t6
                            ]));
                        }, t5.events);
                    }, a28["$__".concat(e26)] = _2.createWrapper(e26, r38, null, S3);
                }, $2 = 0, E2 = O4; $2 < E2.length; $2++)A3();
            }
            /*!
 * ignore
 */ t2.exports = i37, /*!
 * ignore
 */ i37.middlewareFunctions = [
                "deleteOne",
                "save",
                "validate",
                "remove",
                "updateOne",
                "init"
            ];
        },
        function(t2, e3, r2) {
            "use strict";
            var n51 = r2(13);
            /*!
 * Given a value, cast it to a string, or throw a `CastError` if the value
 * cannot be casted. `null` and `undefined` are considered valid.
 *
 * @param {Any} value
 * @param {String} [path] optional the path to set on the CastError
 * @return {string|null|undefined}
 * @throws {CastError}
 * @api private
 */ t2.exports = function(t5, e25) {
                if (null == t5) return t5;
                if (t5._id && "string" == typeof t5._id) return t5._id;
                if (t5.toString && t5.toString !== Object.prototype.toString && !Array.isArray(t5)) return t5.toString();
                throw new n51("string", t5, e25);
            };
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module requirements.
 */ var n51 = r2(5), o41 = r2(151), i37 = r2(6), s30 = r2(152), a28 = r2(81), u33 = r2(1), c23 = i37.CastError;
            function l23(t5, e25) {
                i37.call(this, t5, e25, "Number");
            }
            /*!
 * ignore
 */ function f19(t5) {
                return this.cast(t5);
            }
            l23.get = i37.get, l23.set = i37.set, /*!
 * ignore
 */ l23._cast = s30, l23.cast = function(t5) {
                return 0 === arguments.length || (!1 === t5 && (t5 = this._defaultCaster), this._cast = t5), this._cast;
            }, /*!
 * ignore
 */ l23._defaultCaster = function(t5) {
                if ("number" != typeof t5) throw new Error;
                return t5;
            }, l23.schemaName = "Number", l23.defaultOptions = {
            }, /*!
 * Inherits from SchemaType.
 */ l23.prototype = Object.create(i37.prototype), l23.prototype.constructor = l23, l23.prototype.OptionsConstructor = o41, /*!
 * ignore
 */ l23._checkRequired = function(t5) {
                return "number" == typeof t5 || t5 instanceof Number;
            }, l23.checkRequired = i37.checkRequired, l23.prototype.checkRequired = function(t5, e25) {
                return i37._isRef(this, t5, e25, !0) ? !!t5 : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : l23.checkRequired())(t5);
            }, l23.prototype.min = function(t5, e25) {
                if (this.minValidator && (this.validators = this.validators.filter(function(t6) {
                    return t6.validator !== this.minValidator;
                }, this)), null != t5) {
                    var r37 = e25 || n51.messages.Number.min;
                    r37 = r37.replace(/{MIN}/, t5), this.validators.push({
                        validator: this.minValidator = function(e26) {
                            return null == e26 || e26 >= t5;
                        },
                        message: r37,
                        type: "min",
                        min: t5
                    });
                }
                return this;
            }, l23.prototype.max = function(t5, e25) {
                if (this.maxValidator && (this.validators = this.validators.filter(function(t6) {
                    return t6.validator !== this.maxValidator;
                }, this)), null != t5) {
                    var r38 = e25 || n51.messages.Number.max;
                    r38 = r38.replace(/{MAX}/, t5), this.validators.push({
                        validator: this.maxValidator = function(e26) {
                            return null == e26 || e26 <= t5;
                        },
                        message: r38,
                        type: "max",
                        max: t5
                    });
                }
                return this;
            }, l23.prototype.enum = function(t5, e25) {
                return this.enumValidator && (this.validators = this.validators.filter(function(t6) {
                    return t6.validator !== this.enumValidator;
                }, this)), Array.isArray(t5) || (t5 = u33.isObject(t5) ? u33.object.vals(t5) : Array.prototype.slice.call(arguments), e25 = n51.messages.Number.enum), e25 = null == e25 ? n51.messages.Number.enum : e25, this.enumValidator = function(e26) {
                    return null == e26 || -1 !== t5.indexOf(e26);
                }, this.validators.push({
                    validator: this.enumValidator,
                    message: e25,
                    type: "enum",
                    enumValues: t5
                }), this;
            }, l23.prototype.cast = function(t5, e25, r39) {
                if (i37._isRef(this, t5, e25, r39)) return "number" == typeof t5 ? t5 : this._castRef(t5, e25, r39);
                var n53, o45 = t5 && (void 0) !== t5._id ? t5._id : t5;
                n53 = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : l23.cast();
                try {
                    return n53(o45);
                } catch (t6) {
                    throw new c23("Number", o45, this.path, t6, this);
                }
            }, l23.prototype.$conditionalHandlers = u33.options(i37.prototype.$conditionalHandlers, {
                $bitsAllClear: a28,
                $bitsAnyClear: a28,
                $bitsAllSet: a28,
                $bitsAnySet: a28,
                $gt: f19,
                $gte: f19,
                $lt: f19,
                $lte: f19,
                $mod: function(t5) {
                    var e25 = this;
                    return Array.isArray(t5) ? t5.map(function(t6) {
                        return e25.cast(t6);
                    }) : [
                        this.cast(t5)
                    ];
                }
            }), l23.prototype.castForQuery = function(t5, e25) {
                var r39;
                if (2 === arguments.length) {
                    if (!(r39 = this.$conditionalHandlers[t5])) throw new c23("number", e25, this.path, null, this);
                    return r39.call(this, e25);
                }
                return e25 = this._castForQuery(t5);
            }, /*!
 * Module exports.
 */ t2.exports = l23;
        },
        function(t2, e3, r2) {
            "use strict";
            (function(e25) {
                /*!
 * Module requirements.
 */ var n51 = r2(13);
                /*!
 * ignore
 */ /*!
 * ignore
 */ function o41(t5, e26) {
                    var r39 = Number(e26);
                    if (isNaN(r39)) throw new n51("number", e26, t5);
                    return r39;
                }
                t2.exports = function(t5) {
                    var r39 = this;
                    return Array.isArray(t5) ? t5.map(function(t6) {
                        return o41(r39.path, t6);
                    }) : e25.isBuffer(t5) ? t5 : o41(r39.path, t5);
                };
            }).call(this, r2(2).Buffer);
        },
        function(t2, e3, r2) {
            "use strict";
            var n51 = r2(10);
            t2.exports = function(t5, e25) {
                return "string" == typeof t5 && "string" == typeof e25 || "number" == typeof t5 && "number" == typeof e25 ? t5 === e25 : t5 instanceof n51 && e25 instanceof n51 && t5.toString() === e25.toString();
            };
        },
        function(t2, e3, r2) {
            "use strict";
            var n51 = new Set([
                "$ref",
                "$id",
                "$db"
            ]);
            t2.exports = function(t5) {
                return t5.startsWith("$") && !n51.has(t5);
            };
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module requirements.
 */ var n51 = r2(36).castArraysOfNumbers, o41 = r2(36).castToNumber;
            function i37(t5, e25) {
                switch(t5.$geometry.type){
                    case "Polygon":
                    case "LineString":
                    case "Point":
                        n51(t5.$geometry.coordinates, e25);
                }
                return s30(e25, t5), t5;
            }
            function s30(t5, e25) {
                e25.$maxDistance && (e25.$maxDistance = o41.call(t5, e25.$maxDistance)), e25.$minDistance && (e25.$minDistance = o41.call(t5, e25.$minDistance));
            }
            /*!
 * ignore
 */ e3.cast$geoIntersects = function(t5) {
                if (!t5.$geometry) return;
                return i37(t5, this), t5;
            }, e3.cast$near = function(t5) {
                var e25 = r2(57);
                if (Array.isArray(t5)) return n51(t5, this), t5;
                if (s30(this, t5), t5 && t5.$geometry) return i37(t5, this);
                if (!Array.isArray(t5)) throw new TypeError("$near must be either an array or an object with a $geometry property");
                return e25.prototype.castForQuery.call(this, t5);
            }, e3.cast$within = function(t5) {
                var e25 = this;
                if (s30(this, t5), t5.$box || t5.$polygon) {
                    var r39 = t5.$box ? "$box" : "$polygon";
                    t5[r39].forEach(function(t6) {
                        if (!Array.isArray(t6)) throw new TypeError("Invalid $within $box argument. Expected an array, received " + t6);
                        t6.forEach(function(r40, n53) {
                            t6[n53] = o41.call(e25, r40);
                        });
                    });
                } else if (t5.$center || t5.$centerSphere) {
                    var n53 = t5.$center ? "$center" : "$centerSphere";
                    t5[n53].forEach(function(r40, i41) {
                        Array.isArray(r40) ? r40.forEach(function(t6, n54) {
                            r40[n54] = o41.call(e25, t6);
                        }) : t5[n53][i41] = o41.call(e25, r40);
                    });
                } else t5.$geometry && i37(t5, this);
                return t5;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ var n51 = r2(86), o41 = r2(0).arrayAtomicsSymbol, i37 = r2(0).arrayParentSymbol, s30 = r2(0).arrayPathSymbol, a28 = r2(0).arraySchemaSymbol, u33 = Array.prototype.push;
            /*!
 * Module exports.
 */ t2.exports = function(t5, e25, r40, c23) {
                var l23;
                if (Array.isArray(t5)) {
                    var f19 = t5.length;
                    if (0 === f19) l23 = new n51;
                    else if (1 === f19) (l23 = new n51(1))[0] = t5[0];
                    else if (f19 < 10000) l23 = new n51, u33.apply(l23, t5);
                    else {
                        l23 = new n51;
                        for(var p13 = 0; p13 < f19; ++p13)u33.call(l23, t5[p13]);
                    }
                    null != t5[o41] && (l23[o41] = t5[o41]);
                } else l23 = new n51;
                return l23[s30] = e25, null != r40 && null != r40.$__ && (l23[i37] = r40, l23[a28] = c23 || r40.schema.path(e25)), l23;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            (function(e25) {
                function n51(t5) {
                    return (n51 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t6) {
                        return typeof t6;
                    } : function(t6) {
                        return t6 && "function" == typeof Symbol && t6.constructor === Symbol && t6 !== Symbol.prototype ? "symbol" : typeof t6;
                    })(t5);
                }
                function o41(t5, e26) {
                    var r40 = "undefined" != typeof Symbol && t5[Symbol.iterator] || t5["@@iterator"];
                    if (!r40) {
                        if (Array.isArray(t5) || (r40 = (function(t6, e27) {
                            if (!t6) return;
                            if ("string" == typeof t6) return i37(t6, e27);
                            var r41 = Object.prototype.toString.call(t6).slice(8, -1);
                            "Object" === r41 && t6.constructor && (r41 = t6.constructor.name);
                            if ("Map" === r41 || "Set" === r41) return Array.from(t6);
                            if ("Arguments" === r41 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r41)) return i37(t6, e27);
                        })(t5)) || e26 && t5 && "number" == typeof t5.length) {
                            r40 && (t5 = r40);
                            var n54 = 0, o45 = function() {
                            };
                            return {
                                s: o45,
                                n: function() {
                                    return n54 >= t5.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t5[n54++]
                                    };
                                },
                                e: function(t6) {
                                    throw t6;
                                },
                                f: o45
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var s30, a28 = !0, u33 = !1;
                    return {
                        s: function() {
                            r40 = r40.call(t5);
                        },
                        n: function() {
                            var t6 = r40.next();
                            return a28 = t6.done, t6;
                        },
                        e: function(t6) {
                            u33 = !0, s30 = t6;
                        },
                        f: function() {
                            try {
                                a28 || null == r40.return || r40.return();
                            } finally{
                                if (u33) throw s30;
                            }
                        }
                    };
                }
                function i37(t5, e26) {
                    (null == e26 || e26 > t5.length) && (e26 = t5.length);
                    for(var r40 = 0, n55 = new Array(e26); r40 < e26; r40++)n55[r40] = t5[r40];
                    return n55;
                }
                function s30(t5, e26) {
                    if (!(t5 instanceof e26)) throw new TypeError("Cannot call a class as a function");
                }
                function a28(t5, e26) {
                    for(var r40 = 0; r40 < e26.length; r40++){
                        var n55 = e26[r40];
                        n55.enumerable = n55.enumerable || !1, n55.configurable = !0, "value" in n55 && (n55.writable = !0), Object.defineProperty(t5, n55.key, n55);
                    }
                }
                function u33(t5, e26, r40) {
                    return (u33 = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(t6, e27, r41) {
                        var n56 = function(t7, e28) {
                            for(; !Object.prototype.hasOwnProperty.call(t7, e28) && null !== (t7 = y13(t7)););
                            return t7;
                        }(t6, e27);
                        if (n56) {
                            var o46 = Object.getOwnPropertyDescriptor(n56, e27);
                            return o46.get ? o46.get.call(r41) : o46.value;
                        }
                    })(t5, e26, r40 || t5);
                }
                function c23(t5, e26) {
                    if (e26 && ("object" === n51(e26) || "function" == typeof e26)) return e26;
                    if ((void 0) !== e26) throw new TypeError("Derived constructors may only return object or undefined");
                    return (function(t6) {
                        if ((void 0) === t6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return t6;
                    })(t5);
                }
                function l23(t5) {
                    var e26 = "function" == typeof Map ? new Map : void 0;
                    return (l23 = function(t6) {
                        if (null === t6 || (r40 = t6, -1 === Function.toString.call(r40).indexOf("[native code]"))) return t6;
                        var r40;
                        if ("function" != typeof t6) throw new TypeError("Super expression must either be null or a function");
                        if ((void 0) !== e26) {
                            if (e26.has(t6)) return e26.get(t6);
                            e26.set(t6, n56);
                        }
                        function n56() {
                            return f20(t6, arguments, y13(this).constructor);
                        }
                        return n56.prototype = Object.create(t6.prototype, {
                            constructor: {
                                value: n56,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), h8(n56, t6);
                    })(t5);
                }
                function f20(t5, e26, r40) {
                    return (f20 = p14() ? Reflect.construct : function(t6, e27, r41) {
                        var n56 = [
                            null
                        ];
                        n56.push.apply(n56, e27);
                        var o47 = new (Function.bind.apply(t6, n56));
                        return r41 && h8(o47, r41.prototype), o47;
                    }).apply(null, arguments);
                }
                function p14() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t5) {
                        return !1;
                    }
                }
                function h8(t5, e26) {
                    return (h8 = Object.setPrototypeOf || function(t6, e27) {
                        return t6.__proto__ = e27, t6;
                    })(t5, e26);
                }
                function y13(t5) {
                    return (y13 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t6) {
                        return t6.__proto__ || Object.getPrototypeOf(t6);
                    })(t5);
                }
                var d12 = r2(12), _2 = r2(29), v2 = r2(14), m2 = r2(10), g5 = r2(87), b5 = r2(3), w6 = r2(17).internalToObjectOptions, O4 = r2(1), S3 = r2(4), A3 = r2(0).arrayAtomicsSymbol, $2 = r2(0).arrayParentSymbol, E2 = r2(0).arrayPathSymbol, j = r2(0).arraySchemaSymbol, P2 = r2(0).populateModelSymbol, x2 = Symbol("mongoose#Array#sliced"), T3 = Array.prototype.push, N3 = Symbol("mongoose#MongooseCoreArray#validators"), k3 = function(t5) {
                    !function(t6, e26) {
                        if ("function" != typeof e26 && null !== e26) throw new TypeError("Super expression must either be null or a function");
                        t6.prototype = Object.create(e26 && e26.prototype, {
                            constructor: {
                                value: t6,
                                writable: !0,
                                configurable: !0
                            }
                        }), e26 && h8(t6, e26);
                    }(S5, t5);
                    var r40, n56, o47, i41, l24, f21 = (r40 = S5, n56 = p14(), function() {
                        var t6, e26 = y13(r40);
                        if (n56) {
                            var o48 = y13(this).constructor;
                            t6 = Reflect.construct(e26, arguments, o48);
                        } else t6 = e26.apply(this, arguments);
                        return c23(this, t6);
                    });
                    function S5() {
                        return s30(this, S5), f21.apply(this, arguments);
                    }
                    return o47 = S5, i41 = [
                        {
                            key: "isMongooseArray",
                            get: function() {
                                return !0;
                            }
                        },
                        {
                            key: "validators",
                            get: function() {
                                return this[N3];
                            },
                            set: function(t6) {
                                this[N3] = t6;
                            }
                        },
                        {
                            key: "$__getAtomics",
                            value: function() {
                                var t6 = [], e26 = Object.keys(this[A3] || {
                                }), r41 = e26.length, n57 = Object.assign({
                                }, w6, {
                                    _isNested: !0
                                });
                                if (0 === r41) return t6[0] = [
                                    "$set",
                                    this.toObject(n57)
                                ], t6;
                                for(; r41--;){
                                    var o49 = e26[r41], i42 = this[A3][o49];
                                    O4.isMongooseObject(i42) ? i42 = i42.toObject(n57) : Array.isArray(i42) ? i42 = this.toObject.call(i42, n57) : null != i42 && Array.isArray(i42.$each) ? i42.$each = this.toObject.call(i42.$each, n57) : null != i42 && "function" == typeof i42.valueOf && (i42 = i42.valueOf()), "$addToSet" === o49 && (i42 = {
                                        $each: i42
                                    }), t6.push([
                                        o49,
                                        i42
                                    ]);
                                }
                                return t6;
                            }
                        },
                        {
                            key: "$atomics",
                            value: function() {
                                return this[A3] || {
                                };
                            }
                        },
                        {
                            key: "$parent",
                            value: function() {
                                return this[$2];
                            }
                        },
                        {
                            key: "$path",
                            value: function() {
                                return this[E2];
                            }
                        },
                        {
                            key: "$shift",
                            value: function() {
                                if (this._registerAtomic("$pop", -1), this._markModified(), !this._shifted) return this._shifted = !0, [].shift.call(this);
                            }
                        },
                        {
                            key: "$pop",
                            value: function() {
                                if (this._registerAtomic("$pop", 1), this._markModified(), !this._popped) return this._popped = !0, [].pop.call(this);
                            }
                        },
                        {
                            key: "$schema",
                            value: function() {
                                return this[j];
                            }
                        },
                        {
                            key: "_cast",
                            value: function(t6) {
                                var r41, n57 = !1;
                                return this[$2] && (n57 = this[$2].populated(this[E2], !0)), n57 && null != t6 ? (r41 = n57.options[P2], (e25.isBuffer(t6) || t6 instanceof m2 || !O4.isObject(t6)) && (t6 = {
                                    _id: t6
                                }), t6.$__schema && t6.$__schema.discriminatorMapping && (void 0) !== t6.$__schema.discriminatorMapping.key || (t6 = new r41(t6)), this[j].caster.applySetters(t6, this[$2], !0)) : this[j].caster.applySetters(t6, this[$2], !1);
                            }
                        },
                        {
                            key: "_mapCast",
                            value: function(t6, e26) {
                                return this._cast(t6, this.length + e26);
                            }
                        },
                        {
                            key: "_markModified",
                            value: function(t6) {
                                var e26, r41 = this[$2];
                                if (r41) {
                                    if (e26 = this[E2], arguments.length && (e26 = e26 + "." + t6), null != e26 && e26.endsWith(".$")) return this;
                                    r41.markModified(e26, arguments.length > 0 ? t6 : r41);
                                }
                                return this;
                            }
                        },
                        {
                            key: "_registerAtomic",
                            value: function(t6, e26) {
                                if (!this[x2]) {
                                    if ("$set" === t6) return this[A3] = {
                                        $set: e26
                                    }, g5(this[$2], this[E2]), this._markModified(), this;
                                    this[A3] || (this[A3] = {
                                    });
                                    var r41, n57 = this[A3];
                                    if ("$pop" === t6 && !("$pop" in n57)) {
                                        var o50 = this;
                                        this[$2].once("save", function() {
                                            o50._popped = o50._shifted = null;
                                        });
                                    }
                                    if (this[A3].$set || Object.keys(n57).length && !(t6 in n57)) return this[A3] = {
                                        $set: this
                                    }, this;
                                    if ("$pullAll" === t6 || "$addToSet" === t6) n57[t6] || (n57[t6] = []), n57[t6] = n57[t6].concat(e26);
                                    else if ("$pullDocs" === t6) {
                                        var i43 = n57.$pull || (n57.$pull = {
                                        });
                                        e26[0] instanceof _2 ? (r41 = i43.$or || (i43.$or = []), Array.prototype.push.apply(r41, e26.map(function(t7) {
                                            return t7.toObject({
                                                transform: !1,
                                                virtuals: !1
                                            });
                                        }))) : (r41 = i43._id || (i43._id = {
                                            $in: []
                                        })).$in = r41.$in.concat(e26);
                                    } else "$push" === t6 ? (n57.$push = n57.$push || {
                                        $each: []
                                    }, null != e26 && O4.hasUserDefinedProperty(e26, "$each") ? n57.$push = e26 : n57.$push.$each = n57.$push.$each.concat(e26)) : n57[t6] = e26;
                                    return this;
                                }
                            }
                        },
                        {
                            key: "addToSet",
                            value: function() {
                                B2(this, arguments);
                                var t6 = [].map.call(arguments, this._mapCast, this);
                                t6 = this[j].applySetters(t6, this[$2]);
                                var e26 = [], r42 = "";
                                return t6[0] instanceof _2 ? r42 = "doc" : t6[0] instanceof Date && (r42 = "date"), t6.forEach(function(t7) {
                                    var n58, o51 = +t7;
                                    switch(r42){
                                        case "doc":
                                            n58 = this.some(function(e27) {
                                                return e27.equals(t7);
                                            });
                                            break;
                                        case "date":
                                            n58 = this.some(function(t8) {
                                                return +t8 === o51;
                                            });
                                            break;
                                        default:
                                            n58 = ~this.indexOf(t7);
                                    }
                                    n58 || ([].push.call(this, t7), this._registerAtomic("$addToSet", t7), this._markModified(), [].push.call(e26, t7));
                                }, this), e26;
                            }
                        },
                        {
                            key: "hasAtomics",
                            value: function() {
                                return O4.isPOJO(this[A3]) ? Object.keys(this[A3]).length : 0;
                            }
                        },
                        {
                            key: "includes",
                            value: function(t6, e26) {
                                return -1 !== this.indexOf(t6, e26);
                            }
                        },
                        {
                            key: "indexOf",
                            value: function(t6, e26) {
                                t6 instanceof m2 && (t6 = t6.toString()), e26 = null == e26 ? 0 : e26;
                                for(var r42 = this.length, n58 = e26; n58 < r42; ++n58)if (t6 == this[n58]) return n58;
                                return -1;
                            }
                        },
                        {
                            key: "inspect",
                            value: function() {
                                return JSON.stringify(this);
                            }
                        },
                        {
                            key: "nonAtomicPush",
                            value: function() {
                                var t6 = [].map.call(arguments, this._mapCast, this), e26 = [].push.apply(this, t6);
                                return this._registerAtomic("$set", this), this._markModified(), e26;
                            }
                        },
                        {
                            key: "pop",
                            value: function() {
                                var t6 = [].pop.call(this);
                                return this._registerAtomic("$set", this), this._markModified(), t6;
                            }
                        },
                        {
                            key: "pull",
                            value: function() {
                                for(var t6, e26 = [].map.call(arguments, this._cast, this), r42 = this[$2].get(this[E2]), n58 = r42.length; n58--;)if ((t6 = r42[n58]) instanceof d12) {
                                    var o51 = e26.some(function(e27) {
                                        return t6.equals(e27);
                                    });
                                    o51 && [].splice.call(r42, n58, 1);
                                } else ~r42.indexOf.call(e26, t6) && [].splice.call(r42, n58, 1);
                                return e26[0] instanceof _2 ? this._registerAtomic("$pullDocs", e26.map(function(t7) {
                                    return t7.$__getValue("_id") || t7;
                                })) : this._registerAtomic("$pullAll", e26), this._markModified(), g5(this[$2], this[E2]) > 0 && this._registerAtomic("$set", this), this;
                            }
                        },
                        {
                            key: "push",
                            value: function() {
                                var t6 = arguments, e26 = t6, r42 = null != t6[0] && O4.hasUserDefinedProperty(t6[0], "$each");
                                if (r42 && (e26 = t6[0], t6 = t6[0].$each), null == this[j]) return T3.apply(this, t6);
                                B2(this, t6);
                                var n58, o52 = this[$2];
                                t6 = [].map.call(t6, this._mapCast, this), t6 = this[j].applySetters(t6, o52, void 0, void 0, {
                                    skipDocumentArrayCast: !0
                                });
                                var i44 = this[A3];
                                if (r42) {
                                    if (e26.$each = t6, b5(i44, "$push.$each.length", 0) > 0 && i44.$push.$position != i44.$position) throw new v2("Cannot call `Array#push()` multiple times with different `$position`");
                                    null != e26.$position ? ([].splice.apply(this, [
                                        e26.$position,
                                        0
                                    ].concat(t6)), n58 = this.length) : n58 = [].push.apply(this, t6);
                                } else {
                                    if (b5(i44, "$push.$each.length", 0) > 0 && null != i44.$push.$position) throw new v2("Cannot call `Array#push()` multiple times with different `$position`");
                                    e26 = t6, n58 = [].push.apply(this, t6);
                                }
                                return this._registerAtomic("$push", e26), this._markModified(), n58;
                            }
                        },
                        {
                            key: "remove",
                            value: function() {
                                return this.pull.apply(this, arguments);
                            }
                        },
                        {
                            key: "set",
                            value: function(t6, e26) {
                                var r42 = this._cast(e26, t6);
                                return this[t6] = r42, this._markModified(t6), this;
                            }
                        },
                        {
                            key: "shift",
                            value: function() {
                                var t6 = [].shift.call(this);
                                return this._registerAtomic("$set", this), this._markModified(), t6;
                            }
                        },
                        {
                            key: "sort",
                            value: function() {
                                var t6 = [].sort.apply(this, arguments);
                                return this._registerAtomic("$set", this), t6;
                            }
                        },
                        {
                            key: "splice",
                            value: function() {
                                var t6;
                                if (B2(this, Array.prototype.slice.call(arguments, 2)), arguments.length) {
                                    var e26;
                                    if (null == this[j]) e26 = arguments;
                                    else {
                                        e26 = [];
                                        for(var r42 = 0; r42 < arguments.length; ++r42)e26[r42] = r42 < 2 ? arguments[r42] : this._cast(arguments[r42], arguments[0] + (r42 - 2));
                                    }
                                    t6 = [].splice.apply(this, e26), this._registerAtomic("$set", this);
                                }
                                return t6;
                            }
                        },
                        {
                            key: "slice",
                            value: function() {
                                var t6 = u33(y13(S5.prototype), "slice", this).apply(this, arguments);
                                return t6[$2] = this[$2], t6[j] = this[j], t6[A3] = this[A3], t6[E2] = this[E2], t6[x2] = !0, t6;
                            }
                        },
                        {
                            key: "filter",
                            value: function() {
                                var t6 = u33(y13(S5.prototype), "filter", this).apply(this, arguments);
                                return t6[$2] = this[$2], t6[j] = this[j], t6[A3] = this[A3], t6[E2] = this[E2], t6;
                            }
                        },
                        {
                            key: "toBSON",
                            value: function() {
                                return this.toObject(w6);
                            }
                        },
                        {
                            key: "toObject",
                            value: function(t6) {
                                return t6 && t6.depopulate ? ((t6 = O4.clone(t6))._isNested = !0, [].concat(this).map(function(e27) {
                                    return e27 instanceof d12 ? e27.toObject(t6) : e27;
                                })) : [].concat(this);
                            }
                        },
                        {
                            key: "unshift",
                            value: function() {
                                var t6;
                                return B2(this, arguments), null == this[j] ? t6 = arguments : (t6 = [].map.call(arguments, this._cast, this), t6 = this[j].applySetters(t6, this[$2])), [].unshift.apply(this, t6), this._registerAtomic("$set", this), this._markModified(), this.length;
                            }
                        }
                    ], a28(o47.prototype, i41), l24 && a28(o47, l24), S5;
                }(l23(Array));
                /*!
 * ignore
 */ function B2(t5, e27) {
                    var r40, n56, i41, s31 = null == t5 ? null : b5(t5[j], "caster.options.ref", null);
                    0 === t5.length && e27.length > 0 && /*!
 * ignore
 */ (function(t6, e28) {
                        if (!e28) return !1;
                        var r43, n58 = o41(t6);
                        try {
                            for(n58.s(); !(r43 = n58.n()).done;){
                                var i44 = r43.value;
                                if (null == i44) return !1;
                                var s32 = i44.constructor;
                                if (!(i44 instanceof d12) || s32.modelName !== e28 && s32.baseModelName !== e28) return !1;
                            }
                        } catch (t7) {
                            n58.e(t7);
                        } finally{
                            n58.f();
                        }
                        return !0;
                    })(e27, s31) && t5[$2].populated(t5[E2], [], (r40 = {
                    }, n56 = P2, i41 = e27[0].constructor, n56 in r40 ? Object.defineProperty(r40, n56, {
                        value: i41,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : r40[n56] = i41, r40));
                }
                S3.inspect.custom && (k3.prototype[S3.inspect.custom] = k3.prototype.inspect), t2.exports = k3;
            }).call(this, r2(2).Buffer);
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * ignore
 */ t2.exports = function(t5, e25, r40) {
                var n51 = (r40 = r40 || {
                }).skipDocArrays, o41 = 0;
                if (!t5) return o41;
                for(var i37 = 0, s30 = Object.keys(t5.$__.activePaths.states.modify); i37 < s30.length; i37++){
                    var a28 = s30[i37];
                    if (n51) {
                        var u33 = t5.$__schema.path(a28);
                        if (u33 && u33.$isMongooseDocumentArray) continue;
                    }
                    a28.startsWith(e25 + ".") && (delete t5.$__.activePaths.states.modify[a28], ++o41);
                }
                return o41;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ var n51 = r2(15).get().Binary, o41 = r2(1), i37 = r2(64).Buffer;
            function s30(t5, e25, r40) {
                var n56, a39, c23, l23, f20, p14 = arguments.length;
                return n56 = 0 === p14 || null == arguments[0] ? 0 : t5, Array.isArray(e25) ? (c23 = e25[0], l23 = e25[1]) : a39 = e25, f20 = "number" == typeof n56 || n56 instanceof Number ? i37.alloc(n56) : i37.from(n56, a39, r40), o41.decorate(f20, s30.mixin), f20.isMongooseBuffer = !0, f20[s30.pathSymbol] = c23, f20[u41] = l23, f20._subtype = 0, f20;
            }
            var a39 = Symbol.for("mongoose#Buffer#_path"), u41 = Symbol.for("mongoose#Buffer#_parent");
            s30.pathSymbol = a39, /*!
 * Inherit from Buffer.
 */ s30.mixin = {
                _subtype: void 0,
                _markModified: function() {
                    var t5 = this[u41];
                    return t5 && t5.markModified(this[s30.pathSymbol]), this;
                },
                write: function() {
                    var t5 = i37.prototype.write.apply(this, arguments);
                    return t5 > 0 && this._markModified(), t5;
                },
                copy: function(t5) {
                    var e25 = i37.prototype.copy.apply(this, arguments);
                    return t5 && t5.isMongooseBuffer && t5._markModified(), e25;
                }
            }, /*!
 * Compile other Buffer methods marking this buffer as modified.
 */ "writeUInt8 writeUInt16 writeUInt32 writeInt8 writeInt16 writeInt32 writeFloat writeDouble fill utf8Write binaryWrite asciiWrite set writeUInt16LE writeUInt16BE writeUInt32LE writeUInt32BE writeInt16LE writeInt16BE writeInt32LE writeInt32BE writeFloatLE writeFloatBE writeDoubleLE writeDoubleBE".split(" ").forEach(function(t5) {
                i37.prototype[t5] && (s30.mixin[t5] = function() {
                    var e25 = i37.prototype[t5].apply(this, arguments);
                    return this._markModified(), e25;
                });
            }), s30.mixin.toObject = function(t5) {
                var e25 = "number" == typeof t5 ? t5 : this._subtype || 0;
                return new n51(i37.from(this), e25);
            }, s30.mixin.toBSON = function() {
                return new n51(this, this._subtype || 0);
            }, s30.mixin.equals = function(t5) {
                if (!i37.isBuffer(t5)) return !1;
                if (this.length !== t5.length) return !1;
                for(var e25 = 0; e25 < this.length; ++e25)if (this[e25] !== t5[e25]) return !1;
                return !0;
            }, s30.mixin.subtype = function(t5) {
                if ("number" != typeof t5) throw new TypeError("Invalid subtype. Expected a number");
                this._subtype !== t5 && this._markModified(), this._subtype = t5;
            }, /*!
 * Module exports.
 */ s30.Binary = n51, t2.exports = s30;
        },
        function(t2, e3, r2) {
            "use strict";
            var n51 = r2(15).get().ObjectId, o41 = r2(23);
            t2.exports = function(t5) {
                if (null == t5) return t5;
                if (t5 instanceof n51) return t5;
                if (t5._id) {
                    if (t5._id instanceof n51) return t5._id;
                    if (t5._id.toString instanceof Function) return new n51(t5._id.toString());
                }
                if (t5.toString instanceof Function) return new n51(t5.toString());
                o41.ok(!1);
            };
        },
        function(t2, e3, r2) {
            "use strict";
            function n51(t5) {
                return (n51 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t6) {
                    return typeof t6;
                } : function(t6) {
                    return t6 && "function" == typeof Symbol && t6.constructor === Symbol && t6 !== Symbol.prototype ? "symbol" : typeof t6;
                })(t5);
            }
            function o41(t5, e25) {
                var r40 = "undefined" != typeof Symbol && t5[Symbol.iterator] || t5["@@iterator"];
                if (!r40) {
                    if (Array.isArray(t5) || (r40 = (function(t6, e27) {
                        if (!t6) return;
                        if ("string" == typeof t6) return i37(t6, e27);
                        var r43 = Object.prototype.toString.call(t6).slice(8, -1);
                        "Object" === r43 && t6.constructor && (r43 = t6.constructor.name);
                        if ("Map" === r43 || "Set" === r43) return Array.from(t6);
                        if ("Arguments" === r43 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r43)) return i37(t6, e27);
                    })(t5)) || e25 && t5 && "number" == typeof t5.length) {
                        r40 && (t5 = r40);
                        var n56 = 0, o47 = function() {
                        };
                        return {
                            s: o47,
                            n: function() {
                                return n56 >= t5.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t5[n56++]
                                };
                            },
                            e: function(t6) {
                                throw t6;
                            },
                            f: o47
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s30, a39 = !0, u41 = !1;
                return {
                    s: function() {
                        r40 = r40.call(t5);
                    },
                    n: function() {
                        var t6 = r40.next();
                        return a39 = t6.done, t6;
                    },
                    e: function(t6) {
                        u41 = !0, s30 = t6;
                    },
                    f: function() {
                        try {
                            a39 || null == r40.return || r40.return();
                        } finally{
                            if (u41) throw s30;
                        }
                    }
                };
            }
            function i37(t5, e25) {
                (null == e25 || e25 > t5.length) && (e25 = t5.length);
                for(var r40 = 0, n58 = new Array(e25); r40 < e25; r40++)n58[r40] = t5[r40];
                return n58;
            }
            function s30(t5, e25) {
                for(var r40 = 0; r40 < e25.length; r40++){
                    var n58 = e25[r40];
                    n58.enumerable = n58.enumerable || !1, n58.configurable = !0, "value" in n58 && (n58.writable = !0), Object.defineProperty(t5, n58.key, n58);
                }
            }
            function a39(t5, e25, r40) {
                return (a39 = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(t6, e27, r43) {
                    var n59 = function(t7, e28) {
                        for(; !Object.prototype.hasOwnProperty.call(t7, e28) && null !== (t7 = h8(t7)););
                        return t7;
                    }(t6, e27);
                    if (n59) {
                        var o52 = Object.getOwnPropertyDescriptor(n59, e27);
                        return o52.get ? o52.get.call(r43) : o52.value;
                    }
                })(t5, e25, r40 || t5);
            }
            function u41(t5, e25) {
                if (e25 && ("object" === n51(e25) || "function" == typeof e25)) return e25;
                if ((void 0) !== e25) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t6) {
                    if ((void 0) === t6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t6;
                })(t5);
            }
            function c23(t5) {
                var e25 = "function" == typeof Map ? new Map : void 0;
                return (c23 = function(t6) {
                    if (null === t6 || (r40 = t6, -1 === Function.toString.call(r40).indexOf("[native code]"))) return t6;
                    var r40;
                    if ("function" != typeof t6) throw new TypeError("Super expression must either be null or a function");
                    if ((void 0) !== e25) {
                        if (e25.has(t6)) return e25.get(t6);
                        e25.set(t6, n59);
                    }
                    function n59() {
                        return l23(t6, arguments, h8(this).constructor);
                    }
                    return n59.prototype = Object.create(t6.prototype, {
                        constructor: {
                            value: n59,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), p14(n59, t6);
                })(t5);
            }
            function l23(t5, e25, r40) {
                return (l23 = f20() ? Reflect.construct : function(t6, e27, r43) {
                    var n59 = [
                        null
                    ];
                    n59.push.apply(n59, e27);
                    var o53 = new (Function.bind.apply(t6, n59));
                    return r43 && p14(o53, r43.prototype), o53;
                }).apply(null, arguments);
            }
            function f20() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                    })), !0;
                } catch (t5) {
                    return !1;
                }
            }
            function p14(t5, e25) {
                return (p14 = Object.setPrototypeOf || function(t6, e27) {
                    return t6.__proto__ = e27, t6;
                })(t5, e25);
            }
            function h8(t5) {
                return (h8 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t6) {
                    return t6.__proto__ || Object.getPrototypeOf(t6);
                })(t5);
            }
            var y13 = r2(28), d12 = r2(10), _2 = r2(26), v2 = r2(1).deepEqual, m2 = r2(3), g5 = r2(24), b5 = r2(91), w6 = r2(4), O4 = r2(51), S3 = r2(0).populateModelSymbol, A3 = function(t5) {
                !function(t6, e25) {
                    if ("function" != typeof e25 && null !== e25) throw new TypeError("Super expression must either be null or a function");
                    t6.prototype = Object.create(e25 && e25.prototype, {
                        constructor: {
                            value: t6,
                            writable: !0,
                            configurable: !0
                        }
                    }), e25 && p14(t6, e25);
                }(w7, t5);
                var e25, r40, n59, i41, c30, l24 = (e25 = w7, r40 = f20(), function() {
                    var t6, n60 = h8(e25);
                    if (r40) {
                        var o53 = h8(this).constructor;
                        t6 = Reflect.construct(n60, arguments, o53);
                    } else t6 = n60.apply(this, arguments);
                    return u41(this, t6);
                });
                function w7(t6, e27, r43, n60) {
                    var o54;
                    return (function(t7, e28) {
                        if (!(t7 instanceof e28)) throw new TypeError("Cannot call a class as a function");
                    })(this, w7), "Object" === g5(t6) && (t6 = Object.keys(t6).reduce(function(e28, r44) {
                        return e28.concat([
                            [
                                r44,
                                t6[r44]
                            ]
                        ]);
                    }, [])), (o54 = l24.call(this, t6)).$__parent = null != r43 && null != r43.$__ ? r43 : null, o54.$__path = e27, o54.$__schemaType = null == n60 ? new y13(e27) : n60, o54.$__runDeferred(), o54;
                }
                return n59 = w7, i41 = [
                    {
                        key: "$init",
                        value: function(t6, e27) {
                            $2(t6), a39(h8(w7.prototype), "set", this).call(this, t6, e27), null != e27 && e27.$isSingleNested && (e27.$basePath = this.$__path + "." + t6);
                        }
                    },
                    {
                        key: "$__set",
                        value: function(t6, e27) {
                            a39(h8(w7.prototype), "set", this).call(this, t6, e27);
                        }
                    },
                    {
                        key: "get",
                        value: function(t6, e27) {
                            return t6 instanceof d12 && (t6 = t6.toString()), !1 === (e27 = e27 || {
                            }).getters ? a39(h8(w7.prototype), "get", this).call(this, t6) : this.$__schemaType.applyGetters(a39(h8(w7.prototype), "get", this).call(this, t6), this.$__parent);
                        }
                    },
                    {
                        key: "set",
                        value: function(t6, e27) {
                            if (t6 instanceof d12 && (t6 = t6.toString()), $2(t6), e27 = b5(e27), null == this.$__schemaType) return this.$__deferred = this.$__deferred || [], void this.$__deferred.push({
                                key: t6,
                                value: e27
                            });
                            var r43 = this.$__path + "." + t6, n60 = null != this.$__parent && this.$__parent.$__ ? this.$__parent.populated(r43) || this.$__parent.populated(this.$__path) : null, o54 = this.get(t6);
                            if (null != n60) null == e27.$__ && (e27 = new n60.options[S3](e27)), e27.$__.wasPopulated = !0;
                            else try {
                                e27 = this.$__schemaType.applySetters(e27, this.$__parent, !1, this.get(t6), {
                                    path: r43
                                });
                            } catch (t7) {
                                if (null != this.$__parent && null != this.$__parent.$__) return void this.$__parent.invalidate(r43, t7);
                                throw t7;
                            }
                            a39(h8(w7.prototype), "set", this).call(this, t6, e27), null != e27 && e27.$isSingleNested && (e27.$basePath = this.$__path + "." + t6);
                            var i45 = this.$__parent;
                            null == i45 || null == i45.$__ || v2(e27, o54) || i45.markModified(this.$__path + "." + t6);
                        }
                    },
                    {
                        key: "clear",
                        value: function() {
                            a39(h8(w7.prototype), "clear", this).call(this);
                            var t6 = this.$__parent;
                            null != t6 && t6.markModified(this.$__path);
                        }
                    },
                    {
                        key: "delete",
                        value: function(t6) {
                            t6 instanceof d12 && (t6 = t6.toString()), this.set(t6, void 0), a39(h8(w7.prototype), "delete", this).call(this, t6);
                        }
                    },
                    {
                        key: "toBSON",
                        value: function() {
                            return new Map(this);
                        }
                    },
                    {
                        key: "toObject",
                        value: function(t6) {
                            if (m2(t6, "flattenMaps")) {
                                var e27, r43 = {
                                }, n60 = o41(this.keys());
                                try {
                                    for(n60.s(); !(e27 = n60.n()).done;){
                                        var i45 = e27.value;
                                        r43[i45] = _2(this.get(i45));
                                    }
                                } catch (t7) {
                                    n60.e(t7);
                                } finally{
                                    n60.f();
                                }
                                return r43;
                            }
                            return new Map(this);
                        }
                    },
                    {
                        key: "toJSON",
                        value: function() {
                            var t6, e28 = {
                            }, r44 = o41(this.keys());
                            try {
                                for(r44.s(); !(t6 = r44.n()).done;){
                                    var n61 = t6.value;
                                    e28[n61] = this.get(n61);
                                }
                            } catch (t7) {
                                r44.e(t7);
                            } finally{
                                r44.f();
                            }
                            return e28;
                        }
                    },
                    {
                        key: "inspect",
                        value: function() {
                            return new Map(this);
                        }
                    },
                    {
                        key: "$__runDeferred",
                        value: function() {
                            if (this.$__deferred) {
                                var t6, e28 = o41(this.$__deferred);
                                try {
                                    for(e28.s(); !(t6 = e28.n()).done;){
                                        var r44 = t6.value;
                                        this.set(r44.key, r44.value);
                                    }
                                } catch (t7) {
                                    e28.e(t7);
                                } finally{
                                    e28.f();
                                }
                                this.$__deferred = null;
                            }
                        }
                    }
                ], s30(n59.prototype, i41), c30 && s30(n59, c30), w7;
            }(c23(Map));
            /*!
 * Since maps are stored as objects under the hood, keys must be strings
 * and can't contain any invalid characters
 */ function $2(t5) {
                var e25 = n51(t5);
                if ("string" !== e25) throw new TypeError("Mongoose maps only support string keys, got ".concat(e25));
                if (t5.startsWith("$")) throw new Error('Mongoose maps do not support keys that start with "$", got "'.concat(t5, '"'));
                if (t5.includes(".")) throw new Error('Mongoose maps do not support keys that contain ".", got "'.concat(t5, '"'));
                if (O4.has(t5)) throw new Error('Mongoose maps do not support reserved key name "'.concat(t5, '"'));
            }
            w6.inspect.custom && Object.defineProperty(A3.prototype, w6.inspect.custom, {
                enumerable: !1,
                writable: !1,
                configurable: !1,
                value: A3.prototype.inspect
            }), Object.defineProperty(A3.prototype, "$__set", {
                enumerable: !1,
                writable: !0,
                configurable: !1
            }), Object.defineProperty(A3.prototype, "$__parent", {
                enumerable: !1,
                writable: !0,
                configurable: !1
            }), Object.defineProperty(A3.prototype, "$__path", {
                enumerable: !1,
                writable: !0,
                configurable: !1
            }), Object.defineProperty(A3.prototype, "$__schemaType", {
                enumerable: !1,
                writable: !0,
                configurable: !1
            }), Object.defineProperty(A3.prototype, "$isMongooseMap", {
                enumerable: !1,
                writable: !1,
                configurable: !1,
                value: !0
            }), Object.defineProperty(A3.prototype, "$__deferredCalls", {
                enumerable: !1,
                writable: !1,
                configurable: !1,
                value: !0
            }), t2.exports = A3;
        },
        function(t2, e3, r2) {
            "use strict";
            var n51 = r2(1);
            t2.exports = function(t5) {
                return n51.isPOJO(t5) && null != t5.$__ && null != t5._doc ? t5._doc : t5;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            function n51(t5, e25) {
                var r40 = "undefined" != typeof Symbol && t5[Symbol.iterator] || t5["@@iterator"];
                if (!r40) {
                    if (Array.isArray(t5) || (r40 = (function(t7, e29) {
                        if (!t7) return;
                        if ("string" == typeof t7) return o41(t7, e29);
                        var r45 = Object.prototype.toString.call(t7).slice(8, -1);
                        "Object" === r45 && t7.constructor && (r45 = t7.constructor.name);
                        if ("Map" === r45 || "Set" === r45) return Array.from(t7);
                        if ("Arguments" === r45 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r45)) return o41(t7, e29);
                    })(t5)) || e25 && t5 && "number" == typeof t5.length) {
                        r40 && (t5 = r40);
                        var n59 = 0, i37 = function() {
                        };
                        return {
                            s: i37,
                            n: function() {
                                return n59 >= t5.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t5[n59++]
                                };
                            },
                            e: function(t7) {
                                throw t7;
                            },
                            f: i37
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s30, a39 = !0, u41 = !1;
                return {
                    s: function() {
                        r40 = r40.call(t5);
                    },
                    n: function() {
                        var t7 = r40.next();
                        return a39 = t7.done, t7;
                    },
                    e: function(t7) {
                        u41 = !0, s30 = t7;
                    },
                    f: function() {
                        try {
                            a39 || null == r40.return || r40.return();
                        } finally{
                            if (u41) throw s30;
                        }
                    }
                };
            }
            function o41(t5, e25) {
                (null == e25 || e25 > t5.length) && (e25 = t5.length);
                for(var r40 = 0, n62 = new Array(e25); r40 < e25; r40++)n62[r40] = t5[r40];
                return n62;
            }
            var i41 = r2(12), s30 = r2(22), a39 = r2(17).internalToObjectOptions, u41 = r2(27), c23 = r2(0).documentArrayParent;
            function l23(t5, e25, r40, o54, s31) {
                var a40 = this;
                this.$isSingleNested = !0, null != s31 && null != s31.path && (this.$basePath = s31.path);
                var u42 = null != s31 && s31.priorDoc, c30 = null;
                if (u42 && (this._doc = Object.assign({
                }, s31.priorDoc._doc), delete this._doc[this.$__schema.options.discriminatorKey], c30 = Object.keys(s31.priorDoc._doc || {
                }).filter(function(t7) {
                    return t7 !== a40.$__schema.options.discriminatorKey;
                })), null != r40 && (s31 = Object.assign({
                }, s31, {
                    isNew: r40.isNew,
                    defaults: r40.$__.$options.defaults
                })), i41.call(this, t5, e25, o54, s31), u42) {
                    var l24, f20 = n51(c30);
                    try {
                        for(f20.s(); !(l24 = f20.n()).done;){
                            var p14 = l24.value;
                            if (!this.$__.activePaths.states.modify[p14] && !this.$__.activePaths.states.default[p14] && !this.$__.$setCalled.has(p14)) {
                                var h8 = this.$__schema.path(p14), y13 = null == h8 ? void 0 : h8.getDefault(this);
                                (void 0) === y13 ? delete this._doc[p14] : (this._doc[p14] = y13, this.$__.activePaths.default(p14));
                            }
                        }
                    } catch (t7) {
                        f20.e(t7);
                    } finally{
                        f20.f();
                    }
                    delete s31.priorDoc, delete this.$__.$options.priorDoc;
                }
            }
            t2.exports = l23, l23.prototype = Object.create(i41.prototype), l23.prototype.toBSON = function() {
                return this.toObject(a39);
            }, l23.prototype.save = function(t5, e25) {
                var r40 = this;
                return "function" == typeof t5 && (e25 = t5, t5 = {
                }), (t5 = t5 || {
                }).suppressWarning || console.warn("mongoose: calling `save()` on a subdoc does **not** save the document to MongoDB, it only runs save middleware. Use `subdoc.save({ suppressWarning: true })` to hide this warning if you're sure this behavior is right for your app."), u41(e25, function(t7) {
                    r40.$__save(t7);
                });
            }, l23.prototype.$__save = function(t5) {
                var e25 = this;
                return s30(function() {
                    return t5(null, e25);
                });
            }, l23.prototype.$isValid = function(t5) {
                return this.$__parent && this.$basePath ? this.$__parent.$isValid([
                    this.$basePath,
                    t5
                ].join(".")) : i41.prototype.$isValid.call(this, t5);
            }, l23.prototype.markModified = function(t5) {
                if (i41.prototype.markModified.call(this, t5), this.$__parent && this.$basePath) {
                    if (this.$__parent.isDirectModified(this.$basePath)) return;
                    this.$__parent.markModified([
                        this.$basePath,
                        t5
                    ].join("."), this);
                }
            }, l23.prototype.isModified = function(t5, e25) {
                var r40 = this;
                return this.$__parent && this.$basePath ? Array.isArray(t5) || "string" == typeof t5 ? (t5 = (t5 = Array.isArray(t5) ? t5 : t5.split(" ")).map(function(t7) {
                    return [
                        r40.$basePath,
                        t7
                    ].join(".");
                }), this.$__parent.isModified(t5, e25)) : this.$__parent.isModified(this.$basePath) : i41.prototype.isModified.call(this, t5, e25);
            }, l23.prototype.$markValid = function(t5) {
                i41.prototype.$markValid.call(this, t5), this.$__parent && this.$basePath && this.$__parent.$markValid([
                    this.$basePath,
                    t5
                ].join("."));
            }, /*!
 * ignore
 */ l23.prototype.invalidate = function(t5, e25, r40) {
                if (e25 !== this.ownerDocument().$__.validationError && i41.prototype.invalidate.call(this, t5, e25, r40), this.$__parent && this.$basePath) this.$__parent.invalidate([
                    this.$basePath,
                    t5
                ].join("."), e25, r40);
                else if ("cast" === e25.kind || "CastError" === e25.name) throw e25;
                return this.ownerDocument().$__.validationError;
            }, /*!
 * ignore
 */ l23.prototype.$ignore = function(t5) {
                i41.prototype.$ignore.call(this, t5), this.$__parent && this.$basePath && this.$__parent.$ignore([
                    this.$basePath,
                    t5
                ].join("."));
            }, l23.prototype.ownerDocument = function() {
                if (this.$__.ownerDocument) return this.$__.ownerDocument;
                var t5 = this.$__parent;
                if (!t5) return this;
                for(; t5.$__parent || t5[c23];)t5 = t5.$__parent || t5[c23];
                return this.$__.ownerDocument = t5, this.$__.ownerDocument;
            }, l23.prototype.parent = function() {
                return this.$__parent;
            }, l23.prototype.$parent = l23.prototype.parent, /*!
 * no-op for hooks
 */ l23.prototype.$__remove = function(t5) {
                return t5(null, this);
            }, l23.prototype.remove = function(t5, e25) {
                "function" == typeof t5 && (e25 = t5, t5 = null), /*!
 * Registers remove event listeners for triggering
 * on subdocuments.
 *
 * @param {Subdocument} sub
 * @api private
 */ (function(t7) {
                    var e29 = t7.ownerDocument();
                    function r40() {
                        e29.removeListener("save", r40), e29.removeListener("remove", r40), t7.emit("remove", t7), t7.constructor.emit("remove", t7), e29 = t7 = null;
                    }
                    e29.on("save", r40), e29.on("remove", r40);
                })(this), t5 && t5.noop || this.$__parent.set(this.$basePath, null), "function" == typeof e25 && e25(null);
            }, /*!
 * ignore
 */ l23.prototype.populate = function() {
                throw new Error('Mongoose does not support calling populate() on nested docs. Instead of `doc.nested.populate("path")`, use `doc.populate("nested.path")`');
            };
        },
        function(t2, e3, r2) {
            "use strict";
            function n51(t5, e25) {
                var r40 = "undefined" != typeof Symbol && t5[Symbol.iterator] || t5["@@iterator"];
                if (!r40) {
                    if (Array.isArray(t5) || (r40 = (function(t7, e29) {
                        if (!t7) return;
                        if ("string" == typeof t7) return o41(t7, e29);
                        var r45 = Object.prototype.toString.call(t7).slice(8, -1);
                        "Object" === r45 && t7.constructor && (r45 = t7.constructor.name);
                        if ("Map" === r45 || "Set" === r45) return Array.from(t7);
                        if ("Arguments" === r45 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r45)) return o41(t7, e29);
                    })(t5)) || e25 && t5 && "number" == typeof t5.length) {
                        r40 && (t5 = r40);
                        var n62 = 0, i41 = function() {
                        };
                        return {
                            s: i41,
                            n: function() {
                                return n62 >= t5.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t5[n62++]
                                };
                            },
                            e: function(t7) {
                                throw t7;
                            },
                            f: i41
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s30, a39 = !0, u41 = !1;
                return {
                    s: function() {
                        r40 = r40.call(t5);
                    },
                    n: function() {
                        var t7 = r40.next();
                        return a39 = t7.done, t7;
                    },
                    e: function(t7) {
                        u41 = !0, s30 = t7;
                    },
                    f: function() {
                        try {
                            a39 || null == r40.return || r40.return();
                        } finally{
                            if (u41) throw s30;
                        }
                    }
                };
            }
            function o41(t5, e25) {
                (null == e25 || e25 > t5.length) && (e25 = t5.length);
                for(var r40 = 0, n63 = new Array(e25); r40 < e25; r40++)n63[r40] = t5[r40];
                return n63;
            }
            var i46 = r2(28), s30 = r2(58).defineKey, a39 = r2(3), u41 = r2(1), c23 = {
                toJSON: !0,
                toObject: !0,
                _id: !0,
                id: !0
            };
            /*!
 * ignore
 */ t2.exports = function(t5, e25, r40, o54, l23) {
                if (!r40 || !r40.instanceOfSchema) throw new Error("You must pass a valid discriminator Schema");
                if (t5.schema.discriminatorMapping && !t5.schema.discriminatorMapping.isRoot) throw new Error('Discriminator "' + e25 + '" can only be a discriminator of the root model');
                if (l23) {
                    var f21 = a39(t5.base, "options.applyPluginsToDiscriminators", !1);
                    t5.base._applyPlugins(r40, {
                        skipTopLevel: !f21
                    });
                }
                var p15 = t5.schema.options.discriminatorKey, h9 = t5.schema.path(p15);
                if (null != h9) u41.hasUserDefinedProperty(h9.options, "select") || (h9.options.select = !0), h9.options.$skipDiscriminatorCheck = !0;
                else {
                    var y14 = {
                    };
                    y14[p15] = {
                        default: void 0,
                        select: !0,
                        $skipDiscriminatorCheck: !0
                    }, y14[p15][t5.schema.options.typeKey] = String, t5.schema.add(y14), s30(p15, null, t5.prototype, null, [
                        p15
                    ], t5.schema.options);
                }
                if (r40.path(p15) && !0 !== r40.path(p15).options.$skipDiscriminatorCheck) throw new Error('Discriminator "' + e25 + '" cannot have field with name "' + p15 + '"');
                var d12 = e25;
                if (("string" == typeof o54 && o54.length || null != o54) && (d12 = o54), (function(e29, r45) {
                    e29._baseSchema = r45, r45.paths._id && r45.paths._id.options && !r45.paths._id.options.auto && e29.remove("_id");
                    for(var o55 = [], s31 = 0, a40 = Object.keys(r45.paths); s31 < a40.length; s31++){
                        var l25 = a40[s31];
                        if (e29.nested[l25]) o55.push(l25);
                        else if (-1 !== l25.indexOf(".")) {
                            var f22, y15 = "", _2 = n51(l25.split(".").slice(0, -1));
                            try {
                                for(_2.s(); !(f22 = _2.n()).done;){
                                    var v2 = f22.value;
                                    y15 += (y15.length ? "." : "") + v2, (e29.paths[y15] instanceof i46 || e29.singleNestedPaths[y15] instanceof i46) && o55.push(l25);
                                }
                            } catch (t7) {
                                _2.e(t7);
                            } finally{
                                _2.f();
                            }
                        }
                    }
                    u41.merge(e29, r45, {
                        isDiscriminatorSchemaMerge: !0,
                        omit: {
                            discriminators: !0,
                            base: !0
                        },
                        omitNested: o55.reduce(function(t7, e30) {
                            return t7["tree." + e30] = !0, t7;
                        }, {
                        })
                    });
                    for(var m2 = 0, g5 = o55; m2 < g5.length; m2++){
                        var b5 = g5[m2];
                        delete e29.paths[b5];
                    }
                    e29.childSchemas.forEach(function(t7) {
                        t7.model.prototype.$__setSchema(t7.schema);
                    });
                    var w6 = {
                    };
                    w6[p15] = {
                        default: d12,
                        select: !0,
                        set: function(t7) {
                            if (t7 === d12 || Array.isArray(d12) && u41.deepEqual(t7, d12)) return d12;
                            throw new Error("Can't set discriminator key \"" + p15 + '"');
                        },
                        $skipDiscriminatorCheck: !0
                    }, w6[p15][e29.options.typeKey] = h9 ? h9.options[e29.options.typeKey] : String, e29.add(w6), e29.discriminatorMapping = {
                        key: p15,
                        value: d12,
                        isRoot: !1
                    }, r45.options.collection && (e29.options.collection = r45.options.collection);
                    var O4 = e29.options.toJSON, S3 = e29.options.toObject, A3 = e29.options._id, $2 = e29.options.id, E2 = Object.keys(e29.options);
                    e29.options.discriminatorKey = r45.options.discriminatorKey;
                    for(var j = 0, P2 = E2; j < P2.length; j++){
                        var x2 = P2[j];
                        if (!c23[x2]) {
                            if ("pluralization" === x2 && 1 == e29.options[x2] && null == r45.options[x2]) continue;
                            if (!u41.deepEqual(e29.options[x2], r45.options[x2])) throw new Error("Can't customize discriminator option " + x2 + " (can only modify " + Object.keys(c23).join(", ") + ")");
                        }
                    }
                    e29.options = u41.clone(r45.options), O4 && (e29.options.toJSON = O4), S3 && (e29.options.toObject = S3), (void 0) !== A3 && (e29.options._id = A3), e29.options.id = $2, e29.s.hooks = t5.schema.s.hooks.merge(e29.s.hooks), e29.plugins = Array.prototype.slice.call(r45.plugins), e29.callQueue = r45.callQueue.concat(e29.callQueue), delete e29._requiredpaths;
                })(r40, t5.schema), t5.discriminators || (t5.discriminators = {
                }), t5.schema.discriminatorMapping || (t5.schema.discriminatorMapping = {
                    key: p15,
                    value: null,
                    isRoot: !0
                }), t5.schema.discriminators || (t5.schema.discriminators = {
                }), t5.schema.discriminators[e25] = r40, t5.discriminators[e25]) throw new Error('Discriminator with name "' + e25 + '" already exists');
                return r40;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            var n51 = r2(76);
            t2.exports = function(t5, e25) {
                return null == e25 || null == e25._id || (t5 = t5.clone(), e25._id ? t5.paths._id || (n51(t5), t5.options._id = !0) : (t5.remove("_id"), t5.options._id = !1)), t5;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            var n51 = r2(37);
            /*!
 * Find the correct constructor, taking into account discriminators
 */ t2.exports = function(t5, e25) {
                var r40 = t5.schema.options.discriminatorKey;
                if (null != e25 && t5.discriminators && null != e25[r40]) {
                    if (t5.discriminators[e25[r40]]) t5 = t5.discriminators[e25[r40]];
                    else {
                        var o41 = n51(t5.discriminators, e25[r40]);
                        o41 && (t5 = o41);
                    }
                }
                return t5;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            t2.exports = r2(97);
        },
        function(t2, e3, r2) {
            "use strict";
            (function(n51) {
                function o54(t5) {
                    return (o54 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t7) {
                        return typeof t7;
                    } : function(t7) {
                        return t7 && "function" == typeof Symbol && t7.constructor === Symbol && t7 !== Symbol.prototype ? "symbol" : typeof t7;
                    })(t5);
                }
                function i46(t5, e25) {
                    return (i46 = Object.setPrototypeOf || function(t7, e29) {
                        return t7.__proto__ = e29, t7;
                    })(t5, e25);
                }
                function s30(t5) {
                    var e25 = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                        if (Reflect.construct.sham) return !1;
                        if ("function" == typeof Proxy) return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                            })), !0;
                        } catch (t7) {
                            return !1;
                        }
                    }();
                    return function() {
                        var r40, n63 = u41(t5);
                        if (e25) {
                            var o55 = u41(this).constructor;
                            r40 = Reflect.construct(n63, arguments, o55);
                        } else r40 = n63.apply(this, arguments);
                        return a39(this, r40);
                    };
                }
                function a39(t5, e25) {
                    if (e25 && ("object" === o54(e25) || "function" == typeof e25)) return e25;
                    if ((void 0) !== e25) throw new TypeError("Derived constructors may only return object or undefined");
                    return (function(t7) {
                        if ((void 0) === t7) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return t7;
                    })(t5);
                }
                function u41(t5) {
                    return (u41 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t7) {
                        return t7.__proto__ || Object.getPrototypeOf(t7);
                    })(t5);
                }
                r2(15).set(r2(101));
                var c23 = r2(62), l23 = r2(68);
                c23.setBrowser(!0), Object.defineProperty(e3, "Promise", {
                    get: function() {
                        return l23.get();
                    },
                    set: function(t5) {
                        l23.set(t5);
                    }
                }), e3.PromiseProvider = l23, e3.Error = r2(5), e3.Schema = r2(54), e3.Types = r2(38), e3.VirtualType = r2(55), e3.SchemaType = r2(6), e3.utils = r2(1), e3.Document = c23(), e3.model = function(t5, r40) {
                    var n63 = function(t7) {
                        !function(t8, e25) {
                            if ("function" != typeof e25 && null !== e25) throw new TypeError("Super expression must either be null or a function");
                            t8.prototype = Object.create(e25 && e25.prototype, {
                                constructor: {
                                    value: t8,
                                    writable: !0,
                                    configurable: !0
                                }
                            }), e25 && i46(t8, e25);
                        }(n64, t7);
                        var e25 = s30(n64);
                        function n64(t8, o56) {
                            return (function(t9, e29) {
                                if (!(t9 instanceof e29)) throw new TypeError("Cannot call a class as a function");
                            })(this, n64), e25.call(this, t8, r40, o56);
                        }
                        return n64;
                    }(e3.Document);
                    return n63.modelName = t5, n63;
                }, /*!
 * Module exports.
 */ "undefined" != typeof window && (window.mongoose = t2.exports, window.Buffer = n51);
            }).call(this, r2(2).Buffer);
        },
        function(t2, e3, r2) {
            "use strict";
            e3.byteLength = function(t5) {
                var e25 = c23(t5), r40 = e25[0], n51 = e25[1];
                return 3 * (r40 + n51) / 4 - n51;
            }, e3.toByteArray = function(t5) {
                var e25, r40, n51 = c23(t5), s30 = n51[0], a39 = n51[1], u41 = new i46(function(t7, e29, r45) {
                    return 3 * (e29 + r45) / 4 - r45;
                }(0, s30, a39)), l23 = 0, f23 = a39 > 0 ? s30 - 4 : s30;
                for(r40 = 0; r40 < f23; r40 += 4)e25 = o54[t5.charCodeAt(r40)] << 18 | o54[t5.charCodeAt(r40 + 1)] << 12 | o54[t5.charCodeAt(r40 + 2)] << 6 | o54[t5.charCodeAt(r40 + 3)], u41[l23++] = e25 >> 16 & 255, u41[l23++] = e25 >> 8 & 255, u41[l23++] = 255 & e25;
                2 === a39 && (e25 = o54[t5.charCodeAt(r40)] << 2 | o54[t5.charCodeAt(r40 + 1)] >> 4, u41[l23++] = 255 & e25);
                1 === a39 && (e25 = o54[t5.charCodeAt(r40)] << 10 | o54[t5.charCodeAt(r40 + 1)] << 4 | o54[t5.charCodeAt(r40 + 2)] >> 2, u41[l23++] = e25 >> 8 & 255, u41[l23++] = 255 & e25);
                return u41;
            }, e3.fromByteArray = function(t5) {
                for(var e25, r40 = t5.length, o54 = r40 % 3, i46 = [], s30 = 0, a39 = r40 - o54; s30 < a39; s30 += 16383)i46.push(l23(t5, s30, s30 + 16383 > a39 ? a39 : s30 + 16383));
                1 === o54 ? (e25 = t5[r40 - 1], i46.push(n51[e25 >> 2] + n51[e25 << 4 & 63] + "==")) : 2 === o54 && (e25 = (t5[r40 - 2] << 8) + t5[r40 - 1], i46.push(n51[e25 >> 10] + n51[e25 >> 4 & 63] + n51[e25 << 2 & 63] + "="));
                return i46.join("");
            };
            for(var n51 = [], o54 = [], i46 = "undefined" != typeof Uint8Array ? Uint8Array : Array, s30 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", a39 = 0, u41 = s30.length; a39 < u41; ++a39)n51[a39] = s30[a39], o54[s30.charCodeAt(a39)] = a39;
            function c23(t5) {
                var e25 = t5.length;
                if (e25 % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
                var r40 = t5.indexOf("=");
                return -1 === r40 && (r40 = e25), [
                    r40,
                    r40 === e25 ? 0 : 4 - r40 % 4
                ];
            }
            function l23(t5, e25, r40) {
                for(var o56, i47, s31 = [], a40 = e25; a40 < r40; a40 += 3)o56 = (t5[a40] << 16 & 16711680) + (t5[a40 + 1] << 8 & 65280) + (255 & t5[a40 + 2]), s31.push(n51[(i47 = o56) >> 18 & 63] + n51[i47 >> 12 & 63] + n51[i47 >> 6 & 63] + n51[63 & i47]);
                return s31.join("");
            }
            o54["-".charCodeAt(0)] = 62, o54["_".charCodeAt(0)] = 63;
        },
        function(t2, e3) {
            /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ e3.read = function(t5, e25, r2, n51, o54) {
                var i46, s30, a39 = 8 * o54 - n51 - 1, u41 = (1 << a39) - 1, c23 = u41 >> 1, l23 = -7, f23 = r2 ? o54 - 1 : 0, p15 = r2 ? -1 : 1, h9 = t5[e25 + f23];
                for(f23 += p15, i46 = h9 & (1 << -l23) - 1, h9 >>= -l23, l23 += a39; l23 > 0; i46 = 256 * i46 + t5[e25 + f23], f23 += p15, l23 -= 8);
                for(s30 = i46 & (1 << -l23) - 1, i46 >>= -l23, l23 += n51; l23 > 0; s30 = 256 * s30 + t5[e25 + f23], f23 += p15, l23 -= 8);
                if (0 === i46) i46 = 1 - c23;
                else {
                    if (i46 === u41) return s30 ? NaN : 1 / 0 * (h9 ? -1 : 1);
                    s30 += Math.pow(2, n51), i46 -= c23;
                }
                return (h9 ? -1 : 1) * s30 * Math.pow(2, i46 - n51);
            }, e3.write = function(t5, e25, r2, n51, o54, i46) {
                var s30, a39, u41, c23 = 8 * i46 - o54 - 1, l23 = (1 << c23) - 1, f23 = l23 >> 1, p15 = 23 === o54 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, h9 = n51 ? 0 : i46 - 1, y16 = n51 ? 1 : -1, d12 = e25 < 0 || 0 === e25 && 1 / e25 < 0 ? 1 : 0;
                for(e25 = Math.abs(e25), isNaN(e25) || e25 === 1 / 0 ? (a39 = isNaN(e25) ? 1 : 0, s30 = l23) : (s30 = Math.floor(Math.log(e25) / Math.LN2), e25 * (u41 = Math.pow(2, -s30)) < 1 && (s30--, u41 *= 2), (e25 += s30 + f23 >= 1 ? p15 / u41 : p15 * Math.pow(2, 1 - f23)) * u41 >= 2 && (s30++, u41 /= 2), s30 + f23 >= l23 ? (a39 = 0, s30 = l23) : s30 + f23 >= 1 ? (a39 = (e25 * u41 - 1) * Math.pow(2, o54), s30 += f23) : (a39 = e25 * Math.pow(2, f23 - 1) * Math.pow(2, o54), s30 = 0)); o54 >= 8; t5[r2 + h9] = 255 & a39, h9 += y16, a39 /= 256, o54 -= 8);
                for(s30 = s30 << o54 | a39, c23 += o54; c23 > 0; t5[r2 + h9] = 255 & s30, h9 += y16, s30 /= 256, c23 -= 8);
                t5[r2 + h9 - y16] |= 128 * d12;
            };
        },
        function(t2, e3) {
            var r2 = {
            }.toString;
            t2.exports = Array.isArray || function(t5) {
                return "[object Array]" == r2.call(t5);
            };
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module exports.
 */ e3.Binary = r2(102), e3.Collection = function() {
                throw new Error("Cannot create a collection from browser library");
            }, e3.getConnection = function() {
                return function() {
                    throw new Error("Cannot create a connection from browser library");
                };
            }, e3.Decimal128 = r2(109), e3.ObjectId = r2(110), e3.ReadPreference = r2(111);
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ var n51 = r2(39).Binary;
            /*!
 * Module exports.
 */ t2.exports = n51;
        },
        function(t2, e3) {
            function r2(t5) {
                return (r2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t7) {
                    return typeof t7;
                } : function(t7) {
                    return t7 && "function" == typeof Symbol && t7.constructor === Symbol && t7 !== Symbol.prototype ? "symbol" : typeof t7;
                })(t5);
            }
            t2.exports = function(t5) {
                return t5 && "object" === r2(t5) && "function" == typeof t5.copy && "function" == typeof t5.fill && "function" == typeof t5.readUInt8;
            };
        },
        function(t2, e3) {
            "function" == typeof Object.create ? t2.exports = function(t5, e25) {
                t5.super_ = e25, t5.prototype = Object.create(e25.prototype, {
                    constructor: {
                        value: t5,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                });
            } : t2.exports = function(t5, e25) {
                t5.super_ = e25;
                var r2 = function() {
                };
                r2.prototype = e25.prototype, t5.prototype = new r2, t5.prototype.constructor = t5;
            };
        },
        function(module, exports, __webpack_require__) {
            "use strict";
            var Long = __webpack_require__(25).Long, Double = __webpack_require__(40).Double, Timestamp = __webpack_require__(41).Timestamp, ObjectID = __webpack_require__(42).ObjectID, _Symbol = __webpack_require__(44).Symbol, Code = __webpack_require__(45).Code, MinKey = __webpack_require__(47).MinKey, MaxKey = __webpack_require__(48).MaxKey, Decimal128 = __webpack_require__(46), Int32 = __webpack_require__(61), DBRef = __webpack_require__(49).DBRef, BSONRegExp = __webpack_require__(43).BSONRegExp, Binary = __webpack_require__(30).Binary, utils = __webpack_require__(16), deserialize = function(t2, e3, r2) {
                var n51 = (e3 = null == e3 ? {
                } : e3) && e3.index ? e3.index : 0, o54 = t2[n51] | t2[n51 + 1] << 8 | t2[n51 + 2] << 16 | t2[n51 + 3] << 24;
                if (o54 < 5 || t2.length < o54 || o54 + n51 > t2.length) throw new Error("corrupt bson message");
                if (0 !== t2[n51 + o54 - 1]) throw new Error("One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00");
                return deserializeObject(t2, n51, e3, r2);
            }, deserializeObject = function t2(e3, r2, n51, o54) {
                var i46 = null != n51.evalFunctions && n51.evalFunctions, s30 = null != n51.cacheFunctions && n51.cacheFunctions, a39 = null != n51.cacheFunctionsCrc32 && n51.cacheFunctionsCrc32;
                if (!a39) var u41 = null;
                var c23 = null == n51.fieldsAsRaw ? null : n51.fieldsAsRaw, l23 = null != n51.raw && n51.raw, f23 = "boolean" == typeof n51.bsonRegExp && n51.bsonRegExp, p15 = null != n51.promoteBuffers && n51.promoteBuffers, h9 = null == n51.promoteLongs || n51.promoteLongs, y16 = null == n51.promoteValues || n51.promoteValues, d12 = r2;
                if (e3.length < 5) throw new Error("corrupt bson message < 5 bytes long");
                var _12 = e3[r2++] | e3[r2++] << 8 | e3[r2++] << 16 | e3[r2++] << 24;
                if (_12 < 5 || _12 > e3.length) throw new Error("corrupt bson message");
                for(var v7 = o54 ? [] : {
                }, m2 = 0;;){
                    var g5 = e3[r2++];
                    if (0 === g5) break;
                    for(var b6 = r2; 0 !== e3[b6] && b6 < e3.length;)b6++;
                    if (b6 >= e3.length) throw new Error("Bad BSON Document: illegal CString");
                    var w6 = o54 ? m2++ : e3.toString("utf8", r2, b6);
                    if (r2 = b6 + 1, g5 === BSON.BSON_DATA_STRING) {
                        var O4 = e3[r2++] | e3[r2++] << 8 | e3[r2++] << 16 | e3[r2++] << 24;
                        if (O4 <= 0 || O4 > e3.length - r2 || 0 !== e3[r2 + O4 - 1]) throw new Error("bad string length in bson");
                        v7[w6] = e3.toString("utf8", r2, r2 + O4 - 1), r2 += O4;
                    } else if (g5 === BSON.BSON_DATA_OID) {
                        var S3 = utils.allocBuffer(12);
                        e3.copy(S3, 0, r2, r2 + 12), v7[w6] = new ObjectID(S3), r2 += 12;
                    } else if (g5 === BSON.BSON_DATA_INT && !1 === y16) v7[w6] = new Int32(e3[r2++] | e3[r2++] << 8 | e3[r2++] << 16 | e3[r2++] << 24);
                    else if (g5 === BSON.BSON_DATA_INT) v7[w6] = e3[r2++] | e3[r2++] << 8 | e3[r2++] << 16 | e3[r2++] << 24;
                    else if (g5 === BSON.BSON_DATA_NUMBER && !1 === y16) v7[w6] = new Double(e3.readDoubleLE(r2)), r2 += 8;
                    else if (g5 === BSON.BSON_DATA_NUMBER) v7[w6] = e3.readDoubleLE(r2), r2 += 8;
                    else if (g5 === BSON.BSON_DATA_DATE) {
                        var A3 = e3[r2++] | e3[r2++] << 8 | e3[r2++] << 16 | e3[r2++] << 24, $2 = e3[r2++] | e3[r2++] << 8 | e3[r2++] << 16 | e3[r2++] << 24;
                        v7[w6] = new Date(new Long(A3, $2).toNumber());
                    } else if (g5 === BSON.BSON_DATA_BOOLEAN) {
                        if (0 !== e3[r2] && 1 !== e3[r2]) throw new Error("illegal boolean type value");
                        v7[w6] = 1 === e3[r2++];
                    } else if (g5 === BSON.BSON_DATA_OBJECT) {
                        var E2 = r2, j = e3[r2] | e3[r2 + 1] << 8 | e3[r2 + 2] << 16 | e3[r2 + 3] << 24;
                        if (j <= 0 || j > e3.length - r2) throw new Error("bad embedded document length in bson");
                        v7[w6] = l23 ? e3.slice(r2, r2 + j) : t2(e3, E2, n51, !1), r2 += j;
                    } else if (g5 === BSON.BSON_DATA_ARRAY) {
                        E2 = r2;
                        var P2 = n51, x4 = r2 + (j = e3[r2] | e3[r2 + 1] << 8 | e3[r2 + 2] << 16 | e3[r2 + 3] << 24);
                        if (c23 && c23[w6]) {
                            for(var T3 in P2 = {
                            }, n51)P2[T3] = n51[T3];
                            P2.raw = !0;
                        }
                        if (v7[w6] = t2(e3, E2, P2, !0), 0 !== e3[(r2 += j) - 1]) throw new Error("invalid array terminator byte");
                        if (r2 !== x4) throw new Error("corrupted array bson");
                    } else if (g5 === BSON.BSON_DATA_UNDEFINED) v7[w6] = void 0;
                    else if (g5 === BSON.BSON_DATA_NULL) v7[w6] = null;
                    else if (g5 === BSON.BSON_DATA_LONG) {
                        A3 = e3[r2++] | e3[r2++] << 8 | e3[r2++] << 16 | e3[r2++] << 24, $2 = e3[r2++] | e3[r2++] << 8 | e3[r2++] << 16 | e3[r2++] << 24;
                        var N3 = new Long(A3, $2);
                        v7[w6] = h9 && !0 === y16 && N3.lessThanOrEqual(JS_INT_MAX_LONG) && N3.greaterThanOrEqual(JS_INT_MIN_LONG) ? N3.toNumber() : N3;
                    } else if (g5 === BSON.BSON_DATA_DECIMAL128) {
                        var k3 = utils.allocBuffer(16);
                        e3.copy(k3, 0, r2, r2 + 16), r2 += 16;
                        var B2 = new Decimal128(k3);
                        v7[w6] = B2.toObject ? B2.toObject() : B2;
                    } else if (g5 === BSON.BSON_DATA_BINARY) {
                        var C = e3[r2++] | e3[r2++] << 8 | e3[r2++] << 16 | e3[r2++] << 24, R3 = C, D = e3[r2++];
                        if (C < 0) throw new Error("Negative binary type element size found");
                        if (C > e3.length) throw new Error("Binary type size larger than document size");
                        if (null != e3.slice) {
                            if (D === Binary.SUBTYPE_BYTE_ARRAY) {
                                if ((C = e3[r2++] | e3[r2++] << 8 | e3[r2++] << 16 | e3[r2++] << 24) < 0) throw new Error("Negative binary type element size found for subtype 0x02");
                                if (C > R3 - 4) throw new Error("Binary type with subtype 0x02 contains to long binary size");
                                if (C < R3 - 4) throw new Error("Binary type with subtype 0x02 contains to short binary size");
                            }
                            v7[w6] = p15 && y16 ? e3.slice(r2, r2 + C) : new Binary(e3.slice(r2, r2 + C), D);
                        } else {
                            var M4 = "undefined" != typeof Uint8Array ? new Uint8Array(new ArrayBuffer(C)) : new Array(C);
                            if (D === Binary.SUBTYPE_BYTE_ARRAY) {
                                if ((C = e3[r2++] | e3[r2++] << 8 | e3[r2++] << 16 | e3[r2++] << 24) < 0) throw new Error("Negative binary type element size found for subtype 0x02");
                                if (C > R3 - 4) throw new Error("Binary type with subtype 0x02 contains to long binary size");
                                if (C < R3 - 4) throw new Error("Binary type with subtype 0x02 contains to short binary size");
                            }
                            for(b6 = 0; b6 < C; b6++)M4[b6] = e3[r2 + b6];
                            v7[w6] = p15 && y16 ? M4 : new Binary(M4, D);
                        }
                        r2 += C;
                    } else if (g5 === BSON.BSON_DATA_REGEXP && !1 === f23) {
                        for(b6 = r2; 0 !== e3[b6] && b6 < e3.length;)b6++;
                        if (b6 >= e3.length) throw new Error("Bad BSON Document: illegal CString");
                        var I = e3.toString("utf8", r2, b6);
                        for(b6 = r2 = b6 + 1; 0 !== e3[b6] && b6 < e3.length;)b6++;
                        if (b6 >= e3.length) throw new Error("Bad BSON Document: illegal CString");
                        var F4 = e3.toString("utf8", r2, b6);
                        r2 = b6 + 1;
                        var L4 = new Array(F4.length);
                        for(b6 = 0; b6 < F4.length; b6++)switch(F4[b6]){
                            case "m":
                                L4[b6] = "m";
                                break;
                            case "s":
                                L4[b6] = "g";
                                break;
                            case "i":
                                L4[b6] = "i";
                        }
                        v7[w6] = new RegExp(I, L4.join(""));
                    } else if (g5 === BSON.BSON_DATA_REGEXP && !0 === f23) {
                        for(b6 = r2; 0 !== e3[b6] && b6 < e3.length;)b6++;
                        if (b6 >= e3.length) throw new Error("Bad BSON Document: illegal CString");
                        for(I = e3.toString("utf8", r2, b6), b6 = r2 = b6 + 1; 0 !== e3[b6] && b6 < e3.length;)b6++;
                        if (b6 >= e3.length) throw new Error("Bad BSON Document: illegal CString");
                        F4 = e3.toString("utf8", r2, b6), r2 = b6 + 1, v7[w6] = new BSONRegExp(I, F4);
                    } else if (g5 === BSON.BSON_DATA_SYMBOL) {
                        if ((O4 = e3[r2++] | e3[r2++] << 8 | e3[r2++] << 16 | e3[r2++] << 24) <= 0 || O4 > e3.length - r2 || 0 !== e3[r2 + O4 - 1]) throw new Error("bad string length in bson");
                        v7[w6] = new _Symbol(e3.toString("utf8", r2, r2 + O4 - 1)), r2 += O4;
                    } else if (g5 === BSON.BSON_DATA_TIMESTAMP) A3 = e3[r2++] | e3[r2++] << 8 | e3[r2++] << 16 | e3[r2++] << 24, $2 = e3[r2++] | e3[r2++] << 8 | e3[r2++] << 16 | e3[r2++] << 24, v7[w6] = new Timestamp(A3, $2);
                    else if (g5 === BSON.BSON_DATA_MIN_KEY) v7[w6] = new MinKey;
                    else if (g5 === BSON.BSON_DATA_MAX_KEY) v7[w6] = new MaxKey;
                    else if (g5 === BSON.BSON_DATA_CODE) {
                        if ((O4 = e3[r2++] | e3[r2++] << 8 | e3[r2++] << 16 | e3[r2++] << 24) <= 0 || O4 > e3.length - r2 || 0 !== e3[r2 + O4 - 1]) throw new Error("bad string length in bson");
                        var U3 = e3.toString("utf8", r2, r2 + O4 - 1);
                        if (i46) {
                            if (s30) {
                                var V3 = a39 ? u41(U3) : U3;
                                v7[w6] = isolateEvalWithHash(functionCache, V3, U3, v7);
                            } else v7[w6] = isolateEval(U3);
                        } else v7[w6] = new Code(U3);
                        r2 += O4;
                    } else if (g5 === BSON.BSON_DATA_CODE_W_SCOPE) {
                        var q3 = e3[r2++] | e3[r2++] << 8 | e3[r2++] << 16 | e3[r2++] << 24;
                        if (q3 < 13) throw new Error("code_w_scope total size shorter minimum expected length");
                        if ((O4 = e3[r2++] | e3[r2++] << 8 | e3[r2++] << 16 | e3[r2++] << 24) <= 0 || O4 > e3.length - r2 || 0 !== e3[r2 + O4 - 1]) throw new Error("bad string length in bson");
                        U3 = e3.toString("utf8", r2, r2 + O4 - 1), E2 = r2 += O4, j = e3[r2] | e3[r2 + 1] << 8 | e3[r2 + 2] << 16 | e3[r2 + 3] << 24;
                        var W3 = t2(e3, E2, n51, !1);
                        if (r2 += j, q3 < 8 + j + O4) throw new Error("code_w_scope total size is to short, truncating scope");
                        if (q3 > 8 + j + O4) throw new Error("code_w_scope total size is to long, clips outer document");
                        i46 ? (s30 ? (V3 = a39 ? u41(U3) : U3, v7[w6] = isolateEvalWithHash(functionCache, V3, U3, v7)) : v7[w6] = isolateEval(U3), v7[w6].scope = W3) : v7[w6] = new Code(U3, W3);
                    } else {
                        if (g5 !== BSON.BSON_DATA_DBPOINTER) throw new Error("Detected unknown BSON type " + g5.toString(16) + ' for fieldname "' + w6 + '", are you using the latest BSON parser');
                        if ((O4 = e3[r2++] | e3[r2++] << 8 | e3[r2++] << 16 | e3[r2++] << 24) <= 0 || O4 > e3.length - r2 || 0 !== e3[r2 + O4 - 1]) throw new Error("bad string length in bson");
                        var H3 = e3.toString("utf8", r2, r2 + O4 - 1);
                        r2 += O4;
                        var Y = utils.allocBuffer(12);
                        e3.copy(Y, 0, r2, r2 + 12), S3 = new ObjectID(Y), r2 += 12;
                        var K3 = H3.split("."), z3 = K3.shift(), Q = K3.join(".");
                        v7[w6] = new DBRef(Q, S3, z3);
                    }
                }
                if (_12 !== r2 - d12) {
                    if (o54) throw new Error("corrupt array bson");
                    throw new Error("corrupt object bson");
                }
                return null != v7.$id && (v7 = new DBRef(v7.$ref, v7.$id, v7.$db)), v7;
            }, isolateEvalWithHash = function isolateEvalWithHash1(functionCache, hash, functionString, object) {
                var value = null;
                return null == functionCache[hash] && (eval("value = " + functionString), functionCache[hash] = value), functionCache[hash].bind(object);
            }, isolateEval = function isolateEval1(functionString) {
                var value = null;
                return eval("value = " + functionString), value;
            }, BSON = {
            }, functionCache = BSON.functionCache = {
            };
            BSON.BSON_DATA_NUMBER = 1, BSON.BSON_DATA_STRING = 2, BSON.BSON_DATA_OBJECT = 3, BSON.BSON_DATA_ARRAY = 4, BSON.BSON_DATA_BINARY = 5, BSON.BSON_DATA_UNDEFINED = 6, BSON.BSON_DATA_OID = 7, BSON.BSON_DATA_BOOLEAN = 8, BSON.BSON_DATA_DATE = 9, BSON.BSON_DATA_NULL = 10, BSON.BSON_DATA_REGEXP = 11, BSON.BSON_DATA_DBPOINTER = 12, BSON.BSON_DATA_CODE = 13, BSON.BSON_DATA_SYMBOL = 14, BSON.BSON_DATA_CODE_W_SCOPE = 15, BSON.BSON_DATA_INT = 16, BSON.BSON_DATA_TIMESTAMP = 17, BSON.BSON_DATA_LONG = 18, BSON.BSON_DATA_DECIMAL128 = 19, BSON.BSON_DATA_MIN_KEY = 255, BSON.BSON_DATA_MAX_KEY = 127, BSON.BSON_BINARY_SUBTYPE_DEFAULT = 0, BSON.BSON_BINARY_SUBTYPE_FUNCTION = 1, BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2, BSON.BSON_BINARY_SUBTYPE_UUID = 3, BSON.BSON_BINARY_SUBTYPE_MD5 = 4, BSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128, BSON.BSON_INT32_MAX = 2147483647, BSON.BSON_INT32_MIN = -2147483648, BSON.BSON_INT64_MAX = Math.pow(2, 63) - 1, BSON.BSON_INT64_MIN = -Math.pow(2, 63), BSON.JS_INT_MAX = 9007199254740992, BSON.JS_INT_MIN = -9007199254740992;
            var JS_INT_MAX_LONG = Long.fromNumber(9007199254740992), JS_INT_MIN_LONG = Long.fromNumber(-9007199254740992);
            module.exports = deserialize;
        },
        function(t2, e3, r2) {
            "use strict";
            (function(e25) {
                function n51(t5) {
                    return (n51 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t7) {
                        return typeof t7;
                    } : function(t7) {
                        return t7 && "function" == typeof Symbol && t7.constructor === Symbol && t7 !== Symbol.prototype ? "symbol" : typeof t7;
                    })(t5);
                }
                var o54 = r2(107).writeIEEE754, i46 = r2(25).Long, s30 = r2(60), a39 = r2(30).Binary, u41 = r2(16).normalizedFunctionString, c23 = /\x00/, l23 = [
                    "$db",
                    "$ref",
                    "$id",
                    "$clusterTime"
                ], f23 = function(t5) {
                    return "object" === n51(t5) && "[object Date]" === Object.prototype.toString.call(t5);
                }, p15 = function(t5) {
                    return "[object RegExp]" === Object.prototype.toString.call(t5);
                }, h9 = function(t5, e29, r40, n63, o56) {
                    t5[n63++] = C.BSON_DATA_STRING;
                    var i47 = o56 ? t5.write(e29, n63, "ascii") : t5.write(e29, n63, "utf8");
                    t5[(n63 = n63 + i47 + 1) - 1] = 0;
                    var s31 = t5.write(r40, n63 + 4, "utf8");
                    return t5[n63 + 3] = s31 + 1 >> 24 & 255, t5[n63 + 2] = s31 + 1 >> 16 & 255, t5[n63 + 1] = s31 + 1 >> 8 & 255, t5[n63] = s31 + 1 & 255, n63 = n63 + 4 + s31, t5[n63++] = 0, n63;
                }, y16 = function(t5, e29, r40, n63, s31) {
                    if (Math.floor(r40) === r40 && r40 >= C.JS_INT_MIN && r40 <= C.JS_INT_MAX) {
                        if (r40 >= C.BSON_INT32_MIN && r40 <= C.BSON_INT32_MAX) {
                            t5[n63++] = C.BSON_DATA_INT;
                            var a40 = s31 ? t5.write(e29, n63, "ascii") : t5.write(e29, n63, "utf8");
                            n63 += a40, t5[n63++] = 0, t5[n63++] = 255 & r40, t5[n63++] = r40 >> 8 & 255, t5[n63++] = r40 >> 16 & 255, t5[n63++] = r40 >> 24 & 255;
                        } else if (r40 >= C.JS_INT_MIN && r40 <= C.JS_INT_MAX) t5[n63++] = C.BSON_DATA_NUMBER, n63 += a40 = s31 ? t5.write(e29, n63, "ascii") : t5.write(e29, n63, "utf8"), t5[n63++] = 0, o54(t5, r40, n63, "little", 52, 8), n63 += 8;
                        else {
                            t5[n63++] = C.BSON_DATA_LONG, n63 += a40 = s31 ? t5.write(e29, n63, "ascii") : t5.write(e29, n63, "utf8"), t5[n63++] = 0;
                            var u42 = i46.fromNumber(r40), c30 = u42.getLowBits(), l26 = u42.getHighBits();
                            t5[n63++] = 255 & c30, t5[n63++] = c30 >> 8 & 255, t5[n63++] = c30 >> 16 & 255, t5[n63++] = c30 >> 24 & 255, t5[n63++] = 255 & l26, t5[n63++] = l26 >> 8 & 255, t5[n63++] = l26 >> 16 & 255, t5[n63++] = l26 >> 24 & 255;
                        }
                    } else t5[n63++] = C.BSON_DATA_NUMBER, n63 += a40 = s31 ? t5.write(e29, n63, "ascii") : t5.write(e29, n63, "utf8"), t5[n63++] = 0, o54(t5, r40, n63, "little", 52, 8), n63 += 8;
                    return n63;
                }, d12 = function(t5, e29, r40, n63, o56) {
                    return t5[n63++] = C.BSON_DATA_NULL, n63 += o56 ? t5.write(e29, n63, "ascii") : t5.write(e29, n63, "utf8"), t5[n63++] = 0, n63;
                }, _12 = function(t5, e29, r40, n63, o56) {
                    return t5[n63++] = C.BSON_DATA_BOOLEAN, n63 += o56 ? t5.write(e29, n63, "ascii") : t5.write(e29, n63, "utf8"), t5[n63++] = 0, t5[n63++] = r40 ? 1 : 0, n63;
                }, v7 = function(t5, e29, r40, n63, o56) {
                    t5[n63++] = C.BSON_DATA_DATE, n63 += o56 ? t5.write(e29, n63, "ascii") : t5.write(e29, n63, "utf8"), t5[n63++] = 0;
                    var s31 = i46.fromNumber(r40.getTime()), a41 = s31.getLowBits(), u43 = s31.getHighBits();
                    return t5[n63++] = 255 & a41, t5[n63++] = a41 >> 8 & 255, t5[n63++] = a41 >> 16 & 255, t5[n63++] = a41 >> 24 & 255, t5[n63++] = 255 & u43, t5[n63++] = u43 >> 8 & 255, t5[n63++] = u43 >> 16 & 255, t5[n63++] = u43 >> 24 & 255, n63;
                }, m2 = function(t5, e29, r40, n63, o56) {
                    if (t5[n63++] = C.BSON_DATA_REGEXP, n63 += o56 ? t5.write(e29, n63, "ascii") : t5.write(e29, n63, "utf8"), t5[n63++] = 0, r40.source && null != r40.source.match(c23)) throw Error("value " + r40.source + " must not contain null bytes");
                    return n63 += t5.write(r40.source, n63, "utf8"), t5[n63++] = 0, r40.global && (t5[n63++] = 115), r40.ignoreCase && (t5[n63++] = 105), r40.multiline && (t5[n63++] = 109), t5[n63++] = 0, n63;
                }, g6 = function(t5, e29, r40, n63, o56) {
                    if (t5[n63++] = C.BSON_DATA_REGEXP, n63 += o56 ? t5.write(e29, n63, "ascii") : t5.write(e29, n63, "utf8"), t5[n63++] = 0, null != r40.pattern.match(c23)) throw Error("pattern " + r40.pattern + " must not contain null bytes");
                    return n63 += t5.write(r40.pattern, n63, "utf8"), t5[n63++] = 0, n63 += t5.write(r40.options.split("").sort().join(""), n63, "utf8"), t5[n63++] = 0, n63;
                }, b7 = function(t5, e29, r40, n63, o56) {
                    return null === r40 ? t5[n63++] = C.BSON_DATA_NULL : "MinKey" === r40._bsontype ? t5[n63++] = C.BSON_DATA_MIN_KEY : t5[n63++] = C.BSON_DATA_MAX_KEY, n63 += o56 ? t5.write(e29, n63, "ascii") : t5.write(e29, n63, "utf8"), t5[n63++] = 0, n63;
                }, w7 = function(t5, e29, r40, n63, o56) {
                    if (t5[n63++] = C.BSON_DATA_OID, n63 += o56 ? t5.write(e29, n63, "ascii") : t5.write(e29, n63, "utf8"), t5[n63++] = 0, "string" == typeof r40.id) t5.write(r40.id, n63, "binary");
                    else {
                        if (!r40.id || !r40.id.copy) throw new Error("object [" + JSON.stringify(r40) + "] is not a valid ObjectId");
                        r40.id.copy(t5, n63, 0, 12);
                    }
                    return n63 + 12;
                }, O6 = function(t5, e29, r40, n63, o56) {
                    t5[n63++] = C.BSON_DATA_BINARY, n63 += o56 ? t5.write(e29, n63, "ascii") : t5.write(e29, n63, "utf8"), t5[n63++] = 0;
                    var i47 = r40.length;
                    return t5[n63++] = 255 & i47, t5[n63++] = i47 >> 8 & 255, t5[n63++] = i47 >> 16 & 255, t5[n63++] = i47 >> 24 & 255, t5[n63++] = C.BSON_BINARY_SUBTYPE_DEFAULT, r40.copy(t5, n63, 0, i47), n63 += i47;
                }, S5 = function(t5, e29, r40, n63, o56, i47, s31, a41, u43, c31) {
                    for(var l27 = 0; l27 < c31.length; l27++)if (c31[l27] === r40) throw new Error("cyclic dependency detected");
                    c31.push(r40), t5[n63++] = Array.isArray(r40) ? C.BSON_DATA_ARRAY : C.BSON_DATA_OBJECT, n63 += u43 ? t5.write(e29, n63, "ascii") : t5.write(e29, n63, "utf8"), t5[n63++] = 0;
                    var f24 = B3(t5, r40, o56, n63, i47 + 1, s31, a41, c31);
                    return c31.pop(), f24;
                }, A5 = function(t5, e29, r40, n63, o56) {
                    return t5[n63++] = C.BSON_DATA_DECIMAL128, n63 += o56 ? t5.write(e29, n63, "ascii") : t5.write(e29, n63, "utf8"), t5[n63++] = 0, r40.bytes.copy(t5, n63, 0, 16), n63 + 16;
                }, $4 = function(t5, e29, r40, n63, o56) {
                    t5[n63++] = "Long" === r40._bsontype ? C.BSON_DATA_LONG : C.BSON_DATA_TIMESTAMP, n63 += o56 ? t5.write(e29, n63, "ascii") : t5.write(e29, n63, "utf8"), t5[n63++] = 0;
                    var i47 = r40.getLowBits(), s31 = r40.getHighBits();
                    return t5[n63++] = 255 & i47, t5[n63++] = i47 >> 8 & 255, t5[n63++] = i47 >> 16 & 255, t5[n63++] = i47 >> 24 & 255, t5[n63++] = 255 & s31, t5[n63++] = s31 >> 8 & 255, t5[n63++] = s31 >> 16 & 255, t5[n63++] = s31 >> 24 & 255, n63;
                }, E3 = function(t5, e29, r40, n63, o56) {
                    return t5[n63++] = C.BSON_DATA_INT, n63 += o56 ? t5.write(e29, n63, "ascii") : t5.write(e29, n63, "utf8"), t5[n63++] = 0, t5[n63++] = 255 & r40, t5[n63++] = r40 >> 8 & 255, t5[n63++] = r40 >> 16 & 255, t5[n63++] = r40 >> 24 & 255, n63;
                }, j = function(t5, e29, r40, n63, i47) {
                    return t5[n63++] = C.BSON_DATA_NUMBER, n63 += i47 ? t5.write(e29, n63, "ascii") : t5.write(e29, n63, "utf8"), t5[n63++] = 0, o54(t5, r40, n63, "little", 52, 8), n63 += 8;
                }, P4 = function(t5, e29, r40, n63, o56, i47, s31) {
                    t5[n63++] = C.BSON_DATA_CODE, n63 += s31 ? t5.write(e29, n63, "ascii") : t5.write(e29, n63, "utf8"), t5[n63++] = 0;
                    var a41 = u41(r40), c31 = t5.write(a41, n63 + 4, "utf8") + 1;
                    return t5[n63] = 255 & c31, t5[n63 + 1] = c31 >> 8 & 255, t5[n63 + 2] = c31 >> 16 & 255, t5[n63 + 3] = c31 >> 24 & 255, n63 = n63 + 4 + c31 - 1, t5[n63++] = 0, n63;
                }, x5 = function(t5, e29, r40, o56, i47, s31, a41, u43, c31) {
                    if (r40.scope && "object" === n51(r40.scope)) {
                        t5[o56++] = C.BSON_DATA_CODE_W_SCOPE;
                        var l27 = c31 ? t5.write(e29, o56, "ascii") : t5.write(e29, o56, "utf8");
                        o56 += l27, t5[o56++] = 0;
                        var f24 = o56, p16 = "string" == typeof r40.code ? r40.code : r40.code.toString();
                        o56 += 4;
                        var h10 = t5.write(p16, o56 + 4, "utf8") + 1;
                        t5[o56] = 255 & h10, t5[o56 + 1] = h10 >> 8 & 255, t5[o56 + 2] = h10 >> 16 & 255, t5[o56 + 3] = h10 >> 24 & 255, t5[o56 + 4 + h10 - 1] = 0, o56 = o56 + h10 + 4;
                        var y17 = B3(t5, r40.scope, i47, o56, s31 + 1, a41, u43);
                        o56 = y17 - 1;
                        var d13 = y17 - f24;
                        t5[f24++] = 255 & d13, t5[f24++] = d13 >> 8 & 255, t5[f24++] = d13 >> 16 & 255, t5[f24++] = d13 >> 24 & 255, t5[o56++] = 0;
                    } else {
                        t5[o56++] = C.BSON_DATA_CODE, o56 += l27 = c31 ? t5.write(e29, o56, "ascii") : t5.write(e29, o56, "utf8"), t5[o56++] = 0, p16 = r40.code.toString();
                        var _13 = t5.write(p16, o56 + 4, "utf8") + 1;
                        t5[o56] = 255 & _13, t5[o56 + 1] = _13 >> 8 & 255, t5[o56 + 2] = _13 >> 16 & 255, t5[o56 + 3] = _13 >> 24 & 255, o56 = o56 + 4 + _13 - 1, t5[o56++] = 0;
                    }
                    return o56;
                }, T5 = function(t5, e29, r40, n63, o56) {
                    t5[n63++] = C.BSON_DATA_BINARY, n63 += o56 ? t5.write(e29, n63, "ascii") : t5.write(e29, n63, "utf8"), t5[n63++] = 0;
                    var i47 = r40.value(!0), s31 = r40.position;
                    return r40.sub_type === a39.SUBTYPE_BYTE_ARRAY && (s31 += 4), t5[n63++] = 255 & s31, t5[n63++] = s31 >> 8 & 255, t5[n63++] = s31 >> 16 & 255, t5[n63++] = s31 >> 24 & 255, t5[n63++] = r40.sub_type, r40.sub_type === a39.SUBTYPE_BYTE_ARRAY && (s31 -= 4, t5[n63++] = 255 & s31, t5[n63++] = s31 >> 8 & 255, t5[n63++] = s31 >> 16 & 255, t5[n63++] = s31 >> 24 & 255), i47.copy(t5, n63, 0, r40.position), n63 += r40.position;
                }, N5 = function(t5, e29, r40, n63, o56) {
                    t5[n63++] = C.BSON_DATA_SYMBOL, n63 += o56 ? t5.write(e29, n63, "ascii") : t5.write(e29, n63, "utf8"), t5[n63++] = 0;
                    var i47 = t5.write(r40.value, n63 + 4, "utf8") + 1;
                    return t5[n63] = 255 & i47, t5[n63 + 1] = i47 >> 8 & 255, t5[n63 + 2] = i47 >> 16 & 255, t5[n63 + 3] = i47 >> 24 & 255, n63 = n63 + 4 + i47 - 1, t5[n63++] = 0, n63;
                }, k4 = function(t5, e29, r40, n63, o56, i47, s31) {
                    t5[n63++] = C.BSON_DATA_OBJECT, n63 += s31 ? t5.write(e29, n63, "ascii") : t5.write(e29, n63, "utf8"), t5[n63++] = 0;
                    var a41, u43 = n63, c31 = (a41 = null != r40.db ? B3(t5, {
                        $ref: r40.namespace,
                        $id: r40.oid,
                        $db: r40.db
                    }, !1, n63, o56 + 1, i47) : B3(t5, {
                        $ref: r40.namespace,
                        $id: r40.oid
                    }, !1, n63, o56 + 1, i47)) - u43;
                    return t5[u43++] = 255 & c31, t5[u43++] = c31 >> 8 & 255, t5[u43++] = c31 >> 16 & 255, t5[u43++] = c31 >> 24 & 255, a41;
                }, B3 = function(t5, r40, o56, i47, a41, u43, B4, C) {
                    i47 = i47 || 0, (C = C || []).push(r40);
                    var R4 = i47 + 4;
                    if (Array.isArray(r40)) for(var D = 0; D < r40.length; D++){
                        var M5 = "" + D, I = r40[D];
                        if (I && I.toBSON) {
                            if ("function" != typeof I.toBSON) throw new Error("toBSON is not a function");
                            I = I.toBSON();
                        }
                        var F5 = n51(I);
                        if ("string" === F5) R4 = h9(t5, M5, I, R4, !0);
                        else if ("number" === F5) R4 = y16(t5, M5, I, R4, !0);
                        else {
                            if ("bigint" === F5) throw new TypeError("Unsupported type BigInt, please use Decimal128");
                            if ("boolean" === F5) R4 = _12(t5, M5, I, R4, !0);
                            else if (I instanceof Date || f23(I)) R4 = v7(t5, M5, I, R4, !0);
                            else if ((void 0) === I) R4 = d12(t5, M5, 0, R4, !0);
                            else if (null === I) R4 = d12(t5, M5, 0, R4, !0);
                            else if ("ObjectID" === I._bsontype || "ObjectId" === I._bsontype) R4 = w7(t5, M5, I, R4, !0);
                            else if (e25.isBuffer(I)) R4 = O6(t5, M5, I, R4, !0);
                            else if (I instanceof RegExp || p15(I)) R4 = m2(t5, M5, I, R4, !0);
                            else if ("object" === F5 && null == I._bsontype) R4 = S5(t5, M5, I, R4, o56, a41, u43, B4, !0, C);
                            else if ("object" === F5 && "Decimal128" === I._bsontype) R4 = A5(t5, M5, I, R4, !0);
                            else if ("Long" === I._bsontype || "Timestamp" === I._bsontype) R4 = $4(t5, M5, I, R4, !0);
                            else if ("Double" === I._bsontype) R4 = j(t5, M5, I, R4, !0);
                            else if ("function" == typeof I && u43) R4 = P4(t5, M5, I, R4, 0, 0, u43);
                            else if ("Code" === I._bsontype) R4 = x5(t5, M5, I, R4, o56, a41, u43, B4, !0);
                            else if ("Binary" === I._bsontype) R4 = T5(t5, M5, I, R4, !0);
                            else if ("Symbol" === I._bsontype) R4 = N5(t5, M5, I, R4, !0);
                            else if ("DBRef" === I._bsontype) R4 = k4(t5, M5, I, R4, a41, u43, !0);
                            else if ("BSONRegExp" === I._bsontype) R4 = g6(t5, M5, I, R4, !0);
                            else if ("Int32" === I._bsontype) R4 = E3(t5, M5, I, R4, !0);
                            else if ("MinKey" === I._bsontype || "MaxKey" === I._bsontype) R4 = b7(t5, M5, I, R4, !0);
                            else if ((void 0) !== I._bsontype) throw new TypeError("Unrecognized or invalid _bsontype: " + I._bsontype);
                        }
                    }
                    else if (r40 instanceof s30) for(var L5 = r40.entries(), U4 = !1; !U4;){
                        var V4 = L5.next();
                        if (!(U4 = V4.done)) {
                            if (M5 = V4.value[0], F5 = n51(I = V4.value[1]), "string" == typeof M5 && -1 === l23.indexOf(M5)) {
                                if (null != M5.match(c23)) throw Error("key " + M5 + " must not contain null bytes");
                                if (o56) {
                                    if ("$" === M5[0]) throw Error("key " + M5 + " must not start with '$'");
                                    if (~M5.indexOf(".")) throw Error("key " + M5 + " must not contain '.'");
                                }
                            }
                            if ("string" === F5) R4 = h9(t5, M5, I, R4);
                            else if ("number" === F5) R4 = y16(t5, M5, I, R4);
                            else {
                                if ("bigint" === F5) throw new TypeError("Unsupported type BigInt, please use Decimal128");
                                if ("boolean" === F5) R4 = _12(t5, M5, I, R4);
                                else if (I instanceof Date || f23(I)) R4 = v7(t5, M5, I, R4);
                                else if (null === I || (void 0) === I && !1 === B4) R4 = d12(t5, M5, 0, R4);
                                else if ("ObjectID" === I._bsontype || "ObjectId" === I._bsontype) R4 = w7(t5, M5, I, R4);
                                else if (e25.isBuffer(I)) R4 = O6(t5, M5, I, R4);
                                else if (I instanceof RegExp || p15(I)) R4 = m2(t5, M5, I, R4);
                                else if ("object" === F5 && null == I._bsontype) R4 = S5(t5, M5, I, R4, o56, a41, u43, B4, !1, C);
                                else if ("object" === F5 && "Decimal128" === I._bsontype) R4 = A5(t5, M5, I, R4);
                                else if ("Long" === I._bsontype || "Timestamp" === I._bsontype) R4 = $4(t5, M5, I, R4);
                                else if ("Double" === I._bsontype) R4 = j(t5, M5, I, R4);
                                else if ("Code" === I._bsontype) R4 = x5(t5, M5, I, R4, o56, a41, u43, B4);
                                else if ("function" == typeof I && u43) R4 = P4(t5, M5, I, R4, 0, 0, u43);
                                else if ("Binary" === I._bsontype) R4 = T5(t5, M5, I, R4);
                                else if ("Symbol" === I._bsontype) R4 = N5(t5, M5, I, R4);
                                else if ("DBRef" === I._bsontype) R4 = k4(t5, M5, I, R4, a41, u43);
                                else if ("BSONRegExp" === I._bsontype) R4 = g6(t5, M5, I, R4);
                                else if ("Int32" === I._bsontype) R4 = E3(t5, M5, I, R4);
                                else if ("MinKey" === I._bsontype || "MaxKey" === I._bsontype) R4 = b7(t5, M5, I, R4);
                                else if ((void 0) !== I._bsontype) throw new TypeError("Unrecognized or invalid _bsontype: " + I._bsontype);
                            }
                        }
                    }
                    else {
                        if (r40.toBSON) {
                            if ("function" != typeof r40.toBSON) throw new Error("toBSON is not a function");
                            if (null != (r40 = r40.toBSON()) && "object" !== n51(r40)) throw new Error("toBSON function did not return an object");
                        }
                        for(M5 in r40){
                            if ((I = r40[M5]) && I.toBSON) {
                                if ("function" != typeof I.toBSON) throw new Error("toBSON is not a function");
                                I = I.toBSON();
                            }
                            if (F5 = n51(I), "string" == typeof M5 && -1 === l23.indexOf(M5)) {
                                if (null != M5.match(c23)) throw Error("key " + M5 + " must not contain null bytes");
                                if (o56) {
                                    if ("$" === M5[0]) throw Error("key " + M5 + " must not start with '$'");
                                    if (~M5.indexOf(".")) throw Error("key " + M5 + " must not contain '.'");
                                }
                            }
                            if ("string" === F5) R4 = h9(t5, M5, I, R4);
                            else if ("number" === F5) R4 = y16(t5, M5, I, R4);
                            else {
                                if ("bigint" === F5) throw new TypeError("Unsupported type BigInt, please use Decimal128");
                                if ("boolean" === F5) R4 = _12(t5, M5, I, R4);
                                else if (I instanceof Date || f23(I)) R4 = v7(t5, M5, I, R4);
                                else if ((void 0) === I) !1 === B4 && (R4 = d12(t5, M5, 0, R4));
                                else if (null === I) R4 = d12(t5, M5, 0, R4);
                                else if ("ObjectID" === I._bsontype || "ObjectId" === I._bsontype) R4 = w7(t5, M5, I, R4);
                                else if (e25.isBuffer(I)) R4 = O6(t5, M5, I, R4);
                                else if (I instanceof RegExp || p15(I)) R4 = m2(t5, M5, I, R4);
                                else if ("object" === F5 && null == I._bsontype) R4 = S5(t5, M5, I, R4, o56, a41, u43, B4, !1, C);
                                else if ("object" === F5 && "Decimal128" === I._bsontype) R4 = A5(t5, M5, I, R4);
                                else if ("Long" === I._bsontype || "Timestamp" === I._bsontype) R4 = $4(t5, M5, I, R4);
                                else if ("Double" === I._bsontype) R4 = j(t5, M5, I, R4);
                                else if ("Code" === I._bsontype) R4 = x5(t5, M5, I, R4, o56, a41, u43, B4);
                                else if ("function" == typeof I && u43) R4 = P4(t5, M5, I, R4, 0, 0, u43);
                                else if ("Binary" === I._bsontype) R4 = T5(t5, M5, I, R4);
                                else if ("Symbol" === I._bsontype) R4 = N5(t5, M5, I, R4);
                                else if ("DBRef" === I._bsontype) R4 = k4(t5, M5, I, R4, a41, u43);
                                else if ("BSONRegExp" === I._bsontype) R4 = g6(t5, M5, I, R4);
                                else if ("Int32" === I._bsontype) R4 = E3(t5, M5, I, R4);
                                else if ("MinKey" === I._bsontype || "MaxKey" === I._bsontype) R4 = b7(t5, M5, I, R4);
                                else if ((void 0) !== I._bsontype) throw new TypeError("Unrecognized or invalid _bsontype: " + I._bsontype);
                            }
                        }
                    }
                    C.pop(), t5[R4++] = 0;
                    var q4 = R4 - i47;
                    return t5[i47++] = 255 & q4, t5[i47++] = q4 >> 8 & 255, t5[i47++] = q4 >> 16 & 255, t5[i47++] = q4 >> 24 & 255, R4;
                }, C = {
                    BSON_DATA_NUMBER: 1,
                    BSON_DATA_STRING: 2,
                    BSON_DATA_OBJECT: 3,
                    BSON_DATA_ARRAY: 4,
                    BSON_DATA_BINARY: 5,
                    BSON_DATA_UNDEFINED: 6,
                    BSON_DATA_OID: 7,
                    BSON_DATA_BOOLEAN: 8,
                    BSON_DATA_DATE: 9,
                    BSON_DATA_NULL: 10,
                    BSON_DATA_REGEXP: 11,
                    BSON_DATA_CODE: 13,
                    BSON_DATA_SYMBOL: 14,
                    BSON_DATA_CODE_W_SCOPE: 15,
                    BSON_DATA_INT: 16,
                    BSON_DATA_TIMESTAMP: 17,
                    BSON_DATA_LONG: 18,
                    BSON_DATA_DECIMAL128: 19,
                    BSON_DATA_MIN_KEY: 255,
                    BSON_DATA_MAX_KEY: 127,
                    BSON_BINARY_SUBTYPE_DEFAULT: 0,
                    BSON_BINARY_SUBTYPE_FUNCTION: 1,
                    BSON_BINARY_SUBTYPE_BYTE_ARRAY: 2,
                    BSON_BINARY_SUBTYPE_UUID: 3,
                    BSON_BINARY_SUBTYPE_MD5: 4,
                    BSON_BINARY_SUBTYPE_USER_DEFINED: 128,
                    BSON_INT32_MAX: 2147483647,
                    BSON_INT32_MIN: -2147483648
                };
                C.BSON_INT64_MAX = Math.pow(2, 63) - 1, C.BSON_INT64_MIN = -Math.pow(2, 63), C.JS_INT_MAX = 9007199254740992, C.JS_INT_MIN = -9007199254740992, t2.exports = B3;
            }).call(this, r2(2).Buffer);
        },
        function(t2, e3) {
            e3.readIEEE754 = function(t5, e25, r2, n51, o54) {
                var i46, s30, a39 = "big" === r2, u41 = 8 * o54 - n51 - 1, c23 = (1 << u41) - 1, l23 = c23 >> 1, f23 = -7, p15 = a39 ? 0 : o54 - 1, h9 = a39 ? 1 : -1, y16 = t5[e25 + p15];
                for(p15 += h9, i46 = y16 & (1 << -f23) - 1, y16 >>= -f23, f23 += u41; f23 > 0; i46 = 256 * i46 + t5[e25 + p15], p15 += h9, f23 -= 8);
                for(s30 = i46 & (1 << -f23) - 1, i46 >>= -f23, f23 += n51; f23 > 0; s30 = 256 * s30 + t5[e25 + p15], p15 += h9, f23 -= 8);
                if (0 === i46) i46 = 1 - l23;
                else {
                    if (i46 === c23) return s30 ? NaN : 1 / 0 * (y16 ? -1 : 1);
                    s30 += Math.pow(2, n51), i46 -= l23;
                }
                return (y16 ? -1 : 1) * s30 * Math.pow(2, i46 - n51);
            }, e3.writeIEEE754 = function(t5, e25, r2, n51, o54, i46) {
                var s30, a39, u41, c23 = "big" === n51, l23 = 8 * i46 - o54 - 1, f23 = (1 << l23) - 1, p15 = f23 >> 1, h9 = 23 === o54 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, y16 = c23 ? i46 - 1 : 0, d12 = c23 ? -1 : 1, _12 = e25 < 0 || 0 === e25 && 1 / e25 < 0 ? 1 : 0;
                for(e25 = Math.abs(e25), isNaN(e25) || e25 === 1 / 0 ? (a39 = isNaN(e25) ? 1 : 0, s30 = f23) : (s30 = Math.floor(Math.log(e25) / Math.LN2), e25 * (u41 = Math.pow(2, -s30)) < 1 && (s30--, u41 *= 2), (e25 += s30 + p15 >= 1 ? h9 / u41 : h9 * Math.pow(2, 1 - p15)) * u41 >= 2 && (s30++, u41 /= 2), s30 + p15 >= f23 ? (a39 = 0, s30 = f23) : s30 + p15 >= 1 ? (a39 = (e25 * u41 - 1) * Math.pow(2, o54), s30 += p15) : (a39 = e25 * Math.pow(2, p15 - 1) * Math.pow(2, o54), s30 = 0)); o54 >= 8; t5[r2 + y16] = 255 & a39, y16 += d12, a39 /= 256, o54 -= 8);
                for(s30 = s30 << o54 | a39, l23 += o54; l23 > 0; t5[r2 + y16] = 255 & s30, y16 += d12, s30 /= 256, l23 -= 8);
                t5[r2 + y16 - d12] |= 128 * _12;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            (function(e25) {
                function n51(t5) {
                    return (n51 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t7) {
                        return typeof t7;
                    } : function(t7) {
                        return t7 && "function" == typeof Symbol && t7.constructor === Symbol && t7 !== Symbol.prototype ? "symbol" : typeof t7;
                    })(t5);
                }
                var o54 = r2(25).Long, i46 = r2(40).Double, s30 = r2(41).Timestamp, a39 = r2(42).ObjectID, u41 = r2(44).Symbol, c23 = r2(43).BSONRegExp, l23 = r2(45).Code, f23 = r2(46), p15 = r2(47).MinKey, h9 = r2(48).MaxKey, y16 = r2(49).DBRef, d12 = r2(30).Binary, _12 = r2(16).normalizedFunctionString, v7 = function(t5, e29, r40) {
                    var n63 = 5;
                    if (Array.isArray(t5)) for(var o56 = 0; o56 < t5.length; o56++)n63 += m2(o56.toString(), t5[o56], e29, !0, r40);
                    else for(var i47 in t5.toBSON && (t5 = t5.toBSON()), t5)n63 += m2(i47, t5[i47], e29, !1, r40);
                    return n63;
                };
                function m2(t5, r40, m5, b7, w7) {
                    switch(r40 && r40.toBSON && (r40 = r40.toBSON()), n51(r40)){
                        case "string":
                            return 1 + e25.byteLength(t5, "utf8") + 1 + 4 + e25.byteLength(r40, "utf8") + 1;
                        case "number":
                            return Math.floor(r40) === r40 && r40 >= g6.JS_INT_MIN && r40 <= g6.JS_INT_MAX && r40 >= g6.BSON_INT32_MIN && r40 <= g6.BSON_INT32_MAX ? (null != t5 ? e25.byteLength(t5, "utf8") + 1 : 0) + 5 : (null != t5 ? e25.byteLength(t5, "utf8") + 1 : 0) + 9;
                        case "undefined":
                            return b7 || !w7 ? (null != t5 ? e25.byteLength(t5, "utf8") + 1 : 0) + 1 : 0;
                        case "boolean":
                            return (null != t5 ? e25.byteLength(t5, "utf8") + 1 : 0) + 2;
                        case "object":
                            if (null == r40 || r40 instanceof p15 || r40 instanceof h9 || "MinKey" === r40._bsontype || "MaxKey" === r40._bsontype) return (null != t5 ? e25.byteLength(t5, "utf8") + 1 : 0) + 1;
                            if (r40 instanceof a39 || "ObjectID" === r40._bsontype || "ObjectId" === r40._bsontype) return (null != t5 ? e25.byteLength(t5, "utf8") + 1 : 0) + 13;
                            if (r40 instanceof Date || "object" === n51(S5 = r40) && "[object Date]" === Object.prototype.toString.call(S5)) return (null != t5 ? e25.byteLength(t5, "utf8") + 1 : 0) + 9;
                            if ((void 0) !== e25 && e25.isBuffer(r40)) return (null != t5 ? e25.byteLength(t5, "utf8") + 1 : 0) + 6 + r40.length;
                            if (r40 instanceof o54 || r40 instanceof i46 || r40 instanceof s30 || "Long" === r40._bsontype || "Double" === r40._bsontype || "Timestamp" === r40._bsontype) return (null != t5 ? e25.byteLength(t5, "utf8") + 1 : 0) + 9;
                            if (r40 instanceof f23 || "Decimal128" === r40._bsontype) return (null != t5 ? e25.byteLength(t5, "utf8") + 1 : 0) + 17;
                            if (r40 instanceof l23 || "Code" === r40._bsontype) return null != r40.scope && Object.keys(r40.scope).length > 0 ? (null != t5 ? e25.byteLength(t5, "utf8") + 1 : 0) + 1 + 4 + 4 + e25.byteLength(r40.code.toString(), "utf8") + 1 + v7(r40.scope, m5, w7) : (null != t5 ? e25.byteLength(t5, "utf8") + 1 : 0) + 1 + 4 + e25.byteLength(r40.code.toString(), "utf8") + 1;
                            if (r40 instanceof d12 || "Binary" === r40._bsontype) return r40.sub_type === d12.SUBTYPE_BYTE_ARRAY ? (null != t5 ? e25.byteLength(t5, "utf8") + 1 : 0) + (r40.position + 1 + 4 + 1 + 4) : (null != t5 ? e25.byteLength(t5, "utf8") + 1 : 0) + (r40.position + 1 + 4 + 1);
                            if (r40 instanceof u41 || "Symbol" === r40._bsontype) return (null != t5 ? e25.byteLength(t5, "utf8") + 1 : 0) + e25.byteLength(r40.value, "utf8") + 4 + 1 + 1;
                            if (r40 instanceof y16 || "DBRef" === r40._bsontype) {
                                var O6 = {
                                    $ref: r40.namespace,
                                    $id: r40.oid
                                };
                                return null != r40.db && (O6.$db = r40.db), (null != t5 ? e25.byteLength(t5, "utf8") + 1 : 0) + 1 + v7(O6, m5, w7);
                            }
                            return r40 instanceof RegExp || "[object RegExp]" === Object.prototype.toString.call(r40) ? (null != t5 ? e25.byteLength(t5, "utf8") + 1 : 0) + 1 + e25.byteLength(r40.source, "utf8") + 1 + (r40.global ? 1 : 0) + (r40.ignoreCase ? 1 : 0) + (r40.multiline ? 1 : 0) + 1 : r40 instanceof c23 || "BSONRegExp" === r40._bsontype ? (null != t5 ? e25.byteLength(t5, "utf8") + 1 : 0) + 1 + e25.byteLength(r40.pattern, "utf8") + 1 + e25.byteLength(r40.options, "utf8") + 1 : (null != t5 ? e25.byteLength(t5, "utf8") + 1 : 0) + v7(r40, m5, w7) + 1;
                        case "function":
                            if (r40 instanceof RegExp || "[object RegExp]" === Object.prototype.toString.call(r40) || "[object RegExp]" === String.call(r40)) return (null != t5 ? e25.byteLength(t5, "utf8") + 1 : 0) + 1 + e25.byteLength(r40.source, "utf8") + 1 + (r40.global ? 1 : 0) + (r40.ignoreCase ? 1 : 0) + (r40.multiline ? 1 : 0) + 1;
                            if (m5 && null != r40.scope && Object.keys(r40.scope).length > 0) return (null != t5 ? e25.byteLength(t5, "utf8") + 1 : 0) + 1 + 4 + 4 + e25.byteLength(_12(r40), "utf8") + 1 + v7(r40.scope, m5, w7);
                            if (m5) return (null != t5 ? e25.byteLength(t5, "utf8") + 1 : 0) + 1 + 4 + e25.byteLength(_12(r40), "utf8") + 1;
                    }
                    var S5;
                    return 0;
                }
                var g6 = {
                    BSON_INT32_MAX: 2147483647,
                    BSON_INT32_MIN: -2147483648,
                    JS_INT_MAX: 9007199254740992,
                    JS_INT_MIN: -9007199254740992
                };
                t2.exports = v7;
            }).call(this, r2(2).Buffer);
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * ignore
 */ t2.exports = r2(39).Decimal128;
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) ObjectId
 * @constructor NodeMongoDbObjectId
 * @see ObjectId
 */ var n51 = r2(39).ObjectID;
            /*!
 * Getter for convenience with populate, see gh-6115
 */ Object.defineProperty(n51.prototype, "_id", {
                enumerable: !1,
                configurable: !0,
                get: function() {
                    return this;
                }
            }), /*!
 * ignore
 */ t2.exports = n51;
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * ignore
 */ t2.exports = function() {
            };
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Dependencies
 */ var n51 = r2(113).ctor("require", "modify", "init", "default", "ignore");
            t2.exports = function() {
                this.strictMode = void 0, this.selected = void 0, this.shardval = void 0, this.saveError = void 0, this.validationError = void 0, this.adhocPaths = void 0, this.removing = void 0, this.inserting = void 0, this.saving = void 0, this.version = void 0, this.getters = {
                }, this._id = void 0, this.populate = void 0, this.populated = void 0, this.wasPopulated = !1, this.scope = void 0, this.activePaths = new n51, this.pathsToScopes = {
                }, this.cachedRequired = {
                }, this.session = null, this.$setCalled = new Set, this.ownerDocument = void 0, this.fullPath = void 0;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ var n51 = r2(1), o54 = t2.exports = function() {
            };
            /*!
 * StateMachine represents a minimal `interface` for the
 * constructors it builds via StateMachine.ctor(...).
 *
 * @api private
 */ /*!
 * StateMachine.ctor('state1', 'state2', ...)
 * A factory method for subclassing StateMachine.
 * The arguments are a list of states. For each state,
 * the constructor's prototype gets state transition
 * methods named after each state. These transition methods
 * place their path argument into the given state.
 *
 * @param {String} state
 * @param {String} [state]
 * @return {Function} subclass constructor
 * @private
 */ o54.ctor = function() {
                var t5 = n51.args(arguments), e25 = function() {
                    o54.apply(this, arguments), this.paths = {
                    }, this.states = {
                    }, this.stateNames = t5;
                    for(var e29, r40 = t5.length; r40--;)e29 = t5[r40], this.states[e29] = {
                    };
                };
                return e25.prototype = new o54, t5.forEach(function(t7) {
                    e25.prototype[t7] = function(e29) {
                        this._changeState(e29, t7);
                    };
                }), e25;
            }, /*!
 * This function is wrapped by the state change functions:
 *
 * - `require(path)`
 * - `modify(path)`
 * - `init(path)`
 *
 * @api private
 */ o54.prototype._changeState = function(t5, e25) {
                var r40 = this.states[this.paths[t5]];
                r40 && delete r40[t5], this.paths[t5] = e25, this.states[e25][t5] = !0;
            }, /*!
 * ignore
 */ o54.prototype.clear = function(t5) {
                for(var e25, r40 = Object.keys(this.states[t5]), n63 = r40.length; n63--;)e25 = r40[n63], delete this.states[t5][e25], delete this.paths[e25];
            }, /*!
 * Checks to see if at least one path is in the states passed in via `arguments`
 * e.g., this.some('required', 'inited')
 *
 * @param {String} state that we want to check for.
 * @private
 */ o54.prototype.some = function() {
                var t5 = this, e25 = arguments.length ? arguments : this.stateNames;
                return Array.prototype.some.call(e25, function(e29) {
                    return Object.keys(t5.states[e29]).length;
                });
            }, /*!
 * This function builds the functions that get assigned to `forEach` and `map`,
 * since both of those methods share a lot of the same logic.
 *
 * @param {String} iterMethod is either 'forEach' or 'map'
 * @return {Function}
 * @api private
 */ o54.prototype._iter = function(t5) {
                return function() {
                    var e25 = arguments.length, r40 = n51.args(arguments, 0, e25 - 1), o56 = arguments[e25 - 1];
                    r40.length || (r40 = this.stateNames);
                    var i46 = this, s30 = r40.reduce(function(t7, e29) {
                        return t7.concat(Object.keys(i46.states[e29]));
                    }, []);
                    return s30[t5](function(t7, e29, r45) {
                        return o56(t7, e29, r45);
                    });
                };
            }, /*!
 * Iterates over the paths that belong to one of the parameter states.
 *
 * The function profile can look like:
 * this.forEach(state1, fn);         // iterates over all paths in state1
 * this.forEach(state1, state2, fn); // iterates over all paths in state1 or state2
 * this.forEach(fn);                 // iterates over all paths in all states
 *
 * @param {String} [state]
 * @param {String} [state]
 * @param {Function} callback
 * @private
 */ o54.prototype.forEach = function() {
                return this.forEach = this._iter("forEach"), this.forEach.apply(this, arguments);
            }, /*!
 * Maps over the paths that belong to one of the parameter states.
 *
 * The function profile can look like:
 * this.forEach(state1, fn);         // iterates over all paths in state1
 * this.forEach(state1, state2, fn); // iterates over all paths in state1 or state2
 * this.forEach(fn);                 // iterates over all paths in all states
 *
 * @param {String} [state]
 * @param {String} [state]
 * @param {Function} callback
 * @return {Array}
 * @private
 */ o54.prototype.map = function() {
                return this.map = this._iter("map"), this.map.apply(this, arguments);
            };
        },
        function(t2, e3) {
            function r2(t5) {
                return (r2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t7) {
                    return typeof t7;
                } : function(t7) {
                    return t7 && "function" == typeof Symbol && t7.constructor === Symbol && t7 !== Symbol.prototype ? "symbol" : typeof t7;
                })(t5);
            }
            var n51 = 1000, o54 = 60000, i46 = 60 * o54, s30 = 24 * i46;
            function a39(t5, e25, r40, n63) {
                var o56 = e25 >= 1.5 * r40;
                return Math.round(t5 / r40) + " " + n63 + (o56 ? "s" : "");
            }
            t2.exports = function(t5, e25) {
                e25 = e25 || {
                };
                var u41 = r2(t5);
                if ("string" === u41 && t5.length > 0) return (function(t7) {
                    if ((t7 = String(t7)).length > 100) return;
                    var e29 = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(t7);
                    if (!e29) return;
                    var r40 = parseFloat(e29[1]);
                    switch((e29[2] || "ms").toLowerCase()){
                        case "years":
                        case "year":
                        case "yrs":
                        case "yr":
                        case "y":
                            return 31557600000 * r40;
                        case "weeks":
                        case "week":
                        case "w":
                            return 604800000 * r40;
                        case "days":
                        case "day":
                        case "d":
                            return r40 * s30;
                        case "hours":
                        case "hour":
                        case "hrs":
                        case "hr":
                        case "h":
                            return r40 * i46;
                        case "minutes":
                        case "minute":
                        case "mins":
                        case "min":
                        case "m":
                            return r40 * o54;
                        case "seconds":
                        case "second":
                        case "secs":
                        case "sec":
                        case "s":
                            return r40 * n51;
                        case "milliseconds":
                        case "millisecond":
                        case "msecs":
                        case "msec":
                        case "ms":
                            return r40;
                        default:
                            return;
                    }
                })(t5);
                if ("number" === u41 && isFinite(t5)) return e25.long ? (function(t7) {
                    var e29 = Math.abs(t7);
                    if (e29 >= s30) return a39(t7, e29, s30, "day");
                    if (e29 >= i46) return a39(t7, e29, i46, "hour");
                    if (e29 >= o54) return a39(t7, e29, o54, "minute");
                    if (e29 >= n51) return a39(t7, e29, n51, "second");
                    return t7 + " ms";
                })(t5) : (function(t7) {
                    var e29 = Math.abs(t7);
                    if (e29 >= s30) return Math.round(t7 / s30) + "d";
                    if (e29 >= i46) return Math.round(t7 / i46) + "h";
                    if (e29 >= o54) return Math.round(t7 / o54) + "m";
                    if (e29 >= n51) return Math.round(t7 / n51) + "s";
                    return t7 + "ms";
                })(t5);
                throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(t5));
            };
        },
        function(t2, e3, r2) {
            function n51(t5) {
                return (n51 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t7) {
                    return typeof t7;
                } : function(t7) {
                    return t7 && "function" == typeof Symbol && t7.constructor === Symbol && t7 !== Symbol.prototype ? "symbol" : typeof t7;
                })(t5);
            }
            var o54 = r2(116), i46 = [
                "__proto__",
                "constructor",
                "prototype"
            ];
            /*!
 * Returns the value passed to it.
 */ function s30(t5) {
                return t5;
            }
            e3.get = function(t5, r40, i47, a39) {
                var u41;
                "function" == typeof i47 && (i47.length < 2 ? (a39 = i47, i47 = void 0) : (u41 = i47, i47 = void 0)), a39 || (a39 = s30);
                var c23 = "string" == typeof t5 ? o54(t5) : t5;
                if (!Array.isArray(c23)) throw new TypeError("Invalid `path`. Must be either string or array");
                for(var l23, f23 = r40, p15 = 0; p15 < c23.length; ++p15){
                    if (l23 = c23[p15], "string" != typeof c23[p15] && "number" != typeof c23[p15]) throw new TypeError("Each segment of path to `get()` must be a string or number, got " + n51(c23[p15]));
                    if (Array.isArray(f23) && !/^\d+$/.test(l23)) {
                        var h9 = c23.slice(p15);
                        return [].concat(f23).map(function(t7) {
                            return t7 ? e3.get(h9, t7, i47 || u41, a39) : a39(void 0);
                        });
                    }
                    if (u41) f23 = u41(f23, l23);
                    else {
                        var y16 = i47 && f23[i47] ? f23[i47] : f23;
                        f23 = y16 instanceof Map ? y16.get(l23) : y16[l23];
                    }
                    if (!f23) return a39(f23);
                }
                return a39(f23);
            }, e3.has = function(t5, e25) {
                var r40 = "string" == typeof t5 ? o54(t5) : t5;
                if (!Array.isArray(r40)) throw new TypeError("Invalid `path`. Must be either string or array");
                for(var i47 = r40.length, s31 = e25, a39 = 0; a39 < i47; ++a39){
                    if ("string" != typeof r40[a39] && "number" != typeof r40[a39]) throw new TypeError("Each segment of path to `has()` must be a string or number, got " + n51(r40[a39]));
                    if (null == s31 || "object" !== n51(s31) || !(r40[a39] in s31)) return !1;
                    s31 = s31[r40[a39]];
                }
                return !0;
            }, e3.unset = function(t5, e25) {
                var r40 = "string" == typeof t5 ? o54(t5) : t5;
                if (!Array.isArray(r40)) throw new TypeError("Invalid `path`. Must be either string or array");
                for(var s31 = r40.length, a39 = e25, u41 = 0; u41 < s31; ++u41){
                    if (null == a39 || "object" !== n51(a39) || !(r40[u41] in a39)) return !1;
                    if ("string" != typeof r40[u41] && "number" != typeof r40[u41]) throw new TypeError("Each segment of path to `unset()` must be a string or number, got " + n51(r40[u41]));
                    if (-1 !== i46.indexOf(r40[u41])) return !1;
                    if (u41 === s31 - 1) return delete a39[r40[u41]], !0;
                    a39 = a39 instanceof Map ? a39.get(r40[u41]) : a39[r40[u41]];
                }
                return !0;
            }, e3.set = function(t5, r40, a39, u41, c23, l23) {
                var f23;
                "function" == typeof u41 && (u41.length < 2 ? (c23 = u41, u41 = void 0) : (f23 = u41, u41 = void 0)), c23 || (c23 = s30);
                var p15 = "string" == typeof t5 ? o54(t5) : t5;
                if (!Array.isArray(p15)) throw new TypeError("Invalid `path`. Must be either string or array");
                if (null != a39) {
                    for(var h11 = 0; h11 < p15.length; ++h11){
                        if ("string" != typeof p15[h11] && "number" != typeof p15[h11]) throw new TypeError("Each segment of path to `set()` must be a string or number, got " + n51(p15[h11]));
                        if (-1 !== i46.indexOf(p15[h11])) return;
                    }
                    for(var y18, d12 = l23 || /\$/.test(t5) && !1 !== l23, _12 = a39, v7 = (h11 = 0, p15.length - 1); h11 < v7; ++h11)if ("$" != (y18 = p15[h11])) {
                        if (Array.isArray(_12) && !/^\d+$/.test(y18)) {
                            var m2 = p15.slice(h11);
                            if (!d12 && Array.isArray(r40)) for(var g6 = 0; g6 < _12.length && g6 < r40.length; ++g6)e3.set(m2, r40[g6], _12[g6], u41 || f23, c23, d12);
                            else for(g6 = 0; g6 < _12.length; ++g6)e3.set(m2, r40, _12[g6], u41 || f23, c23, d12);
                            return;
                        }
                        if (f23) _12 = f23(_12, y18);
                        else {
                            var b7 = u41 && _12[u41] ? _12[u41] : _12;
                            _12 = b7 instanceof Map ? b7.get(y18) : b7[y18];
                        }
                        if (!_12) return;
                    } else if (h11 == v7 - 1) break;
                    if (y18 = p15[v7], u41 && _12[u41] && (_12 = _12[u41]), Array.isArray(_12) && !/^\d+$/.test(y18)) {
                        if (!d12 && Array.isArray(r40)) !/*!
 * Recursively set nested arrays
 */ function t7(e25, r45, n63, o56, i47, s31) {
                            for(var a41, u43 = 0; u43 < e25.length && u43 < r45.length; ++u43)a41 = e25[u43], Array.isArray(a41) && Array.isArray(r45[u43]) ? t7(a41, r45[u43], n63, o56, i47, s31) : a41 && (o56 ? o56(a41, n63, s31(r45[u43])) : (a41[i47] && (a41 = a41[i47]), a41[n63] = s31(r45[u43])));
                        }(_12, r40, y18, f23, u41, c23);
                        else for(g6 = 0; g6 < _12.length; ++g6){
                            var w7 = _12[g6];
                            w7 && (f23 ? f23(w7, y18, c23(r40)) : (w7[u41] && (w7 = w7[u41]), w7[y18] = c23(r40)));
                        }
                    } else f23 ? f23(_12, y18, c23(r40)) : _12 instanceof Map ? _12.set(y18, c23(r40)) : _12[y18] = c23(r40);
                }
            };
        },
        function(t2, e3, r2) {
            "use strict";
            t2.exports = function(t5) {
                for(var e25 = [], r40 = "", n51 = "DEFAULT", o54 = 0; o54 < t5.length; ++o54)"IN_SQUARE_BRACKETS" !== n51 || /\d/.test(t5[o54]) || "]" === t5[o54] || (n51 = "DEFAULT", r40 = e25[e25.length - 1] + "[" + r40, e25.splice(e25.length - 1, 1)), "[" === t5[o54] ? ("IMMEDIATELY_AFTER_SQUARE_BRACKETS" !== n51 && (e25.push(r40), r40 = ""), n51 = "IN_SQUARE_BRACKETS") : "]" === t5[o54] ? "IN_SQUARE_BRACKETS" === n51 ? (n51 = "IMMEDIATELY_AFTER_SQUARE_BRACKETS", e25.push(r40), r40 = "") : (n51 = "DEFAULT", r40 += t5[o54]) : "." === t5[o54] ? ("IMMEDIATELY_AFTER_SQUARE_BRACKETS" !== n51 && (e25.push(r40), r40 = ""), n51 = "DEFAULT") : r40 += t5[o54];
                return "IMMEDIATELY_AFTER_SQUARE_BRACKETS" !== n51 && e25.push(r40), e25;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            function n51(t5) {
                return (n51 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t7) {
                    return typeof t7;
                } : function(t7) {
                    return t7 && "function" == typeof Symbol && t7.constructor === Symbol && t7 !== Symbol.prototype ? "symbol" : typeof t7;
                })(t5);
            }
            var o54 = r2(26);
            t2.exports = function t5(e25) {
                if ((function(t7, e29) {
                    if (!(t7 instanceof e29)) throw new TypeError("Cannot call a class as a function");
                })(this, t5), this._docs = {
                }, this._childDocs = [], null != e25 && (e25 = o54(e25), Object.assign(this, e25), "object" === n51(e25.subPopulate) && (this.populate = e25.subPopulate), null != e25.perDocumentLimit && null != e25.limit)) throw new Error("Can not use `limit` and `perDocumentLimit` at the same time. Path: `" + e25.path + "`.");
            };
        },
        function(t2, e3, r2) {
            "use strict";
            /*
object-assign
(c) Sindre Sorhus
@license MIT
*/ var n51 = Object.getOwnPropertySymbols, o54 = Object.prototype.hasOwnProperty, i46 = Object.prototype.propertyIsEnumerable;
            function s30(t5) {
                if (null == t5) throw new TypeError("Object.assign cannot be called with null or undefined");
                return Object(t5);
            }
            t2.exports = (function() {
                try {
                    if (!Object.assign) return !1;
                    var t5 = "abc";
                    if (t5[5] = "de", "5" === Object.getOwnPropertyNames(t5)[0]) return !1;
                    for(var e25 = {
                    }, r40 = 0; r40 < 10; r40++)e25["_" + String.fromCharCode(r40)] = r40;
                    if ("0123456789" !== Object.getOwnPropertyNames(e25).map(function(t7) {
                        return e25[t7];
                    }).join("")) return !1;
                    var n63 = {
                    };
                    return "abcdefghijklmnopqrst".split("").forEach(function(t7) {
                        n63[t7] = t7;
                    }), "abcdefghijklmnopqrst" === Object.keys(Object.assign({
                    }, n63)).join("");
                } catch (t7) {
                    return !1;
                }
            })() ? Object.assign : function(t5, e25) {
                for(var r40, a39, u41 = s30(t5), c23 = 1; c23 < arguments.length; c23++){
                    for(var l23 in r40 = Object(arguments[c23]))o54.call(r40, l23) && (u41[l23] = r40[l23]);
                    if (n51) {
                        a39 = n51(r40);
                        for(var f23 = 0; f23 < a39.length; f23++)i46.call(r40, a39[f23]) && (u41[a39[f23]] = r40[a39[f23]]);
                    }
                }
                return u41;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            function n51(t5) {
                return (n51 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t7) {
                    return typeof t7;
                } : function(t7) {
                    return t7 && "function" == typeof Symbol && t7.constructor === Symbol && t7 !== Symbol.prototype ? "symbol" : typeof t7;
                })(t5);
            }
            var o54 = r2(63), i46 = r2(23), s30 = r2(4), a39 = r2(69), u41 = r2(122)("mquery");
            function c23(t5, e25) {
                if (!(this instanceof c23)) return new c23(t5, e25);
                var r40 = this.constructor.prototype;
                this.op = r40.op || void 0, this.options = Object.assign({
                }, r40.options), this._conditions = r40._conditions ? a39.clone(r40._conditions) : {
                }, this._fields = r40._fields ? a39.clone(r40._fields) : void 0, this._update = r40._update ? a39.clone(r40._update) : void 0, this._path = r40._path || void 0, this._distinct = r40._distinct || void 0, this._collection = r40._collection || void 0, this._traceFunction = r40._traceFunction || void 0, e25 && this.setOptions(e25), t5 && (t5.find && t5.remove && t5.update ? this.collection(t5) : this.find(t5));
            }
            var l28 = "$geoWithin";
            Object.defineProperty(c23, "use$geoWithin", {
                get: function() {
                    return "$geoWithin" == l28;
                },
                set: function(t5) {
                    l28 = !0 === t5 ? "$geoWithin" : "$within";
                }
            }), c23.prototype.toConstructor = function() {
                function t5(e25, r40) {
                    if (!(this instanceof t5)) return new t5(e25, r40);
                    c23.call(this, e25, r40);
                }
                a39.inherits(t5, c23);
                var e25 = t5.prototype;
                return e25.options = {
                }, e25.setOptions(this.options), e25.op = this.op, e25._conditions = a39.clone(this._conditions), e25._fields = a39.clone(this._fields), e25._update = a39.clone(this._update), e25._path = this._path, e25._distinct = this._distinct, e25._collection = this._collection, e25._traceFunction = this._traceFunction, t5;
            }, c23.prototype.setOptions = function(t5) {
                if (!t5 || !a39.isObject(t5)) return this;
                for(var e25, r40 = a39.keys(t5), n63 = 0; n63 < r40.length; ++n63)if ("function" == typeof this[e25 = r40[n63]]) {
                    var o56 = a39.isArray(t5[e25]) ? t5[e25] : [
                        t5[e25]
                    ];
                    this[e25].apply(this, o56);
                } else this.options[e25] = t5[e25];
                return this;
            }, c23.prototype.collection = function(t5) {
                return this._collection = new c23.Collection(t5), this;
            }, c23.prototype.collation = function(t5) {
                return this.options.collation = t5, this;
            }, c23.prototype.$where = function(t5) {
                return this._conditions.$where = t5, this;
            }, c23.prototype.where = function() {
                if (!arguments.length) return this;
                this.op || (this.op = "find");
                var t5 = n51(arguments[0]);
                if ("string" == t5) return this._path = arguments[0], 2 === arguments.length && (this._conditions[this._path] = arguments[1]), this;
                if ("object" == t5 && !Array.isArray(arguments[0])) return this.merge(arguments[0]);
                throw new TypeError("path must be a string or object");
            }, c23.prototype.equals = function(t5) {
                this._ensurePath("equals");
                var e25 = this._path;
                return this._conditions[e25] = t5, this;
            }, c23.prototype.eq = function(t5) {
                this._ensurePath("eq");
                var e25 = this._path;
                return this._conditions[e25] = t5, this;
            }, c23.prototype.or = function(t5) {
                var e25 = this._conditions.$or || (this._conditions.$or = []);
                return a39.isArray(t5) || (t5 = [
                    t5
                ]), e25.push.apply(e25, t5), this;
            }, c23.prototype.nor = function(t5) {
                var e25 = this._conditions.$nor || (this._conditions.$nor = []);
                return a39.isArray(t5) || (t5 = [
                    t5
                ]), e25.push.apply(e25, t5), this;
            }, c23.prototype.and = function(t5) {
                var e25 = this._conditions.$and || (this._conditions.$and = []);
                return Array.isArray(t5) || (t5 = [
                    t5
                ]), e25.push.apply(e25, t5), this;
            }, /*!
 * gt, gte, lt, lte, ne, in, nin, all, regex, size, maxDistance
 *
 *     Thing.where('type').nin(array)
 */ "gt gte lt lte ne in nin all regex size maxDistance minDistance".split(" ").forEach(function(t5) {
                c23.prototype[t5] = function() {
                    var e25, r40;
                    1 === arguments.length ? (this._ensurePath(t5), r40 = arguments[0], e25 = this._path) : (r40 = arguments[1], e25 = arguments[0]);
                    var o57 = null === this._conditions[e25] || "object" === n51(this._conditions[e25]) ? this._conditions[e25] : this._conditions[e25] = {
                    };
                    return o57["$" + t5] = r40, this;
                };
            }), c23.prototype.mod = function() {
                var t5, e25;
                1 === arguments.length ? (this._ensurePath("mod"), t5 = arguments[0], e25 = this._path) : 2 !== arguments.length || a39.isArray(arguments[1]) ? 3 === arguments.length ? (t5 = o54(arguments, 1), e25 = arguments[0]) : (t5 = arguments[1], e25 = arguments[0]) : (this._ensurePath("mod"), t5 = o54(arguments), e25 = this._path);
                var r40 = this._conditions[e25] || (this._conditions[e25] = {
                });
                return r40.$mod = t5, this;
            }, c23.prototype.exists = function() {
                var t5, e25;
                0 === arguments.length ? (this._ensurePath("exists"), t5 = this._path, e25 = !0) : 1 === arguments.length ? "boolean" == typeof arguments[0] ? (this._ensurePath("exists"), t5 = this._path, e25 = arguments[0]) : (t5 = arguments[0], e25 = !0) : 2 === arguments.length && (t5 = arguments[0], e25 = arguments[1]);
                var r40 = this._conditions[t5] || (this._conditions[t5] = {
                });
                return r40.$exists = e25, this;
            }, c23.prototype.elemMatch = function() {
                if (null == arguments[0]) throw new TypeError("Invalid argument");
                var t5, e25, r40;
                if ("function" == typeof arguments[0]) this._ensurePath("elemMatch"), e25 = this._path, t5 = arguments[0];
                else if (a39.isObject(arguments[0])) this._ensurePath("elemMatch"), e25 = this._path, r40 = arguments[0];
                else if ("function" == typeof arguments[1]) e25 = arguments[0], t5 = arguments[1];
                else {
                    if (!arguments[1] || !a39.isObject(arguments[1])) throw new TypeError("Invalid argument");
                    e25 = arguments[0], r40 = arguments[1];
                }
                t5 && (t5(r40 = new c23), r40 = r40._conditions);
                var n63 = this._conditions[e25] || (this._conditions[e25] = {
                });
                return n63.$elemMatch = r40, this;
            }, c23.prototype.within = function() {
                if (this._ensurePath("within"), this._geoComparison = l28, 0 === arguments.length) return this;
                if (2 === arguments.length) return this.box.apply(this, arguments);
                if (2 < arguments.length) return this.polygon.apply(this, arguments);
                var t5 = arguments[0];
                if (!t5) throw new TypeError("Invalid argument");
                if (t5.center) return this.circle(t5);
                if (t5.box) return this.box.apply(this, t5.box);
                if (t5.polygon) return this.polygon.apply(this, t5.polygon);
                if (t5.type && t5.coordinates) return this.geometry(t5);
                throw new TypeError("Invalid argument");
            }, c23.prototype.box = function() {
                var t5, e25;
                if (3 === arguments.length) t5 = arguments[0], e25 = [
                    arguments[1],
                    arguments[2]
                ];
                else {
                    if (2 !== arguments.length) throw new TypeError("Invalid argument");
                    this._ensurePath("box"), t5 = this._path, e25 = [
                        arguments[0],
                        arguments[1]
                    ];
                }
                var r40 = this._conditions[t5] || (this._conditions[t5] = {
                });
                return r40[this._geoComparison || l28] = {
                    $box: e25
                }, this;
            }, c23.prototype.polygon = function() {
                var t5, e25;
                "string" == typeof arguments[0] ? (e25 = arguments[0], t5 = o54(arguments, 1)) : (this._ensurePath("polygon"), e25 = this._path, t5 = o54(arguments));
                var r40 = this._conditions[e25] || (this._conditions[e25] = {
                });
                return r40[this._geoComparison || l28] = {
                    $polygon: t5
                }, this;
            }, c23.prototype.circle = function() {
                var t5, e25;
                if (1 === arguments.length) this._ensurePath("circle"), t5 = this._path, e25 = arguments[0];
                else {
                    if (2 !== arguments.length) throw new TypeError("Invalid argument");
                    t5 = arguments[0], e25 = arguments[1];
                }
                if (!("radius" in e25) || !e25.center) throw new Error("center and radius are required");
                var r40 = this._conditions[t5] || (this._conditions[t5] = {
                }), n63 = e25.spherical ? "$centerSphere" : "$center", o57 = this._geoComparison || l28;
                return r40[o57] = {
                }, r40[o57][n63] = [
                    e25.center,
                    e25.radius
                ], "unique" in e25 && (r40[o57].$uniqueDocs = !!e25.unique), this;
            }, c23.prototype.near = function() {
                var t5, e25;
                if (this._geoComparison = "$near", 0 === arguments.length) return this;
                if (1 === arguments.length) this._ensurePath("near"), t5 = this._path, e25 = arguments[0];
                else {
                    if (2 !== arguments.length) throw new TypeError("Invalid argument");
                    t5 = arguments[0], e25 = arguments[1];
                }
                if (!e25.center) throw new Error("center is required");
                var r40 = this._conditions[t5] || (this._conditions[t5] = {
                }), n63 = e25.spherical ? "$nearSphere" : "$near";
                if (Array.isArray(e25.center)) {
                    r40[n63] = e25.center;
                    var o57 = "maxDistance" in e25 ? e25.maxDistance : null;
                    null != o57 && (r40.$maxDistance = o57), null != e25.minDistance && (r40.$minDistance = e25.minDistance);
                } else {
                    if ("Point" != e25.center.type || !Array.isArray(e25.center.coordinates)) throw new Error(s30.format("Invalid GeoJSON specified for %s", n63));
                    r40[n63] = {
                        $geometry: e25.center
                    }, "maxDistance" in e25 && (r40[n63].$maxDistance = e25.maxDistance), "minDistance" in e25 && (r40[n63].$minDistance = e25.minDistance);
                }
                return this;
            }, c23.prototype.intersects = function() {
                if (this._ensurePath("intersects"), this._geoComparison = "$geoIntersects", 0 === arguments.length) return this;
                var t5 = arguments[0];
                if (null != t5 && t5.type && t5.coordinates) return this.geometry(t5);
                throw new TypeError("Invalid argument");
            }, c23.prototype.geometry = function() {
                if ("$within" != this._geoComparison && "$geoWithin" != this._geoComparison && "$near" != this._geoComparison && "$geoIntersects" != this._geoComparison) throw new Error("geometry() must come after `within()`, `intersects()`, or `near()");
                var t5, e25;
                if (1 !== arguments.length) throw new TypeError("Invalid argument");
                if (this._ensurePath("geometry"), e25 = this._path, !(t5 = arguments[0]).type || !Array.isArray(t5.coordinates)) throw new TypeError("Invalid argument");
                var r40 = this._conditions[e25] || (this._conditions[e25] = {
                });
                return r40[this._geoComparison] = {
                    $geometry: t5
                }, this;
            }, c23.prototype.select = function() {
                var t5 = arguments[0];
                if (!t5) return this;
                if (1 !== arguments.length) throw new Error("Invalid select: select only takes 1 argument");
                this._validate("select");
                var e25, r40, o58 = this._fields || (this._fields = {
                }), i47 = n51(t5);
                if (("string" == i47 || a39.isArgumentsObject(t5)) && "number" == typeof t5.length || Array.isArray(t5)) {
                    for("string" == i47 && (t5 = t5.split(/\s+/)), e25 = 0, r40 = t5.length; e25 < r40; ++e25){
                        var s31 = t5[e25];
                        if (s31) {
                            var u43 = "-" == s31[0] ? 0 : 1;
                            0 === u43 && (s31 = s31.substring(1)), o58[s31] = u43;
                        }
                    }
                    return this;
                }
                if (a39.isObject(t5)) {
                    var c31 = a39.keys(t5);
                    for(e25 = 0; e25 < c31.length; ++e25)o58[c31[e25]] = t5[c31[e25]];
                    return this;
                }
                throw new TypeError("Invalid select() argument. Must be string or object.");
            }, c23.prototype.slice = function() {
                if (0 === arguments.length) return this;
                var t5, e25;
                if (this._validate("slice"), 1 === arguments.length) {
                    var r40 = arguments[0];
                    if ("object" === n51(r40) && !Array.isArray(r40)) {
                        for(var i47 = Object.keys(r40), s33 = i47.length, a41 = 0; a41 < s33; ++a41)this.slice(i47[a41], r40[i47[a41]]);
                        return this;
                    }
                    this._ensurePath("slice"), t5 = this._path, e25 = arguments[0];
                } else 2 === arguments.length ? "number" == typeof arguments[0] ? (this._ensurePath("slice"), t5 = this._path, e25 = o54(arguments)) : (t5 = arguments[0], e25 = arguments[1]) : 3 === arguments.length && (t5 = arguments[0], e25 = o54(arguments, 1));
                var u44 = this._fields || (this._fields = {
                });
                return u44[t5] = {
                    $slice: e25
                }, this;
            }, c23.prototype.sort = function(t5) {
                if (!t5) return this;
                var e25, r45, o58;
                this._validate("sort");
                var i48 = n51(t5);
                if (Array.isArray(t5)) {
                    for(r45 = t5.length, e25 = 0; e25 < t5.length; ++e25){
                        if (!Array.isArray(t5[e25])) throw new Error("Invalid sort() argument, must be array of arrays");
                        h12(this.options, t5[e25][0], t5[e25][1]);
                    }
                    return this;
                }
                if (1 === arguments.length && "string" == i48) {
                    for(r45 = (t5 = t5.split(/\s+/)).length, e25 = 0; e25 < r45; ++e25)if (o58 = t5[e25]) {
                        var s34 = "-" == o58[0] ? -1 : 1;
                        -1 === s34 && (o58 = o58.substring(1)), p15(this.options, o58, s34);
                    }
                    return this;
                }
                if (a39.isObject(t5)) {
                    var u44 = a39.keys(t5);
                    for(e25 = 0; e25 < u44.length; ++e25)o58 = u44[e25], p15(this.options, o58, t5[o58]);
                    return this;
                }
                if ("undefined" != typeof Map && t5 instanceof Map) return y19(this.options, t5), this;
                throw new TypeError("Invalid sort() argument. Must be a string, object, or array.");
            };
            /*!
 * @ignore
 */ var f25 = {
                1: 1,
                "-1": -1,
                asc: 1,
                ascending: 1,
                desc: -1,
                descending: -1
            };
            function p15(t5, e25, r45) {
                if (Array.isArray(t5.sort)) throw new TypeError("Can't mix sort syntaxes. Use either array or object:\n- `.sort([['field', 1], ['test', -1]])`\n- `.sort({ field: 1, test: -1 })`");
                var n63;
                if (r45 && r45.$meta) (n63 = t5.sort || (t5.sort = {
                }))[e25] = {
                    $meta: r45.$meta
                };
                else {
                    n63 = t5.sort || (t5.sort = {
                    });
                    var o58 = String(r45 || 1).toLowerCase();
                    if (!(o58 = f25[o58])) throw new TypeError("Invalid sort value: { " + e25 + ": " + r45 + " }");
                    n63[e25] = o58;
                }
            }
            function h12(t5, e25, r45) {
                if (t5.sort = t5.sort || [], !Array.isArray(t5.sort)) throw new TypeError("Can't mix sort syntaxes. Use either array or object:\n- `.sort([['field', 1], ['test', -1]])`\n- `.sort({ field: 1, test: -1 })`");
                var n63 = String(r45 || 1).toLowerCase();
                if (!(n63 = f25[n63])) throw new TypeError("Invalid sort value: [ " + e25 + ", " + r45 + " ]");
                t5.sort.push([
                    e25,
                    n63
                ]);
            }
            function y19(t5, e25) {
                if (t5.sort = t5.sort || new Map, !(t5.sort instanceof Map)) throw new TypeError("Can't mix sort syntaxes. Use either array or object or map consistently");
                e25.forEach(function(e29, r45) {
                    var n63 = String(e29 || 1).toLowerCase();
                    if (!(n63 = f25[n63])) throw new TypeError("Invalid sort value: < " + r45 + ": " + e29 + " >");
                    t5.sort.set(r45, n63);
                });
            }
            /*!
 * limit, skip, maxScan, batchSize, comment
 *
 * Sets these associated options.
 *
 *     query.comment('feed query');
 */ /*!
 * Internal helper for update, updateMany, updateOne
 */ function d14(t5, e25, r45, n63, o59, i48, s35) {
                return t5.op = e25, c23.canMerge(r45) && t5.merge(r45), n63 && t5._mergeUpdate(n63), a39.isObject(o59) && t5.setOptions(o59), i48 || s35 ? !t5._update || !t5.options.overwrite && 0 === a39.keys(t5._update).length ? (s35 && a39.soon(s35.bind(null, null, 0)), t5) : (o59 = t5._optionsForExec(), s35 || (o59.safe = !1), r45 = t5._conditions, n63 = t5._updateForExec(), u41("update", t5._collection.collectionName, r45, n63, o59), s35 = t5._wrapCallback(e25, s35, {
                    conditions: r45,
                    doc: n63,
                    options: o59
                }), t5._collection[e25](r45, n63, o59, a39.tick(s35)), t5) : t5;
            }
            [
                "limit",
                "skip",
                "maxScan",
                "batchSize",
                "comment"
            ].forEach(function(t5) {
                c23.prototype[t5] = function(e25) {
                    return this._validate(t5), this.options[t5] = e25, this;
                };
            }), c23.prototype.maxTime = c23.prototype.maxTimeMS = function(t5) {
                return this._validate("maxTime"), this.options.maxTimeMS = t5, this;
            }, c23.prototype.snapshot = function() {
                return this._validate("snapshot"), this.options.snapshot = !arguments.length || !!arguments[0], this;
            }, c23.prototype.hint = function() {
                if (0 === arguments.length) return this;
                this._validate("hint");
                var t5 = arguments[0];
                if (a39.isObject(t5)) {
                    var e25 = this.options.hint || (this.options.hint = {
                    });
                    for(var r45 in t5)e25[r45] = t5[r45];
                    return this;
                }
                if ("string" == typeof t5) return this.options.hint = t5, this;
                throw new TypeError("Invalid hint. " + t5);
            }, c23.prototype.j = function(t5) {
                return this.options.j = t5, this;
            }, c23.prototype.slaveOk = function(t5) {
                return this.options.slaveOk = !arguments.length || !!t5, this;
            }, c23.prototype.read = c23.prototype.setReadPreference = function(t5) {
                return arguments.length > 1 && !c23.prototype.read.deprecationWarningIssued && (console.error("Deprecation warning: 'tags' argument is not supported anymore in Query.read() method. Please use mongodb.ReadPreference object instead."), c23.prototype.read.deprecationWarningIssued = !0), this.options.readPreference = a39.readPref(t5), this;
            }, c23.prototype.readConcern = c23.prototype.r = function(t5) {
                return this.options.readConcern = a39.readConcern(t5), this;
            }, c23.prototype.tailable = function() {
                return this._validate("tailable"), this.options.tailable = !arguments.length || !!arguments[0], this;
            }, c23.prototype.writeConcern = c23.prototype.w = function(t5) {
                return "object" === n51(t5) ? ((void 0) !== t5.j && (this.options.j = t5.j), (void 0) !== t5.w && (this.options.w = t5.w), (void 0) !== t5.wtimeout && (this.options.wtimeout = t5.wtimeout)) : this.options.w = "m" === t5 ? "majority" : t5, this;
            }, c23.prototype.wtimeout = c23.prototype.wTimeout = function(t5) {
                return this.options.wtimeout = t5, this;
            }, c23.prototype.merge = function(t5) {
                if (!t5) return this;
                if (!c23.canMerge(t5)) throw new TypeError("Invalid argument. Expected instanceof mquery or plain object");
                return t5 instanceof c23 ? (t5._conditions && a39.merge(this._conditions, t5._conditions), t5._fields && (this._fields || (this._fields = {
                }), a39.merge(this._fields, t5._fields)), t5.options && (this.options || (this.options = {
                }), a39.merge(this.options, t5.options)), t5._update && (this._update || (this._update = {
                }), a39.mergeClone(this._update, t5._update)), t5._distinct && (this._distinct = t5._distinct), this) : (a39.merge(this._conditions, t5), this);
            }, c23.prototype.find = function(t5, e29) {
                if (this.op = "find", "function" == typeof t5 ? (e29 = t5, t5 = void 0) : c23.canMerge(t5) && this.merge(t5), !e29) return this;
                var r46 = this._conditions, n63 = this._optionsForExec();
                return this.$useProjection ? n63.projection = this._fieldsForExec() : n63.fields = this._fieldsForExec(), u41("find", this._collection.collectionName, r46, n63), e29 = this._wrapCallback("find", e29, {
                    conditions: r46,
                    options: n63
                }), this._collection.find(r46, n63, a39.tick(e29)), this;
            }, c23.prototype.cursor = function(t5) {
                if (this.op) {
                    if ("find" !== this.op) throw new TypeError(".cursor only support .find method");
                } else this.find(t5);
                var e29 = this._conditions, r46 = this._optionsForExec();
                return this.$useProjection ? r46.projection = this._fieldsForExec() : r46.fields = this._fieldsForExec(), u41("findCursor", this._collection.collectionName, e29, r46), this._collection.findCursor(e29, r46);
            }, c23.prototype.findOne = function(t5, e29) {
                if (this.op = "findOne", "function" == typeof t5 ? (e29 = t5, t5 = void 0) : c23.canMerge(t5) && this.merge(t5), !e29) return this;
                var r46 = this._conditions, n63 = this._optionsForExec();
                return this.$useProjection ? n63.projection = this._fieldsForExec() : n63.fields = this._fieldsForExec(), u41("findOne", this._collection.collectionName, r46, n63), e29 = this._wrapCallback("findOne", e29, {
                    conditions: r46,
                    options: n63
                }), this._collection.findOne(r46, n63, a39.tick(e29)), this;
            }, c23.prototype.count = function(t5, e29) {
                if (this.op = "count", this._validate(), "function" == typeof t5 ? (e29 = t5, t5 = void 0) : c23.canMerge(t5) && this.merge(t5), !e29) return this;
                var r46 = this._conditions, n63 = this._optionsForExec();
                return u41("count", this._collection.collectionName, r46, n63), e29 = this._wrapCallback("count", e29, {
                    conditions: r46,
                    options: n63
                }), this._collection.count(r46, n63, a39.tick(e29)), this;
            }, c23.prototype.distinct = function(t5, e29, r46) {
                if (this.op = "distinct", this._validate(), !r46) {
                    switch(n51(e29)){
                        case "function":
                            r46 = e29, "string" == typeof t5 && (e29 = t5, t5 = void 0);
                            break;
                        case "undefined":
                        case "string":
                            break;
                        default:
                            throw new TypeError("Invalid `field` argument. Must be string or function");
                    }
                    switch(n51(t5)){
                        case "function":
                            r46 = t5, t5 = e29 = void 0;
                            break;
                        case "string":
                            e29 = t5, t5 = void 0;
                    }
                }
                if ("string" == typeof e29 && (this._distinct = e29), c23.canMerge(t5) && this.merge(t5), !r46) return this;
                if (!this._distinct) throw new Error("No value for `distinct` has been declared");
                var o59 = this._conditions, i48 = this._optionsForExec();
                return u41("distinct", this._collection.collectionName, o59, i48), r46 = this._wrapCallback("distinct", r46, {
                    conditions: o59,
                    options: i48
                }), this._collection.distinct(this._distinct, o59, i48, a39.tick(r46)), this;
            }, c23.prototype.update = function(t5, e29, r46, o59) {
                var i48;
                switch(arguments.length){
                    case 3:
                        "function" == typeof r46 && (o59 = r46, r46 = void 0);
                        break;
                    case 2:
                        "function" == typeof e29 && (o59 = e29, e29 = t5, t5 = void 0);
                        break;
                    case 1:
                        switch(n51(t5)){
                            case "function":
                                o59 = t5, t5 = r46 = e29 = void 0;
                                break;
                            case "boolean":
                                i48 = t5, t5 = void 0;
                                break;
                            default:
                                e29 = t5, t5 = r46 = void 0;
                        }
                }
                return d14(this, "update", t5, e29, r46, i48, o59);
            }, c23.prototype.updateMany = function(t5, e29, r46, o59) {
                var i48;
                switch(arguments.length){
                    case 3:
                        "function" == typeof r46 && (o59 = r46, r46 = void 0);
                        break;
                    case 2:
                        "function" == typeof e29 && (o59 = e29, e29 = t5, t5 = void 0);
                        break;
                    case 1:
                        switch(n51(t5)){
                            case "function":
                                o59 = t5, t5 = r46 = e29 = void 0;
                                break;
                            case "boolean":
                                i48 = t5, t5 = void 0;
                                break;
                            default:
                                e29 = t5, t5 = r46 = void 0;
                        }
                }
                return d14(this, "updateMany", t5, e29, r46, i48, o59);
            }, c23.prototype.updateOne = function(t5, e29, r46, o59) {
                var i48;
                switch(arguments.length){
                    case 3:
                        "function" == typeof r46 && (o59 = r46, r46 = void 0);
                        break;
                    case 2:
                        "function" == typeof e29 && (o59 = e29, e29 = t5, t5 = void 0);
                        break;
                    case 1:
                        switch(n51(t5)){
                            case "function":
                                o59 = t5, t5 = r46 = e29 = void 0;
                                break;
                            case "boolean":
                                i48 = t5, t5 = void 0;
                                break;
                            default:
                                e29 = t5, t5 = r46 = void 0;
                        }
                }
                return d14(this, "updateOne", t5, e29, r46, i48, o59);
            }, c23.prototype.replaceOne = function(t5, e29, r46, o59) {
                var i48;
                switch(arguments.length){
                    case 3:
                        "function" == typeof r46 && (o59 = r46, r46 = void 0);
                        break;
                    case 2:
                        "function" == typeof e29 && (o59 = e29, e29 = t5, t5 = void 0);
                        break;
                    case 1:
                        switch(n51(t5)){
                            case "function":
                                o59 = t5, t5 = r46 = e29 = void 0;
                                break;
                            case "boolean":
                                i48 = t5, t5 = void 0;
                                break;
                            default:
                                e29 = t5, t5 = r46 = void 0;
                        }
                }
                return this.setOptions({
                    overwrite: !0
                }), d14(this, "replaceOne", t5, e29, r46, i48, o59);
            }, c23.prototype.remove = function(t5, e29) {
                var r46;
                if (this.op = "remove", "function" == typeof t5 ? (e29 = t5, t5 = void 0) : c23.canMerge(t5) ? this.merge(t5) : !0 === t5 && (r46 = t5, t5 = void 0), !r46 && !e29) return this;
                var n63 = this._optionsForExec();
                e29 || (n63.safe = !1);
                var o59 = this._conditions;
                return u41("remove", this._collection.collectionName, o59, n63), e29 = this._wrapCallback("remove", e29, {
                    conditions: o59,
                    options: n63
                }), this._collection.remove(o59, n63, a39.tick(e29)), this;
            }, c23.prototype.deleteOne = function(t5, e29) {
                var r46;
                if (this.op = "deleteOne", "function" == typeof t5 ? (e29 = t5, t5 = void 0) : c23.canMerge(t5) ? this.merge(t5) : !0 === t5 && (r46 = t5, t5 = void 0), !r46 && !e29) return this;
                var n63 = this._optionsForExec();
                e29 || (n63.safe = !1), delete n63.justOne;
                var o59 = this._conditions;
                return u41("deleteOne", this._collection.collectionName, o59, n63), e29 = this._wrapCallback("deleteOne", e29, {
                    conditions: o59,
                    options: n63
                }), this._collection.deleteOne(o59, n63, a39.tick(e29)), this;
            }, c23.prototype.deleteMany = function(t5, e29) {
                var r46;
                if (this.op = "deleteMany", "function" == typeof t5 ? (e29 = t5, t5 = void 0) : c23.canMerge(t5) ? this.merge(t5) : !0 === t5 && (r46 = t5, t5 = void 0), !r46 && !e29) return this;
                var n63 = this._optionsForExec();
                e29 || (n63.safe = !1), delete n63.justOne;
                var o59 = this._conditions;
                return u41("deleteOne", this._collection.collectionName, o59, n63), e29 = this._wrapCallback("deleteOne", e29, {
                    conditions: o59,
                    options: n63
                }), this._collection.deleteMany(o59, n63, a39.tick(e29)), this;
            }, c23.prototype.findOneAndUpdate = function(t5, e29, r46, n63) {
                switch(this.op = "findOneAndUpdate", this._validate(), arguments.length){
                    case 3:
                        "function" == typeof r46 && (n63 = r46, r46 = {
                        });
                        break;
                    case 2:
                        "function" == typeof e29 && (n63 = e29, e29 = t5, t5 = void 0), r46 = void 0;
                        break;
                    case 1:
                        "function" == typeof t5 ? (n63 = t5, t5 = r46 = e29 = void 0) : (e29 = t5, t5 = r46 = void 0);
                }
                return c23.canMerge(t5) && this.merge(t5), e29 && this._mergeUpdate(e29), r46 && this.setOptions(r46), n63 ? this._findAndModify("update", n63) : this;
            }, c23.prototype.findOneAndRemove = c23.prototype.findOneAndDelete = function(t5, e29, r46) {
                return this.op = "findOneAndRemove", this._validate(), "function" == typeof e29 ? (r46 = e29, e29 = void 0) : "function" == typeof t5 && (r46 = t5, t5 = void 0), c23.canMerge(t5) && this.merge(t5), e29 && this.setOptions(e29), r46 ? this._findAndModify("remove", r46) : this;
            }, c23.prototype._findAndModify = function(t5, e29) {
                i46.equal("function", n51(e29));
                var r46, o59 = this._optionsForExec();
                if ("remove" == t5) o59.remove = !0;
                else if ("new" in o59 || (o59.new = !0), "upsert" in o59 || (o59.upsert = !1), !(r46 = this._updateForExec())) {
                    if (!o59.upsert) return this.findOne(e29);
                    r46 = {
                        $set: {
                        }
                    };
                }
                null != this._fieldsForExec() && (this.$useProjection ? o59.projection = this._fieldsForExec() : o59.fields = this._fieldsForExec());
                var s35 = this._conditions;
                return u41("findAndModify", this._collection.collectionName, s35, r46, o59), e29 = this._wrapCallback("findAndModify", e29, {
                    conditions: s35,
                    doc: r46,
                    options: o59
                }), this._collection.findAndModify(s35, r46, o59, a39.tick(e29)), this;
            }, c23.prototype._wrapCallback = function(t5, e29, r46) {
                var n63 = this._traceFunction || c23.traceFunction;
                if (n63) {
                    r46.collectionName = this._collection.collectionName;
                    var o59 = n63 && n63.call(null, t5, r46, this), i48 = (new Date).getTime();
                    return function(t7, r47) {
                        if (o59) {
                            var n64 = (new Date).getTime() - i48;
                            o59.call(null, t7, r47, n64);
                        }
                        e29 && e29.apply(null, arguments);
                    };
                }
                return e29;
            }, c23.prototype.setTraceFunction = function(t5) {
                return this._traceFunction = t5, this;
            }, c23.prototype.exec = function(t5, e29) {
                switch(n51(t5)){
                    case "function":
                        e29 = t5, t5 = null;
                        break;
                    case "string":
                        this.op = t5;
                }
                i46.ok(this.op, "Missing query type: (find, update, etc)"), "update" != this.op && "remove" != this.op || e29 || (e29 = !0);
                var r46 = this;
                if ("function" != typeof e29) return new c23.Promise(function(t7, e30) {
                    r46[r46.op](function(r47, n63) {
                        r47 ? e30(r47) : t7(n63), t7 = e30 = null;
                    });
                });
                this[this.op](e29);
            }, c23.prototype.thunk = function() {
                var t5 = this;
                return function(e29) {
                    t5.exec(e29);
                };
            }, c23.prototype.then = function(t5, e29) {
                var r46 = this;
                return new c23.Promise(function(t7, e30) {
                    r46.exec(function(r47, n63) {
                        r47 ? e30(r47) : t7(n63), t7 = e30 = null;
                    });
                }).then(t5, e29);
            }, c23.prototype.stream = function(t5) {
                if ("find" != this.op) throw new Error("stream() is only available for find");
                var e29 = this._conditions, r46 = this._optionsForExec();
                return this.$useProjection ? r46.projection = this._fieldsForExec() : r46.fields = this._fieldsForExec(), u41("stream", this._collection.collectionName, e29, r46, t5), this._collection.findStream(e29, r46, t5);
            }, c23.prototype.selected = function() {
                return !!(this._fields && Object.keys(this._fields).length > 0);
            }, c23.prototype.selectedInclusively = function() {
                if (!this._fields) return !1;
                var t5 = Object.keys(this._fields);
                if (0 === t5.length) return !1;
                for(var e29 = 0; e29 < t5.length; ++e29){
                    var r46 = t5[e29];
                    if (0 === this._fields[r46]) return !1;
                    if (this._fields[r46] && "object" === n51(this._fields[r46]) && this._fields[r46].$meta) return !1;
                }
                return !0;
            }, c23.prototype.selectedExclusively = function() {
                if (!this._fields) return !1;
                var t5 = Object.keys(this._fields);
                if (0 === t5.length) return !1;
                for(var e29 = 0; e29 < t5.length; ++e29){
                    var r47 = t5[e29];
                    if (0 === this._fields[r47]) return !0;
                }
                return !1;
            }, c23.prototype._mergeUpdate = function(t5) {
                this._update || (this._update = {
                }), t5 instanceof c23 ? t5._update && a39.mergeClone(this._update, t5._update) : a39.mergeClone(this._update, t5);
            }, c23.prototype._optionsForExec = function() {
                return a39.clone(this.options);
            }, c23.prototype._fieldsForExec = function() {
                return a39.clone(this._fields);
            }, c23.prototype._updateForExec = function() {
                for(var t5 = a39.clone(this._update), e29 = a39.keys(t5), r48 = e29.length, n63 = {
                }; r48--;){
                    var o60 = e29[r48];
                    this.options.overwrite ? n63[o60] = t5[o60] : "$" !== o60[0] ? (n63.$set || (t5.$set ? n63.$set = t5.$set : n63.$set = {
                    }), n63.$set[o60] = t5[o60], e29.splice(r48, 1), ~e29.indexOf("$set") || e29.push("$set")) : "$set" === o60 && n63.$set || (n63[o60] = t5[o60]);
                }
                return this._compiledUpdate = n63, n63;
            }, c23.prototype._ensurePath = function(t5) {
                if (!this._path) throw new Error(t5 + "() must be used after where() when called with these arguments");
            }, /*!
 * Permissions
 */ c23.permissions = r2(125), c23._isPermitted = function(t5, e29) {
                var r48 = c23.permissions[e29];
                return !r48 || !0 !== r48[t5];
            }, c23.prototype._validate = function(t5) {
                var e29, r48;
                if ((void 0) === t5) {
                    if ("function" != typeof (r48 = c23.permissions[this.op])) return !0;
                    e29 = r48(this);
                } else c23._isPermitted(t5, this.op) || (e29 = t5);
                if (e29) throw new Error(e29 + " cannot be used with " + this.op);
            }, c23.canMerge = function(t5) {
                return t5 instanceof c23 || a39.isObject(t5);
            }, c23.setGlobalTraceFunction = function(t5) {
                c23.traceFunction = t5;
            }, /*!
 * Exports.
 */ c23.utils = a39, c23.env = r2(71), c23.Collection = r2(127), c23.BaseCollection = r2(32), c23.Promise = r2(129), t2.exports = c23;
        },
        function(t2, e3, r2) {
            (function(t5, e29) {
                !function(t7, r48) {
                    if (!t7.setImmediate) {
                        var n51, o54, i46, s30, a39, u41 = 1, c23 = {
                        }, l28 = !1, f25 = t7.document, p15 = Object.getPrototypeOf && Object.getPrototypeOf(t7);
                        p15 = p15 && p15.setTimeout ? p15 : t7, "[object process]" === ({
                        }).toString.call(t7.process) ? n51 = function(t8) {
                            e29.nextTick(function() {
                                y19(t8);
                            });
                        } : !function() {
                            if (t7.postMessage && !t7.importScripts) {
                                var e30 = !0, r49 = t7.onmessage;
                                return t7.onmessage = function() {
                                    e30 = !1;
                                }, t7.postMessage("", "*"), t7.onmessage = r49, e30;
                            }
                        }() ? t7.MessageChannel ? ((i46 = new MessageChannel).port1.onmessage = function(t8) {
                            y19(t8.data);
                        }, n51 = function(t8) {
                            i46.port2.postMessage(t8);
                        }) : f25 && "onreadystatechange" in f25.createElement("script") ? (o54 = f25.documentElement, n51 = function(t8) {
                            var e31 = f25.createElement("script");
                            e31.onreadystatechange = function() {
                                y19(t8), e31.onreadystatechange = null, o54.removeChild(e31), e31 = null;
                            }, o54.appendChild(e31);
                        }) : n51 = function(t8) {
                            setTimeout(y19, 0, t8);
                        } : (s30 = "setImmediate$" + Math.random() + "$", a39 = function(e31) {
                            e31.source === t7 && "string" == typeof e31.data && 0 === e31.data.indexOf(s30) && y19(+e31.data.slice(s30.length));
                        }, t7.addEventListener ? t7.addEventListener("message", a39, !1) : t7.attachEvent("onmessage", a39), n51 = function(e31) {
                            t7.postMessage(s30 + e31, "*");
                        }), p15.setImmediate = function(t8) {
                            "function" != typeof t8 && (t8 = new Function("" + t8));
                            for(var e31 = new Array(arguments.length - 1), r50 = 0; r50 < e31.length; r50++)e31[r50] = arguments[r50 + 1];
                            var o61 = {
                                callback: t8,
                                args: e31
                            };
                            return c23[u41] = o61, n51(u41), u41++;
                        }, p15.clearImmediate = h12;
                    }
                    function h12(t8) {
                        delete c23[t8];
                    }
                    function y19(t8) {
                        if (l28) setTimeout(y19, 0, t8);
                        else {
                            var e31 = c23[t8];
                            if (e31) {
                                l28 = !0;
                                try {
                                    !function(t9) {
                                        var e32 = t9.callback, r50 = t9.args;
                                        switch(r50.length){
                                            case 0:
                                                e32();
                                                break;
                                            case 1:
                                                e32(r50[0]);
                                                break;
                                            case 2:
                                                e32(r50[0], r50[1]);
                                                break;
                                            case 3:
                                                e32(r50[0], r50[1], r50[2]);
                                                break;
                                            default:
                                                e32.apply(void 0, r50);
                                        }
                                    }(e31);
                                } finally{
                                    h12(t8), l28 = !1;
                                }
                            }
                        }
                    }
                }("undefined" == typeof self ? (void 0) === t5 ? this : t5 : self);
            }).call(this, r2(9), r2(11));
        },
        function(t2, e3, r2) {
            var n63 = r2(2), o61 = n63.Buffer;
            function i49(t5, e29) {
                for(var r48 in t5)e29[r48] = t5[r48];
            }
            function s35(t5, e29, r48) {
                return o61(t5, e29, r48);
            }
            o61.from && o61.alloc && o61.allocUnsafe && o61.allocUnsafeSlow ? t2.exports = n63 : (i49(n63, e3), e3.Buffer = s35), i49(o61, s35), s35.from = function(t5, e29, r48) {
                if ("number" == typeof t5) throw new TypeError("Argument must not be a number");
                return o61(t5, e29, r48);
            }, s35.alloc = function(t5, e29, r48) {
                if ("number" != typeof t5) throw new TypeError("Argument must be a number");
                var n65 = o61(t5);
                return (void 0) !== e29 ? "string" == typeof r48 ? n65.fill(e29, r48) : n65.fill(e29) : n65.fill(0), n65;
            }, s35.allocUnsafe = function(t5) {
                if ("number" != typeof t5) throw new TypeError("Argument must be a number");
                return o61(t5);
            }, s35.allocUnsafeSlow = function(t5) {
                if ("number" != typeof t5) throw new TypeError("Argument must be a number");
                return n63.SlowBuffer(t5);
            };
        },
        function(t2, e3, r2) {
            (function(n63) {
                function o61(t5) {
                    return (o61 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t7) {
                        return typeof t7;
                    } : function(t7) {
                        return t7 && "function" == typeof Symbol && t7.constructor === Symbol && t7 !== Symbol.prototype ? "symbol" : typeof t7;
                    })(t5);
                }
                function i49() {
                    var t5;
                    try {
                        t5 = e3.storage.debug;
                    } catch (t7) {
                    }
                    return !t5 && (void 0) !== n63 && "env" in n63 && (t5 = n63.env.DEBUG), t5;
                }
                (e3 = t2.exports = r2(123)).log = function() {
                    return "object" === ("undefined" == typeof console ? "undefined" : o61(console)) && console.log && Function.prototype.apply.call(console.log, console, arguments);
                }, e3.formatArgs = function(t5) {
                    var r48 = this.useColors;
                    if (t5[0] = (r48 ? "%c" : "") + this.namespace + (r48 ? " %c" : " ") + t5[0] + (r48 ? "%c " : " ") + "+" + e3.humanize(this.diff), !r48) return;
                    var n65 = "color: " + this.color;
                    t5.splice(1, 0, n65, "color: inherit");
                    var o62 = 0, i50 = 0;
                    t5[0].replace(/%[a-zA-Z%]/g, function(t7) {
                        "%%" !== t7 && (o62++, "%c" === t7 && (i50 = o62));
                    }), t5.splice(i50, 0, n65);
                }, e3.save = function(t5) {
                    try {
                        null == t5 ? e3.storage.removeItem("debug") : e3.storage.debug = t5;
                    } catch (t7) {
                    }
                }, e3.load = i49, e3.useColors = function() {
                    if ("undefined" != typeof window && window.process && "renderer" === window.process.type) return !0;
                    if ("undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) return !1;
                    return "undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
                }, e3.storage = "undefined" != typeof chrome && (void 0) !== chrome.storage ? chrome.storage.local : (function() {
                    try {
                        return window.localStorage;
                    } catch (t5) {
                    }
                })(), e3.colors = [
                    "#0000CC",
                    "#0000FF",
                    "#0033CC",
                    "#0033FF",
                    "#0066CC",
                    "#0066FF",
                    "#0099CC",
                    "#0099FF",
                    "#00CC00",
                    "#00CC33",
                    "#00CC66",
                    "#00CC99",
                    "#00CCCC",
                    "#00CCFF",
                    "#3300CC",
                    "#3300FF",
                    "#3333CC",
                    "#3333FF",
                    "#3366CC",
                    "#3366FF",
                    "#3399CC",
                    "#3399FF",
                    "#33CC00",
                    "#33CC33",
                    "#33CC66",
                    "#33CC99",
                    "#33CCCC",
                    "#33CCFF",
                    "#6600CC",
                    "#6600FF",
                    "#6633CC",
                    "#6633FF",
                    "#66CC00",
                    "#66CC33",
                    "#9900CC",
                    "#9900FF",
                    "#9933CC",
                    "#9933FF",
                    "#99CC00",
                    "#99CC33",
                    "#CC0000",
                    "#CC0033",
                    "#CC0066",
                    "#CC0099",
                    "#CC00CC",
                    "#CC00FF",
                    "#CC3300",
                    "#CC3333",
                    "#CC3366",
                    "#CC3399",
                    "#CC33CC",
                    "#CC33FF",
                    "#CC6600",
                    "#CC6633",
                    "#CC9900",
                    "#CC9933",
                    "#CCCC00",
                    "#CCCC33",
                    "#FF0000",
                    "#FF0033",
                    "#FF0066",
                    "#FF0099",
                    "#FF00CC",
                    "#FF00FF",
                    "#FF3300",
                    "#FF3333",
                    "#FF3366",
                    "#FF3399",
                    "#FF33CC",
                    "#FF33FF",
                    "#FF6600",
                    "#FF6633",
                    "#FF9900",
                    "#FF9933",
                    "#FFCC00",
                    "#FFCC33"
                ], e3.formatters.j = function(t5) {
                    try {
                        return JSON.stringify(t5);
                    } catch (t7) {
                        return "[UnexpectedJSONParseError]: " + t7.message;
                    }
                }, e3.enable(i49());
            }).call(this, r2(11));
        },
        function(t2, e3, r2) {
            function n63(t5) {
                var r48;
                function n65() {
                    if (n65.enabled) {
                        var t7 = n65, o61 = +new Date, i49 = o61 - (r48 || o61);
                        t7.diff = i49, t7.prev = r48, t7.curr = o61, r48 = o61;
                        for(var s35 = new Array(arguments.length), a42 = 0; a42 < s35.length; a42++)s35[a42] = arguments[a42];
                        s35[0] = e3.coerce(s35[0]), "string" != typeof s35[0] && s35.unshift("%O");
                        var u45 = 0;
                        s35[0] = s35[0].replace(/%([a-zA-Z%])/g, function(r50, n66) {
                            if ("%%" === r50) return r50;
                            u45++;
                            var o62 = e3.formatters[n66];
                            if ("function" == typeof o62) {
                                var i50 = s35[u45];
                                r50 = o62.call(t7, i50), s35.splice(u45, 1), u45--;
                            }
                            return r50;
                        }), e3.formatArgs.call(t7, s35);
                        var c32 = n65.log || e3.log || console.log.bind(console);
                        c32.apply(t7, s35);
                    }
                }
                return n65.namespace = t5, n65.enabled = e3.enabled(t5), n65.useColors = e3.useColors(), n65.color = (function(t8) {
                    var r50, n66 = 0;
                    for(r50 in t8)n66 = (n66 << 5) - n66 + t8.charCodeAt(r50), n66 |= 0;
                    return e3.colors[Math.abs(n66) % e3.colors.length];
                })(t5), n65.destroy = o62, "function" == typeof e3.init && e3.init(n65), e3.instances.push(n65), n65;
            }
            function o62() {
                var t5 = e3.instances.indexOf(this);
                return -1 !== t5 && (e3.instances.splice(t5, 1), !0);
            }
            (e3 = t2.exports = n63.debug = n63.default = n63).coerce = function(t5) {
                return t5 instanceof Error ? t5.stack || t5.message : t5;
            }, e3.disable = function() {
                e3.enable("");
            }, e3.enable = function(t5) {
                var r48;
                e3.save(t5), e3.names = [], e3.skips = [];
                var n65 = ("string" == typeof t5 ? t5 : "").split(/[\s,]+/), o63 = n65.length;
                for(r48 = 0; r48 < o63; r48++)n65[r48] && ("-" === (t5 = n65[r48].replace(/\*/g, ".*?"))[0] ? e3.skips.push(new RegExp("^" + t5.substr(1) + "$")) : e3.names.push(new RegExp("^" + t5 + "$")));
                for(r48 = 0; r48 < e3.instances.length; r48++){
                    var i51 = e3.instances[r48];
                    i51.enabled = e3.enabled(i51.namespace);
                }
            }, e3.enabled = function(t5) {
                if ("*" === t5[t5.length - 1]) return !0;
                var r48, n65;
                for(r48 = 0, n65 = e3.skips.length; r48 < n65; r48++)if (e3.skips[r48].test(t5)) return !1;
                for(r48 = 0, n65 = e3.names.length; r48 < n65; r48++)if (e3.names[r48].test(t5)) return !0;
                return !1;
            }, e3.humanize = r2(124), e3.instances = [], e3.names = [], e3.skips = [], e3.formatters = {
            };
        },
        function(t2, e3) {
            function r2(t5) {
                return (r2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            var n63 = 1000, o62 = 60000, i52 = 60 * o62, s36 = 24 * i52;
            function a43(t5, e29, r48) {
                if (!(t5 < e29)) return t5 < 1.5 * e29 ? Math.floor(t5 / e29) + " " + r48 : Math.ceil(t5 / e29) + " " + r48 + "s";
            }
            t2.exports = function(t5, e29) {
                e29 = e29 || {
                };
                var u46, c33 = r2(t5);
                if ("string" === c33 && t5.length > 0) return (function(t8) {
                    if ((t8 = String(t8)).length > 100) return;
                    var e32 = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(t8);
                    if (!e32) return;
                    var r48 = parseFloat(e32[1]);
                    switch((e32[2] || "ms").toLowerCase()){
                        case "years":
                        case "year":
                        case "yrs":
                        case "yr":
                        case "y":
                            return 31557600000 * r48;
                        case "days":
                        case "day":
                        case "d":
                            return r48 * s36;
                        case "hours":
                        case "hour":
                        case "hrs":
                        case "hr":
                        case "h":
                            return r48 * i52;
                        case "minutes":
                        case "minute":
                        case "mins":
                        case "min":
                        case "m":
                            return r48 * o62;
                        case "seconds":
                        case "second":
                        case "secs":
                        case "sec":
                        case "s":
                            return r48 * n63;
                        case "milliseconds":
                        case "millisecond":
                        case "msecs":
                        case "msec":
                        case "ms":
                            return r48;
                        default:
                            return;
                    }
                })(t5);
                if ("number" === c33 && !1 === isNaN(t5)) return e29.long ? a43(u46 = t5, s36, "day") || a43(u46, i52, "hour") || a43(u46, o62, "minute") || a43(u46, n63, "second") || u46 + " ms" : (function(t8) {
                    if (t8 >= s36) return Math.round(t8 / s36) + "d";
                    if (t8 >= i52) return Math.round(t8 / i52) + "h";
                    if (t8 >= o62) return Math.round(t8 / o62) + "m";
                    if (t8 >= n63) return Math.round(t8 / n63) + "s";
                    return t8 + "ms";
                })(t5);
                throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(t5));
            };
        },
        function(t2, e3, r2) {
            "use strict";
            var n63 = e3;
            n63.distinct = function(t5) {
                var e29;
                return t5._fields && Object.keys(t5._fields).length > 0 ? "field selection and slice" : (Object.keys(n63.distinct).every(function(r48) {
                    return !t5.options[r48] || (e29 = r48, !1);
                }), e29);
            }, n63.distinct.select = n63.distinct.slice = n63.distinct.sort = n63.distinct.limit = n63.distinct.skip = n63.distinct.batchSize = n63.distinct.comment = n63.distinct.maxScan = n63.distinct.snapshot = n63.distinct.hint = n63.distinct.tailable = !0, n63.findOneAndUpdate = n63.findOneAndRemove = function(t5) {
                var e29;
                return Object.keys(n63.findOneAndUpdate).every(function(r48) {
                    return !t5.options[r48] || (e29 = r48, !1);
                }), e29;
            }, n63.findOneAndUpdate.limit = n63.findOneAndUpdate.skip = n63.findOneAndUpdate.batchSize = n63.findOneAndUpdate.maxScan = n63.findOneAndUpdate.snapshot = n63.findOneAndUpdate.hint = n63.findOneAndUpdate.tailable = n63.findOneAndUpdate.comment = !0, n63.count = function(t5) {
                var e29;
                return t5._fields && Object.keys(t5._fields).length > 0 ? "field selection and slice" : (Object.keys(n63.count).every(function(r48) {
                    return !t5.options[r48] || (e29 = r48, !1);
                }), e29);
            }, n63.count.slice = n63.count.batchSize = n63.count.comment = n63.count.maxScan = n63.count.snapshot = n63.count.tailable = !0;
        },
        function(t2, e3) {
            t2.exports = function(t5) {
                return t5.webpackPolyfill || (t5.deprecate = function() {
                }, t5.paths = [], t5.children || (t5.children = []), Object.defineProperty(t5, "loaded", {
                    enumerable: !0,
                    get: function() {
                        return t5.l;
                    }
                }), Object.defineProperty(t5, "id", {
                    enumerable: !0,
                    get: function() {
                        return t5.i;
                    }
                }), t5.webpackPolyfill = 1), t5;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            var n63 = r2(71);
            if ("unknown" == n63.type) throw new Error("Unknown environment");
            t2.exports = n63.isNode ? r2(128) : (n63.isMongo, r2(32));
        },
        function(t2, e3, r2) {
            "use strict";
            var n63 = r2(32);
            function o62(t5) {
                this.collection = t5, this.collectionName = t5.collectionName;
            }
            r2(69).inherits(o62, n63), o62.prototype.find = function(t5, e29, r48) {
                this.collection.find(t5, e29, function(t8, e32) {
                    if (t8) return r48(t8);
                    try {
                        e32.toArray(r48);
                    } catch (t9) {
                        r48(t9);
                    }
                });
            }, o62.prototype.findOne = function(t5, e29, r48) {
                this.collection.findOne(t5, e29, r48);
            }, o62.prototype.count = function(t5, e29, r48) {
                this.collection.count(t5, e29, r48);
            }, o62.prototype.distinct = function(t5, e29, r48, n65) {
                this.collection.distinct(t5, e29, r48, n65);
            }, o62.prototype.update = function(t5, e29, r48, n65) {
                this.collection.update(t5, e29, r48, n65);
            }, o62.prototype.updateMany = function(t5, e29, r48, n65) {
                this.collection.updateMany(t5, e29, r48, n65);
            }, o62.prototype.updateOne = function(t5, e29, r48, n65) {
                this.collection.updateOne(t5, e29, r48, n65);
            }, o62.prototype.replaceOne = function(t5, e29, r48, n65) {
                this.collection.replaceOne(t5, e29, r48, n65);
            }, o62.prototype.deleteOne = function(t5, e29, r48) {
                this.collection.deleteOne(t5, e29, r48);
            }, o62.prototype.deleteMany = function(t5, e29, r48) {
                this.collection.deleteMany(t5, e29, r48);
            }, o62.prototype.remove = function(t5, e29, r48) {
                this.collection.remove(t5, e29, r48);
            }, o62.prototype.findAndModify = function(t5, e29, r48, n65) {
                var o63 = Array.isArray(r48.sort) ? r48.sort : [];
                this.collection.findAndModify(t5, o63, e29, r48, n65);
            }, o62.prototype.findStream = function(t5, e29, r48) {
                return this.collection.find(t5, e29).stream(r48);
            }, o62.prototype.findCursor = function(t5, e29) {
                return this.collection.find(t5, e29);
            }, t2.exports = o62;
        },
        function(t2, e3, r2) {
            (function(r48, n63, o62) {
                var i52, s36, a43, u46;
                function c33(t5) {
                    return (c33 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                        return typeof t8;
                    } : function(t8) {
                        return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                    })(t5);
                }
                /* @preserve
 * The MIT License (MIT)
 * 
 * Copyright (c) 2013-2017 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */ u46 = function() {
                    var t5, e29, i53;
                    return (function t8(e32, r50, n65) {
                        function o63(s37, a44) {
                            if (!r50[s37]) {
                                if (!e32[s37]) {
                                    var u47 = "function" == typeof _dereq_ && _dereq_;
                                    if (!a44 && u47) return u47(s37, !0);
                                    if (i54) return i54(s37, !0);
                                    var c34 = new Error("Cannot find module '" + s37 + "'");
                                    throw c34.code = "MODULE_NOT_FOUND", c34;
                                }
                                var l29 = r50[s37] = {
                                    exports: {
                                    }
                                };
                                e32[s37][0].call(l29.exports, function(t9) {
                                    var r51 = e32[s37][1][t9];
                                    return o63(r51 || t9);
                                }, l29, l29.exports, t8, e32, r50, n65);
                            }
                            return r50[s37].exports;
                        }
                        for(var i54 = "function" == typeof _dereq_ && _dereq_, s37 = 0; s37 < n65.length; s37++)o63(n65[s37]);
                        return o63;
                    })({
                        1: [
                            function(t9, e32, r50) {
                                "use strict";
                                e32.exports = function(t10) {
                                    var e33 = t10._SomePromiseArray;
                                    function r51(t11) {
                                        var r52 = new e33(t11), n65 = r52.promise();
                                        return r52.setHowMany(1), r52.setUnwrap(), r52.init(), n65;
                                    }
                                    t10.any = function(t11) {
                                        return r51(t11);
                                    }, t10.prototype.any = function() {
                                        return r51(this);
                                    };
                                };
                            },
                            {
                            }
                        ],
                        2: [
                            function(t9, e32, n65) {
                                "use strict";
                                var o63;
                                try {
                                    throw new Error;
                                } catch (t10) {
                                    o63 = t10;
                                }
                                var i54 = t9("./schedule"), s37 = t9("./queue"), a44 = t9("./util");
                                function u48() {
                                    this._customScheduler = !1, this._isTickUsed = !1, this._lateQueue = new s37(16), this._normalQueue = new s37(16), this._haveDrainedQueues = !1, this._trampolineEnabled = !0;
                                    var t10 = this;
                                    this.drainQueues = function() {
                                        t10._drainQueues();
                                    }, this._schedule = i54;
                                }
                                function c35(t10, e33, r50) {
                                    this._lateQueue.push(t10, e33, r50), this._queueTick();
                                }
                                function l30(t10, e33, r50) {
                                    this._normalQueue.push(t10, e33, r50), this._queueTick();
                                }
                                function f26(t10) {
                                    this._normalQueue._pushOne(t10), this._queueTick();
                                }
                                u48.prototype.setScheduler = function(t10) {
                                    var e33 = this._schedule;
                                    return this._schedule = t10, this._customScheduler = !0, e33;
                                }, u48.prototype.hasCustomScheduler = function() {
                                    return this._customScheduler;
                                }, u48.prototype.enableTrampoline = function() {
                                    this._trampolineEnabled = !0;
                                }, u48.prototype.disableTrampolineIfNecessary = function() {
                                    a44.hasDevTools && (this._trampolineEnabled = !1);
                                }, u48.prototype.haveItemsQueued = function() {
                                    return this._isTickUsed || this._haveDrainedQueues;
                                }, u48.prototype.fatalError = function(t10, e33) {
                                    e33 ? (r48.stderr.write("Fatal " + (t10 instanceof Error ? t10.stack : t10) + "\n"), r48.exit(2)) : this.throwLater(t10);
                                }, u48.prototype.throwLater = function(t10, e33) {
                                    if (1 === arguments.length && (e33 = t10, t10 = function() {
                                        throw e33;
                                    }), "undefined" != typeof setTimeout) setTimeout(function() {
                                        t10(e33);
                                    }, 0);
                                    else try {
                                        this._schedule(function() {
                                            t10(e33);
                                        });
                                    } catch (t11) {
                                        throw new Error("No async scheduler available\n\n    See http://goo.gl/MqrFmX\n");
                                    }
                                }, a44.hasDevTools ? (u48.prototype.invokeLater = function(t10, e33, r50) {
                                    this._trampolineEnabled ? c35.call(this, t10, e33, r50) : this._schedule(function() {
                                        setTimeout(function() {
                                            t10.call(e33, r50);
                                        }, 100);
                                    });
                                }, u48.prototype.invoke = function(t10, e33, r50) {
                                    this._trampolineEnabled ? l30.call(this, t10, e33, r50) : this._schedule(function() {
                                        t10.call(e33, r50);
                                    });
                                }, u48.prototype.settlePromises = function(t10) {
                                    this._trampolineEnabled ? f26.call(this, t10) : this._schedule(function() {
                                        t10._settlePromises();
                                    });
                                }) : (u48.prototype.invokeLater = c35, u48.prototype.invoke = l30, u48.prototype.settlePromises = f26), u48.prototype._drainQueue = function(t10) {
                                    for(; t10.length() > 0;){
                                        var e33 = t10.shift();
                                        if ("function" == typeof e33) {
                                            var r50 = t10.shift(), n66 = t10.shift();
                                            e33.call(r50, n66);
                                        } else e33._settlePromises();
                                    }
                                }, u48.prototype._drainQueues = function() {
                                    this._drainQueue(this._normalQueue), this._reset(), this._haveDrainedQueues = !0, this._drainQueue(this._lateQueue);
                                }, u48.prototype._queueTick = function() {
                                    this._isTickUsed || (this._isTickUsed = !0, this._schedule(this.drainQueues));
                                }, u48.prototype._reset = function() {
                                    this._isTickUsed = !1;
                                }, e32.exports = u48, e32.exports.firstLineError = o63;
                            },
                            {
                                "./queue": 26,
                                "./schedule": 29,
                                "./util": 36
                            }
                        ],
                        3: [
                            function(t9, e32, r51) {
                                "use strict";
                                e32.exports = function(t10, e34, r52, n65) {
                                    var o63 = !1, i54 = function(t11, e35) {
                                        this._reject(e35);
                                    }, s37 = function(t11, e35) {
                                        e35.promiseRejectionQueued = !0, e35.bindingPromise._then(i54, i54, null, this, t11);
                                    }, a44 = function(t11, e35) {
                                        0 == (50397184 & this._bitField) && this._resolveCallback(e35.target);
                                    }, u48 = function(t11, e35) {
                                        e35.promiseRejectionQueued || this._reject(t11);
                                    };
                                    t10.prototype.bind = function(i55) {
                                        o63 || (o63 = !0, t10.prototype._propagateFrom = n65.propagateFromFunction(), t10.prototype._boundValue = n65.boundValueFunction());
                                        var c35 = r52(i55), l30 = new t10(e34);
                                        l30._propagateFrom(this, 1);
                                        var f26 = this._target();
                                        if (l30._setBoundTo(c35), c35 instanceof t10) {
                                            var p17 = {
                                                promiseRejectionQueued: !1,
                                                promise: l30,
                                                target: f26,
                                                bindingPromise: c35
                                            };
                                            f26._then(e34, s37, void 0, l30, p17), c35._then(a44, u48, void 0, l30, p17), l30._setOnCancel(c35);
                                        } else l30._resolveCallback(f26);
                                        return l30;
                                    }, t10.prototype._setBoundTo = function(t11) {
                                        (void 0) !== t11 ? (this._bitField = 2097152 | this._bitField, this._boundTo = t11) : this._bitField = -2097153 & this._bitField;
                                    }, t10.prototype._isBound = function() {
                                        return 2097152 == (2097152 & this._bitField);
                                    }, t10.bind = function(e35, r53) {
                                        return t10.resolve(r53).bind(e35);
                                    };
                                };
                            },
                            {
                            }
                        ],
                        4: [
                            function(t9, e32, r51) {
                                "use strict";
                                var n65;
                                "undefined" != typeof Promise && (n65 = Promise);
                                var o63 = t9("./promise")();
                                o63.noConflict = function() {
                                    try {
                                        Promise === o63 && (Promise = n65);
                                    } catch (t10) {
                                    }
                                    return o63;
                                }, e32.exports = o63;
                            },
                            {
                                "./promise": 22
                            }
                        ],
                        5: [
                            function(t9, e32, r51) {
                                "use strict";
                                var n65 = Object.create;
                                if (n65) {
                                    var o63 = n65(null), i54 = n65(null);
                                    o63[" size"] = i54[" size"] = 0;
                                }
                                e32.exports = function(e34) {
                                    var r52 = t9("./util"), n67 = r52.canEvaluate;
                                    function o64(t10) {
                                        return (function(t11, n68) {
                                            var o65;
                                            if (null != t11 && (o65 = t11[n68]), "function" != typeof o65) {
                                                var i55 = "Object " + r52.classString(t11) + " has no method '" + r52.toString(n68) + "'";
                                                throw new e34.TypeError(i55);
                                            }
                                            return o65;
                                        })(t10, this.pop()).apply(t10, this);
                                    }
                                    function i56(t10) {
                                        return t10[this];
                                    }
                                    function s37(t10) {
                                        var e35 = +this;
                                        return e35 < 0 && (e35 = Math.max(0, e35 + t10.length)), t10[e35];
                                    }
                                    r52.isIdentifier, e34.prototype.call = function(t10) {
                                        var e35 = [].slice.call(arguments, 1);
                                        return e35.push(t10), this._then(o64, void 0, void 0, e35, void 0);
                                    }, e34.prototype.get = function(t10) {
                                        var e35;
                                        if ("number" == typeof t10) e35 = s37;
                                        else if (n67) {
                                            var r53 = (void 0)(t10);
                                            e35 = null !== r53 ? r53 : i56;
                                        } else e35 = i56;
                                        return this._then(e35, void 0, void 0, t10, void 0);
                                    };
                                };
                            },
                            {
                                "./util": 36
                            }
                        ],
                        6: [
                            function(t9, e32, r51) {
                                "use strict";
                                e32.exports = function(e34, r52, n65, o64) {
                                    var i56 = t9("./util"), s37 = i56.tryCatch, a44 = i56.errorObj, u48 = e34._async;
                                    e34.prototype.break = e34.prototype.cancel = function() {
                                        if (!o64.cancellation()) return this._warn("cancellation is disabled");
                                        for(var t10 = this, e35 = t10; t10._isCancellable();){
                                            if (!t10._cancelBy(e35)) {
                                                e35._isFollowing() ? e35._followee().cancel() : e35._cancelBranched();
                                                break;
                                            }
                                            var r54 = t10._cancellationParent;
                                            if (null == r54 || !r54._isCancellable()) {
                                                t10._isFollowing() ? t10._followee().cancel() : t10._cancelBranched();
                                                break;
                                            }
                                            t10._isFollowing() && t10._followee().cancel(), t10._setWillBeCancelled(), e35 = t10, t10 = r54;
                                        }
                                    }, e34.prototype._branchHasCancelled = function() {
                                        this._branchesRemainingToCancel--;
                                    }, e34.prototype._enoughBranchesHaveCancelled = function() {
                                        return (void 0) === this._branchesRemainingToCancel || this._branchesRemainingToCancel <= 0;
                                    }, e34.prototype._cancelBy = function(t10) {
                                        return t10 === this ? (this._branchesRemainingToCancel = 0, this._invokeOnCancel(), !0) : (this._branchHasCancelled(), !!this._enoughBranchesHaveCancelled() && (this._invokeOnCancel(), !0));
                                    }, e34.prototype._cancelBranched = function() {
                                        this._enoughBranchesHaveCancelled() && this._cancel();
                                    }, e34.prototype._cancel = function() {
                                        this._isCancellable() && (this._setCancelled(), u48.invoke(this._cancelPromises, this, void 0));
                                    }, e34.prototype._cancelPromises = function() {
                                        this._length() > 0 && this._settlePromises();
                                    }, e34.prototype._unsetOnCancel = function() {
                                        this._onCancelField = void 0;
                                    }, e34.prototype._isCancellable = function() {
                                        return this.isPending() && !this._isCancelled();
                                    }, e34.prototype.isCancellable = function() {
                                        return this.isPending() && !this.isCancelled();
                                    }, e34.prototype._doInvokeOnCancel = function(t10, e35) {
                                        if (i56.isArray(t10)) for(var r55 = 0; r55 < t10.length; ++r55)this._doInvokeOnCancel(t10[r55], e35);
                                        else if ((void 0) !== t10) {
                                            if ("function" == typeof t10) {
                                                if (!e35) {
                                                    var n67 = s37(t10).call(this._boundValue());
                                                    n67 === a44 && (this._attachExtraTrace(n67.e), u48.throwLater(n67.e));
                                                }
                                            } else t10._resultCancelled(this);
                                        }
                                    }, e34.prototype._invokeOnCancel = function() {
                                        var t10 = this._onCancel();
                                        this._unsetOnCancel(), u48.invoke(this._doInvokeOnCancel, this, t10);
                                    }, e34.prototype._invokeInternalOnCancel = function() {
                                        this._isCancellable() && (this._doInvokeOnCancel(this._onCancel(), !0), this._unsetOnCancel());
                                    }, e34.prototype._resultCancelled = function() {
                                        this.cancel();
                                    };
                                };
                            },
                            {
                                "./util": 36
                            }
                        ],
                        7: [
                            function(t9, e32, r51) {
                                "use strict";
                                e32.exports = function(e34) {
                                    var r52 = t9("./util"), n65 = t9("./es5").keys, o64 = r52.tryCatch, i56 = r52.errorObj;
                                    return function(t10, s37, a44) {
                                        return function(u48) {
                                            var c35 = a44._boundValue();
                                            t: for(var l30 = 0; l30 < t10.length; ++l30){
                                                var f26 = t10[l30];
                                                if (f26 === Error || null != f26 && f26.prototype instanceof Error) {
                                                    if (u48 instanceof f26) return o64(s37).call(c35, u48);
                                                } else if ("function" == typeof f26) {
                                                    var p18 = o64(f26).call(c35, u48);
                                                    if (p18 === i56) return p18;
                                                    if (p18) return o64(s37).call(c35, u48);
                                                } else if (r52.isObject(u48)) {
                                                    for(var h12 = n65(f26), y19 = 0; y19 < h12.length; ++y19){
                                                        var d14 = h12[y19];
                                                        if (f26[d14] != u48[d14]) continue t;
                                                    }
                                                    return o64(s37).call(c35, u48);
                                                }
                                            }
                                            return e34;
                                        };
                                    };
                                };
                            },
                            {
                                "./es5": 13,
                                "./util": 36
                            }
                        ],
                        8: [
                            function(t9, e32, r51) {
                                "use strict";
                                e32.exports = function(t10) {
                                    var e34 = !1, r52 = [];
                                    function n65() {
                                        this._trace = new n65.CapturedTrace(o64());
                                    }
                                    function o64() {
                                        var t11 = r52.length - 1;
                                        if (t11 >= 0) return r52[t11];
                                    }
                                    return t10.prototype._promiseCreated = function() {
                                    }, t10.prototype._pushContext = function() {
                                    }, t10.prototype._popContext = function() {
                                        return null;
                                    }, t10._peekContext = t10.prototype._peekContext = function() {
                                    }, n65.prototype._pushContext = function() {
                                        (void 0) !== this._trace && (this._trace._promiseCreated = null, r52.push(this._trace));
                                    }, n65.prototype._popContext = function() {
                                        if ((void 0) !== this._trace) {
                                            var t11 = r52.pop(), e35 = t11._promiseCreated;
                                            return t11._promiseCreated = null, e35;
                                        }
                                        return null;
                                    }, n65.CapturedTrace = null, n65.create = function() {
                                        if (e34) return new n65;
                                    }, n65.deactivateLongStackTraces = function() {
                                    }, n65.activateLongStackTraces = function() {
                                        var r55 = t10.prototype._pushContext, i56 = t10.prototype._popContext, s37 = t10._peekContext, a44 = t10.prototype._peekContext, u48 = t10.prototype._promiseCreated;
                                        n65.deactivateLongStackTraces = function() {
                                            t10.prototype._pushContext = r55, t10.prototype._popContext = i56, t10._peekContext = s37, t10.prototype._peekContext = a44, t10.prototype._promiseCreated = u48, e34 = !1;
                                        }, e34 = !0, t10.prototype._pushContext = n65.prototype._pushContext, t10.prototype._popContext = n65.prototype._popContext, t10._peekContext = t10.prototype._peekContext = o64, t10.prototype._promiseCreated = function() {
                                            var t12 = this._peekContext();
                                            t12 && null == t12._promiseCreated && (t12._promiseCreated = this);
                                        };
                                    }, n65;
                                };
                            },
                            {
                            }
                        ],
                        9: [
                            function(t9, e32, n65) {
                                "use strict";
                                e32.exports = function(e34, n68) {
                                    var o64, i56, s37, a44 = e34._getDomain, u48 = e34._async, l30 = t9("./errors").Warning, f27 = t9("./util"), p19 = f27.canAttachTrace, h13 = /[\\\/]bluebird[\\\/]js[\\\/](release|debug|instrumented)/, y20 = /\((?:timers\.js):\d+:\d+\)/, d15 = /[\/<\(](.+?):(\d+):(\d+)\)?\s*$/, _14 = null, v8 = null, m5 = !1, g7 = !(0 == f27.env("BLUEBIRD_DEBUG")), b8 = !(0 == f27.env("BLUEBIRD_WARNINGS") || !g7 && !f27.env("BLUEBIRD_WARNINGS")), w8 = !(0 == f27.env("BLUEBIRD_LONG_STACK_TRACES") || !g7 && !f27.env("BLUEBIRD_LONG_STACK_TRACES")), O7 = 0 != f27.env("BLUEBIRD_W_FORGOTTEN_RETURN") && (b8 || !!f27.env("BLUEBIRD_W_FORGOTTEN_RETURN"));
                                    e34.prototype.suppressUnhandledRejections = function() {
                                        var t10 = this._target();
                                        t10._bitField = -1048577 & t10._bitField | 524288;
                                    }, e34.prototype._ensurePossibleRejectionHandled = function() {
                                        if (0 == (524288 & this._bitField)) {
                                            this._setRejectionIsUnhandled();
                                            var t10 = this;
                                            setTimeout(function() {
                                                t10._notifyUnhandledRejection();
                                            }, 1);
                                        }
                                    }, e34.prototype._notifyUnhandledRejectionIsHandled = function() {
                                        W4("rejectionHandled", o64, void 0, this);
                                    }, e34.prototype._setReturnedNonUndefined = function() {
                                        this._bitField = 268435456 | this._bitField;
                                    }, e34.prototype._returnedNonUndefined = function() {
                                        return 0 != (268435456 & this._bitField);
                                    }, e34.prototype._notifyUnhandledRejection = function() {
                                        if (this._isRejectionUnhandled()) {
                                            var t12 = this._settledValue();
                                            this._setUnhandledRejectionIsNotified(), W4("unhandledRejection", i56, t12, this);
                                        }
                                    }, e34.prototype._setUnhandledRejectionIsNotified = function() {
                                        this._bitField = 262144 | this._bitField;
                                    }, e34.prototype._unsetUnhandledRejectionIsNotified = function() {
                                        this._bitField = -262145 & this._bitField;
                                    }, e34.prototype._isUnhandledRejectionNotified = function() {
                                        return (262144 & this._bitField) > 0;
                                    }, e34.prototype._setRejectionIsUnhandled = function() {
                                        this._bitField = 1048576 | this._bitField;
                                    }, e34.prototype._unsetRejectionIsUnhandled = function() {
                                        this._bitField = -1048577 & this._bitField, this._isUnhandledRejectionNotified() && (this._unsetUnhandledRejectionIsNotified(), this._notifyUnhandledRejectionIsHandled());
                                    }, e34.prototype._isRejectionUnhandled = function() {
                                        return (1048576 & this._bitField) > 0;
                                    }, e34.prototype._warn = function(t13, e36, r51) {
                                        return L5(t13, e36, r51 || this);
                                    }, e34.onPossiblyUnhandledRejection = function(t13) {
                                        var e36 = a44();
                                        i56 = "function" == typeof t13 ? null === e36 ? t13 : f27.domainBind(e36, t13) : void 0;
                                    }, e34.onUnhandledRejectionHandled = function(t13) {
                                        var e36 = a44();
                                        o64 = "function" == typeof t13 ? null === e36 ? t13 : f27.domainBind(e36, t13) : void 0;
                                    };
                                    var S5 = function() {
                                    };
                                    e34.longStackTraces = function() {
                                        if (u48.haveItemsQueued() && !X.longStackTraces) throw new Error("cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n");
                                        if (!X.longStackTraces && Y()) {
                                            var t13 = e34.prototype._captureStackTrace, r51 = e34.prototype._attachExtraTrace;
                                            X.longStackTraces = !0, S5 = function() {
                                                if (u48.haveItemsQueued() && !X.longStackTraces) throw new Error("cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n");
                                                e34.prototype._captureStackTrace = t13, e34.prototype._attachExtraTrace = r51, n68.deactivateLongStackTraces(), u48.enableTrampoline(), X.longStackTraces = !1;
                                            }, e34.prototype._captureStackTrace = I, e34.prototype._attachExtraTrace = F6, n68.activateLongStackTraces(), u48.disableTrampolineIfNecessary();
                                        }
                                    }, e34.hasLongStackTraces = function() {
                                        return X.longStackTraces && Y();
                                    };
                                    var A5 = function() {
                                        try {
                                            if ("function" == typeof CustomEvent) {
                                                var t14 = new CustomEvent("CustomEvent");
                                                return f27.global.dispatchEvent(t14), function(t15, e36) {
                                                    var r52 = new CustomEvent(t15.toLowerCase(), {
                                                        detail: e36,
                                                        cancelable: !0
                                                    });
                                                    return !f27.global.dispatchEvent(r52);
                                                };
                                            }
                                            return "function" == typeof Event ? (t14 = new Event("CustomEvent"), f27.global.dispatchEvent(t14), function(t15, e36) {
                                                var r52 = new Event(t15.toLowerCase(), {
                                                    cancelable: !0
                                                });
                                                return r52.detail = e36, !f27.global.dispatchEvent(r52);
                                            }) : ((t14 = document.createEvent("CustomEvent")).initCustomEvent("testingtheevent", !1, !0, {
                                            }), f27.global.dispatchEvent(t14), function(t15, e36) {
                                                var r52 = document.createEvent("CustomEvent");
                                                return r52.initCustomEvent(t15.toLowerCase(), !1, !0, e36), !f27.global.dispatchEvent(r52);
                                            });
                                        } catch (t15) {
                                        }
                                        return function() {
                                            return !1;
                                        };
                                    }(), $4 = f27.isNode ? function() {
                                        return r48.emit.apply(r48, arguments);
                                    } : f27.global ? function(t15) {
                                        var e36 = "on" + t15.toLowerCase(), r52 = f27.global[e36];
                                        return !!r52 && (r52.apply(f27.global, [].slice.call(arguments, 1)), !0);
                                    } : function() {
                                        return !1;
                                    };
                                    function E3(t15, e36) {
                                        return {
                                            promise: e36
                                        };
                                    }
                                    var j = {
                                        promiseCreated: E3,
                                        promiseFulfilled: E3,
                                        promiseRejected: E3,
                                        promiseResolved: E3,
                                        promiseCancelled: E3,
                                        promiseChained: function(t15, e36, r52) {
                                            return {
                                                promise: e36,
                                                child: r52
                                            };
                                        },
                                        warning: function(t15, e36) {
                                            return {
                                                warning: e36
                                            };
                                        },
                                        unhandledRejection: function(t15, e36, r52) {
                                            return {
                                                reason: e36,
                                                promise: r52
                                            };
                                        },
                                        rejectionHandled: E3
                                    }, P4 = function(t15) {
                                        var e36 = !1;
                                        try {
                                            e36 = $4.apply(null, arguments);
                                        } catch (t16) {
                                            u48.throwLater(t16), e36 = !0;
                                        }
                                        var r52 = !1;
                                        try {
                                            r52 = A5(t15, j[t15].apply(null, arguments));
                                        } catch (t16) {
                                            u48.throwLater(t16), r52 = !0;
                                        }
                                        return r52 || e36;
                                    };
                                    function x5() {
                                        return !1;
                                    }
                                    function T5(t15, e36, r52) {
                                        var n69 = this;
                                        try {
                                            t15(e36, r52, function(t16) {
                                                if ("function" != typeof t16) throw new TypeError("onCancel must be a function, got: " + f27.toString(t16));
                                                n69._attachCancellationCallback(t16);
                                            });
                                        } catch (t16) {
                                            return t16;
                                        }
                                    }
                                    function N5(t15) {
                                        if (!this._isCancellable()) return this;
                                        var e36 = this._onCancel();
                                        (void 0) !== e36 ? f27.isArray(e36) ? e36.push(t15) : this._setOnCancel([
                                            e36,
                                            t15
                                        ]) : this._setOnCancel(t15);
                                    }
                                    function k4() {
                                        return this._onCancelField;
                                    }
                                    function B3(t15) {
                                        this._onCancelField = t15;
                                    }
                                    function C() {
                                        this._cancellationParent = void 0, this._onCancelField = void 0;
                                    }
                                    function R4(t15, e36) {
                                        if (0 != (1 & e36)) {
                                            this._cancellationParent = t15;
                                            var r52 = t15._branchesRemainingToCancel;
                                            (void 0) === r52 && (r52 = 0), t15._branchesRemainingToCancel = r52 + 1;
                                        }
                                        0 != (2 & e36) && t15._isBound() && this._setBoundTo(t15._boundTo);
                                    }
                                    e34.config = function(t15) {
                                        if ("longStackTraces" in (t15 = Object(t15)) && (t15.longStackTraces ? e34.longStackTraces() : !t15.longStackTraces && e34.hasLongStackTraces() && S5()), "warnings" in t15) {
                                            var r55 = t15.warnings;
                                            X.warnings = !!r55, O7 = X.warnings, f27.isObject(r55) && "wForgottenReturn" in r55 && (O7 = !!r55.wForgottenReturn);
                                        }
                                        if ("cancellation" in t15 && t15.cancellation && !X.cancellation) {
                                            if (u48.haveItemsQueued()) throw new Error("cannot enable cancellation after promises are in use");
                                            e34.prototype._clearCancellationData = C, e34.prototype._propagateFrom = R4, e34.prototype._onCancel = k4, e34.prototype._setOnCancel = B3, e34.prototype._attachCancellationCallback = N5, e34.prototype._execute = T5, D = R4, X.cancellation = !0;
                                        }
                                        return "monitoring" in t15 && (t15.monitoring && !X.monitoring ? (X.monitoring = !0, e34.prototype._fireEvent = P4) : !t15.monitoring && X.monitoring && (X.monitoring = !1, e34.prototype._fireEvent = x5)), e34;
                                    }, e34.prototype._fireEvent = x5, e34.prototype._execute = function(t15, e36, r56) {
                                        try {
                                            t15(e36, r56);
                                        } catch (t16) {
                                            return t16;
                                        }
                                    }, e34.prototype._onCancel = function() {
                                    }, e34.prototype._setOnCancel = function(t15) {
                                    }, e34.prototype._attachCancellationCallback = function(t15) {
                                    }, e34.prototype._captureStackTrace = function() {
                                    }, e34.prototype._attachExtraTrace = function() {
                                    }, e34.prototype._clearCancellationData = function() {
                                    }, e34.prototype._propagateFrom = function(t15, e36) {
                                    };
                                    var D = function(t15, e36) {
                                        0 != (2 & e36) && t15._isBound() && this._setBoundTo(t15._boundTo);
                                    };
                                    function M6() {
                                        var t15 = this._boundTo;
                                        return (void 0) !== t15 && t15 instanceof e34 ? t15.isFulfilled() ? t15.value() : void 0 : t15;
                                    }
                                    function I() {
                                        this._trace = new J(this._peekContext());
                                    }
                                    function F6(t15, e36) {
                                        if (p19(t15)) {
                                            var r56 = this._trace;
                                            if ((void 0) !== r56 && e36 && (r56 = r56._parent), (void 0) !== r56) r56.attachExtraTrace(t15);
                                            else if (!t15.__stackCleaned__) {
                                                var n69 = V5(t15);
                                                f27.notEnumerableProp(t15, "stack", n69.message + "\n" + n69.stack.join("\n")), f27.notEnumerableProp(t15, "__stackCleaned__", !0);
                                            }
                                        }
                                    }
                                    function L5(t15, r57, n70) {
                                        if (X.warnings) {
                                            var o65, i57 = new l30(t15);
                                            if (r57) n70._attachExtraTrace(i57);
                                            else if (X.longStackTraces && (o65 = e34._peekContext())) o65.attachExtraTrace(i57);
                                            else {
                                                var s38 = V5(i57);
                                                i57.stack = s38.message + "\n" + s38.stack.join("\n");
                                            }
                                            P4("warning", i57) || q4(i57, "", !0);
                                        }
                                    }
                                    function U4(t15) {
                                        for(var e36 = [], r57 = 0; r57 < t15.length; ++r57){
                                            var n70 = t15[r57], o66 = "    (No stack trace)" === n70 || _14.test(n70), i58 = o66 && K4(n70);
                                            o66 && !i58 && (m5 && " " !== n70.charAt(0) && (n70 = "    " + n70), e36.push(n70));
                                        }
                                        return e36;
                                    }
                                    function V5(t15) {
                                        var e36 = t15.stack, r57 = t15.toString();
                                        return e36 = "string" == typeof e36 && e36.length > 0 ? (function(t16) {
                                            for(var e37 = t16.stack.replace(/\s+$/g, "").split("\n"), r58 = 0; r58 < e37.length; ++r58){
                                                var n71 = e37[r58];
                                                if ("    (No stack trace)" === n71 || _14.test(n71)) break;
                                            }
                                            return r58 > 0 && "SyntaxError" != t16.name && (e37 = e37.slice(r58)), e37;
                                        })(t15) : [
                                            "    (No stack trace)"
                                        ], {
                                            message: r57,
                                            stack: "SyntaxError" == t15.name ? e36 : U4(e36)
                                        };
                                    }
                                    function q4(t15, e36, r57) {
                                        if ("undefined" != typeof console) {
                                            var n72;
                                            if (f27.isObject(t15)) {
                                                var o67 = t15.stack;
                                                n72 = e36 + v8(o67, t15);
                                            } else n72 = e36 + String(t15);
                                            "function" == typeof s37 ? s37(n72, r57) : "function" != typeof console.log && "object" !== c33(console.log) || console.log(n72);
                                        }
                                    }
                                    function W4(t15, e36, r57, n73) {
                                        var o68 = !1;
                                        try {
                                            "function" == typeof e36 && (o68 = !0, "rejectionHandled" === t15 ? e36(n73) : e36(r57, n73));
                                        } catch (t16) {
                                            u48.throwLater(t16);
                                        }
                                        "unhandledRejection" === t15 ? P4(t15, r57, n73) || o68 || q4(r57, "Unhandled rejection ") : P4(t15, n73);
                                    }
                                    function H4(t15) {
                                        var e36;
                                        if ("function" == typeof t15) e36 = "[function " + (t15.name || "anonymous") + "]";
                                        else {
                                            if (e36 = t15 && "function" == typeof t15.toString ? t15.toString() : f27.toString(t15), /\[object [a-zA-Z0-9$_]+\]/.test(e36)) try {
                                                e36 = JSON.stringify(t15);
                                            } catch (t16) {
                                            }
                                            0 === e36.length && (e36 = "(empty array)");
                                        }
                                        return "(<" + (function(t16) {
                                            return t16.length < 41 ? t16 : t16.substr(0, 38) + "...";
                                        })(e36) + ">, no stack trace)";
                                    }
                                    function Y() {
                                        return "function" == typeof G;
                                    }
                                    var K4 = function() {
                                        return !1;
                                    }, z4 = /[\/<\(]([^:\/]+):(\d+):(?:\d+)\)?\s*$/;
                                    function Q(t15) {
                                        var e36 = t15.match(z4);
                                        if (e36) return {
                                            fileName: e36[1],
                                            line: parseInt(e36[2], 10)
                                        };
                                    }
                                    function J(t15) {
                                        this._parent = t15, this._promisesCreated = 0;
                                        var e36 = this._length = 1 + ((void 0) === t15 ? 0 : t15._length);
                                        G(this, J), e36 > 32 && this.uncycle();
                                    }
                                    f27.inherits(J, Error), n68.CapturedTrace = J, J.prototype.uncycle = function() {
                                        var t15 = this._length;
                                        if (!(t15 < 2)) {
                                            for(var e36 = [], r57 = {
                                            }, n73 = 0, o68 = this; (void 0) !== o68; ++n73)e36.push(o68), o68 = o68._parent;
                                            for(n73 = (t15 = this._length = n73) - 1; n73 >= 0; --n73){
                                                var i59 = e36[n73].stack;
                                                (void 0) === r57[i59] && (r57[i59] = n73);
                                            }
                                            for(n73 = 0; n73 < t15; ++n73){
                                                var s39 = r57[e36[n73].stack];
                                                if ((void 0) !== s39 && s39 !== n73) {
                                                    s39 > 0 && (e36[s39 - 1]._parent = void 0, e36[s39 - 1]._length = 1), e36[n73]._parent = void 0, e36[n73]._length = 1;
                                                    var a45 = n73 > 0 ? e36[n73 - 1] : this;
                                                    s39 < t15 - 1 ? (a45._parent = e36[s39 + 1], a45._parent.uncycle(), a45._length = a45._parent._length + 1) : (a45._parent = void 0, a45._length = 1);
                                                    for(var u49 = a45._length + 1, c35 = n73 - 2; c35 >= 0; --c35)e36[c35]._length = u49, u49++;
                                                    return;
                                                }
                                            }
                                        }
                                    }, J.prototype.attachExtraTrace = function(t15) {
                                        if (!t15.__stackCleaned__) {
                                            this.uncycle();
                                            for(var e37 = V5(t15), r58 = e37.message, n74 = [
                                                e37.stack
                                            ], o69 = this; (void 0) !== o69;)n74.push(U4(o69.stack.split("\n"))), o69 = o69._parent;
                                            !function(t16) {
                                                for(var e38 = t16[0], r59 = 1; r59 < t16.length; ++r59){
                                                    for(var n75 = t16[r59], o70 = e38.length - 1, i60 = e38[o70], s40 = -1, a46 = n75.length - 1; a46 >= 0; --a46)if (n75[a46] === i60) {
                                                        s40 = a46;
                                                        break;
                                                    }
                                                    for(a46 = s40; a46 >= 0; --a46){
                                                        var u50 = n75[a46];
                                                        if (e38[o70] !== u50) break;
                                                        e38.pop(), o70--;
                                                    }
                                                    e38 = n75;
                                                }
                                            }(n74), (function(t16) {
                                                for(var e38 = 0; e38 < t16.length; ++e38)(0 === t16[e38].length || e38 + 1 < t16.length && t16[e38][0] === t16[e38 + 1][0]) && (t16.splice(e38, 1), e38--);
                                            })(n74), f27.notEnumerableProp(t15, "stack", function(t16, e38) {
                                                for(var r59 = 0; r59 < e38.length - 1; ++r59)e38[r59].push("From previous event:"), e38[r59] = e38[r59].join("\n");
                                                return r59 < e38.length && (e38[r59] = e38[r59].join("\n")), t16 + "\n" + e38.join("\n");
                                            }(r58, n74)), f27.notEnumerableProp(t15, "__stackCleaned__", !0);
                                        }
                                    };
                                    var G = function() {
                                        var t15 = /^\s*at\s*/, e38 = function(t16, e39) {
                                            return "string" == typeof t16 ? t16 : (void 0) !== e39.name && (void 0) !== e39.message ? e39.toString() : H4(e39);
                                        };
                                        if ("number" == typeof Error.stackTraceLimit && "function" == typeof Error.captureStackTrace) {
                                            Error.stackTraceLimit += 6, _14 = t15, v8 = e38;
                                            var r59 = Error.captureStackTrace;
                                            return K4 = function(t16) {
                                                return h13.test(t16);
                                            }, function(t16, e39) {
                                                Error.stackTraceLimit += 6, r59(t16, e39), Error.stackTraceLimit -= 6;
                                            };
                                        }
                                        var n76, o71 = new Error;
                                        if ("string" == typeof o71.stack && o71.stack.split("\n")[0].indexOf("stackDetection@") >= 0) return _14 = /@/, v8 = e38, m5 = !0, function(t16) {
                                            t16.stack = (new Error).stack;
                                        };
                                        try {
                                            throw new Error;
                                        } catch (t16) {
                                            n76 = "stack" in t16;
                                        }
                                        return !("stack" in o71) && n76 && "number" == typeof Error.stackTraceLimit ? (_14 = t15, v8 = e38, function(t16) {
                                            Error.stackTraceLimit += 6;
                                            try {
                                                throw new Error;
                                            } catch (e39) {
                                                t16.stack = e39.stack;
                                            }
                                            Error.stackTraceLimit -= 6;
                                        }) : (v8 = function(t16, e39) {
                                            return "string" == typeof t16 ? t16 : "object" !== c33(e39) && "function" != typeof e39 || (void 0) === e39.name || (void 0) === e39.message ? H4(e39) : e39.toString();
                                        }, null);
                                    }();
                                    "undefined" != typeof console && (void 0) !== console.warn && (s37 = function(t15) {
                                        console.warn(t15);
                                    }, f27.isNode && r48.stderr.isTTY ? s37 = function(t15, e38) {
                                        var r60 = e38 ? "[33m" : "[31m";
                                        console.warn(r60 + t15 + "[0m\n");
                                    } : f27.isNode || "string" != typeof (new Error).stack || (s37 = function(t15, e38) {
                                        console.warn("%c" + t15, e38 ? "color: darkorange" : "color: red");
                                    }));
                                    var X = {
                                        warnings: b8,
                                        longStackTraces: !1,
                                        cancellation: !1,
                                        monitoring: !1
                                    };
                                    return w8 && e34.longStackTraces(), {
                                        longStackTraces: function() {
                                            return X.longStackTraces;
                                        },
                                        warnings: function() {
                                            return X.warnings;
                                        },
                                        cancellation: function() {
                                            return X.cancellation;
                                        },
                                        monitoring: function() {
                                            return X.monitoring;
                                        },
                                        propagateFromFunction: function() {
                                            return D;
                                        },
                                        boundValueFunction: function() {
                                            return M6;
                                        },
                                        checkForgottenReturns: function(t15, e38, r60, n76, o71) {
                                            if ((void 0) === t15 && null !== e38 && O7) {
                                                if ((void 0) !== o71 && o71._returnedNonUndefined()) return;
                                                if (0 == (65535 & n76._bitField)) return;
                                                r60 && (r60 += " ");
                                                var i61 = "", s41 = "";
                                                if (e38._trace) {
                                                    for(var a47 = e38._trace.stack.split("\n"), u51 = U4(a47), c36 = u51.length - 1; c36 >= 0; --c36){
                                                        var l31 = u51[c36];
                                                        if (!y20.test(l31)) {
                                                            var f28 = l31.match(d15);
                                                            f28 && (i61 = "at " + f28[1] + ":" + f28[2] + ":" + f28[3] + " ");
                                                            break;
                                                        }
                                                    }
                                                    if (u51.length > 0) {
                                                        var p20 = u51[0];
                                                        for(c36 = 0; c36 < a47.length; ++c36)if (a47[c36] === p20) {
                                                            c36 > 0 && (s41 = "\n" + a47[c36 - 1]);
                                                            break;
                                                        }
                                                    }
                                                }
                                                var h14 = "a promise was created in a " + r60 + "handler " + i61 + "but was not returned from it, see http://goo.gl/rRqMUw" + s41;
                                                n76._warn(h14, !0, e38);
                                            }
                                        },
                                        setBounds: function(t15, e38) {
                                            if (Y()) {
                                                for(var r60, n76, o71 = t15.stack.split("\n"), i62 = e38.stack.split("\n"), s42 = -1, a48 = -1, u52 = 0; u52 < o71.length; ++u52)if (c37 = Q(o71[u52])) {
                                                    r60 = c37.fileName, s42 = c37.line;
                                                    break;
                                                }
                                                for(u52 = 0; u52 < i62.length; ++u52){
                                                    var c37;
                                                    if (c37 = Q(i62[u52])) {
                                                        n76 = c37.fileName, a48 = c37.line;
                                                        break;
                                                    }
                                                }
                                                s42 < 0 || a48 < 0 || !r60 || !n76 || r60 !== n76 || s42 >= a48 || (K4 = function(t16) {
                                                    if (h13.test(t16)) return !0;
                                                    var e39 = Q(t16);
                                                    return !!(e39 && e39.fileName === r60 && s42 <= e39.line && e39.line <= a48);
                                                });
                                            }
                                        },
                                        warn: L5,
                                        deprecated: function(t15, e38) {
                                            var r61 = t15 + " is deprecated and will be removed in a future version.";
                                            return e38 && (r61 += " Use " + e38 + " instead."), L5(r61);
                                        },
                                        CapturedTrace: J,
                                        fireDomEvent: A5,
                                        fireGlobalEvent: $4
                                    };
                                };
                            },
                            {
                                "./errors": 12,
                                "./util": 36
                            }
                        ],
                        10: [
                            function(t9, e32, r61) {
                                "use strict";
                                e32.exports = function(t15) {
                                    function e34() {
                                        return this.value;
                                    }
                                    function r62() {
                                        throw this.reason;
                                    }
                                    t15.prototype.return = t15.prototype.thenReturn = function(r63) {
                                        return r63 instanceof t15 && r63.suppressUnhandledRejections(), this._then(e34, void 0, void 0, {
                                            value: r63
                                        }, void 0);
                                    }, t15.prototype.throw = t15.prototype.thenThrow = function(t16) {
                                        return this._then(r62, void 0, void 0, {
                                            reason: t16
                                        }, void 0);
                                    }, t15.prototype.catchThrow = function(t16) {
                                        if (arguments.length <= 1) return this._then(void 0, r62, void 0, {
                                            reason: t16
                                        }, void 0);
                                        var e38 = arguments[1], n65 = function() {
                                            throw e38;
                                        };
                                        return this.caught(t16, n65);
                                    }, t15.prototype.catchReturn = function(r63) {
                                        if (arguments.length <= 1) return r63 instanceof t15 && r63.suppressUnhandledRejections(), this._then(void 0, e34, void 0, {
                                            value: r63
                                        }, void 0);
                                        var n65 = arguments[1];
                                        n65 instanceof t15 && n65.suppressUnhandledRejections();
                                        var o64 = function() {
                                            return n65;
                                        };
                                        return this.caught(r63, o64);
                                    };
                                };
                            },
                            {
                            }
                        ],
                        11: [
                            function(t9, e32, r61) {
                                "use strict";
                                e32.exports = function(t15, e34) {
                                    var r62 = t15.reduce, n65 = t15.all;
                                    function o64() {
                                        return n65(this);
                                    }
                                    t15.prototype.each = function(t16) {
                                        return r62(this, t16, e34, 0)._then(o64, void 0, void 0, this, void 0);
                                    }, t15.prototype.mapSeries = function(t16) {
                                        return r62(this, t16, e34, e34);
                                    }, t15.each = function(t16, n68) {
                                        return r62(t16, n68, e34, 0)._then(o64, void 0, void 0, t16, void 0);
                                    }, t15.mapSeries = function(t16, n68) {
                                        return r62(t16, n68, e34, e34);
                                    };
                                };
                            },
                            {
                            }
                        ],
                        12: [
                            function(t9, e32, r61) {
                                "use strict";
                                var n65, o64, i56 = t9("./es5"), s37 = i56.freeze, a44 = t9("./util"), u48 = a44.inherits, c38 = a44.notEnumerableProp;
                                function l30(t15, e34) {
                                    function r62(n68) {
                                        if (!(this instanceof r62)) return new r62(n68);
                                        c38(this, "message", "string" == typeof n68 ? n68 : e34), c38(this, "name", t15), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : Error.call(this);
                                    }
                                    return u48(r62, Error), r62;
                                }
                                var f27 = l30("Warning", "warning"), p19 = l30("CancellationError", "cancellation error"), h13 = l30("TimeoutError", "timeout error"), y20 = l30("AggregateError", "aggregate error");
                                try {
                                    n65 = TypeError, o64 = RangeError;
                                } catch (t15) {
                                    n65 = l30("TypeError", "type error"), o64 = l30("RangeError", "range error");
                                }
                                for(var d15 = "join pop push shift unshift slice filter forEach some every map indexOf lastIndexOf reduce reduceRight sort reverse".split(" "), _14 = 0; _14 < d15.length; ++_14)"function" == typeof Array.prototype[d15[_14]] && (y20.prototype[d15[_14]] = Array.prototype[d15[_14]]);
                                i56.defineProperty(y20.prototype, "length", {
                                    value: 0,
                                    configurable: !1,
                                    writable: !0,
                                    enumerable: !0
                                }), y20.prototype.isOperational = !0;
                                var v8 = 0;
                                function m5(t15) {
                                    if (!(this instanceof m5)) return new m5(t15);
                                    c38(this, "name", "OperationalError"), c38(this, "message", t15), this.cause = t15, this.isOperational = !0, t15 instanceof Error ? (c38(this, "message", t15.message), c38(this, "stack", t15.stack)) : Error.captureStackTrace && Error.captureStackTrace(this, this.constructor);
                                }
                                y20.prototype.toString = function() {
                                    var t15 = Array(4 * v8 + 1).join(" "), e34 = "\n" + t15 + "AggregateError of:\n";
                                    v8++, t15 = Array(4 * v8 + 1).join(" ");
                                    for(var r62 = 0; r62 < this.length; ++r62){
                                        for(var n68 = this[r62] === this ? "[Circular AggregateError]" : this[r62] + "", o72 = n68.split("\n"), i63 = 0; i63 < o72.length; ++i63)o72[i63] = t15 + o72[i63];
                                        e34 += (n68 = o72.join("\n")) + "\n";
                                    }
                                    return v8--, e34;
                                }, u48(m5, Error);
                                var g7 = Error.__BluebirdErrorTypes__;
                                g7 || (g7 = s37({
                                    CancellationError: p19,
                                    TimeoutError: h13,
                                    OperationalError: m5,
                                    RejectionError: m5,
                                    AggregateError: y20
                                }), i56.defineProperty(Error, "__BluebirdErrorTypes__", {
                                    value: g7,
                                    writable: !1,
                                    enumerable: !1,
                                    configurable: !1
                                })), e32.exports = {
                                    Error: Error,
                                    TypeError: n65,
                                    RangeError: o64,
                                    CancellationError: g7.CancellationError,
                                    OperationalError: g7.OperationalError,
                                    TimeoutError: g7.TimeoutError,
                                    AggregateError: g7.AggregateError,
                                    Warning: f27
                                };
                            },
                            {
                                "./es5": 13,
                                "./util": 36
                            }
                        ],
                        13: [
                            function(t9, e32, r61) {
                                var n65 = function() {
                                    return (void 0) === this;
                                }();
                                if (n65) e32.exports = {
                                    freeze: Object.freeze,
                                    defineProperty: Object.defineProperty,
                                    getDescriptor: Object.getOwnPropertyDescriptor,
                                    keys: Object.keys,
                                    names: Object.getOwnPropertyNames,
                                    getPrototypeOf: Object.getPrototypeOf,
                                    isArray: Array.isArray,
                                    isES5: n65,
                                    propertyIsWritable: function(t15, e34) {
                                        var r62 = Object.getOwnPropertyDescriptor(t15, e34);
                                        return !(r62 && !r62.writable && !r62.set);
                                    }
                                };
                                else {
                                    var o64 = {
                                    }.hasOwnProperty, i56 = {
                                    }.toString, s37 = {
                                    }.constructor.prototype, a44 = function(t15) {
                                        var e34 = [];
                                        for(var r62 in t15)o64.call(t15, r62) && e34.push(r62);
                                        return e34;
                                    };
                                    e32.exports = {
                                        isArray: function(t15) {
                                            try {
                                                return "[object Array]" === i56.call(t15);
                                            } catch (t16) {
                                                return !1;
                                            }
                                        },
                                        keys: a44,
                                        names: a44,
                                        defineProperty: function(t15, e34, r62) {
                                            return t15[e34] = r62.value, t15;
                                        },
                                        getDescriptor: function(t15, e34) {
                                            return {
                                                value: t15[e34]
                                            };
                                        },
                                        freeze: function(t15) {
                                            return t15;
                                        },
                                        getPrototypeOf: function(t15) {
                                            try {
                                                return Object(t15).constructor.prototype;
                                            } catch (t16) {
                                                return s37;
                                            }
                                        },
                                        isES5: n65,
                                        propertyIsWritable: function() {
                                            return !0;
                                        }
                                    };
                                }
                            },
                            {
                            }
                        ],
                        14: [
                            function(t9, e32, r61) {
                                "use strict";
                                e32.exports = function(t15, e34) {
                                    var r62 = t15.map;
                                    t15.prototype.filter = function(t16, n65) {
                                        return r62(this, t16, n65, e34);
                                    }, t15.filter = function(t16, n65, o73) {
                                        return r62(t16, n65, o73, e34);
                                    };
                                };
                            },
                            {
                            }
                        ],
                        15: [
                            function(t9, e32, r61) {
                                "use strict";
                                e32.exports = function(e34, r62, n65) {
                                    var o73 = t9("./util"), i64 = e34.CancellationError, s43 = o73.errorObj, a49 = t9("./catch_filter")(n65);
                                    function u48(t15, e38, r63) {
                                        this.promise = t15, this.type = e38, this.handler = r63, this.called = !1, this.cancelPromise = null;
                                    }
                                    function c38(t15) {
                                        this.finallyHandler = t15;
                                    }
                                    function l30(t15, e38) {
                                        return null != t15.cancelPromise && (arguments.length > 1 ? t15.cancelPromise._reject(e38) : t15.cancelPromise._cancel(), t15.cancelPromise = null, !0);
                                    }
                                    function f27() {
                                        return h13.call(this, this.promise._target()._settledValue());
                                    }
                                    function p19(t15) {
                                        if (!l30(this, t15)) return s43.e = t15, s43;
                                    }
                                    function h13(t15) {
                                        var o74 = this.promise, a50 = this.handler;
                                        if (!this.called) {
                                            this.called = !0;
                                            var u53 = this.isFinallyHandler() ? a50.call(o74._boundValue()) : a50.call(o74._boundValue(), t15);
                                            if (u53 === n65) return u53;
                                            if ((void 0) !== u53) {
                                                o74._setReturnedNonUndefined();
                                                var h15 = r62(u53, o74);
                                                if (h15 instanceof e34) {
                                                    if (null != this.cancelPromise) {
                                                        if (h15._isCancelled()) {
                                                            var y20 = new i64("late cancellation observer");
                                                            return o74._attachExtraTrace(y20), s43.e = y20, s43;
                                                        }
                                                        h15.isPending() && h15._attachCancellationCallback(new c38(this));
                                                    }
                                                    return h15._then(f27, p19, void 0, this, void 0);
                                                }
                                            }
                                        }
                                        return o74.isRejected() ? (l30(this), s43.e = t15, s43) : (l30(this), t15);
                                    }
                                    return u48.prototype.isFinallyHandler = function() {
                                        return 0 === this.type;
                                    }, c38.prototype._resultCancelled = function() {
                                        l30(this.finallyHandler);
                                    }, e34.prototype._passThrough = function(t15, e38, r63, n77) {
                                        return "function" != typeof t15 ? this.then() : this._then(r63, n77, void 0, new u48(this, e38, t15), void 0);
                                    }, e34.prototype.lastly = e34.prototype.finally = function(t15) {
                                        return this._passThrough(t15, 0, h13, h13);
                                    }, e34.prototype.tap = function(t15) {
                                        return this._passThrough(t15, 1, h13);
                                    }, e34.prototype.tapCatch = function(t15) {
                                        var r63 = arguments.length;
                                        if (1 === r63) return this._passThrough(t15, 1, void 0, h13);
                                        var n77, i65 = new Array(r63 - 1), s44 = 0;
                                        for(n77 = 0; n77 < r63 - 1; ++n77){
                                            var u54 = arguments[n77];
                                            if (!o73.isObject(u54)) return e34.reject(new TypeError("tapCatch statement predicate: expecting an object but got " + o73.classString(u54)));
                                            i65[s44++] = u54;
                                        }
                                        i65.length = s44;
                                        var c39 = arguments[n77];
                                        return this._passThrough(a49(i65, c39, this), 1, void 0, h13);
                                    }, u48;
                                };
                            },
                            {
                                "./catch_filter": 7,
                                "./util": 36
                            }
                        ],
                        16: [
                            function(t9, e32, r61) {
                                "use strict";
                                e32.exports = function(e34, r62, n65, o73, i64, s43) {
                                    var a49 = t9("./errors").TypeError, u48 = t9("./util"), c38 = u48.errorObj, l30 = u48.tryCatch, f27 = [];
                                    function p19(t15, r63, o74, i65) {
                                        if (s43.cancellation()) {
                                            var a50 = new e34(n65), u55 = this._finallyPromise = new e34(n65);
                                            this._promise = a50.lastly(function() {
                                                return u55;
                                            }), a50._captureStackTrace(), a50._setOnCancel(this);
                                        } else (this._promise = new e34(n65))._captureStackTrace();
                                        this._stack = i65, this._generatorFunction = t15, this._receiver = r63, this._generator = void 0, this._yieldHandlers = "function" == typeof o74 ? [
                                            o74
                                        ].concat(f27) : f27, this._yieldedPromise = null, this._cancellationPhase = !1;
                                    }
                                    u48.inherits(p19, i64), p19.prototype._isResolved = function() {
                                        return null === this._promise;
                                    }, p19.prototype._cleanup = function() {
                                        this._promise = this._generator = null, s43.cancellation() && null !== this._finallyPromise && (this._finallyPromise._fulfill(), this._finallyPromise = null);
                                    }, p19.prototype._promiseCancelled = function() {
                                        if (!this._isResolved()) {
                                            var t15;
                                            if ((void 0) !== this._generator.return) this._promise._pushContext(), t15 = l30(this._generator.return).call(this._generator, void 0), this._promise._popContext();
                                            else {
                                                var r63 = new e34.CancellationError("generator .return() sentinel");
                                                e34.coroutine.returnSentinel = r63, this._promise._attachExtraTrace(r63), this._promise._pushContext(), t15 = l30(this._generator.throw).call(this._generator, r63), this._promise._popContext();
                                            }
                                            this._cancellationPhase = !0, this._yieldedPromise = null, this._continue(t15);
                                        }
                                    }, p19.prototype._promiseFulfilled = function(t16) {
                                        this._yieldedPromise = null, this._promise._pushContext();
                                        var e38 = l30(this._generator.next).call(this._generator, t16);
                                        this._promise._popContext(), this._continue(e38);
                                    }, p19.prototype._promiseRejected = function(t16) {
                                        this._yieldedPromise = null, this._promise._attachExtraTrace(t16), this._promise._pushContext();
                                        var e38 = l30(this._generator.throw).call(this._generator, t16);
                                        this._promise._popContext(), this._continue(e38);
                                    }, p19.prototype._resultCancelled = function() {
                                        if (this._yieldedPromise instanceof e34) {
                                            var t16 = this._yieldedPromise;
                                            this._yieldedPromise = null, t16.cancel();
                                        }
                                    }, p19.prototype.promise = function() {
                                        return this._promise;
                                    }, p19.prototype._run = function() {
                                        this._generator = this._generatorFunction.call(this._receiver), this._receiver = this._generatorFunction = void 0, this._promiseFulfilled(void 0);
                                    }, p19.prototype._continue = function(t17) {
                                        var r64 = this._promise;
                                        if (t17 === c38) return this._cleanup(), this._cancellationPhase ? r64.cancel() : r64._rejectCallback(t17.e, !1);
                                        var n77 = t17.value;
                                        if (!0 === t17.done) return this._cleanup(), this._cancellationPhase ? r64.cancel() : r64._resolveCallback(n77);
                                        var i65 = o73(n77, this._promise);
                                        if (i65 instanceof e34 || null !== (i65 = (function(t18, r65, n78) {
                                            for(var i66 = 0; i66 < r65.length; ++i66){
                                                n78._pushContext();
                                                var s44 = l30(r65[i66])(t18);
                                                if (n78._popContext(), s44 === c38) {
                                                    n78._pushContext();
                                                    var a51 = e34.reject(c38.e);
                                                    return n78._popContext(), a51;
                                                }
                                                var u56 = o73(s44, n78);
                                                if (u56 instanceof e34) return u56;
                                            }
                                            return null;
                                        })(i65, this._yieldHandlers, this._promise))) {
                                            var s45 = (i65 = i65._target())._bitField;
                                            0 == (50397184 & s45) ? (this._yieldedPromise = i65, i65._proxy(this, null)) : 0 != (33554432 & s45) ? e34._async.invoke(this._promiseFulfilled, this, i65._value()) : 0 != (16777216 & s45) ? e34._async.invoke(this._promiseRejected, this, i65._reason()) : this._promiseCancelled();
                                        } else this._promiseRejected(new a49("A value %s was yielded that could not be treated as a promise\n\n    See http://goo.gl/MqrFmX\n\n".replace("%s", String(n77)) + "From coroutine:\n" + this._stack.split("\n").slice(1, -7).join("\n")));
                                    }, e34.coroutine = function(t17, e38) {
                                        if ("function" != typeof t17) throw new a49("generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n");
                                        var r64 = Object(e38).yieldHandler, n77 = p19, o74 = (new Error).stack;
                                        return function() {
                                            var e39 = t17.apply(this, arguments), i65 = new n77(void 0, void 0, r64, o74), s46 = i65.promise();
                                            return i65._generator = e39, i65._promiseFulfilled(void 0), s46;
                                        };
                                    }, e34.coroutine.addYieldHandler = function(t17) {
                                        if ("function" != typeof t17) throw new a49("expecting a function but got " + u48.classString(t17));
                                        f27.push(t17);
                                    }, e34.spawn = function(t17) {
                                        if (s43.deprecated("Promise.spawn()", "Promise.coroutine()"), "function" != typeof t17) return r62("generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n");
                                        var n77 = new p19(t17, this), o74 = n77.promise();
                                        return n77._run(e34.spawn), o74;
                                    };
                                };
                            },
                            {
                                "./errors": 12,
                                "./util": 36
                            }
                        ],
                        17: [
                            function(t9, e32, r61) {
                                "use strict";
                                e32.exports = function(e34, r62, n65, o73, i64, s43) {
                                    var a49 = t9("./util");
                                    a49.canEvaluate, a49.tryCatch, a49.errorObj, e34.join = function() {
                                        var t17, e38 = arguments.length - 1;
                                        e38 > 0 && "function" == typeof arguments[e38] && (t17 = arguments[e38]);
                                        var n77 = [].slice.call(arguments);
                                        t17 && n77.pop();
                                        var o74 = new r62(n77).promise();
                                        return (void 0) !== t17 ? o74.spread(t17) : o74;
                                    };
                                };
                            },
                            {
                                "./util": 36
                            }
                        ],
                        18: [
                            function(t9, e32, r61) {
                                "use strict";
                                e32.exports = function(e34, r62, n65, o73, i64, s43) {
                                    var a49 = e34._getDomain, u48 = t9("./util"), l30 = u48.tryCatch, f27 = u48.errorObj, p19 = e34._async;
                                    function h13(t17, e38, r64, n77) {
                                        this.constructor$(t17), this._promise._captureStackTrace();
                                        var o74 = a49();
                                        this._callback = null === o74 ? e38 : u48.domainBind(o74, e38), this._preservedValues = n77 === i64 ? new Array(this.length()) : null, this._limit = r64, this._inFlight = 0, this._queue = [], p19.invoke(this._asyncInit, this, void 0);
                                    }
                                    function y21(t17, r64, o74, i65) {
                                        if ("function" != typeof r64) return n65("expecting a function but got " + u48.classString(r64));
                                        var s46 = 0;
                                        if ((void 0) !== o74) {
                                            if ("object" !== c33(o74) || null === o74) return e34.reject(new TypeError("options argument must be an object but it is " + u48.classString(o74)));
                                            if ("number" != typeof o74.concurrency) return e34.reject(new TypeError("'concurrency' must be a number but it is " + u48.classString(o74.concurrency)));
                                            s46 = o74.concurrency;
                                        }
                                        return new h13(t17, r64, s46 = "number" == typeof s46 && isFinite(s46) && s46 >= 1 ? s46 : 0, i65).promise();
                                    }
                                    u48.inherits(h13, r62), h13.prototype._asyncInit = function() {
                                        this._init$(void 0, -2);
                                    }, h13.prototype._init = function() {
                                    }, h13.prototype._promiseFulfilled = function(t17, r64) {
                                        var n77 = this._values, i65 = this.length(), a52 = this._preservedValues, u57 = this._limit;
                                        if (r64 < 0) {
                                            if (n77[r64 = -1 * r64 - 1] = t17, u57 >= 1 && (this._inFlight--, this._drainQueue(), this._isResolved())) return !0;
                                        } else {
                                            if (u57 >= 1 && this._inFlight >= u57) return n77[r64] = t17, this._queue.push(r64), !1;
                                            null !== a52 && (a52[r64] = t17);
                                            var c38 = this._promise, p21 = this._callback, h16 = c38._boundValue();
                                            c38._pushContext();
                                            var y22 = l30(p21).call(h16, t17, r64, i65), d15 = c38._popContext();
                                            if (s43.checkForgottenReturns(y22, d15, null !== a52 ? "Promise.filter" : "Promise.map", c38), y22 === f27) return this._reject(y22.e), !0;
                                            var _14 = o73(y22, this._promise);
                                            if (_14 instanceof e34) {
                                                var v8 = (_14 = _14._target())._bitField;
                                                if (0 == (50397184 & v8)) return u57 >= 1 && this._inFlight++, n77[r64] = _14, _14._proxy(this, -1 * (r64 + 1)), !1;
                                                if (0 == (33554432 & v8)) return 0 != (16777216 & v8) ? (this._reject(_14._reason()), !0) : (this._cancel(), !0);
                                                y22 = _14._value();
                                            }
                                            n77[r64] = y22;
                                        }
                                        return (++this._totalResolved) >= i65 && (null !== a52 ? this._filter(n77, a52) : this._resolve(n77), !0);
                                    }, h13.prototype._drainQueue = function() {
                                        for(var t17 = this._queue, e38 = this._limit, r64 = this._values; t17.length > 0 && this._inFlight < e38;){
                                            if (this._isResolved()) return;
                                            var n77 = t17.pop();
                                            this._promiseFulfilled(r64[n77], n77);
                                        }
                                    }, h13.prototype._filter = function(t17, e38) {
                                        for(var r64 = e38.length, n78 = new Array(r64), o74 = 0, i65 = 0; i65 < r64; ++i65)t17[i65] && (n78[o74++] = e38[i65]);
                                        n78.length = o74, this._resolve(n78);
                                    }, h13.prototype.preservedValues = function() {
                                        return this._preservedValues;
                                    }, e34.prototype.map = function(t17, e38) {
                                        return y21(this, t17, e38, null);
                                    }, e34.map = function(t17, e38, r64, n78) {
                                        return y21(t17, e38, r64, n78);
                                    };
                                };
                            },
                            {
                                "./util": 36
                            }
                        ],
                        19: [
                            function(t9, e32, r61) {
                                "use strict";
                                e32.exports = function(e34, r62, n65, o73, i64) {
                                    var s43 = t9("./util"), a49 = s43.tryCatch;
                                    e34.method = function(t17) {
                                        if ("function" != typeof t17) throw new e34.TypeError("expecting a function but got " + s43.classString(t17));
                                        return function() {
                                            var n78 = new e34(r62);
                                            n78._captureStackTrace(), n78._pushContext();
                                            var o74 = a49(t17).apply(this, arguments), s46 = n78._popContext();
                                            return i64.checkForgottenReturns(o74, s46, "Promise.method", n78), n78._resolveFromSyncValue(o74), n78;
                                        };
                                    }, e34.attempt = e34.try = function(t17) {
                                        if ("function" != typeof t17) return o73("expecting a function but got " + s43.classString(t17));
                                        var n78, u48 = new e34(r62);
                                        if (u48._captureStackTrace(), u48._pushContext(), arguments.length > 1) {
                                            i64.deprecated("calling Promise.try with more than 1 argument");
                                            var c39 = arguments[1], l30 = arguments[2];
                                            n78 = s43.isArray(c39) ? a49(t17).apply(l30, c39) : a49(t17).call(l30, c39);
                                        } else n78 = a49(t17)();
                                        var f27 = u48._popContext();
                                        return i64.checkForgottenReturns(n78, f27, "Promise.try", u48), u48._resolveFromSyncValue(n78), u48;
                                    }, e34.prototype._resolveFromSyncValue = function(t17) {
                                        t17 === s43.errorObj ? this._rejectCallback(t17.e, !1) : this._resolveCallback(t17, !0);
                                    };
                                };
                            },
                            {
                                "./util": 36
                            }
                        ],
                        20: [
                            function(t9, e32, r61) {
                                "use strict";
                                var n65 = t9("./util"), o73 = n65.maybeWrapAsError, i64 = t9("./errors").OperationalError, s43 = t9("./es5"), a49 = /^(?:name|message|stack|cause)$/;
                                function u48(t17) {
                                    var e34;
                                    if ((function(t18) {
                                        return t18 instanceof Error && s43.getPrototypeOf(t18) === Error.prototype;
                                    })(t17)) {
                                        (e34 = new i64(t17)).name = t17.name, e34.message = t17.message, e34.stack = t17.stack;
                                        for(var r62 = s43.keys(t17), o74 = 0; o74 < r62.length; ++o74){
                                            var u57 = r62[o74];
                                            a49.test(u57) || (e34[u57] = t17[u57]);
                                        }
                                        return e34;
                                    }
                                    return n65.markAsOriginatingFromRejection(t17), t17;
                                }
                                e32.exports = function(t17, e34) {
                                    return function(r64, n78) {
                                        if (null !== t17) {
                                            if (r64) {
                                                var i65 = u48(o73(r64));
                                                t17._attachExtraTrace(i65), t17._reject(i65);
                                            } else if (e34) {
                                                var s46 = [].slice.call(arguments, 1);
                                                t17._fulfill(s46);
                                            } else t17._fulfill(n78);
                                            t17 = null;
                                        }
                                    };
                                };
                            },
                            {
                                "./errors": 12,
                                "./es5": 13,
                                "./util": 36
                            }
                        ],
                        21: [
                            function(t9, e32, r61) {
                                "use strict";
                                e32.exports = function(e34) {
                                    var r64 = t9("./util"), n65 = e34._async, o73 = r64.tryCatch, i64 = r64.errorObj;
                                    function s43(t17, e38) {
                                        if (!r64.isArray(t17)) return a49.call(this, t17, e38);
                                        var s47 = o73(e38).apply(this._boundValue(), [
                                            null
                                        ].concat(t17));
                                        s47 === i64 && n65.throwLater(s47.e);
                                    }
                                    function a49(t17, e38) {
                                        var r65 = this._boundValue(), s47 = (void 0) === t17 ? o73(e38).call(r65, null) : o73(e38).call(r65, null, t17);
                                        s47 === i64 && n65.throwLater(s47.e);
                                    }
                                    function u48(t17, e38) {
                                        if (!t17) {
                                            var r65 = new Error(t17 + "");
                                            r65.cause = t17, t17 = r65;
                                        }
                                        var s47 = o73(e38).call(this._boundValue(), t17);
                                        s47 === i64 && n65.throwLater(s47.e);
                                    }
                                    e34.prototype.asCallback = e34.prototype.nodeify = function(t17, e38) {
                                        if ("function" == typeof t17) {
                                            var r66 = a49;
                                            (void 0) !== e38 && Object(e38).spread && (r66 = s43), this._then(r66, u48, void 0, this, t17);
                                        }
                                        return this;
                                    };
                                };
                            },
                            {
                                "./util": 36
                            }
                        ],
                        22: [
                            function(t9, e32, n65) {
                                "use strict";
                                e32.exports = function() {
                                    var n78 = function() {
                                        return new y21("circular promise resolution chain\n\n    See http://goo.gl/MqrFmX\n");
                                    }, o73 = function() {
                                        return new x5.PromiseInspection(this._target());
                                    }, i64 = function(t17) {
                                        return x5.reject(new y21(t17));
                                    };
                                    function s43() {
                                    }
                                    var a49, u48 = {
                                    }, c40 = t9("./util");
                                    a49 = c40.isNode ? function() {
                                        var t17 = r48.domain;
                                        return (void 0) === t17 && (t17 = null), t17;
                                    } : function() {
                                        return null;
                                    }, c40.notEnumerableProp(x5, "_getDomain", a49);
                                    var l32 = t9("./es5"), f27 = t9("./async"), p19 = new f27;
                                    l32.defineProperty(x5, "_async", {
                                        value: p19
                                    });
                                    var h13 = t9("./errors"), y21 = x5.TypeError = h13.TypeError;
                                    x5.RangeError = h13.RangeError;
                                    var d16 = x5.CancellationError = h13.CancellationError;
                                    x5.TimeoutError = h13.TimeoutError, x5.OperationalError = h13.OperationalError, x5.RejectionError = h13.OperationalError, x5.AggregateError = h13.AggregateError;
                                    var _15 = function() {
                                    }, v9 = {
                                    }, m5 = {
                                    }, g7 = t9("./thenables")(x5, _15), b8 = t9("./promise_array")(x5, _15, g7, i64, s43), w8 = t9("./context")(x5), O7 = w8.create, S5 = t9("./debuggability")(x5, w8), A5 = (S5.CapturedTrace, t9("./finally")(x5, g7, m5)), $4 = t9("./catch_filter")(m5), E3 = t9("./nodeback"), j = c40.errorObj, P4 = c40.tryCatch;
                                    function x5(t17) {
                                        t17 !== _15 && (function(t18, e34) {
                                            if (null == t18 || t18.constructor !== x5) throw new y21("the promise constructor cannot be invoked directly\n\n    See http://goo.gl/MqrFmX\n");
                                            if ("function" != typeof e34) throw new y21("expecting a function but got " + c40.classString(e34));
                                        })(this, t17), this._bitField = 0, this._fulfillmentHandler0 = void 0, this._rejectionHandler0 = void 0, this._promise0 = void 0, this._receiver0 = void 0, this._resolveFromExecutor(t17), this._promiseCreated(), this._fireEvent("promiseCreated", this);
                                    }
                                    function T5(t17) {
                                        this.promise._resolveCallback(t17);
                                    }
                                    function N5(t17) {
                                        this.promise._rejectCallback(t17, !1);
                                    }
                                    function k4(t17) {
                                        var e34 = new x5(_15);
                                        e34._fulfillmentHandler0 = t17, e34._rejectionHandler0 = t17, e34._promise0 = t17, e34._receiver0 = t17;
                                    }
                                    return x5.prototype.toString = function() {
                                        return "[object Promise]";
                                    }, x5.prototype.caught = x5.prototype.catch = function(t17) {
                                        var e34 = arguments.length;
                                        if (e34 > 1) {
                                            var r61, n79 = new Array(e34 - 1), o75 = 0;
                                            for(r61 = 0; r61 < e34 - 1; ++r61){
                                                var s47 = arguments[r61];
                                                if (!c40.isObject(s47)) return i64("Catch statement predicate: expecting an object but got " + c40.classString(s47));
                                                n79[o75++] = s47;
                                            }
                                            return n79.length = o75, t17 = arguments[r61], this.then(void 0, $4(n79, t17, this));
                                        }
                                        return this.then(void 0, t17);
                                    }, x5.prototype.reflect = function() {
                                        return this._then(o73, o73, void 0, this, void 0);
                                    }, x5.prototype.then = function(t17, e34) {
                                        if (S5.warnings() && arguments.length > 0 && "function" != typeof t17 && "function" != typeof e34) {
                                            var r64 = ".then() only accepts functions but was passed: " + c40.classString(t17);
                                            arguments.length > 1 && (r64 += ", " + c40.classString(e34)), this._warn(r64);
                                        }
                                        return this._then(t17, e34, void 0, void 0, void 0);
                                    }, x5.prototype.done = function(t17, e34) {
                                        this._then(t17, e34, void 0, void 0, void 0)._setIsFinal();
                                    }, x5.prototype.spread = function(t17) {
                                        return "function" != typeof t17 ? i64("expecting a function but got " + c40.classString(t17)) : this.all()._then(t17, void 0, void 0, v9, void 0);
                                    }, x5.prototype.toJSON = function() {
                                        var t17 = {
                                            isFulfilled: !1,
                                            isRejected: !1,
                                            fulfillmentValue: void 0,
                                            rejectionReason: void 0
                                        };
                                        return this.isFulfilled() ? (t17.fulfillmentValue = this.value(), t17.isFulfilled = !0) : this.isRejected() && (t17.rejectionReason = this.reason(), t17.isRejected = !0), t17;
                                    }, x5.prototype.all = function() {
                                        return arguments.length > 0 && this._warn(".all() was passed arguments but it does not take any"), new b8(this).promise();
                                    }, x5.prototype.error = function(t17) {
                                        return this.caught(c40.originatesFromRejection, t17);
                                    }, x5.getNewLibraryCopy = e32.exports, x5.is = function(t17) {
                                        return t17 instanceof x5;
                                    }, x5.fromNode = x5.fromCallback = function(t17) {
                                        var e34 = new x5(_15);
                                        e34._captureStackTrace();
                                        var r67 = arguments.length > 1 && !!Object(arguments[1]).multiArgs, n80 = P4(t17)(E3(e34, r67));
                                        return n80 === j && e34._rejectCallback(n80.e, !0), e34._isFateSealed() || e34._setAsyncGuaranteed(), e34;
                                    }, x5.all = function(t17) {
                                        return new b8(t17).promise();
                                    }, x5.cast = function(t17) {
                                        var e34 = g7(t17);
                                        return e34 instanceof x5 || ((e34 = new x5(_15))._captureStackTrace(), e34._setFulfilled(), e34._rejectionHandler0 = t17), e34;
                                    }, x5.resolve = x5.fulfilled = x5.cast, x5.reject = x5.rejected = function(t17) {
                                        var e34 = new x5(_15);
                                        return e34._captureStackTrace(), e34._rejectCallback(t17, !0), e34;
                                    }, x5.setScheduler = function(t17) {
                                        if ("function" != typeof t17) throw new y21("expecting a function but got " + c40.classString(t17));
                                        return p19.setScheduler(t17);
                                    }, x5.prototype._then = function(t17, e34, r67, n80, o76) {
                                        var i66 = (void 0) !== o76, s48 = i66 ? o76 : new x5(_15), u58 = this._target(), l33 = u58._bitField;
                                        i66 || (s48._propagateFrom(this, 3), s48._captureStackTrace(), (void 0) === n80 && 0 != (2097152 & this._bitField) && (n80 = 0 != (50397184 & l33) ? this._boundValue() : u58 === this ? void 0 : this._boundTo), this._fireEvent("promiseChained", this, s48));
                                        var f29 = a49();
                                        if (0 != (50397184 & l33)) {
                                            var h17, y23, v10 = u58._settlePromiseCtx;
                                            0 != (33554432 & l33) ? (y23 = u58._rejectionHandler0, h17 = t17) : 0 != (16777216 & l33) ? (y23 = u58._fulfillmentHandler0, h17 = e34, u58._unsetRejectionIsUnhandled()) : (v10 = u58._settlePromiseLateCancellationObserver, y23 = new d16("late cancellation observer"), u58._attachExtraTrace(y23), h17 = e34), p19.invoke(v10, u58, {
                                                handler: null === f29 ? h17 : "function" == typeof h17 && c40.domainBind(f29, h17),
                                                promise: s48,
                                                receiver: n80,
                                                value: y23
                                            });
                                        } else u58._addCallbacks(t17, e34, s48, n80, f29);
                                        return s48;
                                    }, x5.prototype._length = function() {
                                        return 65535 & this._bitField;
                                    }, x5.prototype._isFateSealed = function() {
                                        return 0 != (117506048 & this._bitField);
                                    }, x5.prototype._isFollowing = function() {
                                        return 67108864 == (67108864 & this._bitField);
                                    }, x5.prototype._setLength = function(t17) {
                                        this._bitField = -65536 & this._bitField | 65535 & t17;
                                    }, x5.prototype._setFulfilled = function() {
                                        this._bitField = 33554432 | this._bitField, this._fireEvent("promiseFulfilled", this);
                                    }, x5.prototype._setRejected = function() {
                                        this._bitField = 16777216 | this._bitField, this._fireEvent("promiseRejected", this);
                                    }, x5.prototype._setFollowing = function() {
                                        this._bitField = 67108864 | this._bitField, this._fireEvent("promiseResolved", this);
                                    }, x5.prototype._setIsFinal = function() {
                                        this._bitField = 4194304 | this._bitField;
                                    }, x5.prototype._isFinal = function() {
                                        return (4194304 & this._bitField) > 0;
                                    }, x5.prototype._unsetCancelled = function() {
                                        this._bitField = -65537 & this._bitField;
                                    }, x5.prototype._setCancelled = function() {
                                        this._bitField = 65536 | this._bitField, this._fireEvent("promiseCancelled", this);
                                    }, x5.prototype._setWillBeCancelled = function() {
                                        this._bitField = 8388608 | this._bitField;
                                    }, x5.prototype._setAsyncGuaranteed = function() {
                                        p19.hasCustomScheduler() || (this._bitField = 134217728 | this._bitField);
                                    }, x5.prototype._receiverAt = function(t17) {
                                        var e34 = 0 === t17 ? this._receiver0 : this[4 * t17 - 4 + 3];
                                        if (e34 !== u48) return (void 0) === e34 && this._isBound() ? this._boundValue() : e34;
                                    }, x5.prototype._promiseAt = function(t17) {
                                        return this[4 * t17 - 4 + 2];
                                    }, x5.prototype._fulfillmentHandlerAt = function(t17) {
                                        return this[4 * t17 - 4 + 0];
                                    }, x5.prototype._rejectionHandlerAt = function(t17) {
                                        return this[4 * t17 - 4 + 1];
                                    }, x5.prototype._boundValue = function() {
                                    }, x5.prototype._migrateCallback0 = function(t17) {
                                        t17._bitField;
                                        var e34 = t17._fulfillmentHandler0, r67 = t17._rejectionHandler0, n80 = t17._promise0, o76 = t17._receiverAt(0);
                                        (void 0) === o76 && (o76 = u48), this._addCallbacks(e34, r67, n80, o76, null);
                                    }, x5.prototype._migrateCallbackAt = function(t17, e34) {
                                        var r67 = t17._fulfillmentHandlerAt(e34), n80 = t17._rejectionHandlerAt(e34), o76 = t17._promiseAt(e34), i66 = t17._receiverAt(e34);
                                        (void 0) === i66 && (i66 = u48), this._addCallbacks(r67, n80, o76, i66, null);
                                    }, x5.prototype._addCallbacks = function(t17, e34, r67, n80, o76) {
                                        var i66 = this._length();
                                        if (i66 >= 65531 && (i66 = 0, this._setLength(0)), 0 === i66) this._promise0 = r67, this._receiver0 = n80, "function" == typeof t17 && (this._fulfillmentHandler0 = null === o76 ? t17 : c40.domainBind(o76, t17)), "function" == typeof e34 && (this._rejectionHandler0 = null === o76 ? e34 : c40.domainBind(o76, e34));
                                        else {
                                            var s48 = 4 * i66 - 4;
                                            this[s48 + 2] = r67, this[s48 + 3] = n80, "function" == typeof t17 && (this[s48 + 0] = null === o76 ? t17 : c40.domainBind(o76, t17)), "function" == typeof e34 && (this[s48 + 1] = null === o76 ? e34 : c40.domainBind(o76, e34));
                                        }
                                        return this._setLength(i66 + 1), i66;
                                    }, x5.prototype._proxy = function(t17, e34) {
                                        this._addCallbacks(void 0, void 0, e34, t17, null);
                                    }, x5.prototype._resolveCallback = function(t17, e34) {
                                        if (0 == (117506048 & this._bitField)) {
                                            if (t17 === this) return this._rejectCallback(n78(), !1);
                                            var r67 = g7(t17, this);
                                            if (!(r67 instanceof x5)) return this._fulfill(t17);
                                            e34 && this._propagateFrom(r67, 2);
                                            var o76 = r67._target();
                                            if (o76 !== this) {
                                                var i66 = o76._bitField;
                                                if (0 == (50397184 & i66)) {
                                                    var s49 = this._length();
                                                    s49 > 0 && o76._migrateCallback0(this);
                                                    for(var a52 = 1; a52 < s49; ++a52)o76._migrateCallbackAt(this, a52);
                                                    this._setFollowing(), this._setLength(0), this._setFollowee(o76);
                                                } else if (0 != (33554432 & i66)) this._fulfill(o76._value());
                                                else if (0 != (16777216 & i66)) this._reject(o76._reason());
                                                else {
                                                    var u58 = new d16("late cancellation observer");
                                                    o76._attachExtraTrace(u58), this._reject(u58);
                                                }
                                            } else this._reject(n78());
                                        }
                                    }, x5.prototype._rejectCallback = function(t17, e34, r68) {
                                        var n80 = c40.ensureErrorObject(t17), o77 = n80 === t17;
                                        if (!o77 && !r68 && S5.warnings()) {
                                            var i67 = "a promise was rejected with a non-error: " + c40.classString(t17);
                                            this._warn(i67, !0);
                                        }
                                        this._attachExtraTrace(n80, !!e34 && o77), this._reject(t17);
                                    }, x5.prototype._resolveFromExecutor = function(t17) {
                                        if (t17 !== _15) {
                                            var e34 = this;
                                            this._captureStackTrace(), this._pushContext();
                                            var r68 = !0, n80 = this._execute(t17, function(t18) {
                                                e34._resolveCallback(t18);
                                            }, function(t18) {
                                                e34._rejectCallback(t18, r68);
                                            });
                                            r68 = !1, this._popContext(), (void 0) !== n80 && e34._rejectCallback(n80, !0);
                                        }
                                    }, x5.prototype._settlePromiseFromHandler = function(t17, e38, r69, n81) {
                                        var o77 = n81._bitField;
                                        if (0 == (65536 & o77)) {
                                            var i68;
                                            n81._pushContext(), e38 === v9 ? r69 && "number" == typeof r69.length ? i68 = P4(t17).apply(this._boundValue(), r69) : (i68 = j).e = new y21("cannot .spread() a non-array: " + c40.classString(r69)) : i68 = P4(t17).call(e38, r69);
                                            var s50 = n81._popContext();
                                            0 == (65536 & (o77 = n81._bitField)) && (i68 === m5 ? n81._reject(r69) : i68 === j ? n81._rejectCallback(i68.e, !1) : (S5.checkForgottenReturns(i68, s50, "", n81, this), n81._resolveCallback(i68)));
                                        }
                                    }, x5.prototype._target = function() {
                                        for(var t17 = this; t17._isFollowing();)t17 = t17._followee();
                                        return t17;
                                    }, x5.prototype._followee = function() {
                                        return this._rejectionHandler0;
                                    }, x5.prototype._setFollowee = function(t17) {
                                        this._rejectionHandler0 = t17;
                                    }, x5.prototype._settlePromise = function(t17, e38, r69, n81) {
                                        var i69 = t17 instanceof x5, a53 = this._bitField, u59 = 0 != (134217728 & a53);
                                        0 != (65536 & a53) ? (i69 && t17._invokeInternalOnCancel(), r69 instanceof A5 && r69.isFinallyHandler() ? (r69.cancelPromise = t17, P4(e38).call(r69, n81) === j && t17._reject(j.e)) : e38 === o73 ? t17._fulfill(o73.call(r69)) : r69 instanceof s43 ? r69._promiseCancelled(t17) : i69 || t17 instanceof b8 ? t17._cancel() : r69.cancel()) : "function" == typeof e38 ? i69 ? (u59 && t17._setAsyncGuaranteed(), this._settlePromiseFromHandler(e38, r69, n81, t17)) : e38.call(r69, n81, t17) : r69 instanceof s43 ? r69._isResolved() || (0 != (33554432 & a53) ? r69._promiseFulfilled(n81, t17) : r69._promiseRejected(n81, t17)) : i69 && (u59 && t17._setAsyncGuaranteed(), 0 != (33554432 & a53) ? t17._fulfill(n81) : t17._reject(n81));
                                    }, x5.prototype._settlePromiseLateCancellationObserver = function(t17) {
                                        var e38 = t17.handler, r69 = t17.promise, n81 = t17.receiver, o77 = t17.value;
                                        "function" == typeof e38 ? r69 instanceof x5 ? this._settlePromiseFromHandler(e38, n81, o77, r69) : e38.call(n81, o77, r69) : r69 instanceof x5 && r69._reject(o77);
                                    }, x5.prototype._settlePromiseCtx = function(t17) {
                                        this._settlePromise(t17.promise, t17.handler, t17.receiver, t17.value);
                                    }, x5.prototype._settlePromise0 = function(t17, e38, r69) {
                                        var n81 = this._promise0, o77 = this._receiverAt(0);
                                        this._promise0 = void 0, this._receiver0 = void 0, this._settlePromise(n81, t17, o77, e38);
                                    }, x5.prototype._clearCallbackDataAtIndex = function(t17) {
                                        var e38 = 4 * t17 - 4;
                                        this[e38 + 2] = this[e38 + 3] = this[e38 + 0] = this[e38 + 1] = void 0;
                                    }, x5.prototype._fulfill = function(t17) {
                                        var e38 = this._bitField;
                                        if (!((117506048 & e38) >>> 16)) {
                                            if (t17 === this) {
                                                var r69 = n78();
                                                return this._attachExtraTrace(r69), this._reject(r69);
                                            }
                                            this._setFulfilled(), this._rejectionHandler0 = t17, (65535 & e38) > 0 && (0 != (134217728 & e38) ? this._settlePromises() : p19.settlePromises(this));
                                        }
                                    }, x5.prototype._reject = function(t17) {
                                        var e38 = this._bitField;
                                        if (!((117506048 & e38) >>> 16)) {
                                            if (this._setRejected(), this._fulfillmentHandler0 = t17, this._isFinal()) return p19.fatalError(t17, c40.isNode);
                                            (65535 & e38) > 0 ? p19.settlePromises(this) : this._ensurePossibleRejectionHandled();
                                        }
                                    }, x5.prototype._fulfillPromises = function(t17, e38) {
                                        for(var r70 = 1; r70 < t17; r70++){
                                            var n81 = this._fulfillmentHandlerAt(r70), o77 = this._promiseAt(r70), i69 = this._receiverAt(r70);
                                            this._clearCallbackDataAtIndex(r70), this._settlePromise(o77, n81, i69, e38);
                                        }
                                    }, x5.prototype._rejectPromises = function(t17, e38) {
                                        for(var r70 = 1; r70 < t17; r70++){
                                            var n82 = this._rejectionHandlerAt(r70), o78 = this._promiseAt(r70), i70 = this._receiverAt(r70);
                                            this._clearCallbackDataAtIndex(r70), this._settlePromise(o78, n82, i70, e38);
                                        }
                                    }, x5.prototype._settlePromises = function() {
                                        var t17 = this._bitField, e38 = 65535 & t17;
                                        if (e38 > 0) {
                                            if (0 != (16842752 & t17)) {
                                                var r70 = this._fulfillmentHandler0;
                                                this._settlePromise0(this._rejectionHandler0, r70, t17), this._rejectPromises(e38, r70);
                                            } else {
                                                var n83 = this._rejectionHandler0;
                                                this._settlePromise0(this._fulfillmentHandler0, n83, t17), this._fulfillPromises(e38, n83);
                                            }
                                            this._setLength(0);
                                        }
                                        this._clearCancellationData();
                                    }, x5.prototype._settledValue = function() {
                                        var t17 = this._bitField;
                                        return 0 != (33554432 & t17) ? this._rejectionHandler0 : 0 != (16777216 & t17) ? this._fulfillmentHandler0 : void 0;
                                    }, x5.defer = x5.pending = function() {
                                        return S5.deprecated("Promise.defer", "new Promise"), {
                                            promise: new x5(_15),
                                            resolve: T5,
                                            reject: N5
                                        };
                                    }, c40.notEnumerableProp(x5, "_makeSelfResolutionError", n78), t9("./method")(x5, _15, g7, i64, S5), t9("./bind")(x5, _15, g7, S5), t9("./cancel")(x5, b8, i64, S5), t9("./direct_resolve")(x5), t9("./synchronous_inspection")(x5), t9("./join")(x5, b8, g7, _15, p19, a49), x5.Promise = x5, x5.version = "3.5.1", t9("./map.js")(x5, b8, i64, g7, _15, S5), t9("./call_get.js")(x5), t9("./using.js")(x5, i64, g7, O7, _15, S5), t9("./timers.js")(x5, _15, S5), t9("./generators.js")(x5, i64, _15, g7, s43, S5), t9("./nodeify.js")(x5), t9("./promisify.js")(x5, _15), t9("./props.js")(x5, b8, g7, i64), t9("./race.js")(x5, _15, g7, i64), t9("./reduce.js")(x5, b8, i64, g7, _15, S5), t9("./settle.js")(x5, b8, S5), t9("./some.js")(x5, b8, i64), t9("./filter.js")(x5, _15), t9("./each.js")(x5, _15), t9("./any.js")(x5), c40.toFastProperties(x5), c40.toFastProperties(x5.prototype), k4({
                                        a: 1
                                    }), k4({
                                        b: 2
                                    }), k4({
                                        c: 3
                                    }), k4(1), k4(function() {
                                    }), k4(void 0), k4(!1), k4(new x5(_15)), S5.setBounds(f27.firstLineError, c40.lastLineError), x5;
                                };
                            },
                            {
                                "./any.js": 1,
                                "./async": 2,
                                "./bind": 3,
                                "./call_get.js": 5,
                                "./cancel": 6,
                                "./catch_filter": 7,
                                "./context": 8,
                                "./debuggability": 9,
                                "./direct_resolve": 10,
                                "./each.js": 11,
                                "./errors": 12,
                                "./es5": 13,
                                "./filter.js": 14,
                                "./finally": 15,
                                "./generators.js": 16,
                                "./join": 17,
                                "./map.js": 18,
                                "./method": 19,
                                "./nodeback": 20,
                                "./nodeify.js": 21,
                                "./promise_array": 23,
                                "./promisify.js": 24,
                                "./props.js": 25,
                                "./race.js": 27,
                                "./reduce.js": 28,
                                "./settle.js": 30,
                                "./some.js": 31,
                                "./synchronous_inspection": 32,
                                "./thenables": 33,
                                "./timers.js": 34,
                                "./using.js": 35,
                                "./util": 36
                            }
                        ],
                        23: [
                            function(t9, e32, r71) {
                                "use strict";
                                e32.exports = function(e38, r72, n65, o73, i64) {
                                    var s43 = t9("./util");
                                    function a49(t17) {
                                        var n78 = this._promise = new e38(r72);
                                        t17 instanceof e38 && n78._propagateFrom(t17, 3), n78._setOnCancel(this), this._values = t17, this._length = 0, this._totalResolved = 0, this._init(void 0, -2);
                                    }
                                    return s43.isArray, s43.inherits(a49, i64), a49.prototype.length = function() {
                                        return this._length;
                                    }, a49.prototype.promise = function() {
                                        return this._promise;
                                    }, a49.prototype._init = function t17(r73, i71) {
                                        var a53 = n65(this._values, this._promise);
                                        if (a53 instanceof e38) {
                                            var u48 = (a53 = a53._target())._bitField;
                                            if (this._values = a53, 0 == (50397184 & u48)) return this._promise._setAsyncGuaranteed(), a53._then(t17, this._reject, void 0, this, i71);
                                            if (0 == (33554432 & u48)) return 0 != (16777216 & u48) ? this._reject(a53._reason()) : this._cancel();
                                            a53 = a53._value();
                                        }
                                        if (null !== (a53 = s43.asArray(a53))) 0 !== a53.length ? this._iterate(a53) : -5 === i71 ? this._resolveEmptyArray() : this._resolve(function(t18) {
                                            switch(t18){
                                                case -2:
                                                    return [];
                                                case -3:
                                                    return {
                                                    };
                                                case -6:
                                                    return new Map;
                                            }
                                        }(i71));
                                        else {
                                            var c40 = o73("expecting an array or an iterable object but got " + s43.classString(a53)).reason();
                                            this._promise._rejectCallback(c40, !1);
                                        }
                                    }, a49.prototype._iterate = function(t18) {
                                        var r73 = this.getActualLength(t18.length);
                                        this._length = r73, this._values = this.shouldCopyValues() ? new Array(r73) : this._values;
                                        for(var o79 = this._promise, i71 = !1, s51 = null, a53 = 0; a53 < r73; ++a53){
                                            var u59 = n65(t18[a53], o79);
                                            s51 = u59 instanceof e38 ? (u59 = u59._target())._bitField : null, i71 ? null !== s51 && u59.suppressUnhandledRejections() : null !== s51 ? 0 == (50397184 & s51) ? (u59._proxy(this, a53), this._values[a53] = u59) : i71 = 0 != (33554432 & s51) ? this._promiseFulfilled(u59._value(), a53) : 0 != (16777216 & s51) ? this._promiseRejected(u59._reason(), a53) : this._promiseCancelled(a53) : i71 = this._promiseFulfilled(u59, a53);
                                        }
                                        i71 || o79._setAsyncGuaranteed();
                                    }, a49.prototype._isResolved = function() {
                                        return null === this._values;
                                    }, a49.prototype._resolve = function(t18) {
                                        this._values = null, this._promise._fulfill(t18);
                                    }, a49.prototype._cancel = function() {
                                        !this._isResolved() && this._promise._isCancellable() && (this._values = null, this._promise._cancel());
                                    }, a49.prototype._reject = function(t18) {
                                        this._values = null, this._promise._rejectCallback(t18, !1);
                                    }, a49.prototype._promiseFulfilled = function(t18, e39) {
                                        return this._values[e39] = t18, (++this._totalResolved) >= this._length && (this._resolve(this._values), !0);
                                    }, a49.prototype._promiseCancelled = function() {
                                        return this._cancel(), !0;
                                    }, a49.prototype._promiseRejected = function(t18) {
                                        return this._totalResolved++, this._reject(t18), !0;
                                    }, a49.prototype._resultCancelled = function() {
                                        if (!this._isResolved()) {
                                            var t18 = this._values;
                                            if (this._cancel(), t18 instanceof e38) t18.cancel();
                                            else for(var r73 = 0; r73 < t18.length; ++r73)t18[r73] instanceof e38 && t18[r73].cancel();
                                        }
                                    }, a49.prototype.shouldCopyValues = function() {
                                        return !0;
                                    }, a49.prototype.getActualLength = function(t19) {
                                        return t19;
                                    }, a49;
                                };
                            },
                            {
                                "./util": 36
                            }
                        ],
                        24: [
                            function(t9, e32, r71) {
                                "use strict";
                                e32.exports = function(e38, r72) {
                                    var n65 = {
                                    }, o73 = t9("./util"), i64 = t9("./nodeback"), s43 = o73.withAppended, a49 = o73.maybeWrapAsError, u60 = o73.canEvaluate, l32 = t9("./errors").TypeError, f27 = {
                                        __isPromisified__: !0
                                    }, p19 = new RegExp("^(?:" + [
                                        "arity",
                                        "length",
                                        "name",
                                        "arguments",
                                        "caller",
                                        "callee",
                                        "prototype",
                                        "__isPromisified__"
                                    ].join("|") + ")$"), h13 = function(t17) {
                                        return o73.isIdentifier(t17) && "_" !== t17.charAt(0) && "constructor" !== t17;
                                    };
                                    function y21(t17) {
                                        return !p19.test(t17);
                                    }
                                    function d16(t17) {
                                        try {
                                            return !0 === t17.__isPromisified__;
                                        } catch (t19) {
                                            return !1;
                                        }
                                    }
                                    function _15(t17, e39, r74) {
                                        var n78 = o73.getDataPropertyOrDefault(t17, e39 + r74, f27);
                                        return !!n78 && d16(n78);
                                    }
                                    function v9(t17, e39, r74, n78) {
                                        for(var i71 = o73.inheritedDataKeys(t17), s51 = [], a53 = 0; a53 < i71.length; ++a53){
                                            var u61 = i71[a53], c41 = t17[u61], f29 = n78 === h13 || h13(u61);
                                            "function" != typeof c41 || d16(c41) || _15(t17, u61, e39) || !n78(u61, c41, t17, f29) || s51.push(u61, c41);
                                        }
                                        return (function(t19, e40, r75) {
                                            for(var n84 = 0; n84 < t19.length; n84 += 2){
                                                var o79 = t19[n84];
                                                if (r75.test(o79)) for(var i72 = o79.replace(r75, ""), s52 = 0; s52 < t19.length; s52 += 2)if (t19[s52] === i72) throw new l32("Cannot promisify an API that has normal methods with '%s'-suffix\n\n    See http://goo.gl/MqrFmX\n".replace("%s", e40));
                                            }
                                        })(s51, e39, r74), s51;
                                    }
                                    var m5 = u60 ? void 0 : function(t17, u62, c42, l33, f30, p22) {
                                        var h18 = function() {
                                            return this;
                                        }(), y24 = t17;
                                        function d17() {
                                            var o80 = u62;
                                            u62 === n65 && (o80 = this);
                                            var c43 = new e38(r72);
                                            c43._captureStackTrace();
                                            var l34 = "string" == typeof y24 && this !== h18 ? this[y24] : t17, f31 = i64(c43, p22);
                                            try {
                                                l34.apply(o80, s43(arguments, f31));
                                            } catch (t19) {
                                                c43._rejectCallback(a49(t19), !0, !0);
                                            }
                                            return c43._isFateSealed() || c43._setAsyncGuaranteed(), c43;
                                        }
                                        return "string" == typeof y24 && (t17 = l33), o73.notEnumerableProp(d17, "__isPromisified__", !0), d17;
                                    };
                                    function g7(t17, e39, r74, i71, s51) {
                                        for(var a53 = new RegExp(e39.replace(/([$])/, "\\$") + "$"), u62 = v9(t17, e39, a53, r74), c42 = 0, l33 = u62.length; c42 < l33; c42 += 2){
                                            var f30 = u62[c42], p22 = u62[c42 + 1], h18 = f30 + e39;
                                            if (i71 === m5) t17[h18] = m5(f30, n65, f30, p22, e39, s51);
                                            else {
                                                var y24 = i71(p22, function() {
                                                    return m5(f30, n65, f30, p22, e39, s51);
                                                });
                                                o73.notEnumerableProp(y24, "__isPromisified__", !0), t17[h18] = y24;
                                            }
                                        }
                                        return o73.toFastProperties(t17), t17;
                                    }
                                    e38.promisify = function(t17, e39) {
                                        if ("function" != typeof t17) throw new l32("expecting a function but got " + o73.classString(t17));
                                        if (d16(t17)) return t17;
                                        var r74 = function(t19, e40, r75) {
                                            return m5(t19, e40, void 0, t19, null, r75);
                                        }(t17, (void 0) === (e39 = Object(e39)).context ? n65 : e39.context, !!e39.multiArgs);
                                        return o73.copyDescriptors(t17, r74, y21), r74;
                                    }, e38.promisifyAll = function(t17, e39) {
                                        if ("function" != typeof t17 && "object" !== c33(t17)) throw new l32("the target of promisifyAll must be an object or a function\n\n    See http://goo.gl/MqrFmX\n");
                                        var r74 = !!(e39 = Object(e39)).multiArgs, n78 = e39.suffix;
                                        "string" != typeof n78 && (n78 = "Async");
                                        var i71 = e39.filter;
                                        "function" != typeof i71 && (i71 = h13);
                                        var s51 = e39.promisifier;
                                        if ("function" != typeof s51 && (s51 = m5), !o73.isIdentifier(n78)) throw new RangeError("suffix must be a valid identifier\n\n    See http://goo.gl/MqrFmX\n");
                                        for(var a53 = o73.inheritedDataKeys(t17), u62 = 0; u62 < a53.length; ++u62){
                                            var f31 = t17[a53[u62]];
                                            "constructor" !== a53[u62] && o73.isClass(f31) && (g7(f31.prototype, n78, i71, s51, r74), g7(f31, n78, i71, s51, r74));
                                        }
                                        return g7(t17, n78, i71, s51, r74);
                                    };
                                };
                            },
                            {
                                "./errors": 12,
                                "./nodeback": 20,
                                "./util": 36
                            }
                        ],
                        25: [
                            function(t9, e32, r71) {
                                "use strict";
                                e32.exports = function(e38, r72, n65, o73) {
                                    var i64, s43 = t9("./util"), a49 = s43.isObject, u60 = t9("./es5");
                                    "function" == typeof Map && (i64 = Map);
                                    var c42 = function() {
                                        var t17 = 0, e39 = 0;
                                        function r74(r75, n78) {
                                            this[t17] = r75, this[t17 + e39] = n78, t17++;
                                        }
                                        return function(n78) {
                                            e39 = n78.size, t17 = 0;
                                            var o80 = new Array(2 * n78.size);
                                            return n78.forEach(r74, o80), o80;
                                        };
                                    }();
                                    function l32(t17) {
                                        var e39, r74 = !1;
                                        if ((void 0) !== i64 && t17 instanceof i64) e39 = c42(t17), r74 = !0;
                                        else {
                                            var n78 = u60.keys(t17), o80 = n78.length;
                                            e39 = new Array(2 * o80);
                                            for(var s51 = 0; s51 < o80; ++s51){
                                                var a53 = n78[s51];
                                                e39[s51] = t17[a53], e39[s51 + o80] = a53;
                                            }
                                        }
                                        this.constructor$(e39), this._isMap = r74, this._init$(void 0, r74 ? -6 : -3);
                                    }
                                    function f27(t17) {
                                        var r74, i71 = n65(t17);
                                        return a49(i71) ? (r74 = i71 instanceof e38 ? i71._then(e38.props, void 0, void 0, void 0, void 0) : new l32(i71).promise(), i71 instanceof e38 && r74._propagateFrom(i71, 2), r74) : o73("cannot await properties of a non-object\n\n    See http://goo.gl/MqrFmX\n");
                                    }
                                    s43.inherits(l32, r72), l32.prototype._init = function() {
                                    }, l32.prototype._promiseFulfilled = function(t17, e39) {
                                        if (this._values[e39] = t17, (++this._totalResolved) >= this._length) {
                                            var r74;
                                            if (this._isMap) r74 = (function(t19) {
                                                for(var e40 = new i64, r75 = t19.length / 2 | 0, n84 = 0; n84 < r75; ++n84){
                                                    var o81 = t19[r75 + n84], s53 = t19[n84];
                                                    e40.set(o81, s53);
                                                }
                                                return e40;
                                            })(this._values);
                                            else {
                                                r74 = {
                                                };
                                                for(var n84 = this.length(), o82 = 0, s54 = this.length(); o82 < s54; ++o82)r74[this._values[o82 + n84]] = this._values[o82];
                                            }
                                            return this._resolve(r74), !0;
                                        }
                                        return !1;
                                    }, l32.prototype.shouldCopyValues = function() {
                                        return !1;
                                    }, l32.prototype.getActualLength = function(t17) {
                                        return t17 >> 1;
                                    }, e38.prototype.props = function() {
                                        return f27(this);
                                    }, e38.props = function(t17) {
                                        return f27(t17);
                                    };
                                };
                            },
                            {
                                "./es5": 13,
                                "./util": 36
                            }
                        ],
                        26: [
                            function(t9, e32, r71) {
                                "use strict";
                                function n65(t17) {
                                    this._capacity = t17, this._length = 0, this._front = 0;
                                }
                                n65.prototype._willBeOverCapacity = function(t17) {
                                    return this._capacity < t17;
                                }, n65.prototype._pushOne = function(t17) {
                                    var e38 = this.length();
                                    this._checkCapacity(e38 + 1), this[this._front + e38 & this._capacity - 1] = t17, this._length = e38 + 1;
                                }, n65.prototype.push = function(t17, e38, r72) {
                                    var n85 = this.length() + 3;
                                    if (this._willBeOverCapacity(n85)) return this._pushOne(t17), this._pushOne(e38), void this._pushOne(r72);
                                    var o73 = this._front + n85 - 3;
                                    this._checkCapacity(n85);
                                    var i64 = this._capacity - 1;
                                    this[o73 + 0 & i64] = t17, this[o73 + 1 & i64] = e38, this[o73 + 2 & i64] = r72, this._length = n85;
                                }, n65.prototype.shift = function() {
                                    var t17 = this._front, e38 = this[t17];
                                    return this[t17] = void 0, this._front = t17 + 1 & this._capacity - 1, this._length--, e38;
                                }, n65.prototype.length = function() {
                                    return this._length;
                                }, n65.prototype._checkCapacity = function(t17) {
                                    this._capacity < t17 && this._resizeTo(this._capacity << 1);
                                }, n65.prototype._resizeTo = function(t17) {
                                    var e38 = this._capacity;
                                    this._capacity = t17, (function(t19, e39, r72, n85, o73) {
                                        for(var i64 = 0; i64 < o73; ++i64)r72[i64 + n85] = t19[i64 + e39], t19[i64 + e39] = void 0;
                                    })(this, 0, this, e38, this._front + this._length & e38 - 1);
                                }, e32.exports = n65;
                            },
                            {
                            }
                        ],
                        27: [
                            function(t9, e32, r71) {
                                "use strict";
                                e32.exports = function(e38, r72, n65, o73) {
                                    var i64 = t9("./util");
                                    function s43(t17, a49) {
                                        var u60, c42 = n65(t17);
                                        if (c42 instanceof e38) return (u60 = c42).then(function(t19) {
                                            return s43(t19, u60);
                                        });
                                        if (null === (t17 = i64.asArray(t17))) return o73("expecting an array or an iterable object but got " + i64.classString(t17));
                                        var l32 = new e38(r72);
                                        (void 0) !== a49 && l32._propagateFrom(a49, 3);
                                        for(var f27 = l32._fulfill, p19 = l32._reject, h13 = 0, y21 = t17.length; h13 < y21; ++h13){
                                            var d16 = t17[h13];
                                            ((void 0) !== d16 || h13 in t17) && e38.cast(d16)._then(f27, p19, void 0, l32, null);
                                        }
                                        return l32;
                                    }
                                    e38.race = function(t17) {
                                        return s43(t17, void 0);
                                    }, e38.prototype.race = function() {
                                        return s43(this, void 0);
                                    };
                                };
                            },
                            {
                                "./util": 36
                            }
                        ],
                        28: [
                            function(t9, e32, r71) {
                                "use strict";
                                e32.exports = function(e38, r72, n65, o73, i64, s43) {
                                    var a49 = e38._getDomain, u60 = t9("./util"), c42 = u60.tryCatch;
                                    function l32(t17, r75, n85, o83) {
                                        this.constructor$(t17);
                                        var s55 = a49();
                                        this._fn = null === s55 ? r75 : u60.domainBind(s55, r75), (void 0) !== n85 && (n85 = e38.resolve(n85))._attachCancellationCallback(this), this._initialValue = n85, this._currentCancellable = null, this._eachValues = o83 === i64 ? Array(this._length) : 0 === o83 ? null : void 0, this._promise._captureStackTrace(), this._init$(void 0, -5);
                                    }
                                    function f27(t17, e39) {
                                        this.isFulfilled() ? e39._resolve(t17) : e39._reject(t17);
                                    }
                                    function p19(t17, e39, r75, o83) {
                                        return "function" != typeof e39 ? n65("expecting a function but got " + u60.classString(e39)) : new l32(t17, e39, r75, o83).promise();
                                    }
                                    function h13(t17) {
                                        this.accum = t17, this.array._gotAccum(t17);
                                        var r75 = o73(this.value, this.array._promise);
                                        return r75 instanceof e38 ? (this.array._currentCancellable = r75, r75._then(y21, void 0, void 0, this, void 0)) : y21.call(this, r75);
                                    }
                                    function y21(t17) {
                                        var r75, n85 = this.array, o83 = n85._promise, i71 = c42(n85._fn);
                                        o83._pushContext(), (r75 = (void 0) !== n85._eachValues ? i71.call(o83._boundValue(), t17, this.index, this.length) : i71.call(o83._boundValue(), this.accum, t17, this.index, this.length)) instanceof e38 && (n85._currentCancellable = r75);
                                        var a54 = o83._popContext();
                                        return s43.checkForgottenReturns(r75, a54, (void 0) !== n85._eachValues ? "Promise.each" : "Promise.reduce", o83), r75;
                                    }
                                    u60.inherits(l32, r72), l32.prototype._gotAccum = function(t17) {
                                        (void 0) !== this._eachValues && null !== this._eachValues && t17 !== i64 && this._eachValues.push(t17);
                                    }, l32.prototype._eachComplete = function(t17) {
                                        return null !== this._eachValues && this._eachValues.push(t17), this._eachValues;
                                    }, l32.prototype._init = function() {
                                    }, l32.prototype._resolveEmptyArray = function() {
                                        this._resolve((void 0) !== this._eachValues ? this._eachValues : this._initialValue);
                                    }, l32.prototype.shouldCopyValues = function() {
                                        return !1;
                                    }, l32.prototype._resolve = function(t17) {
                                        this._promise._resolveCallback(t17), this._values = null;
                                    }, l32.prototype._resultCancelled = function(t17) {
                                        if (t17 === this._initialValue) return this._cancel();
                                        this._isResolved() || (this._resultCancelled$(), this._currentCancellable instanceof e38 && this._currentCancellable.cancel(), this._initialValue instanceof e38 && this._initialValue.cancel());
                                    }, l32.prototype._iterate = function(t17) {
                                        var r75, n85;
                                        this._values = t17;
                                        var o83 = t17.length;
                                        if ((void 0) !== this._initialValue ? (r75 = this._initialValue, n85 = 0) : (r75 = e38.resolve(t17[0]), n85 = 1), this._currentCancellable = r75, !r75.isRejected()) for(; n85 < o83; ++n85){
                                            var i71 = {
                                                accum: null,
                                                value: t17[n85],
                                                index: n85,
                                                length: o83,
                                                array: this
                                            };
                                            r75 = r75._then(h13, void 0, void 0, i71, void 0);
                                        }
                                        (void 0) !== this._eachValues && (r75 = r75._then(this._eachComplete, void 0, void 0, this, void 0)), r75._then(f27, f27, void 0, r75, this);
                                    }, e38.prototype.reduce = function(t17, e39) {
                                        return p19(this, t17, e39, null);
                                    }, e38.reduce = function(t17, e39, r75, n85) {
                                        return p19(t17, e39, r75, n85);
                                    };
                                };
                            },
                            {
                                "./util": 36
                            }
                        ],
                        29: [
                            function(t9, e32, i64) {
                                "use strict";
                                var s43, a49, u60, c42, l32, f27 = t9("./util"), p19 = f27.getNativePromise();
                                if (f27.isNode && "undefined" == typeof MutationObserver) {
                                    var h13 = n63.setImmediate, y21 = r48.nextTick;
                                    s43 = f27.isRecentNode ? function(t17) {
                                        h13.call(n63, t17);
                                    } : function(t17) {
                                        y21.call(r48, t17);
                                    };
                                } else if ("function" == typeof p19 && "function" == typeof p19.resolve) {
                                    var d17 = p19.resolve();
                                    s43 = function(t17) {
                                        d17.then(t17);
                                    };
                                } else s43 = "undefined" == typeof MutationObserver || "undefined" != typeof window && window.navigator && (window.navigator.standalone || window.cordova) ? (void 0) !== o62 ? function(t17) {
                                    o62(t17);
                                } : "undefined" != typeof setTimeout ? function(t17) {
                                    setTimeout(t17, 0);
                                } : function() {
                                    throw new Error("No async scheduler available\n\n    See http://goo.gl/MqrFmX\n");
                                } : (a49 = document.createElement("div"), u60 = {
                                    attributes: !0
                                }, c42 = !1, l32 = document.createElement("div"), new MutationObserver(function() {
                                    a49.classList.toggle("foo"), c42 = !1;
                                }).observe(l32, u60), function(t17) {
                                    var e38 = new MutationObserver(function() {
                                        e38.disconnect(), t17();
                                    });
                                    e38.observe(a49, u60), c42 || (c42 = !0, l32.classList.toggle("foo"));
                                });
                                e32.exports = s43;
                            },
                            {
                                "./util": 36
                            }
                        ],
                        30: [
                            function(t9, e32, r71) {
                                "use strict";
                                e32.exports = function(e38, r72, n65) {
                                    var o73 = e38.PromiseInspection;
                                    function i64(t17) {
                                        this.constructor$(t17);
                                    }
                                    t9("./util").inherits(i64, r72), i64.prototype._promiseResolved = function(t17, e39) {
                                        return this._values[t17] = e39, (++this._totalResolved) >= this._length && (this._resolve(this._values), !0);
                                    }, i64.prototype._promiseFulfilled = function(t17, e39) {
                                        var r75 = new o73;
                                        return r75._bitField = 33554432, r75._settledValueField = t17, this._promiseResolved(e39, r75);
                                    }, i64.prototype._promiseRejected = function(t17, e39) {
                                        var r75 = new o73;
                                        return r75._bitField = 16777216, r75._settledValueField = t17, this._promiseResolved(e39, r75);
                                    }, e38.settle = function(t17) {
                                        return n65.deprecated(".settle()", ".reflect()"), new i64(t17).promise();
                                    }, e38.prototype.settle = function() {
                                        return e38.settle(this);
                                    };
                                };
                            },
                            {
                                "./util": 36
                            }
                        ],
                        31: [
                            function(t9, e32, r71) {
                                "use strict";
                                e32.exports = function(e38, r72, n65) {
                                    var o73 = t9("./util"), i64 = t9("./errors").RangeError, s43 = t9("./errors").AggregateError, a49 = o73.isArray, u60 = {
                                    };
                                    function c42(t17) {
                                        this.constructor$(t17), this._howMany = 0, this._unwrap = !1, this._initialized = !1;
                                    }
                                    function l32(t17, e39) {
                                        if ((0 | e39) !== e39 || e39 < 0) return n65("expecting a positive integer\n\n    See http://goo.gl/MqrFmX\n");
                                        var r75 = new c42(t17), o83 = r75.promise();
                                        return r75.setHowMany(e39), r75.init(), o83;
                                    }
                                    o73.inherits(c42, r72), c42.prototype._init = function() {
                                        if (this._initialized) {
                                            if (0 !== this._howMany) {
                                                this._init$(void 0, -5);
                                                var t17 = a49(this._values);
                                                !this._isResolved() && t17 && this._howMany > this._canPossiblyFulfill() && this._reject(this._getRangeError(this.length()));
                                            } else this._resolve([]);
                                        }
                                    }, c42.prototype.init = function() {
                                        this._initialized = !0, this._init();
                                    }, c42.prototype.setUnwrap = function() {
                                        this._unwrap = !0;
                                    }, c42.prototype.howMany = function() {
                                        return this._howMany;
                                    }, c42.prototype.setHowMany = function(t19) {
                                        this._howMany = t19;
                                    }, c42.prototype._promiseFulfilled = function(t19) {
                                        return this._addFulfilled(t19), this._fulfilled() === this.howMany() && (this._values.length = this.howMany(), 1 === this.howMany() && this._unwrap ? this._resolve(this._values[0]) : this._resolve(this._values), !0);
                                    }, c42.prototype._promiseRejected = function(t19) {
                                        return this._addRejected(t19), this._checkOutcome();
                                    }, c42.prototype._promiseCancelled = function() {
                                        return this._values instanceof e38 || null == this._values ? this._cancel() : (this._addRejected(u60), this._checkOutcome());
                                    }, c42.prototype._checkOutcome = function() {
                                        if (this.howMany() > this._canPossiblyFulfill()) {
                                            for(var t19 = new s43, e39 = this.length(); e39 < this._values.length; ++e39)this._values[e39] !== u60 && t19.push(this._values[e39]);
                                            return t19.length > 0 ? this._reject(t19) : this._cancel(), !0;
                                        }
                                        return !1;
                                    }, c42.prototype._fulfilled = function() {
                                        return this._totalResolved;
                                    }, c42.prototype._rejected = function() {
                                        return this._values.length - this.length();
                                    }, c42.prototype._addRejected = function(t20) {
                                        this._values.push(t20);
                                    }, c42.prototype._addFulfilled = function(t20) {
                                        this._values[this._totalResolved++] = t20;
                                    }, c42.prototype._canPossiblyFulfill = function() {
                                        return this.length() - this._rejected();
                                    }, c42.prototype._getRangeError = function(t20) {
                                        var e40 = "Input array must contain at least " + this._howMany + " items but contains only " + t20 + " items";
                                        return new i64(e40);
                                    }, c42.prototype._resolveEmptyArray = function() {
                                        this._reject(this._getRangeError(0));
                                    }, e38.some = function(t20, e40) {
                                        return l32(t20, e40);
                                    }, e38.prototype.some = function(t20) {
                                        return l32(this, t20);
                                    }, e38._SomePromiseArray = c42;
                                };
                            },
                            {
                                "./errors": 12,
                                "./util": 36
                            }
                        ],
                        32: [
                            function(t9, e32, r71) {
                                "use strict";
                                e32.exports = function(t20) {
                                    function e38(t21) {
                                        (void 0) !== t21 ? (t21 = t21._target(), this._bitField = t21._bitField, this._settledValueField = t21._isFateSealed() ? t21._settledValue() : void 0) : (this._bitField = 0, this._settledValueField = void 0);
                                    }
                                    e38.prototype._settledValue = function() {
                                        return this._settledValueField;
                                    };
                                    var r72 = e38.prototype.value = function() {
                                        if (!this.isFulfilled()) throw new TypeError("cannot get fulfillment value of a non-fulfilled promise\n\n    See http://goo.gl/MqrFmX\n");
                                        return this._settledValue();
                                    }, n65 = e38.prototype.error = e38.prototype.reason = function() {
                                        if (!this.isRejected()) throw new TypeError("cannot get rejection reason of a non-rejected promise\n\n    See http://goo.gl/MqrFmX\n");
                                        return this._settledValue();
                                    }, o73 = e38.prototype.isFulfilled = function() {
                                        return 0 != (33554432 & this._bitField);
                                    }, i64 = e38.prototype.isRejected = function() {
                                        return 0 != (16777216 & this._bitField);
                                    }, s43 = e38.prototype.isPending = function() {
                                        return 0 == (50397184 & this._bitField);
                                    }, a49 = e38.prototype.isResolved = function() {
                                        return 0 != (50331648 & this._bitField);
                                    };
                                    e38.prototype.isCancelled = function() {
                                        return 0 != (8454144 & this._bitField);
                                    }, t20.prototype.__isCancelled = function() {
                                        return 65536 == (65536 & this._bitField);
                                    }, t20.prototype._isCancelled = function() {
                                        return this._target().__isCancelled();
                                    }, t20.prototype.isCancelled = function() {
                                        return 0 != (8454144 & this._target()._bitField);
                                    }, t20.prototype.isPending = function() {
                                        return s43.call(this._target());
                                    }, t20.prototype.isRejected = function() {
                                        return i64.call(this._target());
                                    }, t20.prototype.isFulfilled = function() {
                                        return o73.call(this._target());
                                    }, t20.prototype.isResolved = function() {
                                        return a49.call(this._target());
                                    }, t20.prototype.value = function() {
                                        return r72.call(this._target());
                                    }, t20.prototype.reason = function() {
                                        var t21 = this._target();
                                        return t21._unsetRejectionIsUnhandled(), n65.call(t21);
                                    }, t20.prototype._value = function() {
                                        return this._settledValue();
                                    }, t20.prototype._reason = function() {
                                        return this._unsetRejectionIsUnhandled(), this._settledValue();
                                    }, t20.PromiseInspection = e38;
                                };
                            },
                            {
                            }
                        ],
                        33: [
                            function(t9, e32, r71) {
                                "use strict";
                                e32.exports = function(e38, r72) {
                                    var n65 = t9("./util"), o73 = n65.errorObj, i64 = n65.isObject, s43 = {
                                    }.hasOwnProperty;
                                    return function(t20, a49) {
                                        if (i64(t20)) {
                                            if (t20 instanceof e38) return t20;
                                            var u60 = function(t21) {
                                                try {
                                                    return (function(t22) {
                                                        return t22.then;
                                                    })(t21);
                                                } catch (t22) {
                                                    return o73.e = t22, o73;
                                                }
                                            }(t20);
                                            if (u60 === o73) {
                                                a49 && a49._pushContext();
                                                var c42 = e38.reject(u60.e);
                                                return a49 && a49._popContext(), c42;
                                            }
                                            if ("function" == typeof u60) return (function(t21) {
                                                try {
                                                    return s43.call(t21, "_promise0");
                                                } catch (t22) {
                                                    return !1;
                                                }
                                            })(t20) ? (c42 = new e38(r72), t20._then(c42._fulfill, c42._reject, void 0, c42, null), c42) : (function(t21, i73, s55) {
                                                var a54 = new e38(r72), u62 = a54;
                                                s55 && s55._pushContext(), a54._captureStackTrace(), s55 && s55._popContext();
                                                var c43 = n65.tryCatch(i73).call(t21, function(t22) {
                                                    a54 && (a54._resolveCallback(t22), a54 = null);
                                                }, function(t22) {
                                                    a54 && (a54._rejectCallback(t22, !1, !0), a54 = null);
                                                });
                                                return a54 && c43 === o73 && (a54._rejectCallback(c43.e, !0, !0), a54 = null), u62;
                                            })(t20, u60, a49);
                                        }
                                        return t20;
                                    };
                                };
                            },
                            {
                                "./util": 36
                            }
                        ],
                        34: [
                            function(t9, e32, r71) {
                                "use strict";
                                e32.exports = function(e38, r72, n65) {
                                    var o73 = t9("./util"), i64 = e38.TimeoutError;
                                    function s43(t20) {
                                        this.handle = t20;
                                    }
                                    s43.prototype._resultCancelled = function() {
                                        clearTimeout(this.handle);
                                    };
                                    var a49 = function(t20) {
                                        return u62(+this).thenReturn(t20);
                                    }, u62 = e38.delay = function(t20, o83) {
                                        var i73, u63;
                                        return (void 0) !== o83 ? (i73 = e38.resolve(o83)._then(a49, null, null, t20, void 0), n65.cancellation() && o83 instanceof e38 && i73._setOnCancel(o83)) : (i73 = new e38(r72), u63 = setTimeout(function() {
                                            i73._fulfill();
                                        }, +t20), n65.cancellation() && i73._setOnCancel(new s43(u63)), i73._captureStackTrace()), i73._setAsyncGuaranteed(), i73;
                                    };
                                    function c43(t20) {
                                        return clearTimeout(this.handle), t20;
                                    }
                                    function l32(t20) {
                                        throw clearTimeout(this.handle), t20;
                                    }
                                    e38.prototype.delay = function(t20) {
                                        return u62(t20, this);
                                    }, e38.prototype.timeout = function(t20, e40) {
                                        var r75, a54;
                                        t20 = +t20;
                                        var u63 = new s43(setTimeout(function() {
                                            r75.isPending() && (function(t21, e41, r76) {
                                                var n85;
                                                n85 = "string" != typeof e41 ? e41 instanceof Error ? e41 : new i64("operation timed out") : new i64(e41), o73.markAsOriginatingFromRejection(n85), t21._attachExtraTrace(n85), t21._reject(n85), null != r76 && r76.cancel();
                                            })(r75, e40, a54);
                                        }, t20));
                                        return n65.cancellation() ? (a54 = this.then(), (r75 = a54._then(c43, l32, void 0, u63, void 0))._setOnCancel(u63)) : r75 = this._then(c43, l32, void 0, u63, void 0), r75;
                                    };
                                };
                            },
                            {
                                "./util": 36
                            }
                        ],
                        35: [
                            function(t9, e32, r71) {
                                "use strict";
                                e32.exports = function(e38, r72, n65, o73, i64, s43) {
                                    var a49 = t9("./util"), u62 = t9("./errors").TypeError, c43 = t9("./util").inherits, l32 = a49.errorObj, f27 = a49.tryCatch, p19 = {
                                    };
                                    function h19(t20) {
                                        setTimeout(function() {
                                            throw t20;
                                        }, 0);
                                    }
                                    function y25(t20, r75) {
                                        var o83 = 0, s55 = t20.length, a54 = new e38(i64);
                                        return (function i73() {
                                            if (o83 >= s55) return a54._fulfill();
                                            var u63 = function(t21) {
                                                var e40 = n65(t21);
                                                return e40 !== t21 && "function" == typeof t21._isDisposable && "function" == typeof t21._getDisposer && t21._isDisposable() && e40._setDisposable(t21._getDisposer()), e40;
                                            }(t20[o83++]);
                                            if (u63 instanceof e38 && u63._isDisposable()) {
                                                try {
                                                    u63 = n65(u63._getDisposer().tryDispose(r75), t20.promise);
                                                } catch (t21) {
                                                    return h19(t21);
                                                }
                                                if (u63 instanceof e38) return u63._then(i73, h19, null, null, null);
                                            }
                                            i73();
                                        })(), a54;
                                    }
                                    function d18(t20, e40, r75) {
                                        this._data = t20, this._promise = e40, this._context = r75;
                                    }
                                    function _15(t20, e40, r75) {
                                        this.constructor$(t20, e40, r75);
                                    }
                                    function v9(t20) {
                                        return d18.isDisposer(t20) ? (this.resources[this.index]._setDisposable(t20), t20.promise()) : t20;
                                    }
                                    function m5(t20) {
                                        this.length = t20, this.promise = null, this[t20 - 1] = null;
                                    }
                                    d18.prototype.data = function() {
                                        return this._data;
                                    }, d18.prototype.promise = function() {
                                        return this._promise;
                                    }, d18.prototype.resource = function() {
                                        return this.promise().isFulfilled() ? this.promise().value() : p19;
                                    }, d18.prototype.tryDispose = function(t20) {
                                        var e40 = this.resource(), r75 = this._context;
                                        (void 0) !== r75 && r75._pushContext();
                                        var n85 = e40 !== p19 ? this.doDispose(e40, t20) : null;
                                        return (void 0) !== r75 && r75._popContext(), this._promise._unsetDisposable(), this._data = null, n85;
                                    }, d18.isDisposer = function(t20) {
                                        return null != t20 && "function" == typeof t20.resource && "function" == typeof t20.tryDispose;
                                    }, c43(_15, d18), _15.prototype.doDispose = function(t20, e40) {
                                        return this.data().call(t20, t20, e40);
                                    }, m5.prototype._resultCancelled = function() {
                                        for(var t20 = this.length, r75 = 0; r75 < t20; ++r75){
                                            var n85 = this[r75];
                                            n85 instanceof e38 && n85.cancel();
                                        }
                                    }, e38.using = function() {
                                        var t20 = arguments.length;
                                        if (t20 < 2) return r72("you must pass at least 2 arguments to Promise.using");
                                        var o83, i73 = arguments[t20 - 1];
                                        if ("function" != typeof i73) return r72("expecting a function but got " + a49.classString(i73));
                                        var u63 = !0;
                                        2 === t20 && Array.isArray(arguments[0]) ? (t20 = (o83 = arguments[0]).length, u63 = !1) : (o83 = arguments, t20--);
                                        for(var c44 = new m5(t20), p23 = 0; p23 < t20; ++p23){
                                            var h20 = o83[p23];
                                            if (d18.isDisposer(h20)) {
                                                var _16 = h20;
                                                (h20 = h20.promise())._setDisposable(_16);
                                            } else {
                                                var g7 = n65(h20);
                                                g7 instanceof e38 && (h20 = g7._then(v9, null, null, {
                                                    resources: c44,
                                                    index: p23
                                                }, void 0));
                                            }
                                            c44[p23] = h20;
                                        }
                                        var b8 = new Array(c44.length);
                                        for(p23 = 0; p23 < b8.length; ++p23)b8[p23] = e38.resolve(c44[p23]).reflect();
                                        var w8 = e38.all(b8).then(function(t21) {
                                            for(var e40 = 0; e40 < t21.length; ++e40){
                                                var r75 = t21[e40];
                                                if (r75.isRejected()) return l32.e = r75.error(), l32;
                                                if (!r75.isFulfilled()) return void w8.cancel();
                                                t21[e40] = r75.value();
                                            }
                                            O7._pushContext(), i73 = f27(i73);
                                            var n86 = u63 ? i73.apply(void 0, t21) : i73(t21), o84 = O7._popContext();
                                            return s43.checkForgottenReturns(n86, o84, "Promise.using", O7), n86;
                                        }), O7 = w8.lastly(function() {
                                            var t21 = new e38.PromiseInspection(w8);
                                            return y25(c44, t21);
                                        });
                                        return c44.promise = O7, O7._setOnCancel(c44), O7;
                                    }, e38.prototype._setDisposable = function(t20) {
                                        this._bitField = 131072 | this._bitField, this._disposer = t20;
                                    }, e38.prototype._isDisposable = function() {
                                        return (131072 & this._bitField) > 0;
                                    }, e38.prototype._getDisposer = function() {
                                        return this._disposer;
                                    }, e38.prototype._unsetDisposable = function() {
                                        this._bitField = -131073 & this._bitField, this._disposer = void 0;
                                    }, e38.prototype.disposer = function(t20) {
                                        if ("function" == typeof t20) return new _15(t20, this, o73());
                                        throw new u62;
                                    };
                                };
                            },
                            {
                                "./errors": 12,
                                "./util": 36
                            }
                        ],
                        36: [
                            function(t9, e32, o73) {
                                "use strict";
                                var i64 = t9("./es5"), s43 = "undefined" == typeof navigator, a49 = {
                                    e: {
                                    }
                                }, u62, l32 = "undefined" != typeof self ? self : "undefined" != typeof window ? window : (void 0) !== n63 ? n63 : (void 0) !== this ? this : null;
                                function f27() {
                                    try {
                                        var t20 = u62;
                                        return u62 = null, t20.apply(this, arguments);
                                    } catch (t21) {
                                        return a49.e = t21, a49;
                                    }
                                }
                                function p19(t20) {
                                    return u62 = t20, f27;
                                }
                                var h19 = function(t20, e38) {
                                    var r71 = {
                                    }.hasOwnProperty;
                                    function n65() {
                                        for(var n86 in this.constructor = t20, this.constructor$ = e38, e38.prototype)r71.call(e38.prototype, n86) && "$" !== n86.charAt(n86.length - 1) && (this[n86 + "$"] = e38.prototype[n86]);
                                    }
                                    return n65.prototype = e38.prototype, t20.prototype = new n65, t20.prototype;
                                };
                                function y25(t20) {
                                    return null == t20 || !0 === t20 || !1 === t20 || "string" == typeof t20 || "number" == typeof t20;
                                }
                                function d18(t20) {
                                    return "function" == typeof t20 || "object" === c33(t20) && null !== t20;
                                }
                                function _15(t20) {
                                    return y25(t20) ? new Error(P4(t20)) : t20;
                                }
                                function v9(t20, e38) {
                                    var r71, n65 = t20.length, o83 = new Array(n65 + 1);
                                    for(r71 = 0; r71 < n65; ++r71)o83[r71] = t20[r71];
                                    return o83[r71] = e38, o83;
                                }
                                function m5(t20, e38, r71) {
                                    if (!i64.isES5) return ({
                                    }).hasOwnProperty.call(t20, e38) ? t20[e38] : void 0;
                                    var n65 = Object.getOwnPropertyDescriptor(t20, e38);
                                    return null != n65 ? null == n65.get && null == n65.set ? n65.value : r71 : void 0;
                                }
                                function g8(t20, e38, r71) {
                                    if (y25(t20)) return t20;
                                    var n65 = {
                                        value: r71,
                                        configurable: !0,
                                        enumerable: !1,
                                        writable: !0
                                    };
                                    return i64.defineProperty(t20, e38, n65), t20;
                                }
                                function b8(t20) {
                                    throw t20;
                                }
                                var w8 = function() {
                                    var t20 = [
                                        Array.prototype,
                                        Object.prototype,
                                        Function.prototype
                                    ], e38 = function(e40) {
                                        for(var r71 = 0; r71 < t20.length; ++r71)if (t20[r71] === e40) return !0;
                                        return !1;
                                    };
                                    if (i64.isES5) {
                                        var r71 = Object.getOwnPropertyNames;
                                        return function(t21) {
                                            for(var n65 = [], o83 = Object.create(null); null != t21 && !e38(t21);){
                                                var s55;
                                                try {
                                                    s55 = r71(t21);
                                                } catch (t22) {
                                                    return n65;
                                                }
                                                for(var a54 = 0; a54 < s55.length; ++a54){
                                                    var u63 = s55[a54];
                                                    if (!o83[u63]) {
                                                        o83[u63] = !0;
                                                        var c43 = Object.getOwnPropertyDescriptor(t21, u63);
                                                        null != c43 && null == c43.get && null == c43.set && n65.push(u63);
                                                    }
                                                }
                                                t21 = i64.getPrototypeOf(t21);
                                            }
                                            return n65;
                                        };
                                    }
                                    var n65 = {
                                    }.hasOwnProperty;
                                    return function(r72) {
                                        if (e38(r72)) return [];
                                        var o83 = [];
                                        t: for(var i73 in r72)if (n65.call(r72, i73)) o83.push(i73);
                                        else {
                                            for(var s56 = 0; s56 < t20.length; ++s56)if (n65.call(t20[s56], i73)) continue t;
                                            o83.push(i73);
                                        }
                                        return o83;
                                    };
                                }(), O7 = /this\s*\.\s*\S+\s*=/;
                                function S5(t20) {
                                    try {
                                        if ("function" == typeof t20) {
                                            var e38 = i64.names(t20.prototype), r72 = i64.isES5 && e38.length > 1, n65 = e38.length > 0 && !(1 === e38.length && "constructor" === e38[0]), o83 = O7.test(t20 + "") && i64.names(t20).length > 0;
                                            if (r72 || n65 || o83) return !0;
                                        }
                                        return !1;
                                    } catch (t21) {
                                        return !1;
                                    }
                                }
                                function A5(t20) {
                                    function e40() {
                                    }
                                    e40.prototype = t20;
                                    for(var r76 = 8; r76--;)new e40;
                                    return t20;
                                }
                                var $4 = /^[a-z$_][a-z$_0-9]*$/i;
                                function E3(t20) {
                                    return $4.test(t20);
                                }
                                function j(t20, e40, r76) {
                                    for(var n86 = new Array(t20), o84 = 0; o84 < t20; ++o84)n86[o84] = e40 + o84 + r76;
                                    return n86;
                                }
                                function P4(t20) {
                                    try {
                                        return t20 + "";
                                    } catch (t21) {
                                        return "[no string representation]";
                                    }
                                }
                                function x5(t20) {
                                    return t20 instanceof Error || null !== t20 && "object" === c33(t20) && "string" == typeof t20.message && "string" == typeof t20.name;
                                }
                                function T5(t20) {
                                    try {
                                        g8(t20, "isOperational", !0);
                                    } catch (t21) {
                                    }
                                }
                                function N5(t20) {
                                    return null != t20 && (t20 instanceof Error.__BluebirdErrorTypes__.OperationalError || !0 === t20.isOperational);
                                }
                                function k4(t20) {
                                    return x5(t20) && i64.propertyIsWritable(t20, "stack");
                                }
                                var B3 = "stack" in new Error ? function(t20) {
                                    return k4(t20) ? t20 : new Error(P4(t20));
                                } : function(t20) {
                                    if (k4(t20)) return t20;
                                    try {
                                        throw new Error(P4(t20));
                                    } catch (t21) {
                                        return t21;
                                    }
                                };
                                function C(t20) {
                                    return ({
                                    }).toString.call(t20);
                                }
                                function R4(t20, e40, r76) {
                                    for(var n86 = i64.names(t20), o84 = 0; o84 < n86.length; ++o84){
                                        var s57 = n86[o84];
                                        if (r76(s57)) try {
                                            i64.defineProperty(e40, s57, i64.getDescriptor(t20, s57));
                                        } catch (t21) {
                                        }
                                    }
                                }
                                var D = function(t20) {
                                    return i64.isArray(t20) ? t20 : null;
                                };
                                if ("undefined" != typeof Symbol && Symbol.iterator) {
                                    var M6 = "function" == typeof Array.from ? function(t20) {
                                        return Array.from(t20);
                                    } : function(t20) {
                                        for(var e40, r76 = [], n86 = t20[Symbol.iterator](); !(e40 = n86.next()).done;)r76.push(e40.value);
                                        return r76;
                                    };
                                    D = function(t20) {
                                        return i64.isArray(t20) ? t20 : null != t20 && "function" == typeof t20[Symbol.iterator] ? M6(t20) : null;
                                    };
                                }
                                var I = (void 0) !== r48 && "[object process]" === C(r48).toLowerCase(), F6 = (void 0) !== r48 && (void 0) !== r48.env;
                                function L5(t20) {
                                    return F6 ? r48.env[t20] : void 0;
                                }
                                function U4() {
                                    if ("function" == typeof Promise) try {
                                        var t20 = new Promise(function() {
                                        });
                                        if ("[object Promise]" === ({
                                        }).toString.call(t20)) return Promise;
                                    } catch (t21) {
                                    }
                                }
                                function V5(t20, e40) {
                                    return t20.bind(e40);
                                }
                                var q4 = {
                                    isClass: S5,
                                    isIdentifier: E3,
                                    inheritedDataKeys: w8,
                                    getDataPropertyOrDefault: m5,
                                    thrower: b8,
                                    isArray: i64.isArray,
                                    asArray: D,
                                    notEnumerableProp: g8,
                                    isPrimitive: y25,
                                    isObject: d18,
                                    isError: x5,
                                    canEvaluate: s43,
                                    errorObj: a49,
                                    tryCatch: p19,
                                    inherits: h19,
                                    withAppended: v9,
                                    maybeWrapAsError: _15,
                                    toFastProperties: A5,
                                    filledRange: j,
                                    toString: P4,
                                    canAttachTrace: k4,
                                    ensureErrorObject: B3,
                                    originatesFromRejection: N5,
                                    markAsOriginatingFromRejection: T5,
                                    classString: C,
                                    copyDescriptors: R4,
                                    hasDevTools: "undefined" != typeof chrome && chrome && "function" == typeof chrome.loadTimes,
                                    isNode: I,
                                    hasEnvVariables: F6,
                                    env: L5,
                                    global: l32,
                                    getNativePromise: U4,
                                    domainBind: V5
                                }, W4;
                                q4.isRecentNode = q4.isNode && (W4 = r48.versions.node.split(".").map(Number), 0 === W4[0] && W4[1] > 10 || W4[0] > 0), q4.isNode && q4.toFastProperties(r48);
                                try {
                                    throw new Error;
                                } catch (t20) {
                                    q4.lastLineError = t20;
                                }
                                e32.exports = q4;
                            },
                            {
                                "./es5": 13
                            }
                        ]
                    }, {
                    }, [
                        4
                    ])(4);
                }, "object" == c33(e3) && (void 0) !== t2 ? t2.exports = u46() : (s36 = [], (void 0) === (a43 = "function" == typeof (i52 = u46) ? i52.apply(e3, s36) : i52) || (t2.exports = a43)), "undefined" != typeof window && null !== window ? window.P = window.Promise : "undefined" != typeof self && null !== self && (self.P = self.Promise);
            }).call(this, r2(11), r2(9), r2(70).setImmediate);
        },
        function(t2, e3, r2) {
            "use strict";
            var n63 = t2.exports = {
            };
            n63.DocumentNotFoundError = null, n63.general = {
            }, n63.general.default = "Validator failed for path `{PATH}` with value `{VALUE}`", n63.general.required = "Path `{PATH}` is required.", n63.Number = {
            }, n63.Number.min = "Path `{PATH}` ({VALUE}) is less than minimum allowed value ({MIN}).", n63.Number.max = "Path `{PATH}` ({VALUE}) is more than maximum allowed value ({MAX}).", n63.Number.enum = "`{VALUE}` is not a valid enum value for path `{PATH}`.", n63.Date = {
            }, n63.Date.min = "Path `{PATH}` ({VALUE}) is before minimum allowed value ({MIN}).", n63.Date.max = "Path `{PATH}` ({VALUE}) is after maximum allowed value ({MAX}).", n63.String = {
            }, n63.String.enum = "`{VALUE}` is not a valid enum value for path `{PATH}`.", n63.String.match = "Path `{PATH}` is invalid ({VALUE}).", n63.String.minlength = "Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length ({MINLENGTH}).", n63.String.maxlength = "Path `{PATH}` (`{VALUE}`) is longer than the maximum allowed length ({MAXLENGTH}).";
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n63(t5) {
                return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            function o62(t5, e29) {
                return (o62 = Object.setPrototypeOf || function(t8, e32) {
                    return t8.__proto__ = e32, t8;
                })(t5, e29);
            }
            function i52(t5) {
                var e29 = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t8) {
                        return !1;
                    }
                }();
                return function() {
                    var r48, n86 = a43(t5);
                    if (e29) {
                        var o73 = a43(this).constructor;
                        r48 = Reflect.construct(n86, arguments, o73);
                    } else r48 = n86.apply(this, arguments);
                    return s36(this, r48);
                };
            }
            function s36(t5, e29) {
                if (e29 && ("object" === n63(e29) || "function" == typeof e29)) return e29;
                if ((void 0) !== e29) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t8) {
                    if ((void 0) === t8) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t8;
                })(t5);
            }
            function a43(t5) {
                return (a43 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t8) {
                    return t8.__proto__ || Object.getPrototypeOf(t8);
                })(t5);
            }
            var u46 = r2(5), c33 = r2(4), l32 = function(t5) {
                !function(t8, e29) {
                    if ("function" != typeof e29 && null !== e29) throw new TypeError("Super expression must either be null or a function");
                    t8.prototype = Object.create(e29 && e29.prototype, {
                        constructor: {
                            value: t8,
                            writable: !0,
                            configurable: !0
                        }
                    }), e29 && o62(t8, e29);
                }(r48, t5);
                var e29 = i52(r48);
                /*!
   * OverwriteModel Error constructor.
   */ function r48(t8, n86, o84, i53) {
                    var s43, a49;
                    !function(t9, e32) {
                        if (!(t9 instanceof e32)) throw new TypeError("Cannot call a class as a function");
                    }(this, r48);
                    var l33 = u46.messages;
                    return a49 = null != l33.DocumentNotFoundError ? "function" == typeof l33.DocumentNotFoundError ? l33.DocumentNotFoundError(t8, n86) : l33.DocumentNotFoundError : 'No document found for query "' + c33.inspect(t8) + '" on model "' + n86 + '"', (s43 = e29.call(this, a49)).result = i53, s43.numAffected = o84, s43.filter = t8, s43.query = t8, s43;
                }
                return r48;
            }(u46);
            Object.defineProperty(l32.prototype, "name", {
                value: "DocumentNotFoundError"
            }), /*!
 * exports
 */ t2.exports = l32;
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n63(t5) {
                return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            function o62(t5, e29) {
                return (o62 = Object.setPrototypeOf || function(t8, e32) {
                    return t8.__proto__ = e32, t8;
                })(t5, e29);
            }
            function i52(t5) {
                var e29 = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t8) {
                        return !1;
                    }
                }();
                return function() {
                    var r48, n86 = a43(t5);
                    if (e29) {
                        var o84 = a43(this).constructor;
                        r48 = Reflect.construct(n86, arguments, o84);
                    } else r48 = n86.apply(this, arguments);
                    return s36(this, r48);
                };
            }
            function s36(t5, e29) {
                if (e29 && ("object" === n63(e29) || "function" == typeof e29)) return e29;
                if ((void 0) !== e29) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t8) {
                    if ((void 0) === t8) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t8;
                })(t5);
            }
            function a43(t5) {
                return (a43 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t8) {
                    return t8.__proto__ || Object.getPrototypeOf(t8);
                })(t5);
            }
            var u46 = function(t5) {
                !function(t8, e29) {
                    if ("function" != typeof e29 && null !== e29) throw new TypeError("Super expression must either be null or a function");
                    t8.prototype = Object.create(e29 && e29.prototype, {
                        constructor: {
                            value: t8,
                            writable: !0,
                            configurable: !0
                        }
                    }), e29 && o62(t8, e29);
                }(r48, t5);
                var e29 = i52(r48);
                function r48(t8, n86, o85) {
                    var i53;
                    !function(t9, e32) {
                        if (!(t9 instanceof e32)) throw new TypeError("Cannot call a class as a function");
                    }(this, r48);
                    var s43 = o85.join(", ");
                    return (i53 = e29.call(this, 'No matching document found for id "' + t8._id + '" version ' + n86 + ' modifiedPaths "' + s43 + '"')).version = n86, i53.modifiedPaths = o85, i53;
                }
                return r48;
            }(r2(5));
            Object.defineProperty(u46.prototype, "name", {
                value: "VersionError"
            }), /*!
 * exports
 */ t2.exports = u46;
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n63(t5) {
                return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            function o62(t5, e29) {
                return (o62 = Object.setPrototypeOf || function(t8, e32) {
                    return t8.__proto__ = e32, t8;
                })(t5, e29);
            }
            function i52(t5) {
                var e29 = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t8) {
                        return !1;
                    }
                }();
                return function() {
                    var r48, n86 = a43(t5);
                    if (e29) {
                        var o85 = a43(this).constructor;
                        r48 = Reflect.construct(n86, arguments, o85);
                    } else r48 = n86.apply(this, arguments);
                    return s36(this, r48);
                };
            }
            function s36(t5, e29) {
                if (e29 && ("object" === n63(e29) || "function" == typeof e29)) return e29;
                if ((void 0) !== e29) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t8) {
                    if ((void 0) === t8) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t8;
                })(t5);
            }
            function a43(t5) {
                return (a43 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t8) {
                    return t8.__proto__ || Object.getPrototypeOf(t8);
                })(t5);
            }
            var u46 = function(t5) {
                !function(t8, e29) {
                    if ("function" != typeof e29 && null !== e29) throw new TypeError("Super expression must either be null or a function");
                    t8.prototype = Object.create(e29 && e29.prototype, {
                        constructor: {
                            value: t8,
                            writable: !0,
                            configurable: !0
                        }
                    }), e29 && o62(t8, e29);
                }(r48, t5);
                var e29 = i52(r48);
                function r48(t8) {
                    !function(t9, e32) {
                        if (!(t9 instanceof e32)) throw new TypeError("Cannot call a class as a function");
                    }(this, r48);
                    return e29.call(this, "Can't save() the same doc multiple times in parallel. Document: " + t8._id);
                }
                return r48;
            }(r2(5));
            Object.defineProperty(u46.prototype, "name", {
                value: "ParallelSaveError"
            }), /*!
 * exports
 */ t2.exports = u46;
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n63(t5) {
                return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            function o62(t5, e29) {
                return (o62 = Object.setPrototypeOf || function(t8, e32) {
                    return t8.__proto__ = e32, t8;
                })(t5, e29);
            }
            function i52(t5) {
                var e29 = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t8) {
                        return !1;
                    }
                }();
                return function() {
                    var r48, n86 = a43(t5);
                    if (e29) {
                        var o86 = a43(this).constructor;
                        r48 = Reflect.construct(n86, arguments, o86);
                    } else r48 = n86.apply(this, arguments);
                    return s36(this, r48);
                };
            }
            function s36(t5, e29) {
                if (e29 && ("object" === n63(e29) || "function" == typeof e29)) return e29;
                if ((void 0) !== e29) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t8) {
                    if ((void 0) === t8) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t8;
                })(t5);
            }
            function a43(t5) {
                return (a43 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t8) {
                    return t8.__proto__ || Object.getPrototypeOf(t8);
                })(t5);
            }
            var u46 = function(t5) {
                !function(t8, e29) {
                    if ("function" != typeof e29 && null !== e29) throw new TypeError("Super expression must either be null or a function");
                    t8.prototype = Object.create(e29 && e29.prototype, {
                        constructor: {
                            value: t8,
                            writable: !0,
                            configurable: !0
                        }
                    }), e29 && o62(t8, e29);
                }(r48, t5);
                var e29 = i52(r48);
                /*!
   * OverwriteModel Error constructor.
   * @param {String} name
   */ function r48(t8) {
                    return (function(t9, e32) {
                        if (!(t9 instanceof e32)) throw new TypeError("Cannot call a class as a function");
                    })(this, r48), e29.call(this, "Cannot overwrite `" + t8 + "` model once compiled.");
                }
                return r48;
            }(r2(5));
            Object.defineProperty(u46.prototype, "name", {
                value: "OverwriteModelError"
            }), /*!
 * exports
 */ t2.exports = u46;
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n63(t5) {
                return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            function o62(t5, e29) {
                return (o62 = Object.setPrototypeOf || function(t8, e32) {
                    return t8.__proto__ = e32, t8;
                })(t5, e29);
            }
            function i52(t5) {
                var e29 = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t8) {
                        return !1;
                    }
                }();
                return function() {
                    var r48, n86 = a43(t5);
                    if (e29) {
                        var o87 = a43(this).constructor;
                        r48 = Reflect.construct(n86, arguments, o87);
                    } else r48 = n86.apply(this, arguments);
                    return s36(this, r48);
                };
            }
            function s36(t5, e29) {
                if (e29 && ("object" === n63(e29) || "function" == typeof e29)) return e29;
                if ((void 0) !== e29) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t8) {
                    if ((void 0) === t8) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t8;
                })(t5);
            }
            function a43(t5) {
                return (a43 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t8) {
                    return t8.__proto__ || Object.getPrototypeOf(t8);
                })(t5);
            }
            var u46 = function(t5) {
                !function(t8, e29) {
                    if ("function" != typeof e29 && null !== e29) throw new TypeError("Super expression must either be null or a function");
                    t8.prototype = Object.create(e29 && e29.prototype, {
                        constructor: {
                            value: t8,
                            writable: !0,
                            configurable: !0
                        }
                    }), e29 && o62(t8, e29);
                }(r48, t5);
                var e29 = i52(r48);
                /*!
   * MissingSchema Error constructor.
   * @param {String} name
   */ function r48(t8) {
                    !function(t9, e32) {
                        if (!(t9 instanceof e32)) throw new TypeError("Cannot call a class as a function");
                    }(this, r48);
                    var n86 = "Schema hasn't been registered for model \"" + t8 + '".\nUse mongoose.model(name, schema)';
                    return e29.call(this, n86);
                }
                return r48;
            }(r2(5));
            Object.defineProperty(u46.prototype, "name", {
                value: "MissingSchemaError"
            }), /*!
 * exports
 */ t2.exports = u46;
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n63(t5) {
                return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            function o62(t5, e29) {
                return (o62 = Object.setPrototypeOf || function(t8, e32) {
                    return t8.__proto__ = e32, t8;
                })(t5, e29);
            }
            function i52(t5) {
                var e29 = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t8) {
                        return !1;
                    }
                }();
                return function() {
                    var r48, n86 = a43(t5);
                    if (e29) {
                        var o88 = a43(this).constructor;
                        r48 = Reflect.construct(n86, arguments, o88);
                    } else r48 = n86.apply(this, arguments);
                    return s36(this, r48);
                };
            }
            function s36(t5, e29) {
                if (e29 && ("object" === n63(e29) || "function" == typeof e29)) return e29;
                if ((void 0) !== e29) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t8) {
                    if ((void 0) === t8) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t8;
                })(t5);
            }
            function a43(t5) {
                return (a43 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t8) {
                    return t8.__proto__ || Object.getPrototypeOf(t8);
                })(t5);
            }
            var u46 = function(t5) {
                !function(t8, e29) {
                    if ("function" != typeof e29 && null !== e29) throw new TypeError("Super expression must either be null or a function");
                    t8.prototype = Object.create(e29 && e29.prototype, {
                        constructor: {
                            value: t8,
                            writable: !0,
                            configurable: !0
                        }
                    }), e29 && o62(t8, e29);
                }(r48, t5);
                var e29 = i52(r48);
                /*!
   * DivergentArrayError constructor.
   * @param {Array<String>} paths
   */ function r48(t8) {
                    !function(t9, e32) {
                        if (!(t9 instanceof e32)) throw new TypeError("Cannot call a class as a function");
                    }(this, r48);
                    var n86 = "For your own good, using `document.save()` to update an array which was selected using an $elemMatch projection OR populated using skip, limit, query conditions, or exclusion of the _id field when the operation results in a $pop or $set of the entire array is not supported. The following path(s) would have been modified unsafely:\n  " + t8.join("\n  ") + "\nUse Model.update() to update these arrays instead.";
                    return e29.call(this, n86);
                }
                return r48;
            }(r2(5));
            Object.defineProperty(u46.prototype, "name", {
                value: "DivergentArrayError"
            }), /*!
 * exports
 */ t2.exports = u46;
        },
        function(t2, e3, r2) {
            "use strict";
            var n63 = r2(34);
            /*!
 * ignore
 */ t2.exports = function(t5) {
                var e29, r48;
                t5.$immutable ? (t5.$immutableSetter = (e29 = t5.path, r48 = t5.options.immutable, function(t8) {
                    if (null == this || null == this.$__) return t8;
                    if (this.isNew) return t8;
                    if (!("function" == typeof r48 ? r48.call(this, this) : r48)) return t8;
                    var o62 = this.$__getValue(e29);
                    if ("throw" === this.$__.strictMode && t8 !== o62) throw new n63(e29, "Path `" + e29 + "` is immutable and strict mode is set to throw.", !0);
                    return o62;
                }), t5.set(t5.$immutableSetter)) : t5.$immutableSetter && (t5.setters = t5.setters.filter(function(e32) {
                    return e32 !== t5.$immutableSetter;
                }), delete t5.$immutableSetter);
            };
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n63(t5) {
                return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            function o62(t5, e29) {
                return (o62 = Object.setPrototypeOf || function(t8, e32) {
                    return t8.__proto__ = e32, t8;
                })(t5, e29);
            }
            function i52(t5) {
                var e29 = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t8) {
                        return !1;
                    }
                }();
                return function() {
                    var r48, n86 = a43(t5);
                    if (e29) {
                        var o89 = a43(this).constructor;
                        r48 = Reflect.construct(n86, arguments, o89);
                    } else r48 = n86.apply(this, arguments);
                    return s36(this, r48);
                };
            }
            function s36(t5, e29) {
                if (e29 && ("object" === n63(e29) || "function" == typeof e29)) return e29;
                if ((void 0) !== e29) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t8) {
                    if ((void 0) === t8) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t8;
                })(t5);
            }
            function a43(t5) {
                return (a43 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t8) {
                    return t8.__proto__ || Object.getPrototypeOf(t8);
                })(t5);
            }
            var u46 = function(t5) {
                !function(t8, e29) {
                    if ("function" != typeof e29 && null !== e29) throw new TypeError("Super expression must either be null or a function");
                    t8.prototype = Object.create(e29 && e29.prototype, {
                        constructor: {
                            value: t8,
                            writable: !0,
                            configurable: !0
                        }
                    }), e29 && o62(t8, e29);
                }(r48, t5);
                var e29 = i52(r48);
                function r48(t8, n86, o90) {
                    return (function(t9, e32) {
                        if (!(t9 instanceof e32)) throw new TypeError("Cannot call a class as a function");
                    })(this, r48), e29.call(this, 'Parameter "' + n86 + '" to ' + o90 + "() must be an object, got " + t8.toString());
                }
                return r48;
            }(r2(5));
            Object.defineProperty(u46.prototype, "name", {
                value: "ObjectParameterError"
            }), t2.exports = u46;
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n63(t5) {
                return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            function o62(t5, e29) {
                return (o62 = Object.setPrototypeOf || function(t8, e32) {
                    return t8.__proto__ = e32, t8;
                })(t5, e29);
            }
            function i52(t5) {
                var e29 = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t8) {
                        return !1;
                    }
                }();
                return function() {
                    var r48, n86 = a43(t5);
                    if (e29) {
                        var o90 = a43(this).constructor;
                        r48 = Reflect.construct(n86, arguments, o90);
                    } else r48 = n86.apply(this, arguments);
                    return s36(this, r48);
                };
            }
            function s36(t5, e29) {
                if (e29 && ("object" === n63(e29) || "function" == typeof e29)) return e29;
                if ((void 0) !== e29) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t8) {
                    if ((void 0) === t8) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t8;
                })(t5);
            }
            function a43(t5) {
                return (a43 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t8) {
                    return t8.__proto__ || Object.getPrototypeOf(t8);
                })(t5);
            }
            var u46 = function(t5) {
                !function(t8, e29) {
                    if ("function" != typeof e29 && null !== e29) throw new TypeError("Super expression must either be null or a function");
                    t8.prototype = Object.create(e29 && e29.prototype, {
                        constructor: {
                            value: t8,
                            writable: !0,
                            configurable: !0
                        }
                    }), e29 && o62(t8, e29);
                }(r48, t5);
                var e29 = i52(r48);
                function r48(t8) {
                    !function(t9, e32) {
                        if (!(t9 instanceof e32)) throw new TypeError("Cannot call a class as a function");
                    }(this, r48);
                    return e29.call(this, "Can't validate() the same doc multiple times in parallel. Document: " + t8._id);
                }
                return r48;
            }(r2(14));
            Object.defineProperty(u46.prototype, "name", {
                value: "ParallelValidateError"
            }), /*!
 * exports
 */ t2.exports = u46;
        },
        function(t2, e3, r2) {
            "use strict";
            (function(e29) {
                function r48(t5, e32) {
                    var r76 = "undefined" != typeof Symbol && t5[Symbol.iterator] || t5["@@iterator"];
                    if (!r76) {
                        if (Array.isArray(t5) || (r76 = (function(t8, e40) {
                            if (!t8) return;
                            if ("string" == typeof t8) return n63(t8, e40);
                            var r77 = Object.prototype.toString.call(t8).slice(8, -1);
                            "Object" === r77 && t8.constructor && (r77 = t8.constructor.name);
                            if ("Map" === r77 || "Set" === r77) return Array.from(t8);
                            if ("Arguments" === r77 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r77)) return n63(t8, e40);
                        })(t5)) || e32 && t5 && "number" == typeof t5.length) {
                            r76 && (t5 = r76);
                            var o62 = 0, i52 = function() {
                            };
                            return {
                                s: i52,
                                n: function() {
                                    return o62 >= t5.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t5[o62++]
                                    };
                                },
                                e: function(t8) {
                                    throw t8;
                                },
                                f: i52
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var s36, a43 = !0, u46 = !1;
                    return {
                        s: function() {
                            r76 = r76.call(t5);
                        },
                        n: function() {
                            var t8 = r76.next();
                            return a43 = t8.done, t8;
                        },
                        e: function(t8) {
                            u46 = !0, s36 = t8;
                        },
                        f: function() {
                            try {
                                a43 || null == r76.return || r76.return();
                            } finally{
                                if (u46) throw s36;
                            }
                        }
                    };
                }
                function n63(t5, e32) {
                    (null == e32 || e32 > t5.length) && (e32 = t5.length);
                    for(var r76 = 0, n86 = new Array(e32); r76 < e32; r76++)n86[r76] = t5[r76];
                    return n86;
                }
                function o91(t5) {
                    return (o91 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                        return typeof t8;
                    } : function(t8) {
                        return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                    })(t5);
                }
                function i53() {
                    this._pres = new Map, this._posts = new Map;
                }
                function s36(t5, e32, r76, n86, o92, i64, s43) {
                    if (i64.useErrorHandlers) {
                        var a43 = {
                            error: e32
                        };
                        return t5.execPost(r76, n86, o92, a43, function(t8) {
                            return "function" == typeof s43 && s43(t8);
                        });
                    }
                    return "function" == typeof s43 ? s43(e32) : void 0;
                }
                function a49(t5, e32, r76) {
                    return t5.has(e32) ? t5.get(e32) : r76;
                }
                function u46(t5, e32, r76, n86) {
                    var o92;
                    try {
                        o92 = t5.apply(e32, r76);
                    } catch (t8) {
                        return n86(t8);
                    }
                    c33(o92) && o92.then(function() {
                        return n86();
                    }, function(t8) {
                        return n86(t8);
                    });
                }
                function c33(t5) {
                    return null != t5 && "function" == typeof t5.then;
                }
                function l32(t5) {
                    var r76 = !1, n86 = this;
                    return function() {
                        var o92 = arguments;
                        if (!r76) return r76 = !0, e29.nextTick(function() {
                            return t5.apply(n86, o92);
                        });
                    };
                }
                i53.prototype.execPre = function(t5, r76, n86, o92) {
                    3 === arguments.length && (o92 = n86, n86 = []);
                    var i64 = a49(this._pres, t5, []), s43 = i64.length, f27 = i64.numAsync || 0, p19 = 0, h19 = f27, y25 = !1, d18 = n86;
                    if (!s43) return e29.nextTick(function() {
                        o92(null);
                    });
                    var _15 = function t8() {
                        if (!(p19 >= s43)) {
                            var n87 = i64[p19];
                            if (n87.isAsync) {
                                var a55 = [
                                    l32(v9),
                                    l32(function(t9) {
                                        if (t9) {
                                            if (y25) return;
                                            return y25 = !0, o92(t9);
                                        }
                                        if (0 == --h19 && p19 >= s43) return o92(null);
                                    })
                                ];
                                u46(n87.fn, r76, a55, a55[0]);
                            } else if (n87.fn.length > 0) {
                                a55 = [
                                    l32(v9)
                                ];
                                for(var f32 = arguments.length >= 2 ? arguments : [
                                    null
                                ].concat(d18), _17 = 1; _17 < f32.length; ++_17)a55.push(f32[_17]);
                                u46(n87.fn, r76, a55, a55[0]);
                            } else {
                                var m5 = null;
                                try {
                                    m5 = n87.fn.call(r76);
                                } catch (t9) {
                                    if (null != t9) return o92(t9);
                                }
                                if (c33(m5)) m5.then(function() {
                                    return v9();
                                }, function(t9) {
                                    return v9(t9);
                                });
                                else {
                                    if ((++p19) >= s43) return h19 > 0 ? void 0 : e29.nextTick(function() {
                                        o92(null);
                                    });
                                    t8();
                                }
                            }
                        }
                    };
                    function v9(t9) {
                        if (t9) {
                            if (y25) return;
                            return y25 = !0, o92(t9);
                        }
                        if ((++p19) >= s43) return h19 > 0 ? void 0 : o92(null);
                        _15.apply(r76, arguments);
                    }
                    _15.apply(null, [
                        null
                    ].concat(n86));
                }, i53.prototype.execPreSync = function(t5, e32, r76) {
                    for(var n86 = a49(this._pres, t5, []), o92 = n86.length, i64 = 0; i64 < o92; ++i64)n86[i64].fn.apply(e32, r76 || []);
                }, i53.prototype.execPost = function(t5, r76, n86, o92, i64) {
                    arguments.length < 5 && (i64 = o92, o92 = null);
                    var s43 = a49(this._posts, t5, []), f27 = s43.length, p19 = 0, h19 = null;
                    if (o92 && o92.error && (h19 = o92.error), !f27) return e29.nextTick(function() {
                        i64.apply(null, [
                            h19
                        ].concat(n86));
                    });
                    var y25 = function t8() {
                        for(var e32 = s43[p19].fn, o93 = 0, a56 = n86.length, y26 = [], d18 = 0; d18 < a56; ++d18)o93 += n86[d18] && n86[d18]._kareemIgnore ? 0 : 1, n86[d18] && n86[d18]._kareemIgnore || y26.push(n86[d18]);
                        if (h19) {
                            if (e32.length === o93 + 2) {
                                var _15 = l32(function(e40) {
                                    if (e40 && (h19 = e40), (++p19) >= f27) return i64.call(null, h19);
                                    t8();
                                });
                                u46(e32, r76, [
                                    h19
                                ].concat(y26).concat([
                                    _15
                                ]), _15);
                            } else {
                                if ((++p19) >= f27) return i64.call(null, h19);
                                t8();
                            }
                        } else {
                            var v9 = l32(function(e40) {
                                return e40 ? (h19 = e40, t8()) : (++p19) >= f27 ? i64.apply(null, [
                                    null
                                ].concat(n86)) : void t8();
                            });
                            if (e32.length === o93 + 2) return (++p19) >= f27 ? i64.apply(null, [
                                null
                            ].concat(n86)) : t8();
                            if (e32.length === o93 + 1) u46(e32, r76, y26.concat([
                                v9
                            ]), v9);
                            else {
                                var m6, g8;
                                try {
                                    g8 = e32.apply(r76, y26);
                                } catch (t9) {
                                    m6 = t9, h19 = t9;
                                }
                                if (c33(g8)) return g8.then(function() {
                                    return v9();
                                }, function(t9) {
                                    return v9(t9);
                                });
                                if ((++p19) >= f27) return i64.apply(null, [
                                    m6
                                ].concat(n86));
                                t8();
                            }
                        }
                    };
                    y25();
                }, i53.prototype.execPostSync = function(t5, e32, r76) {
                    for(var n86 = a49(this._posts, t5, []), o92 = n86.length, i64 = 0; i64 < o92; ++i64)n86[i64].fn.apply(e32, r76 || []);
                }, i53.prototype.createWrapperSync = function(t5, e32) {
                    var r76 = this;
                    return function() {
                        r76.execPreSync(t5, this, arguments);
                        var n86 = e32.apply(this, arguments);
                        return r76.execPostSync(t5, this, [
                            n86
                        ]), n86;
                    };
                }, i53.prototype.wrap = function(t5, e32, r76, n86, o92) {
                    var i64 = n86.length > 0 ? n86[n86.length - 1] : null, a56 = ("function" == typeof i64 && n86.slice(0, n86.length - 1), this), u62 = (o92 = o92 || {
                    }).checkForPromise;
                    this.execPre(t5, r76, n86, function(c44) {
                        if (c44) {
                            for(var l33 = o92.numCallbackParams || 0, f27 = o92.contextParameter ? [
                                r76
                            ] : [], p19 = f27.length; p19 < l33; ++p19)f27.push(null);
                            return s36(a56, c44, t5, r76, f27, o92, i64);
                        }
                        var h19 = "function" == typeof i64 ? n86.length - 1 : n86.length, y25 = e32.length, d18 = e32.apply(r76, n86.slice(0, h19).concat(_18));
                        if (u62) {
                            if (null != d18 && "function" == typeof d18.then) return d18.then(function(t8) {
                                return _18(null, t8);
                            }, function(t8) {
                                return _18(t8);
                            });
                            if (y25 < h19 + 1) return _18(null, d18);
                        }
                        function _18() {
                            var e40 = Array.prototype.slice.call(arguments, 1);
                            if (o92.nullResultByDefault && 0 === e40.length && e40.push(null), arguments[0]) return s36(a56, arguments[0], t5, r76, e40, o92, i64);
                            a56.execPost(t5, r76, e40, function() {
                                return arguments[0] ? "function" == typeof i64 ? i64(arguments[0]) : void 0 : "function" == typeof i64 ? i64.apply(r76, arguments) : void 0;
                            });
                        }
                    });
                }, i53.prototype.filter = function(t5) {
                    for(var e32 = this, r76 = this.clone(), n86 = Array.from(r76._pres.keys()), o92 = function() {
                        var n88 = s43[i64], o93 = e32._pres.get(n88).map(function(t8) {
                            return Object.assign({
                            }, t8, {
                                name: n88
                            });
                        }).filter(t5);
                        if (0 === o93.length) return r76._pres.delete(n88), "continue";
                        o93.numAsync = o93.filter(function(t8) {
                            return t8.isAsync;
                        }).length, r76._pres.set(n88, o93);
                    }, i64 = 0, s43 = n86; i64 < s43.length; i64++)o92();
                    for(var a56 = Array.from(r76._posts.keys()), u62 = function() {
                        var n88 = l34[c44], o93 = e32._posts.get(n88).map(function(t8) {
                            return Object.assign({
                            }, t8, {
                                name: n88
                            });
                        }).filter(t5);
                        if (0 === o93.length) return r76._posts.delete(n88), "continue";
                        r76._posts.set(n88, o93);
                    }, c44 = 0, l34 = a56; c44 < l34.length; c44++)u62();
                    return r76;
                }, i53.prototype.hasHooks = function(t5) {
                    return this._pres.has(t5) || this._posts.has(t5);
                }, i53.prototype.createWrapper = function(t5, r76, n86, o92) {
                    var i64 = this;
                    return this.hasHooks(t5) ? function() {
                        var e32 = n86 || this, s43 = Array.prototype.slice.call(arguments);
                        i64.wrap(t5, r76, e32, s43, o92);
                    } : function() {
                        var t8 = arguments, n88 = this;
                        e29.nextTick(function() {
                            return r76.apply(n88, t8);
                        });
                    };
                }, i53.prototype.pre = function(t5, e32, r76, n86, i64) {
                    var s43 = {
                    };
                    "object" === o91(e32) && null != e32 ? e32 = (s43 = e32).isAsync : "boolean" != typeof arguments[1] && (n86 = r76, r76 = e32, e32 = !1);
                    var u62 = a49(this._pres, t5, []);
                    if (this._pres.set(t5, u62), e32 && (u62.numAsync = u62.numAsync || 0, ++u62.numAsync), "function" != typeof r76) throw new Error('pre() requires a function, got "' + o91(r76) + '"');
                    return i64 ? u62.unshift(Object.assign({
                    }, s43, {
                        fn: r76,
                        isAsync: e32
                    })) : u62.push(Object.assign({
                    }, s43, {
                        fn: r76,
                        isAsync: e32
                    })), this;
                }, i53.prototype.post = function(t5, e32, r76, n86) {
                    var i64 = a49(this._posts, t5, []);
                    if ("function" == typeof e32 && (n86 = !!r76, r76 = e32, e32 = {
                    }), "function" != typeof r76) throw new Error('post() requires a function, got "' + o91(r76) + '"');
                    return n86 ? i64.unshift(Object.assign({
                    }, e32, {
                        fn: r76
                    })) : i64.push(Object.assign({
                    }, e32, {
                        fn: r76
                    })), this._posts.set(t5, i64), this;
                }, i53.prototype.clone = function() {
                    var t5, e32 = new i53, n86 = r48(this._pres.keys());
                    try {
                        for(n86.s(); !(t5 = n86.n()).done;){
                            var o92 = t5.value, s43 = this._pres.get(o92).slice();
                            s43.numAsync = this._pres.get(o92).numAsync, e32._pres.set(o92, s43);
                        }
                    } catch (t8) {
                        n86.e(t8);
                    } finally{
                        n86.f();
                    }
                    var a56, u62 = r48(this._posts.keys());
                    try {
                        for(u62.s(); !(a56 = u62.n()).done;){
                            var c44 = a56.value;
                            e32._posts.set(c44, this._posts.get(c44).slice());
                        }
                    } catch (t8) {
                        u62.e(t8);
                    } finally{
                        u62.f();
                    }
                    return e32;
                }, i53.prototype.merge = function(t5, e32) {
                    var n86, o93 = (e32 = 1 === arguments.length || e32) ? this.clone() : this, i64 = r48(t5._pres.keys());
                    try {
                        var s58 = function() {
                            var e40 = n86.value, r76 = a49(o93._pres, e40, []), i73 = t5._pres.get(e40).filter(function(t8) {
                                return -1 === r76.map(function(t9) {
                                    return t9.fn;
                                }).indexOf(t8.fn);
                            }), s59 = r76.concat(i73);
                            s59.numAsync = r76.numAsync || 0, s59.numAsync += i73.filter(function(t8) {
                                return t8.isAsync;
                            }).length, o93._pres.set(e40, s59);
                        };
                        for(i64.s(); !(n86 = i64.n()).done;)s58();
                    } catch (t8) {
                        i64.e(t8);
                    } finally{
                        i64.f();
                    }
                    var u62, c45 = r48(t5._posts.keys());
                    try {
                        var l34 = function() {
                            var e40 = u62.value, r76 = a49(o93._posts, e40, []), n88 = t5._posts.get(e40).filter(function(t8) {
                                return -1 === r76.indexOf(t8);
                            });
                            o93._posts.set(e40, r76.concat(n88));
                        };
                        for(c45.s(); !(u62 = c45.n()).done;)l34();
                    } catch (t8) {
                        c45.e(t8);
                    } finally{
                        c45.f();
                    }
                    return o93;
                }, t2.exports = i53;
            }).call(this, r2(11));
        },
        function(t2, e3, r2) {
            "use strict";
            var n63 = r2(8), o91 = function t5(e29) {
                !function(t8, e32) {
                    if (!(t8 instanceof e32)) throw new TypeError("Cannot call a class as a function");
                }(this, t5), Object.assign(this, e29), null != e29 && null != e29.options && (this.options = Object.assign({
                }, e29.options));
            };
            Object.defineProperty(o91.prototype, "ref", n63), Object.defineProperty(o91.prototype, "refPath", n63), Object.defineProperty(o91.prototype, "localField", n63), Object.defineProperty(o91.prototype, "foreignField", n63), Object.defineProperty(o91.prototype, "justOne", n63), Object.defineProperty(o91.prototype, "count", n63), Object.defineProperty(o91.prototype, "match", n63), Object.defineProperty(o91.prototype, "options", n63), Object.defineProperty(o91.prototype, "skip", n63), Object.defineProperty(o91.prototype, "limit", n63), Object.defineProperty(o91.prototype, "perDocumentLimit", n63), t2.exports = o91;
        },
        function(t2, e3, r2) {
            "use strict";
            var n63 = r2(3), o91 = r2(21);
            /*!
 * Gather all indexes defined in the schema, including single nested,
 * document arrays, and embedded discriminators.
 */ t2.exports = function(t5) {
                var e29 = [], r48 = new WeakMap, i53 = t5.constructor.indexTypes, s36 = new Map;
                return (function t8(a49, u46, c33) {
                    if (r48.has(a49)) return;
                    r48.set(a49, !0), u46 = u46 || "";
                    for(var l32 = Object.keys(a49.paths), f33 = 0, p23 = l32; f33 < p23.length; f33++){
                        var h19 = p23[f33], y25 = a49.paths[h19];
                        if (null == c33 || !c33.paths[h19]) {
                            if (y25.$isMongooseDocumentArray || y25.$isSingleNested) {
                                if (!0 !== n63(y25, "options.excludeIndexes") && !0 !== n63(y25, "schemaOptions.excludeIndexes") && !0 !== n63(y25, "schema.options.excludeIndexes") && t8(y25.schema, u46 + h19 + "."), null != y25.schema.discriminators) for(var d18 = y25.schema.discriminators, _18 = Object.keys(d18), v11 = 0, m7 = _18; v11 < m7.length; v11++){
                                    var g9 = m7[v11];
                                    t8(d18[g9], u46 + h19 + ".", y25.schema);
                                }
                                if (y25.$isMongooseDocumentArray) continue;
                            }
                            var b8 = y25._index || y25.caster && y25.caster._index;
                            if (!1 !== b8 && null != b8) {
                                var w8 = {
                                }, O7 = o91(b8), S5 = O7 ? b8 : {
                                }, A5 = "string" == typeof b8 ? b8 : !!O7 && b8.type;
                                if (A5 && -1 !== i53.indexOf(A5)) w8[u46 + h19] = A5;
                                else if (S5.text) w8[u46 + h19] = "text", delete S5.text;
                                else {
                                    var $4 = -1 === Number(b8);
                                    w8[u46 + h19] = $4 ? -1 : 1;
                                }
                                delete S5.type, "background" in S5 || (S5.background = !0), null != a49.options.autoIndex && (S5._autoIndex = a49.options.autoIndex);
                                var E3 = S5 && S5.name;
                                "string" == typeof E3 && s36.has(E3) ? Object.assign(s36.get(E3), w8) : (e29.push([
                                    w8,
                                    S5
                                ]), s36.set(E3, w8));
                            }
                        }
                    }
                    r48.delete(a49), u46 ? /*!
   * Checks for indexes added to subdocs using Schema.index().
   * These indexes need their paths prefixed properly.
   *
   * schema._indexes = [ [indexObj, options], [indexObj, options] ..]
   */ (function(t9, r76) {
                        for(var n86 = t9._indexes, o93 = n86.length, i64 = 0; i64 < o93; ++i64){
                            for(var s58 = n86[i64][0], a56 = n86[i64][1], u62 = Object.keys(s58), c45 = u62.length, l34 = {
                            }, f34 = 0; f34 < c45; ++f34){
                                var p24 = u62[f34];
                                l34[r76 + p24] = s58[p24];
                            }
                            var h21 = Object.assign({
                            }, a56);
                            if (null != a56 && null != a56.partialFilterExpression) {
                                h21.partialFilterExpression = {
                                };
                                for(var y26 = a56.partialFilterExpression, d19 = 0, _19 = Object.keys(y26); d19 < _19.length; d19++){
                                    var v12 = _19[d19];
                                    h21.partialFilterExpression[r76 + v12] = y26[v12];
                                }
                            }
                            e29.push([
                                l34,
                                h21
                            ]);
                        }
                    })(a49, u46) : (a49._indexes.forEach(function(t9) {
                        "background" in t9[1] || (t9[1].background = !0);
                    }), e29 = e29.concat(a49._indexes));
                })(t5), e29;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            var n63 = r2(144), o91 = r2(146), i53 = r2(3), s36 = r2(77), a49 = r2(35);
            t2.exports = function(t5, e29) {
                var r48 = t5.childSchemas.find(function(t8) {
                    return !!t8.schema.options.timestamps;
                });
                if (e29 || r48) {
                    var u46 = s36(e29, "createdAt"), c33 = s36(e29, "updatedAt"), l32 = null != e29 && e29.hasOwnProperty("currentTime") ? e29.currentTime : null, f33 = {
                    };
                    t5.$timestamps = {
                        createdAt: u46,
                        updatedAt: c33
                    }, c33 && !t5.paths[c33] && (f33[c33] = Date), u46 && !t5.paths[u46] && (f33[u46] = Date), t5.add(f33), t5.pre("save", function(t8) {
                        var e32 = i53(this, "$__.saveOptions.timestamps");
                        if (!1 === e32) return t8();
                        var r76 = null != e32 && !1 === e32.updatedAt, n86 = null != e32 && !1 === e32.createdAt, o93 = null != l32 ? l32() : (this.ownerDocument ? this.ownerDocument() : this).constructor.base.now(), s59 = this._id && this._id.auto;
                        if (!n86 && u46 && !this.get(u46) && this.$__isSelected(u46) && this.$set(u46, s59 ? this._id.getTimestamp() : o93), !r76 && c33 && (this.isNew || this.isModified())) {
                            var a57 = o93;
                            this.isNew && (null != u46 ? a57 = this.$__getValue(u46) : s59 && (a57 = this._id.getTimestamp())), this.$set(c33, a57);
                        }
                        t8();
                    }), t5.methods.initializeTimestamps = function() {
                        var t8 = null != l32 ? l32() : this.constructor.base.now();
                        return u46 && !this.get(u46) && this.$set(u46, t8), c33 && !this.get(c33) && this.$set(c33, t8), this;
                    }, h22[a49.builtInMiddleware] = !0;
                    var p23 = {
                        query: !0,
                        model: !1
                    };
                    t5.pre("findOneAndReplace", p23, h22), t5.pre("findOneAndUpdate", p23, h22), t5.pre("replaceOne", p23, h22), t5.pre("update", p23, h22), t5.pre("updateOne", p23, h22), t5.pre("updateMany", p23, h22);
                }
                function h22(t8) {
                    var e32 = null != l32 ? l32() : this.model.base.now();
                    "findOneAndReplace" === this.op && null == this.getUpdate() && this.setUpdate({
                    }), o91(e32, u46, c33, this.getUpdate(), this.options, this.schema), n63(e32, this.getUpdate(), this.model.schema), t8();
                }
            };
        },
        function(t2, e3, r2) {
            "use strict";
            function n63(t5, e29) {
                var r48 = "undefined" != typeof Symbol && t5[Symbol.iterator] || t5["@@iterator"];
                if (!r48) {
                    if (Array.isArray(t5) || (r48 = (function(t8, e32) {
                        if (!t8) return;
                        if ("string" == typeof t8) return o91(t8, e32);
                        var r76 = Object.prototype.toString.call(t8).slice(8, -1);
                        "Object" === r76 && t8.constructor && (r76 = t8.constructor.name);
                        if ("Map" === r76 || "Set" === r76) return Array.from(t8);
                        if ("Arguments" === r76 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r76)) return o91(t8, e32);
                    })(t5)) || e29 && t5 && "number" == typeof t5.length) {
                        r48 && (t5 = r48);
                        var n86 = 0, i53 = function() {
                        };
                        return {
                            s: i53,
                            n: function() {
                                return n86 >= t5.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t5[n86++]
                                };
                            },
                            e: function(t8) {
                                throw t8;
                            },
                            f: i53
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s36, a49 = !0, u64 = !1;
                return {
                    s: function() {
                        r48 = r48.call(t5);
                    },
                    n: function() {
                        var t8 = r48.next();
                        return a49 = t8.done, t8;
                    },
                    e: function(t8) {
                        u64 = !0, s36 = t8;
                    },
                    f: function() {
                        try {
                            a49 || null == r48.return || r48.return();
                        } finally{
                            if (u64) throw s36;
                        }
                    }
                };
            }
            function o91(t5, e29) {
                (null == e29 || e29 > t5.length) && (e29 = t5.length);
                for(var r48 = 0, n88 = new Array(e29); r48 < e29; r48++)n88[r48] = t5[r48];
                return n88;
            }
            var i64 = r2(145), s36 = r2(77);
            /*!
 * ignore
 */ function a49(t5, e29, r48) {
                if (null != e29) {
                    if (Object.keys(e29).some(function(t8) {
                        return t8.startsWith("$");
                    })) {
                        if (e29.$push && d20(e29.$push), e29.$addToSet && d20(e29.$addToSet), null != e29.$set) for(var o93 = 0, i73 = Object.keys(e29.$set); o93 < i73.length; o93++){
                            var a58 = i73[o93];
                            u64(r48, a58, e29.$set, t5);
                        }
                        if (null != e29.$setOnInsert) for(var c46 = 0, l35 = Object.keys(e29.$setOnInsert); c46 < l35.length; c46++){
                            var f35 = l35[c46];
                            u64(r48, f35, e29.$setOnInsert, t5);
                        }
                    }
                    var p25, h22 = n63(Object.keys(e29).filter(function(t8) {
                        return !t8.startsWith("$");
                    }));
                    try {
                        for(h22.s(); !(p25 = h22.n()).done;){
                            var y27 = p25.value;
                            u64(r48, y27, e29, t5);
                        }
                    } catch (t8) {
                        h22.e(t8);
                    } finally{
                        h22.f();
                    }
                }
                function d20(e32) {
                    for(var n88 = 0, o94 = Object.keys(e32); n88 < o94.length; n88++){
                        var i74 = o94[n88], a59 = r48.path(i74.replace(/\.\$\./i, ".").replace(/.\$$/, ""));
                        e32[i74] && a59 && a59.$isMongooseDocumentArray && a59.schema.options.timestamps && (function() {
                            var r76 = a59.schema.options.timestamps, n89 = s36(r76, "createdAt"), o95 = s36(r76, "updatedAt");
                            e32[i74].$each ? e32[i74].$each.forEach(function(e40) {
                                null != o95 && (e40[o95] = t5), null != n89 && (e40[n89] = t5);
                            }) : (null != o95 && (e32[i74][o95] = t5), null != n89 && (e32[i74][n89] = t5));
                        })();
                    }
                }
            }
            function u64(t5, e29, r48, o94) {
                var u65 = i64(e29), c47 = t5.path(u65);
                if (c47) {
                    for(var l36 = [], f36 = u65.split("."), p26 = f36.length - 1; p26 > 0; --p26){
                        var h23 = t5.path(f36.slice(0, p26).join("."));
                        null != h23 && (h23.$isMongooseDocumentArray || h23.$isSingleNested) && l36.push({
                            parentPath: e29.split(".").slice(0, p26).join("."),
                            parentSchemaType: h23
                        });
                    }
                    if (Array.isArray(r48[e29]) && c47.$isMongooseDocumentArray) !function(t8, e32, r76) {
                        var n88 = e32.schema.options.timestamps;
                        if (n88) for(var o95 = t8.length, i75 = s36(n88, "createdAt"), u66 = s36(n88, "updatedAt"), c48 = 0; c48 < o95; ++c48)null != u66 && (t8[c48][u66] = r76), null != i75 && (t8[c48][i75] = r76), a49(r76, t8[c48], e32.schema);
                    }(r48[e29], c47, o94);
                    else if (r48[e29] && c47.$isSingleNested) !function(t8, e32, r76) {
                        var n88 = e32.schema.options.timestamps;
                        if (n88) {
                            var o95 = s36(n88, "createdAt"), i75 = s36(n88, "updatedAt");
                            null != i75 && (t8[i75] = r76), null != o95 && (t8[o95] = r76), a49(r76, t8, e32.schema);
                        }
                    }(r48[e29], c47, o94);
                    else if (l36.length > 0) {
                        var y28, d20 = n63(l36);
                        try {
                            for(d20.s(); !(y28 = d20.n()).done;){
                                var _20 = y28.value, v13 = _20.parentPath, m8 = _20.parentSchemaType, g10 = m8.schema.options.timestamps, b9 = s36(g10, "updatedAt");
                                if (g10 && null != b9) {
                                    if (m8.$isSingleNested) r48[v13 + "." + b9] = o94;
                                    else if (m8.$isMongooseDocumentArray) {
                                        var w9 = e29.substr(v13.length + 1);
                                        if (/^\d+$/.test(w9)) {
                                            r48[v13 + "." + w9][b9] = o94;
                                            continue;
                                        }
                                        var O8 = w9.indexOf(".");
                                        r48[v13 + "." + (w9 = -1 !== O8 ? w9.substr(0, O8) : w9) + "." + b9] = o94;
                                    }
                                }
                            }
                        } catch (t8) {
                            d20.e(t8);
                        } finally{
                            d20.f();
                        }
                    } else if (null != c47.schema && c47.schema != t5 && r48[e29]) {
                        var S6 = c47.schema.options.timestamps, A6 = s36(S6, "createdAt"), $5 = s36(S6, "updatedAt");
                        if (!S6) return;
                        null != $5 && (r48[e29][$5] = o94), null != A6 && (r48[e29][A6] = o94);
                    }
                }
            }
            t2.exports = a49;
        },
        function(t2, e3, r2) {
            "use strict";
            t2.exports = function(t5) {
                return t5.replace(/\.\$(\[[^\]]*\])?(?=\.)/g, ".0").replace(/\.\$(\[[^\]]*\])?$/g, ".0");
            };
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * ignore
 */ var n63 = r2(3);
            t2.exports = /*!
 * ignore
 */ function(t5, e29, r48, o91, i64) {
                var s36 = o91, a49 = s36, u64 = n63(i64, "overwrite", !1), c47 = n63(i64, "timestamps", !0);
                if (!c47 || null == s36) return o91;
                var l37 = null != c47 && !1 === c47.createdAt, f37 = null != c47 && !1 === c47.updatedAt;
                if (u64) return o91 && o91.$set && (o91 = o91.$set, s36.$set = {
                }, a49 = s36.$set), f37 || !r48 || o91[r48] || (a49[r48] = t5), l37 || !e29 || o91[e29] || (a49[e29] = t5), s36;
                if (o91 = o91 || {
                }, Array.isArray(s36)) return s36.push({
                    $set: {
                        updatedAt: t5
                    }
                }), s36;
                if (s36.$set = s36.$set || {
                }, !f37 && r48 && (!o91.$currentDate || !o91.$currentDate[r48])) {
                    var p27 = !1;
                    if (-1 !== r48.indexOf(".")) for(var h24 = r48.split("."), y29 = 1; y29 < h24.length; ++y29){
                        var d21 = h24.slice(-y29).join("."), _21 = h24.slice(0, -y29).join(".");
                        if (null != o91[_21]) {
                            o91[_21][d21] = t5, p27 = !0;
                            break;
                        }
                        if (o91.$set && o91.$set[_21]) {
                            o91.$set[_21][d21] = t5, p27 = !0;
                            break;
                        }
                    }
                    p27 || (s36.$set[r48] = t5), s36.hasOwnProperty(r48) && delete s36[r48];
                }
                if (!l37 && e29) {
                    o91[e29] && delete o91[e29], o91.$set && o91.$set[e29] && delete o91.$set[e29];
                    var v14 = !1;
                    if (-1 !== e29.indexOf(".")) for(var m9 = e29.split("."), g11 = 1; g11 < m9.length; ++g11){
                        var b10 = m9.slice(-g11).join("."), w10 = m9.slice(0, -g11).join(".");
                        if (null != o91[w10]) {
                            o91[w10][b10] = t5, v14 = !0;
                            break;
                        }
                        if (o91.$set && o91.$set[w10]) {
                            o91.$set[w10][b10] = t5, v14 = !0;
                            break;
                        }
                    }
                    v14 || (s36.$setOnInsert = s36.$setOnInsert || {
                    }, s36.$setOnInsert[e29] = t5);
                }
                0 === Object.keys(s36.$set).length && delete s36.$set;
                return s36;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            var n63 = r2(14), o91 = r2(4);
            t2.exports = function(t5, e29) {
                if ("string" == typeof t5) return;
                if ("function" == typeof t5) return;
                throw new n63('Invalid ref at path "' + e29 + '". Got ' + o91.inspect(t5, {
                    depth: 0
                }));
            };
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * ignore
 */ /*!
 * Apply query middleware
 *
 * @param {Query} query constructor
 * @param {Model} model
 */ function n63(t5, e29) {
                var r48 = {
                    useErrorHandlers: !0,
                    numCallbackParams: 1,
                    nullResultByDefault: !0
                }, o91 = e29.hooks.filter(function(t8) {
                    var e32 = function(t9) {
                        var e40 = {
                        };
                        t9.hasOwnProperty("query") && (e40.query = t9.query);
                        t9.hasOwnProperty("document") && (e40.document = t9.document);
                        return e40;
                    }(t8);
                    return "updateOne" === t8.name ? null == e32.query || !!e32.query : "deleteOne" === t8.name ? !!e32.query || 0 === Object.keys(e32).length : "validate" === t8.name || "remove" === t8.name ? !!e32.query : null == t8.query && null == t8.document || !!t8.query;
                });
                t5.prototype._execUpdate = o91.createWrapper("update", t5.prototype._execUpdate, null, r48), t5.prototype.__distinct = o91.createWrapper("distinct", t5.prototype.__distinct, null, r48), t5.prototype.validate = o91.createWrapper("validate", t5.prototype.validate, null, r48), n63.middlewareFunctions.filter(function(t8) {
                    return "update" !== t8 && "distinct" !== t8 && "validate" !== t8;
                }).forEach(function(e32) {
                    t5.prototype["_".concat(e32)] = o91.createWrapper(e32, t5.prototype["_".concat(e32)], null, r48);
                });
            }
            t2.exports = n63, /*!
 * ignore
 */ n63.middlewareFunctions = [
                "count",
                "countDocuments",
                "deleteMany",
                "deleteOne",
                "distinct",
                "estimatedDocumentCount",
                "find",
                "findOne",
                "findOneAndDelete",
                "findOneAndRemove",
                "findOneAndReplace",
                "findOneAndUpdate",
                "remove",
                "replaceOne",
                "update",
                "updateMany",
                "updateOne",
                "validate"
            ];
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n63(t5, e29) {
                var r48 = "undefined" != typeof Symbol && t5[Symbol.iterator] || t5["@@iterator"];
                if (!r48) {
                    if (Array.isArray(t5) || (r48 = (function(t8, e32) {
                        if (!t8) return;
                        if ("string" == typeof t8) return o91(t8, e32);
                        var r76 = Object.prototype.toString.call(t8).slice(8, -1);
                        "Object" === r76 && t8.constructor && (r76 = t8.constructor.name);
                        if ("Map" === r76 || "Set" === r76) return Array.from(t8);
                        if ("Arguments" === r76 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r76)) return o91(t8, e32);
                    })(t5)) || e29 && t5 && "number" == typeof t5.length) {
                        r48 && (t5 = r48);
                        var n88 = 0, i64 = function() {
                        };
                        return {
                            s: i64,
                            n: function() {
                                return n88 >= t5.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t5[n88++]
                                };
                            },
                            e: function(t8) {
                                throw t8;
                            },
                            f: i64
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s36, a49 = !0, u64 = !1;
                return {
                    s: function() {
                        r48 = r48.call(t5);
                    },
                    n: function() {
                        var t8 = r48.next();
                        return a49 = t8.done, t8;
                    },
                    e: function(t8) {
                        u64 = !0, s36 = t8;
                    },
                    f: function() {
                        try {
                            a49 || null == r48.return || r48.return();
                        } finally{
                            if (u64) throw s36;
                        }
                    }
                };
            }
            function o91(t5, e29) {
                (null == e29 || e29 > t5.length) && (e29 = t5.length);
                for(var r48 = 0, n89 = new Array(e29); r48 < e29; r48++)n89[r48] = t5[r48];
                return n89;
            }
            var i76 = r2(6), s36 = r2(5), a49 = r2(150), u64 = r2(79), c47 = r2(1), l37 = i76.CastError;
            function f37(t5, e29) {
                this.enumValues = [], this.regExp = null, i76.call(this, t5, e29, "String");
            }
            /*!
 * ignore
 */ function p28(t5) {
                return this.castForQuery(t5);
            }
            f37.schemaName = "String", f37.defaultOptions = {
            }, /*!
 * Inherits from SchemaType.
 */ f37.prototype = Object.create(i76.prototype), f37.prototype.constructor = f37, Object.defineProperty(f37.prototype, "OptionsConstructor", {
                configurable: !1,
                enumerable: !1,
                writable: !1,
                value: a49
            }), /*!
 * ignore
 */ f37._cast = u64, f37.cast = function(t5) {
                return 0 === arguments.length || (!1 === t5 && (t5 = this._defaultCaster), this._cast = t5), this._cast;
            }, /*!
 * ignore
 */ f37._defaultCaster = function(t5) {
                if (null != t5 && "string" != typeof t5) throw new Error;
                return t5;
            }, f37.get = i76.get, f37.set = i76.set, /*!
 * ignore
 */ f37._checkRequired = function(t5) {
                return (t5 instanceof String || "string" == typeof t5) && t5.length;
            }, f37.checkRequired = i76.checkRequired, f37.prototype.enum = function() {
                if (this.enumValidator && (this.validators = this.validators.filter(function(t5) {
                    return t5.validator !== this.enumValidator;
                }, this), this.enumValidator = !1), (void 0) === arguments[0] || !1 === arguments[0]) return this;
                var t5, e29;
                c47.isObject(arguments[0]) ? Array.isArray(arguments[0].values) ? (t5 = arguments[0].values, e29 = arguments[0].message) : (t5 = c47.object.vals(arguments[0]), e29 = s36.messages.String.enum) : (t5 = arguments, e29 = s36.messages.String.enum);
                var r48, o94 = n63(t5);
                try {
                    for(o94.s(); !(r48 = o94.n()).done;){
                        var i77 = r48.value;
                        (void 0) !== i77 && this.enumValues.push(this.cast(i77));
                    }
                } catch (t8) {
                    o94.e(t8);
                } finally{
                    o94.f();
                }
                var a60 = this.enumValues;
                return this.enumValidator = function(t8) {
                    return (void 0) === t8 || ~a60.indexOf(t8);
                }, this.validators.push({
                    validator: this.enumValidator,
                    message: e29,
                    type: "enum",
                    enumValues: a60
                }), this;
            }, f37.prototype.lowercase = function(t5) {
                return arguments.length > 0 && !t5 ? this : this.set(function(t8, e29) {
                    return "string" != typeof t8 && (t8 = e29.cast(t8)), t8 ? t8.toLowerCase() : t8;
                });
            }, f37.prototype.uppercase = function(t5) {
                return arguments.length > 0 && !t5 ? this : this.set(function(t8, e29) {
                    return "string" != typeof t8 && (t8 = e29.cast(t8)), t8 ? t8.toUpperCase() : t8;
                });
            }, f37.prototype.trim = function(t5) {
                return arguments.length > 0 && !t5 ? this : this.set(function(t8, e29) {
                    return "string" != typeof t8 && (t8 = e29.cast(t8)), t8 ? t8.trim() : t8;
                });
            }, f37.prototype.minlength = function(t5, e29) {
                if (this.minlengthValidator && (this.validators = this.validators.filter(function(t8) {
                    return t8.validator !== this.minlengthValidator;
                }, this)), null != t5) {
                    var r48 = e29 || s36.messages.String.minlength;
                    r48 = r48.replace(/{MINLENGTH}/, t5), this.validators.push({
                        validator: this.minlengthValidator = function(e32) {
                            return null === e32 || e32.length >= t5;
                        },
                        message: r48,
                        type: "minlength",
                        minlength: t5
                    });
                }
                return this;
            }, f37.prototype.minLength = f37.prototype.minlength, f37.prototype.maxlength = function(t5, e29) {
                if (this.maxlengthValidator && (this.validators = this.validators.filter(function(t8) {
                    return t8.validator !== this.maxlengthValidator;
                }, this)), null != t5) {
                    var r76 = e29 || s36.messages.String.maxlength;
                    r76 = r76.replace(/{MAXLENGTH}/, t5), this.validators.push({
                        validator: this.maxlengthValidator = function(e32) {
                            return null === e32 || e32.length <= t5;
                        },
                        message: r76,
                        type: "maxlength",
                        maxlength: t5
                    });
                }
                return this;
            }, f37.prototype.maxLength = f37.prototype.maxlength, f37.prototype.match = function(t5, e29) {
                var r77 = e29 || s36.messages.String.match;
                return this.validators.push({
                    validator: function(e32) {
                        return !!t5 && (t5.lastIndex = 0, null == e32 || "" === e32 || t5.test(e32));
                    },
                    message: r77,
                    type: "regexp",
                    regexp: t5
                }), this;
            }, f37.prototype.checkRequired = function(t5, e29) {
                return i76._isRef(this, t5, e29, !0) ? !!t5 : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : f37.checkRequired())(t5);
            }, f37.prototype.cast = function(t5, e29, r77) {
                if (i76._isRef(this, t5, e29, r77)) return "string" == typeof t5 ? t5 : this._castRef(t5, e29, r77);
                var n89;
                n89 = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : f37.cast();
                try {
                    return n89(t5);
                } catch (e32) {
                    throw new l37("string", t5, this.path, null, this);
                }
            };
            var h25 = c47.options(i76.prototype.$conditionalHandlers, {
                $all: function(t5) {
                    var e29 = this;
                    return Array.isArray(t5) ? t5.map(function(t8) {
                        return e29.castForQuery(t8);
                    }) : [
                        this.castForQuery(t5)
                    ];
                },
                $gt: p28,
                $gte: p28,
                $lt: p28,
                $lte: p28,
                $options: String,
                $regex: p28,
                $not: p28
            });
            Object.defineProperty(f37.prototype, "$conditionalHandlers", {
                configurable: !1,
                enumerable: !1,
                writable: !1,
                value: Object.freeze(h25)
            }), f37.prototype.castForQuery = function(t5, e29) {
                var r77;
                if (2 === arguments.length) {
                    if (!(r77 = this.$conditionalHandlers[t5])) throw new Error("Can't use " + t5 + " with String.");
                    return r77.call(this, e29);
                }
                return e29 = t5, "[object RegExp]" === Object.prototype.toString.call(e29) ? e29 : this._castForQuery(e29);
            }, /*!
 * Module exports.
 */ t2.exports = f37;
        },
        function(t2, e3, r2) {
            "use strict";
            function n63(t5) {
                return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            function o91(t5, e29) {
                if (!(t5 instanceof e29)) throw new TypeError("Cannot call a class as a function");
            }
            function i76(t5, e29) {
                return (i76 = Object.setPrototypeOf || function(t8, e32) {
                    return t8.__proto__ = e32, t8;
                })(t5, e29);
            }
            function s36(t5) {
                var e29 = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t8) {
                        return !1;
                    }
                }();
                return function() {
                    var r77, n89 = u64(t5);
                    if (e29) {
                        var o94 = u64(this).constructor;
                        r77 = Reflect.construct(n89, arguments, o94);
                    } else r77 = n89.apply(this, arguments);
                    return a49(this, r77);
                };
            }
            function a49(t5, e29) {
                if (e29 && ("object" === n63(e29) || "function" == typeof e29)) return e29;
                if ((void 0) !== e29) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t8) {
                    if ((void 0) === t8) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t8;
                })(t5);
            }
            function u64(t5) {
                return (u64 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t8) {
                    return t8.__proto__ || Object.getPrototypeOf(t8);
                })(t5);
            }
            var c47 = function(t5) {
                !function(t8, e29) {
                    if ("function" != typeof e29 && null !== e29) throw new TypeError("Super expression must either be null or a function");
                    t8.prototype = Object.create(e29 && e29.prototype, {
                        constructor: {
                            value: t8,
                            writable: !0,
                            configurable: !0
                        }
                    }), e29 && i76(t8, e29);
                }(r77, t5);
                var e29 = s36(r77);
                function r77() {
                    return o91(this, r77), e29.apply(this, arguments);
                }
                return r77;
            }(r2(7)), l37 = r2(8);
            Object.defineProperty(c47.prototype, "enum", l37), Object.defineProperty(c47.prototype, "match", l37), Object.defineProperty(c47.prototype, "lowercase", l37), Object.defineProperty(c47.prototype, "trim", l37), Object.defineProperty(c47.prototype, "uppercase", l37), Object.defineProperty(c47.prototype, "minLength", l37), Object.defineProperty(c47.prototype, "minlength", l37), Object.defineProperty(c47.prototype, "maxLength", l37), Object.defineProperty(c47.prototype, "maxlength", l37), Object.defineProperty(c47.prototype, "populate", l37), /*!
 * ignore
 */ t2.exports = c47;
        },
        function(t2, e3, r2) {
            "use strict";
            function n63(t5) {
                return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            function o91(t5, e29) {
                if (!(t5 instanceof e29)) throw new TypeError("Cannot call a class as a function");
            }
            function i76(t5, e29) {
                return (i76 = Object.setPrototypeOf || function(t8, e32) {
                    return t8.__proto__ = e32, t8;
                })(t5, e29);
            }
            function s36(t5) {
                var e29 = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t8) {
                        return !1;
                    }
                }();
                return function() {
                    var r77, n89 = u64(t5);
                    if (e29) {
                        var o96 = u64(this).constructor;
                        r77 = Reflect.construct(n89, arguments, o96);
                    } else r77 = n89.apply(this, arguments);
                    return a49(this, r77);
                };
            }
            function a49(t5, e29) {
                if (e29 && ("object" === n63(e29) || "function" == typeof e29)) return e29;
                if ((void 0) !== e29) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t8) {
                    if ((void 0) === t8) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t8;
                })(t5);
            }
            function u64(t5) {
                return (u64 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t8) {
                    return t8.__proto__ || Object.getPrototypeOf(t8);
                })(t5);
            }
            var c47 = function(t5) {
                !function(t8, e29) {
                    if ("function" != typeof e29 && null !== e29) throw new TypeError("Super expression must either be null or a function");
                    t8.prototype = Object.create(e29 && e29.prototype, {
                        constructor: {
                            value: t8,
                            writable: !0,
                            configurable: !0
                        }
                    }), e29 && i76(t8, e29);
                }(r77, t5);
                var e29 = s36(r77);
                function r77() {
                    return o91(this, r77), e29.apply(this, arguments);
                }
                return r77;
            }(r2(7)), l37 = r2(8);
            Object.defineProperty(c47.prototype, "min", l37), Object.defineProperty(c47.prototype, "max", l37), Object.defineProperty(c47.prototype, "enum", l37), Object.defineProperty(c47.prototype, "populate", l37), /*!
 * ignore
 */ t2.exports = c47;
        },
        function(t2, e3, r2) {
            "use strict";
            var n63 = r2(23);
            /*!
 * Given a value, cast it to a number, or throw a `CastError` if the value
 * cannot be casted. `null` and `undefined` are considered valid.
 *
 * @param {Any} value
 * @param {String} [path] optional the path to set on the CastError
 * @return {Boolean|null|undefined}
 * @throws {Error} if `value` is not one of the allowed values
 * @api private
 */ t2.exports = function(t5) {
                return null == t5 ? t5 : "" === t5 ? null : ("string" != typeof t5 && "boolean" != typeof t5 || (t5 = Number(t5)), n63.ok(!isNaN(t5)), t5 instanceof Number ? t5.valueOf() : "number" == typeof t5 ? t5 : Array.isArray(t5) || "function" != typeof t5.valueOf ? t5.toString && !Array.isArray(t5) && t5.toString() == Number(t5) ? Number(t5) : void n63.ok(!1) : Number(t5.valueOf()));
            };
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ var n63 = r2(13), o91 = r2(6), i76 = r2(53), s36 = r2(1);
            function a49(t5, e29) {
                o91.call(this, t5, e29, "Boolean");
            }
            a49.schemaName = "Boolean", a49.defaultOptions = {
            }, /*!
 * Inherits from SchemaType.
 */ a49.prototype = Object.create(o91.prototype), a49.prototype.constructor = a49, /*!
 * ignore
 */ a49._cast = i76, a49.set = o91.set, a49.cast = function(t5) {
                return 0 === arguments.length || (!1 === t5 && (t5 = this._defaultCaster), this._cast = t5), this._cast;
            }, /*!
 * ignore
 */ a49._defaultCaster = function(t5) {
                if (null != t5 && "boolean" != typeof t5) throw new Error;
                return t5;
            }, /*!
 * ignore
 */ a49._checkRequired = function(t5) {
                return !0 === t5 || !1 === t5;
            }, a49.checkRequired = o91.checkRequired, a49.prototype.checkRequired = function(t5) {
                return this.constructor._checkRequired(t5);
            }, Object.defineProperty(a49, "convertToTrue", {
                get: function() {
                    return i76.convertToTrue;
                },
                set: function(t5) {
                    i76.convertToTrue = t5;
                }
            }), Object.defineProperty(a49, "convertToFalse", {
                get: function() {
                    return i76.convertToFalse;
                },
                set: function(t5) {
                    i76.convertToFalse = t5;
                }
            }), a49.prototype.cast = function(t5) {
                var e29;
                e29 = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : a49.cast();
                try {
                    return e29(t5);
                } catch (e32) {
                    throw new n63("Boolean", t5, this.path, e32, this);
                }
            }, a49.$conditionalHandlers = s36.options(o91.prototype.$conditionalHandlers, {
            }), a49.prototype.castForQuery = function(t5, e29) {
                var r77;
                return 2 === arguments.length ? (r77 = a49.$conditionalHandlers[t5]) ? r77.call(this, e29) : this._castForQuery(e29) : this._castForQuery(t5);
            }, a49.prototype._castNullish = function(t5) {
                if ((void 0) === t5 && null != this.$$context && null != this.$$context._mongooseOptions && this.$$context._mongooseOptions.omitUndefined) return t5;
                var e29 = "function" == typeof this.constructor.cast ? this.constructor.cast() : a49.cast();
                return null == e29 ? t5 : !(e29.convertToFalse instanceof Set && e29.convertToFalse.has(t5)) && (!!(e29.convertToTrue instanceof Set && e29.convertToTrue.has(t5)) || t5);
            }, /*!
 * Module exports.
 */ t2.exports = a49;
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ var n63, o91, i76 = r2(57), s36 = r2(13), a49 = r2(19).EventEmitter, u64 = r2(160), c47 = r2(6), l37 = r2(33), f37 = r2(93), p28 = r2(3), h25 = r2(94), y30 = r2(4), d22 = r2(1), _22 = r2(95), v15 = r2(0).arrayAtomicsSymbol, m10 = r2(0).arrayPathSymbol, g12 = r2(0).documentArrayParent;
            function b11(t5, e29, r77, n89) {
                null != n89 && null != n89._id ? e29 = h25(e29, n89) : null != r77 && null != r77._id && (e29 = h25(e29, r77));
                var o97 = w11(e29, r77);
                o97.prototype.$basePath = t5, i76.call(this, t5, o97, r77), this.schema = e29, this.schemaOptions = n89 || {
                }, this.$isMongooseDocumentArray = !0, this.Constructor = o97, o97.base = e29.base;
                var s59 = this.defaultValue;
                "defaultValue" in this && (void 0) === s59 || this.default(function() {
                    var t8 = s59.call(this);
                    return Array.isArray(t8) || (t8 = [
                        t8
                    ]), t8;
                });
                var a60 = this;
                this.$embeddedSchemaType = new c47(t5 + ".$", {
                    required: p28(this, "schemaOptions.required", !1)
                }), this.$embeddedSchemaType.cast = function(t8, e32, r78) {
                    return a60.cast(t8, e32, r78)[0];
                }, this.$embeddedSchemaType.$isMongooseDocumentArrayElement = !0, this.$embeddedSchemaType.caster = this.Constructor, this.$embeddedSchemaType.schema = this.schema;
            }
            /*!
 * Ignore
 */ function w11(t5, e29, n89) {
                function i78() {
                    o91.apply(this, arguments), this.$session(this.ownerDocument().$session());
                }
                o91 || (o91 = r2(29));
                var s59 = null != n89 ? n89.prototype : o91.prototype;
                for(var u65 in i78.prototype = Object.create(s59), i78.prototype.$__setSchema(t5), i78.schema = t5, i78.prototype.constructor = i78, i78.$isArraySubdocument = !0, i78.events = new a49, t5.methods)i78.prototype[u65] = t5.methods[u65];
                for(var c48 in t5.statics)i78[c48] = t5.statics[c48];
                for(var l38 in a49.prototype)i78[l38] = a49.prototype[l38];
                return i78.options = e29, i78;
            }
            /*!
 * Scopes paths selected in a query to this array.
 * Necessary for proper default application of subdocument values.
 *
 * @param {DocumentArrayPath} array - the array to scope `fields` paths
 * @param {Object|undefined} fields - the root fields selected in the query
 * @param {Boolean|undefined} init - if we are being created part of a query result
 */ function O9(t5, e29, r77) {
                if (r77 && e29) {
                    for(var n89, o97, i78, s59 = t5.path + ".", a60 = Object.keys(e29), u65 = a60.length, c48 = {
                    }; u65--;)if ((o97 = a60[u65]).startsWith(s59)) {
                        if ("$" === (i78 = o97.substring(s59.length))) continue;
                        i78.startsWith("$.") && (i78 = i78.substr(2)), n89 || (n89 = !0), c48[i78] = e29[o97];
                    }
                    return n89 && c48 || void 0;
                }
            }
            b11.schemaName = "DocumentArray", b11.options = {
                castNonArrays: !0
            }, /*!
 * Inherits from ArrayType.
 */ b11.prototype = Object.create(i76.prototype), b11.prototype.constructor = b11, b11.prototype.OptionsConstructor = u64, b11.prototype.discriminator = function(t5, e29, r77) {
                "function" == typeof t5 && (t5 = d22.getFunctionName(t5));
                var n90 = w11(e29 = f37(this.casterConstructor, t5, e29, r77), null, this.casterConstructor);
                n90.baseCasterConstructor = this.casterConstructor;
                try {
                    Object.defineProperty(n90, "name", {
                        value: t5
                    });
                } catch (t8) {
                }
                return this.casterConstructor.discriminators[t5] = n90, this.casterConstructor.discriminators[t5];
            }, b11.prototype.doValidate = function(t5, e29, i79, s60) {
                n63 || (n63 = r2(18));
                var a61 = this;
                try {
                    c47.prototype.doValidate.call(this, t5, function(r77) {
                        if (r77) return r77.$isArrayValidatorError = !0, e29(r77);
                        var u66, c49 = t5 && t5.length;
                        if (!c49) return e29();
                        if (s60 && s60.updateValidator) return e29();
                        t5.isMongooseDocumentArray || (t5 = new n63(t5, a61.path, i79));
                        function f38(t8) {
                            null != t8 && ((u66 = t8) instanceof l37 || (u66.$isArrayValidatorError = !0)), (--c49) || e29(u66);
                        }
                        for(var p29 = 0, h26 = c49; p29 < h26; ++p29){
                            var y31 = t5[p29];
                            if (null != y31) {
                                if (!(y31 instanceof o91)) {
                                    var d23 = _22(a61.casterConstructor, t5[p29]);
                                    y31 = t5[p29] = new d23(y31, t5, void 0, void 0, p29);
                                }
                                null == s60 || !s60.validateModifiedOnly || y31.isModified() ? y31.$__validate(f38) : (--c49) || e29(u66);
                            } else (--c49) || e29(u66);
                        }
                    }, i79);
                } catch (t8) {
                    return t8.$isArrayValidatorError = !0, e29(t8);
                }
            }, b11.prototype.doValidateSync = function(t5, e29, r77) {
                var n90 = c47.prototype.doValidateSync.call(this, t5, e29);
                if (null != n90) return n90.$isArrayValidatorError = !0, n90;
                var i79 = t5 && t5.length, s60 = null;
                if (i79) {
                    for(var a61 = 0, u66 = i79; a61 < u66; ++a61){
                        var l38 = t5[a61];
                        if (l38) {
                            if (!(l38 instanceof o91)) {
                                var f38 = _22(this.casterConstructor, t5[a61]);
                                l38 = t5[a61] = new f38(l38, t5, void 0, void 0, a61);
                            }
                            if (null == r77 || !r77.validateModifiedOnly || l38.isModified()) {
                                var p29 = l38.validateSync();
                                p29 && null == s60 && (s60 = p29);
                            }
                        }
                    }
                    return s60;
                }
            }, /*!
 * ignore
 */ b11.prototype.getDefault = function(t5) {
                var e29 = "function" == typeof this.defaultValue ? this.defaultValue.call(t5) : this.defaultValue;
                if (null == e29) return e29;
                n63 || (n63 = r2(18)), Array.isArray(e29) || (e29 = [
                    e29
                ]), e29 = new n63(e29, this.path, t5);
                for(var o98 = 0; o98 < e29.length; ++o98){
                    var i79 = new (_22(this.casterConstructor, e29[o98]))({
                    }, e29, void 0, void 0, o98);
                    i79.init(e29[o98]), i79.isNew = !0, Object.assign(i79.$__.activePaths.default, i79.$__.activePaths.init), i79.$__.activePaths.init = {
                    }, e29[o98] = i79;
                }
                return e29;
            }, b11.prototype.cast = function(t5, e29, i80, a62, u67) {
                if (n63 || (n63 = r2(18)), null != t5 && null != t5[m10] && t5 === a62) return t5;
                var c49, l39, f39 = {
                    transform: !1,
                    virtuals: !1
                };
                if (u67 = u67 || {
                }, !Array.isArray(t5)) {
                    if (!i80 && !b11.options.castNonArrays) throw new s36("DocumentArray", y30.inspect(t5), this.path, null, this);
                    return e29 && i80 && e29.markModified(this.path), this.cast([
                        t5
                    ], e29, i80, a62, u67);
                }
                t5 && t5.isMongooseDocumentArray || u67.skipDocumentArrayCast ? t5 && t5.isMongooseDocumentArray && (t5 = new n63(t5, this.path, e29)) : t5 = new n63(t5, this.path, e29), null != a62 && (t5[v15] = a62[v15] || {
                }), null != u67.arrayPathIndex && (t5[m10] = this.path + "." + u67.arrayPathIndex);
                for(var p30 = t5.length, h26 = {
                    skipId: !0,
                    willInit: !0
                }, w12 = 0; w12 < p30; ++w12)if (t5[w12]) {
                    var S7 = _22(this.casterConstructor, t5[w12]);
                    if (!t5[w12].$__ || t5[w12] instanceof S7 && t5[w12][g12] === e29 || (t5[w12] = t5[w12].toObject({
                        transform: !1,
                        virtuals: t5[w12].schema === S7.schema
                    })), t5[w12] instanceof o91) null == t5[w12].__index && t5[w12].$setIndex(w12);
                    else if (null != t5[w12]) {
                        if (i80) e29 ? c49 || (c49 = O9(this, e29.$__.selected, i80)) : c49 = !0, l39 = new S7(null, t5, h26, c49, w12), t5[w12] = l39.init(t5[w12]);
                        else if (a62 && "function" == typeof a62.id && (l39 = a62.id(t5[w12]._id)), a62 && l39 && d22.deepEqual(l39.toObject(f39), t5[w12])) l39.set(t5[w12]), t5[w12] = l39;
                        else try {
                            l39 = new S7(t5[w12], t5, void 0, void 0, w12), t5[w12] = l39;
                        } catch (e32) {
                            var A7 = y30.inspect(t5[w12]);
                            throw new s36("embedded", A7, t5[m10], e32, this);
                        }
                    }
                }
                return t5;
            }, /*!
 * ignore
 */ b11.prototype.clone = function() {
                var t5 = Object.assign({
                }, this.options), e29 = new this.constructor(this.path, this.schema, t5, this.schemaOptions);
                return e29.validators = this.validators.slice(), (void 0) !== this.requiredValidator && (e29.requiredValidator = this.requiredValidator), e29.Constructor.discriminators = Object.assign({
                }, this.Constructor.discriminators), e29;
            }, /*!
 * ignore
 */ b11.prototype.applyGetters = function(t5, e29) {
                return c47.prototype.applyGetters.call(this, t5, e29);
            }, b11.defaultOptions = {
            }, b11.set = c47.set, /*!
 * Module exports.
 */ t2.exports = b11;
        },
        function(t2, e3, r2) {
            "use strict";
            function n63(t5) {
                return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            function o91(t5, e29) {
                if (!(t5 instanceof e29)) throw new TypeError("Cannot call a class as a function");
            }
            function i76(t5, e29) {
                return (i76 = Object.setPrototypeOf || function(t8, e32) {
                    return t8.__proto__ = e32, t8;
                })(t5, e29);
            }
            function s36(t5) {
                var e29 = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t8) {
                        return !1;
                    }
                }();
                return function() {
                    var r77, n90 = u64(t5);
                    if (e29) {
                        var o98 = u64(this).constructor;
                        r77 = Reflect.construct(n90, arguments, o98);
                    } else r77 = n90.apply(this, arguments);
                    return a49(this, r77);
                };
            }
            function a49(t5, e29) {
                if (e29 && ("object" === n63(e29) || "function" == typeof e29)) return e29;
                if ((void 0) !== e29) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t8) {
                    if ((void 0) === t8) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t8;
                })(t5);
            }
            function u64(t5) {
                return (u64 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t8) {
                    return t8.__proto__ || Object.getPrototypeOf(t8);
                })(t5);
            }
            var c47 = function(t5) {
                !function(t8, e29) {
                    if ("function" != typeof e29 && null !== e29) throw new TypeError("Super expression must either be null or a function");
                    t8.prototype = Object.create(e29 && e29.prototype, {
                        constructor: {
                            value: t8,
                            writable: !0,
                            configurable: !0
                        }
                    }), e29 && i76(t8, e29);
                }(r77, t5);
                var e29 = s36(r77);
                function r77() {
                    return o91(this, r77), e29.apply(this, arguments);
                }
                return r77;
            }(r2(7)), l37 = r2(8);
            Object.defineProperty(c47.prototype, "enum", l37), Object.defineProperty(c47.prototype, "of", l37), /*!
 * ignore
 */ t2.exports = c47;
        },
        function(t2, e3, r2) {
            "use strict";
            t2.exports = function t5(e29) {
                if (!Array.isArray(e29)) return {
                    min: 0,
                    max: 0,
                    containsNonArrayItem: !0
                };
                if (0 === e29.length) return {
                    min: 1,
                    max: 1,
                    containsNonArrayItem: !1
                };
                if (1 === e29.length && !Array.isArray(e29[0])) return {
                    min: 1,
                    max: 1,
                    containsNonArrayItem: !1
                };
                for(var r77 = t5(e29[0]), n63 = 1; n63 < e29.length; ++n63){
                    var o91 = t5(e29[n63]);
                    o91.min < r77.min && (r77.min = o91.min), o91.max > r77.max && (r77.max = o91.max), r77.containsNonArrayItem = r77.containsNonArrayItem || o91.containsNonArrayItem;
                }
                return r77.min = r77.min + 1, r77.max = r77.max + 1, r77;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n63(t5, e29) {
                var r77 = "undefined" != typeof Symbol && t5[Symbol.iterator] || t5["@@iterator"];
                if (!r77) {
                    if (Array.isArray(t5) || (r77 = (function(t8, e32) {
                        if (!t8) return;
                        if ("string" == typeof t8) return o99(t8, e32);
                        var r78 = Object.prototype.toString.call(t8).slice(8, -1);
                        "Object" === r78 && t8.constructor && (r78 = t8.constructor.name);
                        if ("Map" === r78 || "Set" === r78) return Array.from(t8);
                        if ("Arguments" === r78 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r78)) return o99(t8, e32);
                    })(t5)) || e29 && t5 && "number" == typeof t5.length) {
                        r77 && (t5 = r77);
                        var n90 = 0, i76 = function() {
                        };
                        return {
                            s: i76,
                            n: function() {
                                return n90 >= t5.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t5[n90++]
                                };
                            },
                            e: function(t8) {
                                throw t8;
                            },
                            f: i76
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s36, a49 = !0, u64 = !1;
                return {
                    s: function() {
                        r77 = r77.call(t5);
                    },
                    n: function() {
                        var t8 = r77.next();
                        return a49 = t8.done, t8;
                    },
                    e: function(t8) {
                        u64 = !0, s36 = t8;
                    },
                    f: function() {
                        try {
                            a49 || null == r77.return || r77.return();
                        } finally{
                            if (u64) throw s36;
                        }
                    }
                };
            }
            function o99(t5, e29) {
                (null == e29 || e29 > t5.length) && (e29 = t5.length);
                for(var r77 = 0, n91 = new Array(e29); r77 < e29; r77++)n91[r77] = t5[r77];
                return n91;
            }
            function i80(t5) {
                return (i80 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            var s36 = r2(13), a49 = r2(34), u64 = r2(56), c47 = r2(158), l37 = r2(3), f37 = r2(24), p28 = r2(159), h25 = r2(83), y30 = r2(4), d22 = r2(21), _22 = r2(31), v15 = [
                "Polygon",
                "MultiPolygon"
            ];
            function m10(t5, e29, r77) {
                if (Array.isArray(t5)) t5.forEach(function(n91, o100) {
                    if (Array.isArray(n91) || d22(n91)) return m10(n91, e29, r77);
                    t5[o100] = e29.castForQueryWrapper({
                        val: n91,
                        context: r77
                    });
                });
                else for(var n91 = Object.keys(t5), o100 = n91.length; o100--;){
                    var i81 = n91[o100], s60 = t5[i81];
                    Array.isArray(s60) || d22(s60) ? (m10(s60, e29, r77), t5[i81] = s60) : t5[i81] = e29.castForQuery({
                        val: s60,
                        context: r77
                    });
                }
            }
            t2.exports = function t5(e29, r77, o100, g12) {
                if (Array.isArray(r77)) throw new Error("Query filter must be an object, got an array ", y30.inspect(r77));
                if (null == r77) return r77;
                r77.hasOwnProperty("_bsontype") && "ObjectID" !== r77._bsontype && delete r77._bsontype, null != e29 && null != e29.discriminators && null != r77[e29.options.discriminatorKey] && (e29 = p28(e29, r77[e29.options.discriminatorKey]) || e29);
                var b11, w11, O9, S8, A8, $6, E4 = Object.keys(r77), j = E4.length;
                for(o100 = o100 || {
                }; j--;)if ($6 = r77[S8 = E4[j]], "$or" === S8 || "$nor" === S8 || "$and" === S8) {
                    if (!Array.isArray($6)) throw new s36("Array", $6, S8);
                    for(var P4 = 0; P4 < $6.length; ++P4){
                        if (null == $6[P4] || "object" !== i80($6[P4])) throw new s36("Object", $6[P4], S8 + "." + P4);
                        $6[P4] = t5(e29, $6[P4], o100, g12);
                    }
                } else {
                    if ("$where" === S8) {
                        if ("string" !== (A8 = i80($6)) && "function" !== A8) throw new Error("Must have a string or function for $where");
                        "function" === A8 && (r77[S8] = $6.toString());
                        continue;
                    }
                    if ("$elemMatch" === S8) $6 = t5(e29, $6, o100, g12);
                    else if ("$text" === S8) $6 = c47($6, S8);
                    else {
                        if (!e29) continue;
                        if (!(w11 = e29.path(S8))) for(var x5 = S8.split("."), T5 = x5.length; T5--;){
                            var N5 = x5.slice(0, T5).join("."), k4 = x5.slice(T5).join("."), B3 = e29.path(N5), C = l37(B3, "schema.options.discriminatorKey");
                            if (null != B3 && null != l37(B3, "schema.discriminators") && null != C && k4 !== C) {
                                var R4 = l37(r77, N5 + "." + C);
                                null != R4 && (w11 = B3.schema.discriminators[R4].path(k4));
                            }
                        }
                        if (w11) {
                            if (null == $6) continue;
                            if ("Object" === f37($6)) {
                                if (Object.keys($6).some(h25)) for(var D = Object.keys($6), M7 = void 0, I = D.length; I--;)if (O9 = $6[M7 = D[I]], "$not" === M7) {
                                    if (O9 && w11 && !w11.caster) {
                                        if ((b11 = Object.keys(O9)).length && h25(b11[0])) for(var F6 in O9)O9[F6] = w11.castForQueryWrapper({
                                            $conditional: F6,
                                            val: O9[F6],
                                            context: g12
                                        });
                                        else $6[M7] = w11.castForQueryWrapper({
                                            $conditional: M7,
                                            val: O9,
                                            context: g12
                                        });
                                        continue;
                                    }
                                    t5(w11.caster ? w11.caster.schema : e29, O9, o100, g12);
                                } else $6[M7] = w11.castForQueryWrapper({
                                    $conditional: M7,
                                    val: O9,
                                    context: g12
                                });
                                else r77[S8] = w11.castForQueryWrapper({
                                    val: $6,
                                    context: g12
                                });
                            } else if (Array.isArray($6) && -1 === [
                                "Buffer",
                                "Array"
                            ].indexOf(w11.instance)) {
                                var L5, U4 = [], V5 = n63($6);
                                try {
                                    for(V5.s(); !(L5 = V5.n()).done;){
                                        var q4 = L5.value;
                                        U4.push(w11.castForQueryWrapper({
                                            val: q4,
                                            context: g12
                                        }));
                                    }
                                } catch (t8) {
                                    V5.e(t8);
                                } finally{
                                    V5.f();
                                }
                                r77[S8] = {
                                    $in: U4
                                };
                            } else r77[S8] = w11.castForQueryWrapper({
                                val: $6,
                                context: g12
                            });
                        } else {
                            for(var W4 = S8.split("."), H4 = W4.length, Y = void 0, K4 = void 0, z4 = void 0; (H4--) && (Y = W4.slice(0, H4).join("."), !(w11 = e29.path(Y))););
                            if (w11) {
                                w11.caster && w11.caster.schema ? ((z4 = {
                                })[K4 = W4.slice(H4).join(".")] = $6, r77[S8] = t5(w11.caster.schema, z4, o100, g12)[K4]) : r77[S8] = $6;
                                continue;
                            }
                            if (d22($6)) {
                                var Q = "";
                                if ($6.$near ? Q = "$near" : $6.$nearSphere ? Q = "$nearSphere" : $6.$within ? Q = "$within" : $6.$geoIntersects ? Q = "$geoIntersects" : $6.$geoWithin && (Q = "$geoWithin"), Q) {
                                    var J = new u64.Number("__QueryCasting__"), G = $6[Q];
                                    if (null != $6.$maxDistance && ($6.$maxDistance = J.castForQueryWrapper({
                                        val: $6.$maxDistance,
                                        context: g12
                                    })), null != $6.$minDistance && ($6.$minDistance = J.castForQueryWrapper({
                                        val: $6.$minDistance,
                                        context: g12
                                    })), "$within" === Q) {
                                        var X = G.$center || G.$centerSphere || G.$box || G.$polygon;
                                        if (!X) throw new Error("Bad $within parameter: " + JSON.stringify($6));
                                        G = X;
                                    } else if ("$near" === Q && "string" == typeof G.type && Array.isArray(G.coordinates)) G = G.coordinates;
                                    else if (("$near" === Q || "$nearSphere" === Q || "$geoIntersects" === Q) && G.$geometry && "string" == typeof G.$geometry.type && Array.isArray(G.$geometry.coordinates)) null != G.$maxDistance && (G.$maxDistance = J.castForQueryWrapper({
                                        val: G.$maxDistance,
                                        context: g12
                                    })), null != G.$minDistance && (G.$minDistance = J.castForQueryWrapper({
                                        val: G.$minDistance,
                                        context: g12
                                    })), _22(G.$geometry) && (G.$geometry = G.$geometry.toObject({
                                        transform: !1,
                                        virtuals: !1
                                    })), G = G.$geometry.coordinates;
                                    else if ("$geoWithin" === Q) {
                                        if (G.$geometry) {
                                            _22(G.$geometry) && (G.$geometry = G.$geometry.toObject({
                                                virtuals: !1
                                            }));
                                            var Z3 = G.$geometry.type;
                                            if (-1 === v15.indexOf(Z3)) throw new Error('Invalid geoJSON type for $geoWithin "' + Z3 + '", must be "Polygon" or "MultiPolygon"');
                                            G = G.$geometry.coordinates;
                                        } else G = G.$box || G.$polygon || G.$center || G.$centerSphere, _22(G) && (G = G.toObject({
                                            virtuals: !1
                                        }));
                                    }
                                    m10(G, J, g12);
                                    continue;
                                }
                            }
                            if (e29.nested[S8]) continue;
                            if (o100.upsert && o100.strict) {
                                if ("throw" === o100.strict) throw new a49(S8);
                                throw new a49(S8, 'Path "' + S8 + '" is not in schema, strict mode is `true`, and upsert is `true`.');
                            }
                            if ("throw" === o100.strictQuery) throw new a49(S8, 'Path "' + S8 + "\" is not in schema and strictQuery is 'throw'.");
                            o100.strictQuery && delete r77[S8];
                        }
                    }
                }
                return r77;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            function n63(t5) {
                return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            var o99 = r2(13), i80 = r2(53), s36 = r2(79);
            /*!
 * Casts val to an object suitable for `$text`. Throws an error if the object
 * can't be casted.
 *
 * @param {Any} val value to cast
 * @param {String} [path] path to associate with any errors that occured
 * @return {Object} casted object
 * @see https://docs.mongodb.com/manual/reference/operator/query/text/
 * @api private
 */ t2.exports = function(t5, e29) {
                if (null == t5 || "object" !== n63(t5)) throw new o99("$text", t5, e29);
                return null != t5.$search && (t5.$search = s36(t5.$search, e29 + ".$search")), null != t5.$language && (t5.$language = s36(t5.$language, e29 + ".$language")), null != t5.$caseSensitive && (t5.$caseSensitive = i80(t5.$caseSensitive, e29 + ".$castSensitive")), null != t5.$diacriticSensitive && (t5.$diacriticSensitive = i80(t5.$diacriticSensitive, e29 + ".$diacriticSensitive")), t5;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            var n63 = r2(82);
            /*!
* returns discriminator by discriminatorMapping.value
*
* @param {Schema} schema
* @param {string} value
*/ t2.exports = function(t5, e29) {
                if (null == t5 || null == t5.discriminators) return null;
                for(var r77 = 0, o99 = Object.keys(t5.discriminators); r77 < o99.length; r77++){
                    var i80 = o99[r77], s36 = t5.discriminators[i80];
                    if (null != s36.discriminatorMapping && n63(s36.discriminatorMapping.value, e29)) return s36;
                }
                return null;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            function n63(t5) {
                return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            function o99(t5, e29) {
                if (!(t5 instanceof e29)) throw new TypeError("Cannot call a class as a function");
            }
            function i82(t5, e29) {
                return (i82 = Object.setPrototypeOf || function(t8, e32) {
                    return t8.__proto__ = e32, t8;
                })(t5, e29);
            }
            function s61(t5) {
                var e29 = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t8) {
                        return !1;
                    }
                }();
                return function() {
                    var r77, n91 = u64(t5);
                    if (e29) {
                        var o100 = u64(this).constructor;
                        r77 = Reflect.construct(n91, arguments, o100);
                    } else r77 = n91.apply(this, arguments);
                    return a49(this, r77);
                };
            }
            function a49(t5, e29) {
                if (e29 && ("object" === n63(e29) || "function" == typeof e29)) return e29;
                if ((void 0) !== e29) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t8) {
                    if ((void 0) === t8) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t8;
                })(t5);
            }
            function u64(t5) {
                return (u64 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t8) {
                    return t8.__proto__ || Object.getPrototypeOf(t8);
                })(t5);
            }
            var c47 = function(t5) {
                !function(t8, e29) {
                    if ("function" != typeof e29 && null !== e29) throw new TypeError("Super expression must either be null or a function");
                    t8.prototype = Object.create(e29 && e29.prototype, {
                        constructor: {
                            value: t8,
                            writable: !0,
                            configurable: !0
                        }
                    }), e29 && i82(t8, e29);
                }(r77, t5);
                var e29 = s61(r77);
                function r77() {
                    return o99(this, r77), e29.apply(this, arguments);
                }
                return r77;
            }(r2(7)), l37 = r2(8);
            Object.defineProperty(c47.prototype, "excludeIndexes", l37), Object.defineProperty(c47.prototype, "_id", l37), /*!
 * ignore
 */ t2.exports = c47;
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ function n63(t5) {
                return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            var o99, i82 = r2(13), s61 = r2(19).EventEmitter, a49 = r2(75), u64 = r2(162), c47 = r2(6), l37 = r2(52), f37 = r2(36).castToNumber, p28 = r2(93), h25 = r2(84), y30 = r2(3), d22 = r2(95), _22 = r2(94), v15 = r2(17).internalToObjectOptions;
            function m10(t5, e29, r77) {
                t5 = _22(t5, r77), this.caster = g12(t5), this.caster.path = e29, this.caster.prototype.$basePath = e29, this.schema = t5, this.$isSingleNested = !0, c47.call(this, e29, r77, "Embedded");
            }
            /*!
 * ignore
 */ /*!
 * ignore
 */ function g12(t5, e29) {
                o99 || (o99 = r2(92));
                var n91 = function(t8, e32, r77) {
                    var n92 = this;
                    this.$__parent = r77, o99.apply(this, arguments), this.$session(this.ownerDocument().$session()), r77 && (r77.on("save", function() {
                        n92.emit("save", n92), n92.constructor.emit("save", n92);
                    }), r77.on("isNew", function(t9) {
                        n92.isNew = t9, n92.emit("isNew", t9), n92.constructor.emit("isNew", t9);
                    }));
                }, i83 = null != e29 ? e29.prototype : o99.prototype;
                for(var a62 in (n91.prototype = Object.create(i83)).$__setSchema(t5), n91.prototype.constructor = n91, n91.schema = t5, n91.$isSingleNested = !0, n91.events = new s61, n91.prototype.toBSON = function() {
                    return this.toObject(v15);
                }, t5.methods)n91.prototype[a62] = t5.methods[a62];
                for(var u67 in t5.statics)n91[u67] = t5.statics[u67];
                for(var c49 in s61.prototype)n91[c49] = s61.prototype[c49];
                return n91;
            }
            /*!
 * Special case for when users use a common location schema to represent
 * locations for use with $geoWithin.
 * https://docs.mongodb.org/manual/reference/operator/query/geoWithin/
 *
 * @param {Object} val
 * @api private
 */ t2.exports = m10, m10.prototype = Object.create(c47.prototype), m10.prototype.constructor = m10, m10.prototype.OptionsConstructor = u64, m10.prototype.$conditionalHandlers.$geoWithin = function(t5) {
                return {
                    $geometry: this.castForQuery(t5.$geometry)
                };
            }, /*!
 * ignore
 */ m10.prototype.$conditionalHandlers.$near = m10.prototype.$conditionalHandlers.$nearSphere = h25.cast$near, m10.prototype.$conditionalHandlers.$within = m10.prototype.$conditionalHandlers.$geoWithin = h25.cast$within, m10.prototype.$conditionalHandlers.$geoIntersects = h25.cast$geoIntersects, m10.prototype.$conditionalHandlers.$minDistance = f37, m10.prototype.$conditionalHandlers.$maxDistance = f37, m10.prototype.$conditionalHandlers.$exists = l37, m10.prototype.cast = function(t5, e29, r77, o101, i83) {
                if (t5 && t5.$isSingleNested && t5.parent === e29) return t5;
                if (null != t5 && ("object" !== n63(t5) || Array.isArray(t5))) throw new a49(this.path, t5);
                var s62, u67 = d22(this.caster, t5), c49 = y30(e29, "$__.selected", {
                }), l39 = this.path, f39 = Object.keys(c49).reduce(function(t8, e32) {
                    return e32.startsWith(l39 + ".") && (t8[e32.substr(l39.length + 1)] = c49[e32]), t8;
                }, {
                });
                return i83 = Object.assign({
                }, i83, {
                    priorDoc: o101
                }), r77 ? ((s62 = new u67(void 0, f39, e29)).init(t5), s62) : 0 === Object.keys(t5).length ? new u67({
                }, f39, e29, void 0, i83) : new u67(t5, f39, e29, void 0, i83);
            }, m10.prototype.castForQuery = function(t5, e29, r77) {
                var n91;
                if (2 === arguments.length) {
                    if (!(n91 = this.$conditionalHandlers[t5])) throw new Error("Can't use " + t5);
                    return n91.call(this, e29);
                }
                if (null == (e29 = t5)) return e29;
                this.options.runSetters && (e29 = this._applySetters(e29));
                var o101 = d22(this.caster, e29), s62 = null != r77 && null != r77.strict ? r77.strict : void 0;
                try {
                    e29 = new o101(e29, s62);
                } catch (t8) {
                    if (!(t8 instanceof i82)) throw new i82("Embedded", e29, this.path, t8, this);
                    throw t8;
                }
                return e29;
            }, m10.prototype.doValidate = function(t5, e29, r77, n91) {
                var o101 = d22(this.caster, t5);
                if (n91 && n91.skipSchemaValidators) return t5 instanceof o101 || (t5 = new o101(t5, null, r77)), t5.validate(e29);
                c47.prototype.doValidate.call(this, t5, function(r78) {
                    return r78 ? e29(r78) : t5 ? void t5.validate(e29) : e29(null);
                }, r77, n91);
            }, m10.prototype.doValidateSync = function(t5, e29, r77) {
                if (!r77 || !r77.skipSchemaValidators) {
                    var n91 = c47.prototype.doValidateSync.call(this, t5, e29);
                    if (n91) return n91;
                }
                if (t5) return t5.validateSync();
            }, m10.prototype.discriminator = function(t5, e29, r77) {
                return e29 = p28(this.caster, t5, e29, r77), this.caster.discriminators[t5] = g12(e29, this.caster), this.caster.discriminators[t5];
            }, m10.defaultOptions = {
            }, m10.set = c47.set, /*!
 * ignore
 */ m10.prototype.clone = function() {
                var t5 = Object.assign({
                }, this.options), e29 = new this.constructor(this.schema, this.path, t5);
                return e29.validators = this.validators.slice(), (void 0) !== this.requiredValidator && (e29.requiredValidator = this.requiredValidator), e29.caster.discriminators = Object.assign({
                }, this.caster.discriminators), e29;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            function n63(t5) {
                return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            function o99(t5, e29) {
                if (!(t5 instanceof e29)) throw new TypeError("Cannot call a class as a function");
            }
            function i82(t5, e29) {
                return (i82 = Object.setPrototypeOf || function(t8, e32) {
                    return t8.__proto__ = e32, t8;
                })(t5, e29);
            }
            function s61(t5) {
                var e29 = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t8) {
                        return !1;
                    }
                }();
                return function() {
                    var r77, n92 = u64(t5);
                    if (e29) {
                        var o101 = u64(this).constructor;
                        r77 = Reflect.construct(n92, arguments, o101);
                    } else r77 = n92.apply(this, arguments);
                    return a49(this, r77);
                };
            }
            function a49(t5, e29) {
                if (e29 && ("object" === n63(e29) || "function" == typeof e29)) return e29;
                if ((void 0) !== e29) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t8) {
                    if ((void 0) === t8) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t8;
                })(t5);
            }
            function u64(t5) {
                return (u64 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t8) {
                    return t8.__proto__ || Object.getPrototypeOf(t8);
                })(t5);
            }
            var c47 = function(t5) {
                !function(t8, e29) {
                    if ("function" != typeof e29 && null !== e29) throw new TypeError("Super expression must either be null or a function");
                    t8.prototype = Object.create(e29 && e29.prototype, {
                        constructor: {
                            value: t8,
                            writable: !0,
                            configurable: !0
                        }
                    }), e29 && i82(t8, e29);
                }(r77, t5);
                var e29 = s61(r77);
                function r77() {
                    return o99(this, r77), e29.apply(this, arguments);
                }
                return r77;
            }(r2(7)), l37 = r2(8);
            Object.defineProperty(c47.prototype, "_id", l37), t2.exports = c47;
        },
        function(t2, e3, r2) {
            "use strict";
            (function(e29) {
                /*!
 * Module dependencies.
 */ function n63(t5) {
                    return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                        return typeof t8;
                    } : function(t8) {
                        return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                    })(t5);
                }
                var o99 = r2(88), i82 = r2(164), s61 = r2(6), a49 = r2(81), u64 = r2(1), c47 = o99.Binary, l37 = s61.CastError;
                function f37(t5, e32) {
                    s61.call(this, t5, e32, "Buffer");
                }
                /*!
 * ignore
 */ function p28(t5) {
                    return this.castForQuery(t5);
                }
                f37.schemaName = "Buffer", f37.defaultOptions = {
                }, /*!
 * Inherits from SchemaType.
 */ f37.prototype = Object.create(s61.prototype), f37.prototype.constructor = f37, f37.prototype.OptionsConstructor = i82, /*!
 * ignore
 */ f37._checkRequired = function(t5) {
                    return !(!t5 || !t5.length);
                }, f37.set = s61.set, f37.checkRequired = s61.checkRequired, f37.prototype.checkRequired = function(t5, e32) {
                    return s61._isRef(this, t5, e32, !0) ? !!t5 : this.constructor._checkRequired(t5);
                }, f37.prototype.cast = function(t5, r77, i83) {
                    var a62;
                    if (s61._isRef(this, t5, r77, i83)) {
                        if (t5 && t5.isMongooseBuffer) return t5;
                        if (e29.isBuffer(t5)) return t5 && t5.isMongooseBuffer || (t5 = new o99(t5, [
                            this.path,
                            r77
                        ]), null != this.options.subtype && (t5._subtype = this.options.subtype)), t5;
                        if (t5 instanceof c47) {
                            if (a62 = new o99(t5.value(!0), [
                                this.path,
                                r77
                            ]), "number" != typeof t5.sub_type) throw new l37("Buffer", t5, this.path, null, this);
                            return a62._subtype = t5.sub_type, a62;
                        }
                        return this._castRef(t5, r77, i83);
                    }
                    if (t5 && t5._id && (t5 = t5._id), t5 && t5.isMongooseBuffer) return t5;
                    if (e29.isBuffer(t5)) return t5 && t5.isMongooseBuffer || (t5 = new o99(t5, [
                        this.path,
                        r77
                    ]), null != this.options.subtype && (t5._subtype = this.options.subtype)), t5;
                    if (t5 instanceof c47) {
                        if (a62 = new o99(t5.value(!0), [
                            this.path,
                            r77
                        ]), "number" != typeof t5.sub_type) throw new l37("Buffer", t5, this.path, null, this);
                        return a62._subtype = t5.sub_type, a62;
                    }
                    if (null === t5) return t5;
                    var u67 = n63(t5);
                    if ("string" === u67 || "number" === u67 || Array.isArray(t5) || "object" === u67 && "Buffer" === t5.type && Array.isArray(t5.data)) return "number" === u67 && (t5 = [
                        t5
                    ]), a62 = new o99(t5, [
                        this.path,
                        r77
                    ]), null != this.options.subtype && (a62._subtype = this.options.subtype), a62;
                    throw new l37("Buffer", t5, this.path, null, this);
                }, f37.prototype.subtype = function(t5) {
                    return this.options.subtype = t5, this;
                }, f37.prototype.$conditionalHandlers = u64.options(s61.prototype.$conditionalHandlers, {
                    $bitsAllClear: a49,
                    $bitsAnyClear: a49,
                    $bitsAllSet: a49,
                    $bitsAnySet: a49,
                    $gt: p28,
                    $gte: p28,
                    $lt: p28,
                    $lte: p28
                }), f37.prototype.castForQuery = function(t5, e32) {
                    var r77;
                    if (2 === arguments.length) {
                        if (!(r77 = this.$conditionalHandlers[t5])) throw new Error("Can't use " + t5 + " with Buffer.");
                        return r77.call(this, e32);
                    }
                    e32 = t5;
                    var n92 = this._castForQuery(e32);
                    return n92 ? n92.toObject({
                        transform: !1,
                        virtuals: !1
                    }) : n92;
                }, /*!
 * Module exports.
 */ t2.exports = f37;
            }).call(this, r2(2).Buffer);
        },
        function(t2, e3, r2) {
            "use strict";
            function n63(t5) {
                return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            function o99(t5, e29) {
                if (!(t5 instanceof e29)) throw new TypeError("Cannot call a class as a function");
            }
            function i82(t5, e29) {
                return (i82 = Object.setPrototypeOf || function(t8, e32) {
                    return t8.__proto__ = e32, t8;
                })(t5, e29);
            }
            function s61(t5) {
                var e29 = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t8) {
                        return !1;
                    }
                }();
                return function() {
                    var r77, n92 = u64(t5);
                    if (e29) {
                        var o102 = u64(this).constructor;
                        r77 = Reflect.construct(n92, arguments, o102);
                    } else r77 = n92.apply(this, arguments);
                    return a49(this, r77);
                };
            }
            function a49(t5, e29) {
                if (e29 && ("object" === n63(e29) || "function" == typeof e29)) return e29;
                if ((void 0) !== e29) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t8) {
                    if ((void 0) === t8) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t8;
                })(t5);
            }
            function u64(t5) {
                return (u64 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t8) {
                    return t8.__proto__ || Object.getPrototypeOf(t8);
                })(t5);
            }
            var c47 = function(t5) {
                !function(t8, e29) {
                    if ("function" != typeof e29 && null !== e29) throw new TypeError("Super expression must either be null or a function");
                    t8.prototype = Object.create(e29 && e29.prototype, {
                        constructor: {
                            value: t8,
                            writable: !0,
                            configurable: !0
                        }
                    }), e29 && i82(t8, e29);
                }(r77, t5);
                var e29 = s61(r77);
                function r77() {
                    return o99(this, r77), e29.apply(this, arguments);
                }
                return r77;
            }(r2(7)), l37 = r2(8);
            Object.defineProperty(c47.prototype, "subtype", l37), /*!
 * ignore
 */ t2.exports = c47;
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module requirements.
 */ var n63 = r2(5), o99 = r2(166), i82 = r2(6), s61 = r2(167), a49 = r2(24), u64 = r2(1), c47 = i82.CastError;
            function l37(t5, e29) {
                i82.call(this, t5, e29, "Date");
            }
            /*!
 * Date Query casting.
 *
 * @api private
 */ function f37(t5) {
                return this.cast(t5);
            }
            l37.schemaName = "Date", l37.defaultOptions = {
            }, /*!
 * Inherits from SchemaType.
 */ l37.prototype = Object.create(i82.prototype), l37.prototype.constructor = l37, l37.prototype.OptionsConstructor = o99, /*!
 * ignore
 */ l37._cast = s61, l37.set = i82.set, l37.cast = function(t5) {
                return 0 === arguments.length || (!1 === t5 && (t5 = this._defaultCaster), this._cast = t5), this._cast;
            }, /*!
 * ignore
 */ l37._defaultCaster = function(t5) {
                if (null != t5 && !(t5 instanceof Date)) throw new Error;
                return t5;
            }, l37.prototype.expires = function(t5) {
                return "Object" !== a49(this._index) && (this._index = {
                }), this._index.expires = t5, u64.expires(this._index), this;
            }, /*!
 * ignore
 */ l37._checkRequired = function(t5) {
                return t5 instanceof Date;
            }, l37.checkRequired = i82.checkRequired, l37.prototype.checkRequired = function(t5, e29) {
                return i82._isRef(this, t5, e29, !0) ? !!t5 : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : l37.checkRequired())(t5);
            }, l37.prototype.min = function(t5, e29) {
                if (this.minValidator && (this.validators = this.validators.filter(function(t8) {
                    return t8.validator !== this.minValidator;
                }, this)), t5) {
                    var r77 = e29 || n63.messages.Date.min;
                    "string" == typeof r77 && (r77 = r77.replace(/{MIN}/, t5 === Date.now ? "Date.now()" : t5.toString()));
                    var o103 = this;
                    this.validators.push({
                        validator: this.minValidator = function(e32) {
                            var r78 = t5;
                            "function" == typeof t5 && t5 !== Date.now && (r78 = r78.call(this));
                            var n92 = r78 === Date.now ? r78() : o103.cast(r78);
                            return null === e32 || e32.valueOf() >= n92.valueOf();
                        },
                        message: r77,
                        type: "min",
                        min: t5
                    });
                }
                return this;
            }, l37.prototype.max = function(t5, e29) {
                if (this.maxValidator && (this.validators = this.validators.filter(function(t8) {
                    return t8.validator !== this.maxValidator;
                }, this)), t5) {
                    var r78 = e29 || n63.messages.Date.max;
                    "string" == typeof r78 && (r78 = r78.replace(/{MAX}/, t5 === Date.now ? "Date.now()" : t5.toString()));
                    var o104 = this;
                    this.validators.push({
                        validator: this.maxValidator = function(e32) {
                            var r79 = t5;
                            "function" == typeof r79 && r79 !== Date.now && (r79 = r79.call(this));
                            var n92 = r79 === Date.now ? r79() : o104.cast(r79);
                            return null === e32 || e32.valueOf() <= n92.valueOf();
                        },
                        message: r78,
                        type: "max",
                        max: t5
                    });
                }
                return this;
            }, l37.prototype.cast = function(t5) {
                var e29;
                e29 = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : l37.cast();
                try {
                    return e29(t5);
                } catch (e32) {
                    throw new c47("date", t5, this.path, e32, this);
                }
            }, l37.prototype.$conditionalHandlers = u64.options(i82.prototype.$conditionalHandlers, {
                $gt: f37,
                $gte: f37,
                $lt: f37,
                $lte: f37
            }), l37.prototype.castForQuery = function(t5, e29) {
                if (2 !== arguments.length) return this._castForQuery(t5);
                var r79 = this.$conditionalHandlers[t5];
                if (!r79) throw new Error("Can't use " + t5 + " with Date.");
                return r79.call(this, e29);
            }, /*!
 * Module exports.
 */ t2.exports = l37;
        },
        function(t2, e3, r2) {
            "use strict";
            function n63(t5) {
                return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            function o99(t5, e29) {
                if (!(t5 instanceof e29)) throw new TypeError("Cannot call a class as a function");
            }
            function i82(t5, e29) {
                return (i82 = Object.setPrototypeOf || function(t8, e32) {
                    return t8.__proto__ = e32, t8;
                })(t5, e29);
            }
            function s61(t5) {
                var e29 = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t8) {
                        return !1;
                    }
                }();
                return function() {
                    var r79, n92 = u64(t5);
                    if (e29) {
                        var o105 = u64(this).constructor;
                        r79 = Reflect.construct(n92, arguments, o105);
                    } else r79 = n92.apply(this, arguments);
                    return a49(this, r79);
                };
            }
            function a49(t5, e29) {
                if (e29 && ("object" === n63(e29) || "function" == typeof e29)) return e29;
                if ((void 0) !== e29) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t8) {
                    if ((void 0) === t8) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t8;
                })(t5);
            }
            function u64(t5) {
                return (u64 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t8) {
                    return t8.__proto__ || Object.getPrototypeOf(t8);
                })(t5);
            }
            var c47 = function(t5) {
                !function(t8, e29) {
                    if ("function" != typeof e29 && null !== e29) throw new TypeError("Super expression must either be null or a function");
                    t8.prototype = Object.create(e29 && e29.prototype, {
                        constructor: {
                            value: t8,
                            writable: !0,
                            configurable: !0
                        }
                    }), e29 && i82(t8, e29);
                }(r79, t5);
                var e29 = s61(r79);
                function r79() {
                    return o99(this, r79), e29.apply(this, arguments);
                }
                return r79;
            }(r2(7)), l37 = r2(8);
            Object.defineProperty(c47.prototype, "min", l37), Object.defineProperty(c47.prototype, "max", l37), Object.defineProperty(c47.prototype, "expires", l37), /*!
 * ignore
 */ t2.exports = c47;
        },
        function(t2, e3, r2) {
            "use strict";
            var n63 = r2(23);
            t2.exports = function(t5) {
                var e29;
                return null == t5 || "" === t5 ? null : t5 instanceof Date ? (n63.ok(!isNaN(t5.valueOf())), t5) : (n63.ok("boolean" != typeof t5), e29 = t5 instanceof Number || "number" == typeof t5 ? new Date(t5) : "string" == typeof t5 && !isNaN(Number(t5)) && (Number(t5) >= 275761 || Number(t5) < -271820) ? new Date(Number(t5)) : "function" == typeof t5.valueOf ? new Date(t5.valueOf()) : new Date(t5), isNaN(e29.valueOf()) ? void n63.ok(!1) : e29);
            };
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ var n63, o99 = r2(169), i82 = r2(6), s61 = r2(89), a49 = r2(24), u64 = r2(10), c47 = r2(1), l37 = i82.CastError;
            function f37(t5, e29) {
                var r79 = "string" == typeof t5 && 24 === t5.length && /^[a-f0-9]+$/i.test(t5), n92 = e29 && e29.suppressWarning;
                !r79 && (void 0) !== t5 || n92 || (console.warn("mongoose: To create a new ObjectId please try `Mongoose.Types.ObjectId` instead of using `Mongoose.Schema.ObjectId`. Set the `suppressWarning` option if you're trying to create a hex char path in your schema."), console.trace()), i82.call(this, t5, e29, "ObjectID");
            }
            /*!
 * ignore
 */ function p28(t5) {
                return this.cast(t5);
            }
            /*!
 * ignore
 */ function h25() {
                return new u64;
            }
            function y30(t5) {
                if (n63 || (n63 = r2(12)), this instanceof n63) {
                    if ((void 0) === t5) {
                        var e29 = new u64;
                        return this.$__._id = e29, e29;
                    }
                    this.$__._id = t5;
                }
                return t5;
            }
            /*!
 * Module exports.
 */ f37.schemaName = "ObjectId", f37.defaultOptions = {
            }, /*!
 * Inherits from SchemaType.
 */ f37.prototype = Object.create(i82.prototype), f37.prototype.constructor = f37, f37.prototype.OptionsConstructor = o99, f37.get = i82.get, f37.set = i82.set, f37.prototype.auto = function(t5) {
                return t5 && (this.default(h25), this.set(y30)), this;
            }, /*!
 * ignore
 */ f37._checkRequired = function(t5) {
                return t5 instanceof u64;
            }, /*!
 * ignore
 */ f37._cast = s61, f37.cast = function(t5) {
                return 0 === arguments.length || (!1 === t5 && (t5 = this._defaultCaster), this._cast = t5), this._cast;
            }, /*!
 * ignore
 */ f37._defaultCaster = function(t5) {
                if (!(t5 instanceof u64)) throw new Error(t5 + " is not an instance of ObjectId");
                return t5;
            }, f37.checkRequired = i82.checkRequired, f37.prototype.checkRequired = function(t5, e32) {
                return i82._isRef(this, t5, e32, !0) ? !!t5 : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : f37.checkRequired())(t5);
            }, f37.prototype.cast = function(t5, e32, r79) {
                if (i82._isRef(this, t5, e32, r79)) return t5 instanceof u64 ? t5 : "objectid" === (a49(t5) || "").toLowerCase() ? new u64(t5.toHexString()) : this._castRef(t5, e32, r79);
                var n92;
                n92 = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : f37.cast();
                try {
                    return n92(t5);
                } catch (e40) {
                    throw new l37("ObjectId", t5, this.path, e40, this);
                }
            }, f37.prototype.$conditionalHandlers = c47.options(i82.prototype.$conditionalHandlers, {
                $gt: p28,
                $gte: p28,
                $lt: p28,
                $lte: p28
            }), h25.$runBeforeSetters = !0, t2.exports = f37;
        },
        function(t2, e3, r2) {
            "use strict";
            function n63(t5) {
                return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            function o99(t5, e32) {
                if (!(t5 instanceof e32)) throw new TypeError("Cannot call a class as a function");
            }
            function i82(t5, e32) {
                return (i82 = Object.setPrototypeOf || function(t8, e40) {
                    return t8.__proto__ = e40, t8;
                })(t5, e32);
            }
            function s61(t5) {
                var e32 = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t8) {
                        return !1;
                    }
                }();
                return function() {
                    var r79, n92 = u64(t5);
                    if (e32) {
                        var o106 = u64(this).constructor;
                        r79 = Reflect.construct(n92, arguments, o106);
                    } else r79 = n92.apply(this, arguments);
                    return a49(this, r79);
                };
            }
            function a49(t5, e32) {
                if (e32 && ("object" === n63(e32) || "function" == typeof e32)) return e32;
                if ((void 0) !== e32) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t8) {
                    if ((void 0) === t8) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t8;
                })(t5);
            }
            function u64(t5) {
                return (u64 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t8) {
                    return t8.__proto__ || Object.getPrototypeOf(t8);
                })(t5);
            }
            var c47 = function(t5) {
                !function(t8, e32) {
                    if ("function" != typeof e32 && null !== e32) throw new TypeError("Super expression must either be null or a function");
                    t8.prototype = Object.create(e32 && e32.prototype, {
                        constructor: {
                            value: t8,
                            writable: !0,
                            configurable: !0
                        }
                    }), e32 && i82(t8, e32);
                }(r79, t5);
                var e32 = s61(r79);
                function r79() {
                    return o99(this, r79), e32.apply(this, arguments);
                }
                return r79;
            }(r2(7)), l37 = r2(8);
            Object.defineProperty(c47.prototype, "auto", l37), Object.defineProperty(c47.prototype, "populate", l37), /*!
 * ignore
 */ t2.exports = c47;
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ var n63 = r2(6), o99 = n63.CastError, i82 = r2(20), s61 = r2(171), a49 = r2(1);
            function u64(t5, e32) {
                n63.call(this, t5, e32, "Decimal128");
            }
            /*!
 * ignore
 */ function c47(t5) {
                return this.cast(t5);
            }
            u64.schemaName = "Decimal128", u64.defaultOptions = {
            }, /*!
 * Inherits from SchemaType.
 */ u64.prototype = Object.create(n63.prototype), u64.prototype.constructor = u64, /*!
 * ignore
 */ u64._cast = s61, u64.set = n63.set, u64.cast = function(t5) {
                return 0 === arguments.length || (!1 === t5 && (t5 = this._defaultCaster), this._cast = t5), this._cast;
            }, /*!
 * ignore
 */ u64._defaultCaster = function(t5) {
                if (null != t5 && !(t5 instanceof i82)) throw new Error;
                return t5;
            }, /*!
 * ignore
 */ u64._checkRequired = function(t5) {
                return t5 instanceof i82;
            }, u64.checkRequired = n63.checkRequired, u64.prototype.checkRequired = function(t5, e32) {
                return n63._isRef(this, t5, e32, !0) ? !!t5 : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : u64.checkRequired())(t5);
            }, u64.prototype.cast = function(t5, e32, r79) {
                if (n63._isRef(this, t5, e32, r79)) return t5 instanceof i82 ? t5 : this._castRef(t5, e32, r79);
                var s62;
                s62 = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : u64.cast();
                try {
                    return s62(t5);
                } catch (e40) {
                    throw new o99("Decimal128", t5, this.path, e40, this);
                }
            }, u64.prototype.$conditionalHandlers = a49.options(n63.prototype.$conditionalHandlers, {
                $gt: c47,
                $gte: c47,
                $lt: c47,
                $lte: c47
            }), /*!
 * Module exports.
 */ t2.exports = u64;
        },
        function(t2, e3, r2) {
            "use strict";
            (function(e32) {
                function n63(t5) {
                    return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                        return typeof t8;
                    } : function(t8) {
                        return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                    })(t5);
                }
                var o99 = r2(20), i82 = r2(23);
                t2.exports = function(t5) {
                    return null == t5 ? t5 : "object" === n63(t5) && "string" == typeof t5.$numberDecimal ? o99.fromString(t5.$numberDecimal) : t5 instanceof o99 ? t5 : "string" == typeof t5 ? o99.fromString(t5) : e32.isBuffer(t5) ? new o99(t5) : "number" == typeof t5 ? o99.fromString(String(t5)) : "function" == typeof t5.valueOf && "string" == typeof t5.valueOf() ? o99.fromString(t5.valueOf()) : void i82.ok(!1);
                };
            }).call(this, r2(2).Buffer);
        },
        function(t2, e3, r2) {
            "use strict";
            (function(e32) {
                /*!
 * ignore
 */ function n63(t5) {
                    return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                        return typeof t8;
                    } : function(t8) {
                        return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                    })(t5);
                }
                function o99(t5, e40) {
                    var r79 = "undefined" != typeof Symbol && t5[Symbol.iterator] || t5["@@iterator"];
                    if (!r79) {
                        if (Array.isArray(t5) || (r79 = (function(t8, e41) {
                            if (!t8) return;
                            if ("string" == typeof t8) return i82(t8, e41);
                            var r80 = Object.prototype.toString.call(t8).slice(8, -1);
                            "Object" === r80 && t8.constructor && (r80 = t8.constructor.name);
                            if ("Map" === r80 || "Set" === r80) return Array.from(t8);
                            if ("Arguments" === r80 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r80)) return i82(t8, e41);
                        })(t5)) || e40 && t5 && "number" == typeof t5.length) {
                            r79 && (t5 = r79);
                            var n92 = 0, o107 = function() {
                            };
                            return {
                                s: o107,
                                n: function() {
                                    return n92 >= t5.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t5[n92++]
                                    };
                                },
                                e: function(t8) {
                                    throw t8;
                                },
                                f: o107
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var s61, a49 = !0, u64 = !1;
                    return {
                        s: function() {
                            r79 = r79.call(t5);
                        },
                        n: function() {
                            var t8 = r79.next();
                            return a49 = t8.done, t8;
                        },
                        e: function(t8) {
                            u64 = !0, s61 = t8;
                        },
                        f: function() {
                            try {
                                a49 || null == r79.return || r79.return();
                            } finally{
                                if (u64) throw s61;
                            }
                        }
                    };
                }
                function i82(t5, e40) {
                    (null == e40 || e40 > t5.length) && (e40 = t5.length);
                    for(var r79 = 0, n93 = new Array(e40); r79 < e40; r79++)n93[r79] = t5[r79];
                    return n93;
                }
                function s61(t5, e40) {
                    for(var r79 = 0; r79 < e40.length; r79++){
                        var n93 = e40[r79];
                        n93.enumerable = n93.enumerable || !1, n93.configurable = !0, "value" in n93 && (n93.writable = !0), Object.defineProperty(t5, n93.key, n93);
                    }
                }
                function a49(t5, e40, r79) {
                    return (a49 = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(t8, e41, r80) {
                        var n94 = function(t9, e42) {
                            for(; !Object.prototype.hasOwnProperty.call(t9, e42) && null !== (t9 = f37(t9)););
                            return t9;
                        }(t8, e41);
                        if (n94) {
                            var o108 = Object.getOwnPropertyDescriptor(n94, e41);
                            return o108.get ? o108.get.call(r80) : o108.value;
                        }
                    })(t5, e40, r79 || t5);
                }
                function u64(t5, e40) {
                    return (u64 = Object.setPrototypeOf || function(t8, e41) {
                        return t8.__proto__ = e41, t8;
                    })(t5, e40);
                }
                function c47(t5) {
                    var e40 = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                        if (Reflect.construct.sham) return !1;
                        if ("function" == typeof Proxy) return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                            })), !0;
                        } catch (t8) {
                            return !1;
                        }
                    }();
                    return function() {
                        var r79, n94 = f37(t5);
                        if (e40) {
                            var o109 = f37(this).constructor;
                            r79 = Reflect.construct(n94, arguments, o109);
                        } else r79 = n94.apply(this, arguments);
                        return l37(this, r79);
                    };
                }
                function l37(t5, e40) {
                    if (e40 && ("object" === n63(e40) || "function" == typeof e40)) return e40;
                    if ((void 0) !== e40) throw new TypeError("Derived constructors may only return object or undefined");
                    return (function(t8) {
                        if ((void 0) === t8) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return t8;
                    })(t5);
                }
                function f37(t5) {
                    return (f37 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t8) {
                        return t8.__proto__ || Object.getPrototypeOf(t8);
                    })(t5);
                }
                var p28 = r2(90), h25 = r2(173), y30 = r2(6), d22 = function(t5) {
                    !function(t8, e40) {
                        if ("function" != typeof e40 && null !== e40) throw new TypeError("Super expression must either be null or a function");
                        t8.prototype = Object.create(e40 && e40.prototype, {
                            constructor: {
                                value: t8,
                                writable: !0,
                                configurable: !0
                            }
                        }), e40 && u64(t8, e40);
                    }(h26, t5);
                    var r79, n94, i83, l39 = c47(h26);
                    function h26(t8, e40) {
                        var r80;
                        return (function(t9, e41) {
                            if (!(t9 instanceof e41)) throw new TypeError("Cannot call a class as a function");
                        })(this, h26), (r80 = l39.call(this, t8, e40, "Map")).$isSchemaMap = !0, r80;
                    }
                    return r79 = h26, n94 = [
                        {
                            key: "set",
                            value: function(t8, e40) {
                                return y30.set(t8, e40);
                            }
                        },
                        {
                            key: "cast",
                            value: function(t8, r80, n95) {
                                if (t8 instanceof p28) return t8;
                                var i84 = this.path;
                                if (n95) {
                                    var s62 = new p28({
                                    }, i84, r80, this.$__schemaType);
                                    if (t8 instanceof e32.Map) {
                                        var a62, u67 = o99(t8.keys());
                                        try {
                                            for(u67.s(); !(a62 = u67.n()).done;){
                                                var c49 = a62.value, l40 = t8.get(c49);
                                                l40 = null == l40 ? s62.$__schemaType._castNullish(l40) : s62.$__schemaType.cast(l40, r80, !0, null, {
                                                    path: i84 + "." + c49
                                                }), s62.$init(c49, l40);
                                            }
                                        } catch (t9) {
                                            u67.e(t9);
                                        } finally{
                                            u67.f();
                                        }
                                    } else for(var f39 = 0, h27 = Object.keys(t8); f39 < h27.length; f39++){
                                        var y32 = h27[f39], d24 = t8[y32];
                                        d24 = null == d24 ? s62.$__schemaType._castNullish(d24) : s62.$__schemaType.cast(d24, r80, !0, null, {
                                            path: i84 + "." + y32
                                        }), s62.$init(y32, d24);
                                    }
                                    return s62;
                                }
                                return new p28(t8, i84, r80, this.$__schemaType);
                            }
                        },
                        {
                            key: "clone",
                            value: function() {
                                var t8 = a49(f37(h26.prototype), "clone", this).call(this);
                                return null != this.$__schemaType && (t8.$__schemaType = this.$__schemaType.clone()), t8;
                            }
                        }
                    ], s61(r79.prototype, n94), i83 && s61(r79, i83), h26;
                }(y30);
                d22.prototype.OptionsConstructor = h25, d22.defaultOptions = {
                }, t2.exports = d22;
            }).call(this, r2(9));
        },
        function(t2, e3, r2) {
            "use strict";
            function n63(t5) {
                return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            function o99(t5, e32) {
                if (!(t5 instanceof e32)) throw new TypeError("Cannot call a class as a function");
            }
            function i82(t5, e32) {
                return (i82 = Object.setPrototypeOf || function(t8, e40) {
                    return t8.__proto__ = e40, t8;
                })(t5, e32);
            }
            function s61(t5) {
                var e32 = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                    } catch (t8) {
                        return !1;
                    }
                }();
                return function() {
                    var r79, n94 = u64(t5);
                    if (e32) {
                        var o110 = u64(this).constructor;
                        r79 = Reflect.construct(n94, arguments, o110);
                    } else r79 = n94.apply(this, arguments);
                    return a49(this, r79);
                };
            }
            function a49(t5, e32) {
                if (e32 && ("object" === n63(e32) || "function" == typeof e32)) return e32;
                if ((void 0) !== e32) throw new TypeError("Derived constructors may only return object or undefined");
                return (function(t8) {
                    if ((void 0) === t8) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t8;
                })(t5);
            }
            function u64(t5) {
                return (u64 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t8) {
                    return t8.__proto__ || Object.getPrototypeOf(t8);
                })(t5);
            }
            var c47 = function(t5) {
                !function(t8, e32) {
                    if ("function" != typeof e32 && null !== e32) throw new TypeError("Super expression must either be null or a function");
                    t8.prototype = Object.create(e32 && e32.prototype, {
                        constructor: {
                            value: t8,
                            writable: !0,
                            configurable: !0
                        }
                    }), e32 && i82(t8, e32);
                }(r79, t5);
                var e32 = s61(r79);
                function r79() {
                    return o99(this, r79), e32.apply(this, arguments);
                }
                return r79;
            }(r2(7)), l37 = r2(8);
            Object.defineProperty(c47.prototype, "of", l37), t2.exports = c47;
        },
        function(t2, e3, r2) {
            "use strict";
            (function(t5) {
                /*!
 * Module dependencies.
 */ function n63(t8) {
                    return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t9) {
                        return typeof t9;
                    } : function(t9) {
                        return t9 && "function" == typeof Symbol && t9.constructor === Symbol && t9 !== Symbol.prototype ? "symbol" : typeof t9;
                    })(t8);
                }
                var o99 = r2(15).get().Binary, i82 = r2(20), s61 = r2(10), a49 = r2(31);
                /*!
 * ignore
 */ function u64(e32) {
                    return e32 && "object" === n63(e32) && !(e32 instanceof Date) && !(e32 instanceof s61) && (!Array.isArray(e32) || e32.length > 0) && !(e32 instanceof t5) && !(e32 instanceof i82) && !(e32 instanceof o99);
                }
                e3.flatten = /*!
 * ignore
 */ function e32(r79, n94, o111, i83) {
                    var s63;
                    s63 = r79 && a49(r79) && !t5.isBuffer(r79) ? Object.keys(r79.toObject({
                        transform: !1,
                        virtuals: !1
                    })) : Object.keys(r79 || {
                    });
                    var c47 = s63.length, l37 = {
                    };
                    n94 = n94 ? n94 + "." : "";
                    for(var f37 = 0; f37 < c47; ++f37){
                        var p28 = s63[f37], h25 = r79[p28];
                        l37[n94 + p28] = h25;
                        var y30 = i83 && i83.path && i83.path(n94 + p28), d22 = i83 && i83.nested && i83.nested[n94 + p28];
                        if (!y30 || "Mixed" !== y30.instance) {
                            if (u64(h25)) {
                                if (o111 && o111.skipArrays && Array.isArray(h25)) continue;
                                var _22 = e32(h25, n94 + p28, o111, i83);
                                for(var v15 in _22)l37[v15] = _22[v15];
                                Array.isArray(h25) && (l37[n94 + p28] = h25);
                            }
                            if (d22) for(var m10 = Object.keys(i83.paths), g12 = 0, b11 = m10; g12 < b11.length; g12++){
                                var w11 = b11[g12];
                                w11.startsWith(n94 + p28 + ".") && !l37.hasOwnProperty(w11) && (l37[w11] = void 0);
                            }
                        }
                    }
                    return l37;
                }, e3.modifiedPaths = function e40(r79, n94, o111) {
                    var i83 = Object.keys(r79 || {
                    }), s63 = i83.length;
                    o111 = o111 || {
                    }, n94 = n94 ? n94 + "." : "";
                    for(var c47 = 0; c47 < s63; ++c47){
                        var l37 = i83[c47], f37 = r79[l37];
                        o111[n94 + l37] = !0, a49(f37) && !t5.isBuffer(f37) && (f37 = f37.toObject({
                            transform: !1,
                            virtuals: !1
                        })), u64(f37) && e40(f37, n94 + l37, o111);
                    }
                    return o111;
                };
            }).call(this, r2(2).Buffer);
        },
        function(t2, e3, r2) {
            "use strict";
            var n63 = r2(3);
            /*!
 * Like `schema.path()`, except with a document, because impossible to
 * determine path type without knowing the embedded discriminator key.
 */ t2.exports = function t5(e32, r79, o99) {
                for(var i82 = (o99 = o99 || {
                }).typeOnly, s61 = r79.split("."), a49 = null, u64 = "adhocOrUndefined", c47 = 0; c47 < s61.length; ++c47){
                    var l39 = s61.slice(0, c47 + 1).join(".");
                    if (null != (a49 = e32.schema.path(l39))) {
                        if ("Mixed" === a49.instance) return i82 ? "real" : a49;
                        if (u64 = e32.schema.pathType(l39), (a49.$isSingleNested || a49.$isMongooseDocumentArrayElement) && null != a49.schema.discriminators) {
                            var f40 = a49.schema.discriminators, p30 = e32.get(l39 + "." + n63(a49, "schema.options.discriminatorKey"));
                            if (null == p30 || null == f40[p30]) continue;
                            var h26 = s61.slice(c47 + 1).join(".");
                            return t5(e32.get(l39), h26, o99);
                        }
                    } else u64 = "adhocOrUndefined";
                }
                return i82 ? u64 : a49;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * ignore
 */ /*!
 * Returns this documents _id cast to a string.
 */ function n63() {
                return null != this._id ? String(this._id) : null;
            }
            t2.exports = function(t5) {
                !t5.paths.id && !t5.options.noVirtualId && t5.options.id && t5.virtual("id").get(n63);
            };
        },
        function(t2, e3, r2) {
            "use strict";
            var n63 = r2(59);
            /*!
 * ignore
 */ t2.exports = function(t5) {
                if (null == t5) return null;
                var e32 = Object.keys(t5), r79 = e32.length, o99 = null;
                if (1 === r79 && "_id" === e32[0]) o99 = !!t5[e32[r79]];
                else for(; r79--;)if ("_id" !== e32[r79] && n63(t5[e32[r79]])) {
                    o99 = !t5[e32[r79]];
                    break;
                }
                return o99;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies
 */ function n63(t5) {
                return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            function o99(t5, e32) {
                var r79 = "undefined" != typeof Symbol && t5[Symbol.iterator] || t5["@@iterator"];
                if (!r79) {
                    if (Array.isArray(t5) || (r79 = (function(t8, e40) {
                        if (!t8) return;
                        if ("string" == typeof t8) return i82(t8, e40);
                        var r80 = Object.prototype.toString.call(t8).slice(8, -1);
                        "Object" === r80 && t8.constructor && (r80 = t8.constructor.name);
                        if ("Map" === r80 || "Set" === r80) return Array.from(t8);
                        if ("Arguments" === r80 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r80)) return i82(t8, e40);
                    })(t5)) || e32 && t5 && "number" == typeof t5.length) {
                        r79 && (t5 = r79);
                        var n94 = 0, o111 = function() {
                        };
                        return {
                            s: o111,
                            n: function() {
                                return n94 >= t5.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t5[n94++]
                                };
                            },
                            e: function(t8) {
                                throw t8;
                            },
                            f: o111
                        };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s61, a49 = !0, u64 = !1;
                return {
                    s: function() {
                        r79 = r79.call(t5);
                    },
                    n: function() {
                        var t8 = r79.next();
                        return a49 = t8.done, t8;
                    },
                    e: function(t8) {
                        u64 = !0, s61 = t8;
                    },
                    f: function() {
                        try {
                            a49 || null == r79.return || r79.return();
                        } finally{
                            if (u64) throw s61;
                        }
                    }
                };
            }
            function i82(t5, e32) {
                (null == e32 || e32 > t5.length) && (e32 = t5.length);
                for(var r79 = 0, n95 = new Array(e32); r79 < e32; r79++)n95[r79] = t5[r79];
                return n95;
            }
            var s61 = r2(179), a49 = r2(3), u64 = r2(37), c47 = r2(59), l41 = r2(26);
            /*!
 * Set each path query option to lean
 *
 * @param {Object} option
 */ function f41(t5) {
                return function(e32) {
                    e32.options || (e32.options = {
                    }), null != t5 && Array.isArray(t5.virtuals) && ((t5 = Object.assign({
                    }, t5)).virtuals = t5.virtuals.filter(function(t8) {
                        return "string" == typeof t8 && t8.startsWith(e32.path + ".");
                    }).map(function(t8) {
                        return t8.slice(e32.path.length + 1);
                    })), e32.options.lean = t5;
                };
            }
            /*!
 * Handle the `WriteOpResult` from the server
 */ /*!
 * Prepare a set of path options for query population.
 *
 * @param {Query} query
 * @param {Object} options
 * @return {Array}
 */ e3.preparePopulationOptions = function(t5, e32) {
                var r79 = t5.options.populate, n95 = Object.keys(r79).reduce(function(t8, e40) {
                    return t8.concat([
                        r79[e40]
                    ]);
                }, []);
                return null != e32.lean && n95.filter(function(t8) {
                    return null == a49(t8, "options.lean");
                }).forEach(f41(e32.lean)), n95.forEach(function(e40) {
                    e40._localModel = t5.model;
                }), n95;
            }, /*!
 * Prepare a set of path options for query population. This is the MongooseQuery
 * version
 *
 * @param {Query} query
 * @param {Object} options
 * @return {Array}
 */ e3.preparePopulationOptionsMQ = function(t5, e32) {
                var r79 = t5._mongooseOptions.populate, n95 = Object.keys(r79).reduce(function(t8, e40) {
                    return t8.concat([
                        r79[e40]
                    ]);
                }, []);
                null != e32.lean && n95.filter(function(t8) {
                    return null == a49(t8, "options.lean");
                }).forEach(f41(e32.lean));
                var o112 = a49(t5, "options.session", null);
                null != o112 && n95.forEach(function(t8) {
                    null != t8.options ? "session" in t8.options || (t8.options.session = o112) : t8.options = {
                        session: o112
                    };
                });
                var i83 = t5._fieldsForExec();
                return n95.forEach(function(t8) {
                    t8._queryProjection = i83;
                }), n95.forEach(function(e40) {
                    e40._localModel = t5.model;
                }), n95;
            }, /*!
 * If the document is a mapped discriminator type, it returns a model instance for that type, otherwise,
 * it returns an instance of the given model.
 *
 * @param {Model}  model
 * @param {Object} doc
 * @param {Object} fields
 *
 * @return {Document}
 */ e3.createModel = function(t5, r79, n95, o112, i83) {
                t5.hooks.execPreSync("createModel", r79);
                var s63 = t5.schema ? t5.schema.discriminatorMapping : null, a63 = s63 && s63.isRoot ? s63.key : null, c50 = r79[a63];
                if (a63 && c50 && t5.discriminators) {
                    var f42 = t5.discriminators[c50] || u64(t5.discriminators, c50);
                    if (f42) {
                        var p31 = l41(o112);
                        return e3.applyPaths(p31, f42.schema), new f42(void 0, p31, !0);
                    }
                }
                return (void 0) === i83 && ((i83 = {
                }).defaults = !0), new t5(void 0, n95, {
                    skipId: !0,
                    isNew: !1,
                    willInit: !0,
                    defaults: i83.defaults
                });
            }, /*!
 * ignore
 */ e3.applyPaths = function(t5, e32) {
                var r79, i83, u68;
                if (t5) for(u68 = (i83 = Object.keys(t5)).length; u68--;)if ("+" !== i83[u68][0]) {
                    var l42 = t5[i83[u68]];
                    if (c47(l42)) {
                        r79 = !l42;
                        break;
                    }
                }
                var f43 = [], p32 = [], h28 = [];
                switch((function e40(n95, o112) {
                    if (o112 || (o112 = ""), -1 !== h28.indexOf(n95)) return [];
                    h28.push(n95);
                    var i84 = [];
                    return n95.eachPath(function(n96, a63) {
                        o112 && (n96 = o112 + "." + n96);
                        var u69 = E4(n96, a63);
                        if (null == u69 && a63.$isMongooseArray && !a63.$isMongooseDocumentArray && (u69 = E4(n96, a63.caster)), null != u69 && i84.push(u69), a63.schema) {
                            var c50 = e40(a63.schema, n96);
                            !1 === r79 && s61(t5, n96, a63.schema, f43, c50);
                        }
                    }), h28.pop(), i84;
                })(e32), r79){
                    case !0:
                        var y33, d25 = o99(p32);
                        try {
                            for(d25.s(); !(y33 = d25.n()).done;){
                                var _23 = y33.value;
                                t5[_23] = 0;
                            }
                        } catch (t8) {
                            d25.e(t8);
                        } finally{
                            d25.f();
                        }
                        break;
                    case !1:
                        e32 && e32.paths._id && e32.paths._id.options && !1 === e32.paths._id.options.select && (t5._id = 0);
                        var v16, m11 = o99(f43);
                        try {
                            for(m11.s(); !(v16 = m11.n()).done;){
                                var g13 = v16.value;
                                t5[g13] = t5[g13] || 1;
                            }
                        } catch (t8) {
                            m11.e(t8);
                        } finally{
                            m11.f();
                        }
                        break;
                    case void 0:
                        if (null == t5) break;
                        for(var b12 = 0, w12 = Object.keys(t5 || {
                        }); b12 < w12.length; b12++){
                            var O9 = w12[b12];
                            O9.startsWith("+") && delete t5[O9];
                        }
                        var S8, A8 = o99(p32);
                        try {
                            for(A8.s(); !(S8 = A8.n()).done;){
                                var $6 = S8.value;
                                t5[$6] = 0;
                            }
                        } catch (t8) {
                            A8.e(t8);
                        } finally{
                            A8.f();
                        }
                }
                function E4(e41, o112) {
                    var s63 = "+" + e41, u69 = t5 && s63 in t5;
                    if (u69 && delete t5[s63], "boolean" == typeof o112.selected) {
                        if (u69) return delete t5[s63], void (!1 === r79 && i83.length > 1 && !~i83.indexOf(e41) && (t5[e41] = 1));
                        for(var c51 = e41.split("."), l43 = "", h29 = 0; h29 < c51.length; ++h29)if (l43 += l43.length ? "." + c51[h29] : c51[h29], -1 !== p32.indexOf(l43)) return;
                        if (!r79 && a49(o112, "options.$skipDiscriminatorCheck", !1)) for(var y34 = "", d26 = 0; d26 < c51.length; ++d26){
                            y34 += (0 === y34.length ? "" : ".") + c51[d26];
                            var _24 = a49(t5, y34, !1) || a49(t5, y34 + ".$", !1);
                            if (_24 && "object" !== n63(_24)) return;
                        }
                        return (o112.selected ? f43 : p32).push(e41), e41;
                    }
                }
            }, e3.handleDeleteWriteOpResult = function(t5) {
                return function(e32, r79) {
                    if (e32) return t5(e32);
                    var n95 = Object.assign({
                    }, r79.result);
                    return null != a49(r79, "result.n", null) && (n95.deletedCount = r79.result.n), null != r79.deletedCount && (n95.deletedCount = r79.deletedCount), t5(null, n95);
                };
            };
        },
        function(t2, e3, r2) {
            "use strict";
            t2.exports = function(t5, e32, r79, n63, o99) {
                var i82 = Object.keys(t5).reduce(function(t8, r80) {
                    return t8 || r80.startsWith(e32 + ".");
                }, !1), s61 = e32 + "." + r79.options.discriminatorKey;
                i82 || 1 !== o99.length || o99[0] !== s61 || n63.splice(n63.indexOf(s61), 1);
            };
        },
        function(t2, e3, r2) {
            "use strict";
            function n63(t5) {
                return (n63 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t8) {
                    return typeof t8;
                } : function(t8) {
                    return t8 && "function" == typeof Symbol && t8.constructor === Symbol && t8 !== Symbol.prototype ? "symbol" : typeof t8;
                })(t5);
            }
            t2.exports = function(t5) {
                return !!t5 && ("object" === n63(t5) || "function" == typeof t5) && "function" == typeof t5.then;
            };
        },
        function(t2, e3, r2) {
            "use strict";
            /*!
 * Module dependencies.
 */ var n63 = r2(12), o99 = r2(19).EventEmitter, i82 = r2(5), s61 = r2(54), a49 = r2(10), u64 = i82.ValidationError, c47 = r2(78), l41 = r2(21);
            function f41(t5, e32, r79, o112, u68) {
                if (!(this instanceof f41)) return new f41(t5, e32, r79, o112, u68);
                if (l41(e32) && !e32.instanceOfSchema && (e32 = new s61(e32)), e32 = this.schema || e32, !this.schema && e32.options._id && (void 0) === (t5 = t5 || {
                })._id && (t5._id = new a49), !e32) throw new i82.MissingSchemaError;
                for(var p32 in this.$__setSchema(e32), n63.call(this, t5, r79, o112, u68), c47(this, e32, {
                    decorateDoc: !0
                }), e32.methods)this[p32] = e32.methods[p32];
                for(var h28 in e32.statics)this[h28] = e32.statics[h28];
            }
            /*!
 * Inherit from the NodeJS document
 */ f41.prototype = Object.create(n63.prototype), f41.prototype.constructor = f41, /*!
 * ignore
 */ f41.events = new o99, /*!
 * Browser doc exposes the event emitter API
 */ f41.$emitter = new o99, [
                "on",
                "once",
                "emit",
                "listeners",
                "removeListener",
                "setMaxListeners",
                "removeAllListeners",
                "addListener"
            ].forEach(function(t5) {
                f41[t5] = function() {
                    return f41.$emitter[t5].apply(f41.$emitter, arguments);
                };
            }), /*!
 * Module exports.
 */ f41.ValidationError = u64, t2.exports = f41;
        }
    ]);
});

},{}],"fxo0w":[function(require,module,exports) {
var ref = require('mongoose'), Schema = ref.Schema, model = ref.model;
var mongoose = require('mongoose');
var User = require('./userModel');
// const validator = require('validator');
var tourSchema = new Schema({
    name: {
        type: String,
        required: [
            true,
            'A tour must have a name'
        ],
        unique: true,
        trim: true,
        maxlength: [
            40,
            'A tour name must have less or equal then 40 characters'
        ],
        minlength: [
            10,
            'A tour name must have more or equal then 10 characters'
        ]
    },
    duration: {
        type: Number,
        required: [
            true,
            'A tour must have a duration'
        ]
    },
    maxGroupSize: {
        type: Number,
        required: [
            true,
            'A tour must have a group size'
        ]
    },
    difficulty: {
        type: String,
        required: [
            true,
            'A tour must have a difficulty'
        ],
        enum: {
            values: [
                'easy',
                'medium',
                'difficult'
            ],
            message: 'Difficulty is either: easy, medium, difficult'
        }
    },
    ratingsAverage: {
        type: Number,
        default: 4.5,
        min: [
            1,
            'Rating must be above 1.0'
        ],
        max: [
            5,
            'Rating must be below 5.0'
        ],
        set: function(value) {
            return Math.round(value * 10) / 10;
        }
    },
    ratingsQuantity: {
        type: Number,
        default: 0
    },
    price: {
        type: Number,
        required: [
            true,
            'A tour must have a price'
        ]
    },
    description: {
        type: String,
        trim: true,
        required: [
            true,
            'A tour must have a description'
        ]
    },
    imageCover: {
        type: String,
        required: [
            true,
            'A tour must have a cover image'
        ]
    },
    images: [
        String
    ],
    createdAt: {
        type: Date,
        default: Date.now(),
        select: false
    },
    startDates: [
        Date
    ],
    secretTour: {
        type: Boolean,
        default: false
    },
    startLocation: {
        // GeoJSON
        type: {
            type: String,
            default: 'Point',
            enum: [
                'Point'
            ]
        },
        coordinates: [
            Number
        ],
        address: String,
        description: String
    },
    locations: [
        {
            type: {
                type: String,
                default: 'Point',
                enum: [
                    'Point'
                ]
            },
            coordinates: [
                Number
            ],
            address: String,
            description: String,
            day: Number
        }
    ],
    guides: [
        {
            type: mongoose.Schema.ObjectId,
            ref: 'User'
        }
    ]
}, {
    toJSON: {
        virtuals: true
    },
    toObject: {
        virtuals: true
    }
});
tourSchema.virtual('reviews', {
    ref: 'Review',
    foreignField: 'tour',
    localField: '_id'
});
tourSchema.virtual('slug').get(function() {
    return this.name.split(' ').map(function(el) {
        return el.toLowerCase();
    }).join('-');
});
tourSchema.index({
    price: 1,
    ratingsAverage: 1,
    duration: 1
});
tourSchema.index({
    startLocation: '2dsphere'
});
module.exports = model('Tour', tourSchema);

},{"mongoose":"k3sUr","./userModel":"30h4r"}],"30h4r":[function(require,module,exports) {
var _helpers = require("@swc/helpers");
var regeneratorRuntime = require("regenerator-runtime");
var ref = require('mongoose'), model = ref.model, Schema = ref.Schema;
var validator = require('validator');
var bcrypt = require('bcryptjs');
var userSchema = new Schema({
    email: {
        type: String,
        required: true,
        unique: true,
        validate: validator.isEmail
    },
    password: {
        type: String,
        required: true,
        minLength: 8
    },
    passwordConfirm: {
        type: String,
        required: true,
        validate: {
            validator: function validator1(el) {
                return el === this.password;
            }
        }
    },
    photo: {
        type: String,
        default: 'default.jpg'
    },
    role: {
        type: String,
        required: true,
        enum: [
            'user',
            'admin',
            'guide',
            'lead-guide'
        ],
        default: 'user'
    },
    passwordChangeAt: Date,
    passwordResetToken: {
        type: String
    },
    passwordResetExpires: Date,
    isActive: {
        type: Boolean,
        default: true
    },
    emailConfirmed: {
        type: Boolean,
        default: false
    },
    emailConfirmToken: {
        type: String
    },
    emailConfirmExpires: Date
});
userSchema.pre('save', function(next) {
    var _ref = _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee(next) {
        return regeneratorRuntime.wrap(function _callee$(_ctx) {
            while(1)switch(_ctx.prev = _ctx.next){
                case 0:
                    if (this.isModified('password')) {
                        _ctx.next = 2;
                        break;
                    }
                    return _ctx.abrupt("return", next());
                case 2:
                    _ctx.next = 4;
                    return bcrypt.hash(this.password, 12);
                case 4:
                    this.password = _ctx.sent;
                    this.passwordConfirm = undefined;
                    next();
                case 7:
                case "end":
                    return _ctx.stop();
            }
        }, _callee, this);
    }).bind(this));
    return function() {
        return _ref.apply(this, arguments);
    };
}());
// userSchema.pre('/^find/', function(next) {
userSchema.pre(/^find/, function(next) {
    this.find({
        isActive: {
            $ne: false
        }
    });
    next();
});
userSchema.methods.correctPassword = (function(candidatePassword, userPassword) {
    var _ref = _helpers.asyncToGenerator(regeneratorRuntime.mark(function _callee(candidatePassword, userPassword) {
        return regeneratorRuntime.wrap(function _callee$(_ctx) {
            while(1)switch(_ctx.prev = _ctx.next){
                case 0:
                    _ctx.next = 2;
                    return bcrypt.compare(candidatePassword, userPassword);
                case 2:
                    return _ctx.abrupt("return", _ctx.sent);
                case 3:
                case "end":
                    return _ctx.stop();
            }
        }, _callee);
    }));
    return function() {
        return _ref.apply(this, arguments);
    };
})();
userSchema.methods.changePasswordAfter = function(JWTIssued) {
    if (this.passwordChangeAt) {
        var passwordChangeAt = this.passwordChangeAt.getTime() / 1000;
        // console.log(`PasswordChangeAt: ${passwordChangeAt}`)
        // console.log(`Token was issued: ${JWTIssued}`)
        console.log(passwordChangeAt > JWTIssued);
        return passwordChangeAt > JWTIssued;
    }
    // False means NOT changed
    return false;
};
userSchema.methods.confirmedTokenAlive = function() {
    return Date.parse(this.emailConfirmExpires) >= Date.now();
};
module.exports = model('User', userSchema);

},{"@swc/helpers":"gDs9W","regenerator-runtime":"hmHqu","mongoose":"k3sUr","validator":"7kv27","bcryptjs":"3boYC"}],"7kv27":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _toDate = _interopRequireDefault(require("./lib/toDate"));
var _toFloat = _interopRequireDefault(require("./lib/toFloat"));
var _toInt = _interopRequireDefault(require("./lib/toInt"));
var _toBoolean = _interopRequireDefault(require("./lib/toBoolean"));
var _equals = _interopRequireDefault(require("./lib/equals"));
var _contains = _interopRequireDefault(require("./lib/contains"));
var _matches = _interopRequireDefault(require("./lib/matches"));
var _isEmail = _interopRequireDefault(require("./lib/isEmail"));
var _isURL = _interopRequireDefault(require("./lib/isURL"));
var _isMACAddress = _interopRequireDefault(require("./lib/isMACAddress"));
var _isIP = _interopRequireDefault(require("./lib/isIP"));
var _isIPRange = _interopRequireDefault(require("./lib/isIPRange"));
var _isFQDN = _interopRequireDefault(require("./lib/isFQDN"));
var _isBoolean = _interopRequireDefault(require("./lib/isBoolean"));
var _isAlpha = _interopRequireWildcard(require("./lib/isAlpha"));
var _isAlphanumeric = _interopRequireWildcard(require("./lib/isAlphanumeric"));
var _isNumeric = _interopRequireDefault(require("./lib/isNumeric"));
var _isPort = _interopRequireDefault(require("./lib/isPort"));
var _isLowercase = _interopRequireDefault(require("./lib/isLowercase"));
var _isUppercase = _interopRequireDefault(require("./lib/isUppercase"));
var _isAscii = _interopRequireDefault(require("./lib/isAscii"));
var _isFullWidth = _interopRequireDefault(require("./lib/isFullWidth"));
var _isHalfWidth = _interopRequireDefault(require("./lib/isHalfWidth"));
var _isVariableWidth = _interopRequireDefault(require("./lib/isVariableWidth"));
var _isMultibyte = _interopRequireDefault(require("./lib/isMultibyte"));
var _isSurrogatePair = _interopRequireDefault(require("./lib/isSurrogatePair"));
var _isInt = _interopRequireDefault(require("./lib/isInt"));
var _isFloat = _interopRequireWildcard(require("./lib/isFloat"));
var _isDecimal = _interopRequireDefault(require("./lib/isDecimal"));
var _isHexadecimal = _interopRequireDefault(require("./lib/isHexadecimal"));
var _isDivisibleBy = _interopRequireDefault(require("./lib/isDivisibleBy"));
var _isHexColor = _interopRequireDefault(require("./lib/isHexColor"));
var _isISRC = _interopRequireDefault(require("./lib/isISRC"));
var _isMD = _interopRequireDefault(require("./lib/isMD5"));
var _isHash = _interopRequireDefault(require("./lib/isHash"));
var _isJWT = _interopRequireDefault(require("./lib/isJWT"));
var _isJSON = _interopRequireDefault(require("./lib/isJSON"));
var _isEmpty = _interopRequireDefault(require("./lib/isEmpty"));
var _isLength = _interopRequireDefault(require("./lib/isLength"));
var _isByteLength = _interopRequireDefault(require("./lib/isByteLength"));
var _isUUID = _interopRequireDefault(require("./lib/isUUID"));
var _isMongoId = _interopRequireDefault(require("./lib/isMongoId"));
var _isAfter = _interopRequireDefault(require("./lib/isAfter"));
var _isBefore = _interopRequireDefault(require("./lib/isBefore"));
var _isIn = _interopRequireDefault(require("./lib/isIn"));
var _isCreditCard = _interopRequireDefault(require("./lib/isCreditCard"));
var _isIdentityCard = _interopRequireDefault(require("./lib/isIdentityCard"));
var _isISIN = _interopRequireDefault(require("./lib/isISIN"));
var _isISBN = _interopRequireDefault(require("./lib/isISBN"));
var _isISSN = _interopRequireDefault(require("./lib/isISSN"));
var _isMobilePhone = _interopRequireWildcard(require("./lib/isMobilePhone"));
var _isCurrency = _interopRequireDefault(require("./lib/isCurrency"));
var _isISO = _interopRequireDefault(require("./lib/isISO8601"));
var _isRFC = _interopRequireDefault(require("./lib/isRFC3339"));
var _isISO31661Alpha = _interopRequireDefault(require("./lib/isISO31661Alpha2"));
var _isISO31661Alpha2 = _interopRequireDefault(require("./lib/isISO31661Alpha3"));
var _isBase = _interopRequireDefault(require("./lib/isBase64"));
var _isDataURI = _interopRequireDefault(require("./lib/isDataURI"));
var _isMagnetURI = _interopRequireDefault(require("./lib/isMagnetURI"));
var _isMimeType = _interopRequireDefault(require("./lib/isMimeType"));
var _isLatLong = _interopRequireDefault(require("./lib/isLatLong"));
var _isPostalCode = _interopRequireWildcard(require("./lib/isPostalCode"));
var _ltrim = _interopRequireDefault(require("./lib/ltrim"));
var _rtrim = _interopRequireDefault(require("./lib/rtrim"));
var _trim = _interopRequireDefault(require("./lib/trim"));
var _escape = _interopRequireDefault(require("./lib/escape"));
var _unescape = _interopRequireDefault(require("./lib/unescape"));
var _stripLow = _interopRequireDefault(require("./lib/stripLow"));
var _whitelist = _interopRequireDefault(require("./lib/whitelist"));
var _blacklist = _interopRequireDefault(require("./lib/blacklist"));
var _isWhitelisted = _interopRequireDefault(require("./lib/isWhitelisted"));
var _normalizeEmail = _interopRequireDefault(require("./lib/normalizeEmail"));
var _toString = _interopRequireDefault(require("./lib/util/toString"));
function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) return obj;
    else {
        var newObj = {
        };
        if (obj != null) {
            for(var key in obj)if (Object.prototype.hasOwnProperty.call(obj, key)) {
                var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {
                };
                if (desc.get || desc.set) Object.defineProperty(newObj, key, desc);
                else newObj[key] = obj[key];
            }
        }
        newObj.default = obj;
        return newObj;
    }
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var version = '10.11.0';
var validator = {
    version: version,
    toDate: _toDate.default,
    toFloat: _toFloat.default,
    toInt: _toInt.default,
    toBoolean: _toBoolean.default,
    equals: _equals.default,
    contains: _contains.default,
    matches: _matches.default,
    isEmail: _isEmail.default,
    isURL: _isURL.default,
    isMACAddress: _isMACAddress.default,
    isIP: _isIP.default,
    isIPRange: _isIPRange.default,
    isFQDN: _isFQDN.default,
    isBoolean: _isBoolean.default,
    isAlpha: _isAlpha.default,
    isAlphaLocales: _isAlpha.locales,
    isAlphanumeric: _isAlphanumeric.default,
    isAlphanumericLocales: _isAlphanumeric.locales,
    isNumeric: _isNumeric.default,
    isPort: _isPort.default,
    isLowercase: _isLowercase.default,
    isUppercase: _isUppercase.default,
    isAscii: _isAscii.default,
    isFullWidth: _isFullWidth.default,
    isHalfWidth: _isHalfWidth.default,
    isVariableWidth: _isVariableWidth.default,
    isMultibyte: _isMultibyte.default,
    isSurrogatePair: _isSurrogatePair.default,
    isInt: _isInt.default,
    isFloat: _isFloat.default,
    isFloatLocales: _isFloat.locales,
    isDecimal: _isDecimal.default,
    isHexadecimal: _isHexadecimal.default,
    isDivisibleBy: _isDivisibleBy.default,
    isHexColor: _isHexColor.default,
    isISRC: _isISRC.default,
    isMD5: _isMD.default,
    isHash: _isHash.default,
    isJWT: _isJWT.default,
    isJSON: _isJSON.default,
    isEmpty: _isEmpty.default,
    isLength: _isLength.default,
    isByteLength: _isByteLength.default,
    isUUID: _isUUID.default,
    isMongoId: _isMongoId.default,
    isAfter: _isAfter.default,
    isBefore: _isBefore.default,
    isIn: _isIn.default,
    isCreditCard: _isCreditCard.default,
    isIdentityCard: _isIdentityCard.default,
    isISIN: _isISIN.default,
    isISBN: _isISBN.default,
    isISSN: _isISSN.default,
    isMobilePhone: _isMobilePhone.default,
    isMobilePhoneLocales: _isMobilePhone.locales,
    isPostalCode: _isPostalCode.default,
    isPostalCodeLocales: _isPostalCode.locales,
    isCurrency: _isCurrency.default,
    isISO8601: _isISO.default,
    isRFC3339: _isRFC.default,
    isISO31661Alpha2: _isISO31661Alpha.default,
    isISO31661Alpha3: _isISO31661Alpha2.default,
    isBase64: _isBase.default,
    isDataURI: _isDataURI.default,
    isMagnetURI: _isMagnetURI.default,
    isMimeType: _isMimeType.default,
    isLatLong: _isLatLong.default,
    ltrim: _ltrim.default,
    rtrim: _rtrim.default,
    trim: _trim.default,
    escape: _escape.default,
    unescape: _unescape.default,
    stripLow: _stripLow.default,
    whitelist: _whitelist.default,
    blacklist: _blacklist.default,
    isWhitelisted: _isWhitelisted.default,
    normalizeEmail: _normalizeEmail.default,
    toString: _toString.default
};
var _default = validator;
exports.default = _default;
module.exports = exports.default;
module.exports.default = exports.default;

},{"./lib/toDate":"kgn40","./lib/toFloat":"9AToI","./lib/toInt":"ZB4yE","./lib/toBoolean":"3LIUh","./lib/equals":"5xLrH","./lib/contains":"lxfLx","./lib/matches":"gaqid","./lib/isEmail":"gVcQP","./lib/isURL":"4t5WK","./lib/isMACAddress":"gbR2l","./lib/isIP":"8rjH6","./lib/isIPRange":"fFeDm","./lib/isFQDN":"iz015","./lib/isBoolean":"6veW0","./lib/isAlpha":"92f4P","./lib/isAlphanumeric":"jDCJM","./lib/isNumeric":"eCfNx","./lib/isPort":"g1u1F","./lib/isLowercase":"egRbE","./lib/isUppercase":"31XWT","./lib/isAscii":"6jffw","./lib/isFullWidth":"6gpN9","./lib/isHalfWidth":"hetQZ","./lib/isVariableWidth":"b6bKR","./lib/isMultibyte":"amGu0","./lib/isSurrogatePair":"ckEqG","./lib/isInt":"gQYHf","./lib/isFloat":"lIu1h","./lib/isDecimal":"jCgQS","./lib/isHexadecimal":"kiuY6","./lib/isDivisibleBy":"inebO","./lib/isHexColor":"8nZWl","./lib/isISRC":"4VdRz","./lib/isMD5":"8ubDF","./lib/isHash":"hWDsm","./lib/isJWT":"jFITj","./lib/isJSON":"A6EFP","./lib/isEmpty":"8xwMs","./lib/isLength":"hPC6s","./lib/isByteLength":"d3pdl","./lib/isUUID":"eca4r","./lib/isMongoId":"1fcbX","./lib/isAfter":"2zc9Q","./lib/isBefore":"40h4W","./lib/isIn":"13HSl","./lib/isCreditCard":"dnICk","./lib/isIdentityCard":"cOsAV","./lib/isISIN":"2q8ko","./lib/isISBN":"80Tjy","./lib/isISSN":"hUwdQ","./lib/isMobilePhone":"58e2g","./lib/isCurrency":"h8rbV","./lib/isISO8601":"4pFJQ","./lib/isRFC3339":"lksfR","./lib/isISO31661Alpha2":"2esHf","./lib/isISO31661Alpha3":"6JDVs","./lib/isBase64":"gTRDS","./lib/isDataURI":"32CzN","./lib/isMagnetURI":"3Xpxx","./lib/isMimeType":"372iW","./lib/isLatLong":"hZhgb","./lib/isPostalCode":"9jhk0","./lib/ltrim":"fwWDo","./lib/rtrim":"fPTza","./lib/trim":"1RE9b","./lib/escape":"hTNM5","./lib/unescape":"6RJG0","./lib/stripLow":"8KaFE","./lib/whitelist":"ddNbV","./lib/blacklist":"8aFAV","./lib/isWhitelisted":"d90U0","./lib/normalizeEmail":"egFpg","./lib/util/toString":"4GXXg"}],"kgn40":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = toDate;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function toDate(date) {
    _assertString.default(date);
    date = Date.parse(date);
    return !isNaN(date) ? new Date(date) : null;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"7omJq":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = assertString;
function _typeof(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") _typeof = function _typeof1(obj1) {
        return typeof obj1;
    };
    else _typeof = function _typeof2(obj1) {
        return obj1 && typeof Symbol === "function" && obj1.constructor === Symbol && obj1 !== Symbol.prototype ? "symbol" : typeof obj1;
    };
    return _typeof(obj);
}
function assertString(input) {
    var isString = typeof input === 'string' || input instanceof String;
    if (!isString) {
        var invalidType;
        if (input === null) invalidType = 'null';
        else {
            invalidType = _typeof(input);
            if (invalidType === 'object' && input.constructor && input.constructor.hasOwnProperty('name')) invalidType = input.constructor.name;
            else invalidType = "a ".concat(invalidType);
        }
        throw new TypeError("Expected string but received ".concat(invalidType, "."));
    }
}
module.exports = exports.default;
module.exports.default = exports.default;

},{}],"9AToI":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = toFloat;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function toFloat(str) {
    _assertString.default(str);
    return parseFloat(str);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"ZB4yE":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = toInt;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function toInt(str, radix) {
    _assertString.default(str);
    return parseInt(str, radix || 10);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"3LIUh":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = toBoolean;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function toBoolean(str, strict) {
    _assertString.default(str);
    if (strict) return str === '1' || str === 'true';
    return str !== '0' && str !== 'false' && str !== '';
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"5xLrH":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = equals;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function equals(str, comparison) {
    _assertString.default(str);
    return str === comparison;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"lxfLx":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = contains;
var _assertString = _interopRequireDefault(require("./util/assertString"));
var _toString = _interopRequireDefault(require("./util/toString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function contains(str, elem) {
    _assertString.default(str);
    return str.indexOf(_toString.default(elem)) >= 0;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq","./util/toString":"4GXXg"}],"4GXXg":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = toString;
function _typeof(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") _typeof = function _typeof1(obj1) {
        return typeof obj1;
    };
    else _typeof = function _typeof2(obj1) {
        return obj1 && typeof Symbol === "function" && obj1.constructor === Symbol && obj1 !== Symbol.prototype ? "symbol" : typeof obj1;
    };
    return _typeof(obj);
}
function toString(input) {
    if (_typeof(input) === 'object' && input !== null) {
        if (typeof input.toString === 'function') input = input.toString();
        else input = '[object Object]';
    } else if (input === null || typeof input === 'undefined' || isNaN(input) && !input.length) input = '';
    return String(input);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{}],"gaqid":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = matches;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function matches(str, pattern, modifiers) {
    _assertString.default(str);
    if (Object.prototype.toString.call(pattern) !== '[object RegExp]') pattern = new RegExp(pattern, modifiers);
    return pattern.test(str);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"gVcQP":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isEmail;
var _assertString = _interopRequireDefault(require("./util/assertString"));
var _merge = _interopRequireDefault(require("./util/merge"));
var _isByteLength = _interopRequireDefault(require("./isByteLength"));
var _isFQDN = _interopRequireDefault(require("./isFQDN"));
var _isIP = _interopRequireDefault(require("./isIP"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var default_email_options = {
    allow_display_name: false,
    require_display_name: false,
    allow_utf8_local_part: true,
    require_tld: true
};
/* eslint-disable max-len */ /* eslint-disable no-control-regex */ var displayName = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\.\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\,\.\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]*<(.+)>$/i;
var emailUserPart = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~]+$/i;
var gmailUserPart = /^[a-z\d]+$/;
var quotedEmailUser = /^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f]))*$/i;
var emailUserUtf8Part = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+$/i;
var quotedEmailUserUtf8 = /^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*$/i;
/* eslint-enable max-len */ /* eslint-enable no-control-regex */ function isEmail(str, options) {
    _assertString.default(str);
    options = _merge.default(options, default_email_options);
    if (options.require_display_name || options.allow_display_name) {
        var display_email = str.match(displayName);
        if (display_email) str = display_email[1];
        else if (options.require_display_name) return false;
    }
    var parts = str.split('@');
    var domain = parts.pop();
    var user = parts.join('@');
    var lower_domain = domain.toLowerCase();
    if (options.domain_specific_validation && (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com')) {
        /*
      Previously we removed dots for gmail addresses before validating.
      This was removed because it allows `multiple..dots@gmail.com`
      to be reported as valid, but it is not.
      Gmail only normalizes single dots, removing them from here is pointless,
      should be done in normalizeEmail
    */ user = user.toLowerCase(); // Removing sub-address from username before gmail validation
        var username = user.split('+')[0]; // Dots are not included in gmail length restriction
        if (!_isByteLength.default(username.replace('.', ''), {
            min: 6,
            max: 30
        })) return false;
        var _user_parts = username.split('.');
        for(var i = 0; i < _user_parts.length; i++){
            if (!gmailUserPart.test(_user_parts[i])) return false;
        }
    }
    if (!_isByteLength.default(user, {
        max: 64
    }) || !_isByteLength.default(domain, {
        max: 254
    })) return false;
    if (!_isFQDN.default(domain, {
        require_tld: options.require_tld
    })) {
        if (!options.allow_ip_domain) return false;
        if (!_isIP.default(domain)) {
            if (!domain.startsWith('[') || !domain.endsWith(']')) return false;
            var noBracketdomain = domain.substr(1, domain.length - 2);
            if (noBracketdomain.length === 0 || !_isIP.default(noBracketdomain)) return false;
        }
    }
    if (user[0] === '"') {
        user = user.slice(1, user.length - 1);
        return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);
    }
    var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;
    var user_parts = user.split('.');
    for(var _i = 0; _i < user_parts.length; _i++){
        if (!pattern.test(user_parts[_i])) return false;
    }
    return true;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq","./util/merge":"9Aa5p","./isByteLength":"d3pdl","./isFQDN":"iz015","./isIP":"8rjH6"}],"9Aa5p":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = merge;
function merge() {
    var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
    };
    var defaults = arguments.length > 1 ? arguments[1] : undefined;
    for(var key in defaults)if (typeof obj[key] === 'undefined') obj[key] = defaults[key];
    return obj;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{}],"d3pdl":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isByteLength;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _typeof(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") _typeof = function _typeof1(obj1) {
        return typeof obj1;
    };
    else _typeof = function _typeof2(obj1) {
        return obj1 && typeof Symbol === "function" && obj1.constructor === Symbol && obj1 !== Symbol.prototype ? "symbol" : typeof obj1;
    };
    return _typeof(obj);
}
/* eslint-disable prefer-rest-params */ function isByteLength(str, options) {
    _assertString.default(str);
    var min;
    var max;
    if (_typeof(options) === 'object') {
        min = options.min || 0;
        max = options.max;
    } else {
        // backwards compatibility: isByteLength(str, min [, max])
        min = arguments[1];
        max = arguments[2];
    }
    var len = encodeURI(str).split(/%..|./).length - 1;
    return len >= min && (typeof max === 'undefined' || len <= max);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"iz015":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isFQDN;
var _assertString = _interopRequireDefault(require("./util/assertString"));
var _merge = _interopRequireDefault(require("./util/merge"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var default_fqdn_options = {
    require_tld: true,
    allow_underscores: false,
    allow_trailing_dot: false
};
function isFQDN(str, options) {
    _assertString.default(str);
    options = _merge.default(options, default_fqdn_options);
    /* Remove the optional trailing dot before checking validity */ if (options.allow_trailing_dot && str[str.length - 1] === '.') str = str.substring(0, str.length - 1);
    var parts = str.split('.');
    for(var i = 0; i < parts.length; i++){
        if (parts[i].length > 63) return false;
    }
    if (options.require_tld) {
        var tld = parts.pop();
        if (!parts.length || !/^([a-z\u00a1-\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) return false;
         // disallow spaces
        if (/[\s\u2002-\u200B\u202F\u205F\u3000\uFEFF\uDB40\uDC20]/.test(tld)) return false;
    }
    for(var part, _i = 0; _i < parts.length; _i++){
        part = parts[_i];
        if (options.allow_underscores) part = part.replace(/_/g, '');
        if (!/^[a-z\u00a1-\uffff0-9-]+$/i.test(part)) return false;
         // disallow full-width chars
        if (/[\uff01-\uff5e]/.test(part)) return false;
        if (part[0] === '-' || part[part.length - 1] === '-') return false;
    }
    return true;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq","./util/merge":"9Aa5p"}],"8rjH6":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isIP;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var ipv4Maybe = /^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})$/;
var ipv6Block = /^[0-9A-F]{1,4}$/i;
function isIP(str) {
    var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
    _assertString.default(str);
    version = String(version);
    if (!version) return isIP(str, 4) || isIP(str, 6);
    else if (version === '4') {
        if (!ipv4Maybe.test(str)) return false;
        var parts = str.split('.').sort(function(a, b) {
            return a - b;
        });
        return parts[3] <= 255;
    } else if (version === '6') {
        var blocks = str.split(':');
        var foundOmissionBlock = false; // marker to indicate ::
        // At least some OS accept the last 32 bits of an IPv6 address
        // (i.e. 2 of the blocks) in IPv4 notation, and RFC 3493 says
        // that '::ffff:a.b.c.d' is valid for IPv4-mapped IPv6 addresses,
        // and '::a.b.c.d' is deprecated, but also valid.
        var foundIPv4TransitionBlock = isIP(blocks[blocks.length - 1], 4);
        var expectedNumberOfBlocks = foundIPv4TransitionBlock ? 7 : 8;
        if (blocks.length > expectedNumberOfBlocks) return false;
         // initial or final ::
        if (str === '::') return true;
        else if (str.substr(0, 2) === '::') {
            blocks.shift();
            blocks.shift();
            foundOmissionBlock = true;
        } else if (str.substr(str.length - 2) === '::') {
            blocks.pop();
            blocks.pop();
            foundOmissionBlock = true;
        }
        for(var i = 0; i < blocks.length; ++i){
            // test for a :: which can not be at the string start/end
            // since those cases have been handled above
            if (blocks[i] === '' && i > 0 && i < blocks.length - 1) {
                if (foundOmissionBlock) return false; // multiple :: in address
                foundOmissionBlock = true;
            } else if (foundIPv4TransitionBlock && i === blocks.length - 1) ;
            else if (!ipv6Block.test(blocks[i])) return false;
        }
        if (foundOmissionBlock) return blocks.length >= 1;
        return blocks.length === expectedNumberOfBlocks;
    }
    return false;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"4t5WK":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isURL;
var _assertString = _interopRequireDefault(require("./util/assertString"));
var _isFQDN = _interopRequireDefault(require("./isFQDN"));
var _isIP = _interopRequireDefault(require("./isIP"));
var _merge = _interopRequireDefault(require("./util/merge"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var default_url_options = {
    protocols: [
        'http',
        'https',
        'ftp'
    ],
    require_tld: true,
    require_protocol: false,
    require_host: true,
    require_valid_protocol: true,
    allow_underscores: false,
    allow_trailing_dot: false,
    allow_protocol_relative_urls: false
};
var wrapped_ipv6 = /^\[([^\]]+)\](?::([0-9]+))?$/;
function isRegExp(obj) {
    return Object.prototype.toString.call(obj) === '[object RegExp]';
}
function checkHost(host, matches) {
    for(var i = 0; i < matches.length; i++){
        var match = matches[i];
        if (host === match || isRegExp(match) && match.test(host)) return true;
    }
    return false;
}
function isURL(url, options) {
    _assertString.default(url);
    if (!url || url.length >= 2083 || /[\s<>]/.test(url)) return false;
    if (url.indexOf('mailto:') === 0) return false;
    options = _merge.default(options, default_url_options);
    var protocol, auth, host, hostname, port, port_str, split, ipv6;
    split = url.split('#');
    url = split.shift();
    split = url.split('?');
    url = split.shift();
    split = url.split('://');
    if (split.length > 1) {
        protocol = split.shift().toLowerCase();
        if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) return false;
    } else if (options.require_protocol) return false;
    else if (url.substr(0, 2) === '//') {
        if (!options.allow_protocol_relative_urls) return false;
        split[0] = url.substr(2);
    }
    url = split.join('://');
    if (url === '') return false;
    split = url.split('/');
    url = split.shift();
    if (url === '' && !options.require_host) return true;
    split = url.split('@');
    if (split.length > 1) {
        if (options.disallow_auth) return false;
        auth = split.shift();
        if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) return false;
    }
    hostname = split.join('@');
    port_str = null;
    ipv6 = null;
    var ipv6_match = hostname.match(wrapped_ipv6);
    if (ipv6_match) {
        host = '';
        ipv6 = ipv6_match[1];
        port_str = ipv6_match[2] || null;
    } else {
        split = hostname.split(':');
        host = split.shift();
        if (split.length) port_str = split.join(':');
    }
    if (port_str !== null) {
        port = parseInt(port_str, 10);
        if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) return false;
    }
    if (!_isIP.default(host) && !_isFQDN.default(host, options) && (!ipv6 || !_isIP.default(ipv6, 6))) return false;
    host = host || ipv6;
    if (options.host_whitelist && !checkHost(host, options.host_whitelist)) return false;
    if (options.host_blacklist && checkHost(host, options.host_blacklist)) return false;
    return true;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq","./isFQDN":"iz015","./isIP":"8rjH6","./util/merge":"9Aa5p"}],"gbR2l":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isMACAddress;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var macAddress = /^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$/;
var macAddressNoColons = /^([0-9a-fA-F]){12}$/;
function isMACAddress(str, options) {
    _assertString.default(str);
    if (options && options.no_colons) return macAddressNoColons.test(str);
    return macAddress.test(str);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"fFeDm":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isIPRange;
var _assertString = _interopRequireDefault(require("./util/assertString"));
var _isIP = _interopRequireDefault(require("./isIP"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var subnetMaybe = /^\d{1,2}$/;
function isIPRange(str) {
    _assertString.default(str);
    var parts = str.split('/'); // parts[0] -> ip, parts[1] -> subnet
    if (parts.length !== 2) return false;
    if (!subnetMaybe.test(parts[1])) return false;
     // Disallow preceding 0 i.e. 01, 02, ...
    if (parts[1].length > 1 && parts[1].startsWith('0')) return false;
    return _isIP.default(parts[0], 4) && parts[1] <= 32 && parts[1] >= 0;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq","./isIP":"8rjH6"}],"6veW0":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isBoolean;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function isBoolean(str) {
    _assertString.default(str);
    return [
        'true',
        'false',
        '1',
        '0'
    ].indexOf(str) >= 0;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"92f4P":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isAlpha;
exports.locales = void 0;
var _assertString = _interopRequireDefault(require("./util/assertString"));
var _alpha = require("./alpha");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function isAlpha(str) {
    var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';
    _assertString.default(str);
    if (locale in _alpha.alpha) return _alpha.alpha[locale].test(str);
    throw new Error("Invalid locale '".concat(locale, "'"));
}
var locales = Object.keys(_alpha.alpha);
exports.locales = locales;

},{"./util/assertString":"7omJq","./alpha":"95sZQ"}],"95sZQ":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.commaDecimal = exports.dotDecimal = exports.arabicLocales = exports.englishLocales = exports.decimal = exports.alphanumeric = exports.alpha = void 0;
var alpha = {
    'en-US': /^[A-Z]+$/i,
    'bg-BG': /^[А-Я]+$/i,
    'cs-CZ': /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,
    'da-DK': /^[A-ZÆØÅ]+$/i,
    'de-DE': /^[A-ZÄÖÜß]+$/i,
    'el-GR': /^[Α-ω]+$/i,
    'es-ES': /^[A-ZÁÉÍÑÓÚÜ]+$/i,
    'fr-FR': /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,
    'it-IT': /^[A-ZÀÉÈÌÎÓÒÙ]+$/i,
    'nb-NO': /^[A-ZÆØÅ]+$/i,
    'nl-NL': /^[A-ZÁÉËÏÓÖÜÚ]+$/i,
    'nn-NO': /^[A-ZÆØÅ]+$/i,
    'hu-HU': /^[A-ZÁÉÍÓÖŐÚÜŰ]+$/i,
    'pl-PL': /^[A-ZĄĆĘŚŁŃÓŻŹ]+$/i,
    'pt-PT': /^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,
    'ru-RU': /^[А-ЯЁ]+$/i,
    'sl-SI': /^[A-ZČĆĐŠŽ]+$/i,
    'sk-SK': /^[A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,
    'sr-RS@latin': /^[A-ZČĆŽŠĐ]+$/i,
    'sr-RS': /^[А-ЯЂЈЉЊЋЏ]+$/i,
    'sv-SE': /^[A-ZÅÄÖ]+$/i,
    'tr-TR': /^[A-ZÇĞİıÖŞÜ]+$/i,
    'uk-UA': /^[А-ЩЬЮЯЄIЇҐі]+$/i,
    'ku-IQ': /^[ئابپتجچحخدرڕزژسشعغفڤقکگلڵمنوۆھەیێيطؤثآإأكضصةظذ]+$/i,
    ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/
};
exports.alpha = alpha;
var alphanumeric = {
    'en-US': /^[0-9A-Z]+$/i,
    'bg-BG': /^[0-9А-Я]+$/i,
    'cs-CZ': /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,
    'da-DK': /^[0-9A-ZÆØÅ]+$/i,
    'de-DE': /^[0-9A-ZÄÖÜß]+$/i,
    'el-GR': /^[0-9Α-ω]+$/i,
    'es-ES': /^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,
    'fr-FR': /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,
    'it-IT': /^[0-9A-ZÀÉÈÌÎÓÒÙ]+$/i,
    'hu-HU': /^[0-9A-ZÁÉÍÓÖŐÚÜŰ]+$/i,
    'nb-NO': /^[0-9A-ZÆØÅ]+$/i,
    'nl-NL': /^[0-9A-ZÁÉËÏÓÖÜÚ]+$/i,
    'nn-NO': /^[0-9A-ZÆØÅ]+$/i,
    'pl-PL': /^[0-9A-ZĄĆĘŚŁŃÓŻŹ]+$/i,
    'pt-PT': /^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,
    'ru-RU': /^[0-9А-ЯЁ]+$/i,
    'sl-SI': /^[0-9A-ZČĆĐŠŽ]+$/i,
    'sk-SK': /^[0-9A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,
    'sr-RS@latin': /^[0-9A-ZČĆŽŠĐ]+$/i,
    'sr-RS': /^[0-9А-ЯЂЈЉЊЋЏ]+$/i,
    'sv-SE': /^[0-9A-ZÅÄÖ]+$/i,
    'tr-TR': /^[0-9A-ZÇĞİıÖŞÜ]+$/i,
    'uk-UA': /^[0-9А-ЩЬЮЯЄIЇҐі]+$/i,
    'ku-IQ': /^[٠١٢٣٤٥٦٧٨٩0-9ئابپتجچحخدرڕزژسشعغفڤقکگلڵمنوۆھەیێيطؤثآإأكضصةظذ]+$/i,
    ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/
};
exports.alphanumeric = alphanumeric;
var decimal = {
    'en-US': '.',
    ar: '٫'
};
exports.decimal = decimal;
var englishLocales = [
    'AU',
    'GB',
    'HK',
    'IN',
    'NZ',
    'ZA',
    'ZM'
];
exports.englishLocales = englishLocales;
for(var locale, i = 0; i < englishLocales.length; i++){
    locale = "en-".concat(englishLocales[i]);
    alpha[locale] = alpha['en-US'];
    alphanumeric[locale] = alphanumeric['en-US'];
    decimal[locale] = decimal['en-US'];
} // Source: http://www.localeplanet.com/java/
var arabicLocales = [
    'AE',
    'BH',
    'DZ',
    'EG',
    'IQ',
    'JO',
    'KW',
    'LB',
    'LY',
    'MA',
    'QM',
    'QA',
    'SA',
    'SD',
    'SY',
    'TN',
    'YE'
];
exports.arabicLocales = arabicLocales;
for(var _locale, _i = 0; _i < arabicLocales.length; _i++){
    _locale = "ar-".concat(arabicLocales[_i]);
    alpha[_locale] = alpha.ar;
    alphanumeric[_locale] = alphanumeric.ar;
    decimal[_locale] = decimal.ar;
} // Source: https://en.wikipedia.org/wiki/Decimal_mark
var dotDecimal = [];
exports.dotDecimal = dotDecimal;
var commaDecimal = [
    'bg-BG',
    'cs-CZ',
    'da-DK',
    'de-DE',
    'el-GR',
    'es-ES',
    'fr-FR',
    'it-IT',
    'ku-IQ',
    'hu-HU',
    'nb-NO',
    'nn-NO',
    'nl-NL',
    'pl-PL',
    'pt-PT',
    'ru-RU',
    'sl-SI',
    'sr-RS@latin',
    'sr-RS',
    'sv-SE',
    'tr-TR',
    'uk-UA'
];
exports.commaDecimal = commaDecimal;
for(var _i2 = 0; _i2 < dotDecimal.length; _i2++)decimal[dotDecimal[_i2]] = decimal['en-US'];
for(var _i3 = 0; _i3 < commaDecimal.length; _i3++)decimal[commaDecimal[_i3]] = ',';
alpha['pt-BR'] = alpha['pt-PT'];
alphanumeric['pt-BR'] = alphanumeric['pt-PT'];
decimal['pt-BR'] = decimal['pt-PT']; // see #862
alpha['pl-Pl'] = alpha['pl-PL'];
alphanumeric['pl-Pl'] = alphanumeric['pl-PL'];
decimal['pl-Pl'] = decimal['pl-PL'];

},{}],"jDCJM":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isAlphanumeric;
exports.locales = void 0;
var _assertString = _interopRequireDefault(require("./util/assertString"));
var _alpha = require("./alpha");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function isAlphanumeric(str) {
    var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';
    _assertString.default(str);
    if (locale in _alpha.alphanumeric) return _alpha.alphanumeric[locale].test(str);
    throw new Error("Invalid locale '".concat(locale, "'"));
}
var locales = Object.keys(_alpha.alphanumeric);
exports.locales = locales;

},{"./util/assertString":"7omJq","./alpha":"95sZQ"}],"eCfNx":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isNumeric;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var numeric = /^[+-]?([0-9]*[.])?[0-9]+$/;
var numericNoSymbols = /^[0-9]+$/;
function isNumeric(str, options) {
    _assertString.default(str);
    if (options && options.no_symbols) return numericNoSymbols.test(str);
    return numeric.test(str);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"g1u1F":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isPort;
var _isInt = _interopRequireDefault(require("./isInt"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function isPort(str) {
    return _isInt.default(str, {
        min: 0,
        max: 65535
    });
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./isInt":"gQYHf"}],"gQYHf":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isInt;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/;
var intLeadingZeroes = /^[-+]?[0-9]+$/;
function isInt(str, options) {
    _assertString.default(str);
    options = options || {
    }; // Get the regex to use for testing, based on whether
    // leading zeroes are allowed or not.
    var regex = options.hasOwnProperty('allow_leading_zeroes') && !options.allow_leading_zeroes ? int : intLeadingZeroes; // Check min/max/lt/gt
    var minCheckPassed = !options.hasOwnProperty('min') || str >= options.min;
    var maxCheckPassed = !options.hasOwnProperty('max') || str <= options.max;
    var ltCheckPassed = !options.hasOwnProperty('lt') || str < options.lt;
    var gtCheckPassed = !options.hasOwnProperty('gt') || str > options.gt;
    return regex.test(str) && minCheckPassed && maxCheckPassed && ltCheckPassed && gtCheckPassed;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"egRbE":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isLowercase;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function isLowercase(str) {
    _assertString.default(str);
    return str === str.toLowerCase();
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"31XWT":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isUppercase;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function isUppercase(str) {
    _assertString.default(str);
    return str === str.toUpperCase();
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"6jffw":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isAscii;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
/* eslint-disable no-control-regex */ var ascii = /^[\x00-\x7F]+$/;
/* eslint-enable no-control-regex */ function isAscii(str) {
    _assertString.default(str);
    return ascii.test(str);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"6gpN9":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isFullWidth;
exports.fullWidth = void 0;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var fullWidth = /[^\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/;
exports.fullWidth = fullWidth;
function isFullWidth(str) {
    _assertString.default(str);
    return fullWidth.test(str);
}

},{"./util/assertString":"7omJq"}],"hetQZ":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isHalfWidth;
exports.halfWidth = void 0;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var halfWidth = /[\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/;
exports.halfWidth = halfWidth;
function isHalfWidth(str) {
    _assertString.default(str);
    return halfWidth.test(str);
}

},{"./util/assertString":"7omJq"}],"b6bKR":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isVariableWidth;
var _assertString = _interopRequireDefault(require("./util/assertString"));
var _isFullWidth = require("./isFullWidth");
var _isHalfWidth = require("./isHalfWidth");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function isVariableWidth(str) {
    _assertString.default(str);
    return _isFullWidth.fullWidth.test(str) && _isHalfWidth.halfWidth.test(str);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq","./isFullWidth":"6gpN9","./isHalfWidth":"hetQZ"}],"amGu0":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isMultibyte;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
/* eslint-disable no-control-regex */ var multibyte = /[^\x00-\x7F]/;
/* eslint-enable no-control-regex */ function isMultibyte(str) {
    _assertString.default(str);
    return multibyte.test(str);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"ckEqG":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isSurrogatePair;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var surrogatePair = /[\uD800-\uDBFF][\uDC00-\uDFFF]/;
function isSurrogatePair(str) {
    _assertString.default(str);
    return surrogatePair.test(str);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"lIu1h":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isFloat;
exports.locales = void 0;
var _assertString = _interopRequireDefault(require("./util/assertString"));
var _alpha = require("./alpha");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function isFloat(str, options) {
    _assertString.default(str);
    options = options || {
    };
    var float = new RegExp("^(?:[-+])?(?:[0-9]+)?(?:\\".concat(options.locale ? _alpha.decimal[options.locale] : '.', "[0-9]*)?(?:[eE][\\+\\-]?(?:[0-9]+))?$"));
    if (str === '' || str === '.' || str === '-' || str === '+') return false;
    var value = parseFloat(str.replace(',', '.'));
    return float.test(str) && (!options.hasOwnProperty('min') || value >= options.min) && (!options.hasOwnProperty('max') || value <= options.max) && (!options.hasOwnProperty('lt') || value < options.lt) && (!options.hasOwnProperty('gt') || value > options.gt);
}
var locales = Object.keys(_alpha.decimal);
exports.locales = locales;

},{"./util/assertString":"7omJq","./alpha":"95sZQ"}],"jCgQS":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isDecimal;
var _merge = _interopRequireDefault(require("./util/merge"));
var _assertString = _interopRequireDefault(require("./util/assertString"));
var _includes = _interopRequireDefault(require("./util/includes"));
var _alpha = require("./alpha");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function decimalRegExp(options) {
    var regExp = new RegExp("^[-+]?([0-9]+)?(\\".concat(_alpha.decimal[options.locale], "[0-9]{").concat(options.decimal_digits, "})").concat(options.force_decimal ? '' : '?', "$"));
    return regExp;
}
var default_decimal_options = {
    force_decimal: false,
    decimal_digits: '1,',
    locale: 'en-US'
};
var blacklist = [
    '',
    '-',
    '+'
];
function isDecimal(str, options) {
    _assertString.default(str);
    options = _merge.default(options, default_decimal_options);
    if (options.locale in _alpha.decimal) return !_includes.default(blacklist, str.replace(/ /g, '')) && decimalRegExp(options).test(str);
    throw new Error("Invalid locale '".concat(options.locale, "'"));
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/merge":"9Aa5p","./util/assertString":"7omJq","./util/includes":"80ePq","./alpha":"95sZQ"}],"80ePq":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var includes = function includes1(arr, val) {
    return arr.some(function(arrVal) {
        return val === arrVal;
    });
};
var _default = includes;
exports.default = _default;
module.exports = exports.default;
module.exports.default = exports.default;

},{}],"kiuY6":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isHexadecimal;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var hexadecimal = /^[0-9A-F]+$/i;
function isHexadecimal(str) {
    _assertString.default(str);
    return hexadecimal.test(str);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"inebO":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isDivisibleBy;
var _assertString = _interopRequireDefault(require("./util/assertString"));
var _toFloat = _interopRequireDefault(require("./toFloat"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function isDivisibleBy(str, num) {
    _assertString.default(str);
    return _toFloat.default(str) % parseInt(num, 10) === 0;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq","./toFloat":"9AToI"}],"8nZWl":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isHexColor;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var hexcolor = /^#?([0-9A-F]{3}|[0-9A-F]{6})$/i;
function isHexColor(str) {
    _assertString.default(str);
    return hexcolor.test(str);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"4VdRz":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isISRC;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// see http://isrc.ifpi.org/en/isrc-standard/code-syntax
var isrc = /^[A-Z]{2}[0-9A-Z]{3}\d{2}\d{5}$/;
function isISRC(str) {
    _assertString.default(str);
    return isrc.test(str);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"8ubDF":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isMD5;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var md5 = /^[a-f0-9]{32}$/;
function isMD5(str) {
    _assertString.default(str);
    return md5.test(str);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"hWDsm":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isHash;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var lengths = {
    md5: 32,
    md4: 32,
    sha1: 40,
    sha256: 64,
    sha384: 96,
    sha512: 128,
    ripemd128: 32,
    ripemd160: 40,
    tiger128: 32,
    tiger160: 40,
    tiger192: 48,
    crc32: 8,
    crc32b: 8
};
function isHash(str, algorithm) {
    _assertString.default(str);
    var hash = new RegExp("^[a-f0-9]{".concat(lengths[algorithm], "}$"));
    return hash.test(str);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"jFITj":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isJWT;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var jwt = /^([A-Za-z0-9\-_~+\/]+[=]{0,2})\.([A-Za-z0-9\-_~+\/]+[=]{0,2})(?:\.([A-Za-z0-9\-_~+\/]+[=]{0,2}))?$/;
function isJWT(str) {
    _assertString.default(str);
    return jwt.test(str);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"A6EFP":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isJSON;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _typeof(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") _typeof = function _typeof1(obj1) {
        return typeof obj1;
    };
    else _typeof = function _typeof2(obj1) {
        return obj1 && typeof Symbol === "function" && obj1.constructor === Symbol && obj1 !== Symbol.prototype ? "symbol" : typeof obj1;
    };
    return _typeof(obj);
}
function isJSON(str) {
    _assertString.default(str);
    try {
        var obj = JSON.parse(str);
        return !!obj && _typeof(obj) === 'object';
    } catch (e) {
    /* ignore */ }
    return false;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"8xwMs":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isEmpty;
var _assertString = _interopRequireDefault(require("./util/assertString"));
var _merge = _interopRequireDefault(require("./util/merge"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var default_is_empty_options = {
    ignore_whitespace: false
};
function isEmpty(str, options) {
    _assertString.default(str);
    options = _merge.default(options, default_is_empty_options);
    return (options.ignore_whitespace ? str.trim().length : str.length) === 0;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq","./util/merge":"9Aa5p"}],"hPC6s":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isLength;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _typeof(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") _typeof = function _typeof1(obj1) {
        return typeof obj1;
    };
    else _typeof = function _typeof2(obj1) {
        return obj1 && typeof Symbol === "function" && obj1.constructor === Symbol && obj1 !== Symbol.prototype ? "symbol" : typeof obj1;
    };
    return _typeof(obj);
}
/* eslint-disable prefer-rest-params */ function isLength(str, options) {
    _assertString.default(str);
    var min;
    var max;
    if (_typeof(options) === 'object') {
        min = options.min || 0;
        max = options.max;
    } else {
        // backwards compatibility: isLength(str, min [, max])
        min = arguments[1];
        max = arguments[2];
    }
    var surrogatePairs = str.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g) || [];
    var len = str.length - surrogatePairs.length;
    return len >= min && (typeof max === 'undefined' || len <= max);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"eca4r":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isUUID;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var uuid = {
    3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,
    4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
    5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
    all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i
};
function isUUID(str) {
    var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'all';
    _assertString.default(str);
    var pattern = uuid[version];
    return pattern && pattern.test(str);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"1fcbX":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isMongoId;
var _assertString = _interopRequireDefault(require("./util/assertString"));
var _isHexadecimal = _interopRequireDefault(require("./isHexadecimal"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function isMongoId(str) {
    _assertString.default(str);
    return _isHexadecimal.default(str) && str.length === 24;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq","./isHexadecimal":"kiuY6"}],"2zc9Q":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isAfter;
var _assertString = _interopRequireDefault(require("./util/assertString"));
var _toDate = _interopRequireDefault(require("./toDate"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function isAfter(str) {
    var date = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : String(new Date());
    _assertString.default(str);
    var comparison = _toDate.default(date);
    var original = _toDate.default(str);
    return !!(original && comparison && original > comparison);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq","./toDate":"kgn40"}],"40h4W":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isBefore;
var _assertString = _interopRequireDefault(require("./util/assertString"));
var _toDate = _interopRequireDefault(require("./toDate"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function isBefore(str) {
    var date = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : String(new Date());
    _assertString.default(str);
    var comparison = _toDate.default(date);
    var original = _toDate.default(str);
    return !!(original && comparison && original < comparison);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq","./toDate":"kgn40"}],"13HSl":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isIn;
var _assertString = _interopRequireDefault(require("./util/assertString"));
var _toString = _interopRequireDefault(require("./util/toString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _typeof(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") _typeof = function _typeof1(obj1) {
        return typeof obj1;
    };
    else _typeof = function _typeof2(obj1) {
        return obj1 && typeof Symbol === "function" && obj1.constructor === Symbol && obj1 !== Symbol.prototype ? "symbol" : typeof obj1;
    };
    return _typeof(obj);
}
function isIn(str, options) {
    _assertString.default(str);
    var i;
    if (Object.prototype.toString.call(options) === '[object Array]') {
        var array = [];
        for(i in options)if (({
        }).hasOwnProperty.call(options, i)) array[i] = _toString.default(options[i]);
        return array.indexOf(str) >= 0;
    } else if (_typeof(options) === 'object') return options.hasOwnProperty(str);
    else if (options && typeof options.indexOf === 'function') return options.indexOf(str) >= 0;
    return false;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq","./util/toString":"4GXXg"}],"dnICk":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isCreditCard;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
/* eslint-disable max-len */ var creditCard = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11}|6[27][0-9]{14})$/;
/* eslint-enable max-len */ function isCreditCard(str) {
    _assertString.default(str);
    var sanitized = str.replace(/[- ]+/g, '');
    if (!creditCard.test(sanitized)) return false;
    var sum = 0;
    var digit;
    var tmpNum;
    var shouldDouble;
    for(var i = sanitized.length - 1; i >= 0; i--){
        digit = sanitized.substring(i, i + 1);
        tmpNum = parseInt(digit, 10);
        if (shouldDouble) {
            tmpNum *= 2;
            if (tmpNum >= 10) sum += tmpNum % 10 + 1;
            else sum += tmpNum;
        } else sum += tmpNum;
        shouldDouble = !shouldDouble;
    }
    return !!(sum % 10 === 0 ? sanitized : false);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"cOsAV":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isIdentityCard;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var validators = {
    ES: function ES(str) {
        _assertString.default(str);
        var DNI = /^[0-9X-Z][0-9]{7}[TRWAGMYFPDXBNJZSQVHLCKE]$/;
        var charsValue = {
            X: 0,
            Y: 1,
            Z: 2
        };
        var controlDigits = [
            'T',
            'R',
            'W',
            'A',
            'G',
            'M',
            'Y',
            'F',
            'P',
            'D',
            'X',
            'B',
            'N',
            'J',
            'Z',
            'S',
            'Q',
            'V',
            'H',
            'L',
            'C',
            'K',
            'E'
        ]; // sanitize user input
        var sanitized = str.trim().toUpperCase(); // validate the data structure
        if (!DNI.test(sanitized)) return false;
         // validate the control digit
        var number = sanitized.slice(0, -1).replace(/[X,Y,Z]/g, function(char) {
            return charsValue[char];
        });
        return sanitized.endsWith(controlDigits[number % 23]);
    }
};
function isIdentityCard(str) {
    var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'any';
    _assertString.default(str);
    if (locale in validators) return validators[locale](str);
    else if (locale === 'any') {
        for(var key in validators)if (validators.hasOwnProperty(key)) {
            var validator = validators[key];
            if (validator(str)) return true;
        }
        return false;
    }
    throw new Error("Invalid locale '".concat(locale, "'"));
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"2q8ko":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isISIN;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;
function isISIN(str) {
    _assertString.default(str);
    if (!isin.test(str)) return false;
    var checksumStr = str.replace(/[A-Z]/g, function(character) {
        return parseInt(character, 36);
    });
    var sum = 0;
    var digit;
    var tmpNum;
    var shouldDouble = true;
    for(var i = checksumStr.length - 2; i >= 0; i--){
        digit = checksumStr.substring(i, i + 1);
        tmpNum = parseInt(digit, 10);
        if (shouldDouble) {
            tmpNum *= 2;
            if (tmpNum >= 10) sum += tmpNum + 1;
            else sum += tmpNum;
        } else sum += tmpNum;
        shouldDouble = !shouldDouble;
    }
    return parseInt(str.substr(str.length - 1), 10) === (10000 - sum) % 10;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"80Tjy":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isISBN;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var isbn10Maybe = /^(?:[0-9]{9}X|[0-9]{10})$/;
var isbn13Maybe = /^(?:[0-9]{13})$/;
var factor = [
    1,
    3
];
function isISBN(str) {
    var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
    _assertString.default(str);
    version = String(version);
    if (!version) return isISBN(str, 10) || isISBN(str, 13);
    var sanitized = str.replace(/[\s-]+/g, '');
    var checksum = 0;
    var i;
    if (version === '10') {
        if (!isbn10Maybe.test(sanitized)) return false;
        for(i = 0; i < 9; i++)checksum += (i + 1) * sanitized.charAt(i);
        if (sanitized.charAt(9) === 'X') checksum += 100;
        else checksum += 10 * sanitized.charAt(9);
        if (checksum % 11 === 0) return !!sanitized;
    } else if (version === '13') {
        if (!isbn13Maybe.test(sanitized)) return false;
        for(i = 0; i < 12; i++)checksum += factor[i % 2] * sanitized.charAt(i);
        if (sanitized.charAt(12) - (10 - checksum % 10) % 10 === 0) return !!sanitized;
    }
    return false;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"hUwdQ":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isISSN;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var issn = '^\\d{4}-?\\d{3}[\\dX]$';
function isISSN(str) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
    };
    _assertString.default(str);
    var testIssn = issn;
    testIssn = options.require_hyphen ? testIssn.replace('?', '') : testIssn;
    testIssn = options.case_sensitive ? new RegExp(testIssn) : new RegExp(testIssn, 'i');
    if (!testIssn.test(str)) return false;
    var digits = str.replace('-', '').toUpperCase();
    var checksum = 0;
    for(var i = 0; i < digits.length; i++){
        var digit = digits[i];
        checksum += (digit === 'X' ? 10 : +digit) * (8 - i);
    }
    return checksum % 11 === 0;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"58e2g":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isMobilePhone;
exports.locales = void 0;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
/* eslint-disable max-len */ var phones = {
    'ar-AE': /^((\+?971)|0)?5[024568]\d{7}$/,
    'ar-DZ': /^(\+?213|0)(5|6|7)\d{8}$/,
    'ar-EG': /^((\+?20)|0)?1[012]\d{8}$/,
    'ar-IQ': /^(\+?964|0)?7[0-9]\d{8}$/,
    'ar-JO': /^(\+?962|0)?7[789]\d{7}$/,
    'ar-KW': /^(\+?965)[569]\d{7}$/,
    'ar-SA': /^(!?(\+?966)|0)?5\d{8}$/,
    'ar-SY': /^(!?(\+?963)|0)?9\d{8}$/,
    'ar-TN': /^(\+?216)?[2459]\d{7}$/,
    'be-BY': /^(\+?375)?(24|25|29|33|44)\d{7}$/,
    'bg-BG': /^(\+?359|0)?8[789]\d{7}$/,
    'bn-BD': /\+?(88)?0?1[356789][0-9]{8}\b/,
    'cs-CZ': /^(\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,
    'da-DK': /^(\+?45)?\s?\d{2}\s?\d{2}\s?\d{2}\s?\d{2}$/,
    'de-DE': /^(\+49)?0?1(5[0-25-9]\d|6([23]|0\d?)|7([0-57-9]|6\d))\d{7}$/,
    'el-GR': /^(\+?30|0)?(69\d{8})$/,
    'en-AU': /^(\+?61|0)4\d{8}$/,
    'en-GB': /^(\+?44|0)7\d{9}$/,
    'en-GH': /^(\+233|0)(20|50|24|54|27|57|26|56|23|28)\d{7}$/,
    'en-HK': /^(\+?852\-?)?[456789]\d{3}\-?\d{4}$/,
    'en-IE': /^(\+?353|0)8[356789]\d{7}$/,
    'en-IN': /^(\+?91|0)?[6789]\d{9}$/,
    'en-KE': /^(\+?254|0)?[7]\d{8}$/,
    'en-MU': /^(\+?230|0)?\d{8}$/,
    'en-NG': /^(\+?234|0)?[789]\d{9}$/,
    'en-NZ': /^(\+?64|0)[28]\d{7,9}$/,
    'en-PK': /^((\+92)|(0092))-{0,1}\d{3}-{0,1}\d{7}$|^\d{11}$|^\d{4}-\d{7}$/,
    'en-RW': /^(\+?250|0)?[7]\d{8}$/,
    'en-SG': /^(\+65)?[89]\d{7}$/,
    'en-TZ': /^(\+?255|0)?[67]\d{8}$/,
    'en-UG': /^(\+?256|0)?[7]\d{8}$/,
    'en-US': /^((\+1|1)?( |-)?)?(\([2-9][0-9]{2}\)|[2-9][0-9]{2})( |-)?([2-9][0-9]{2}( |-)?[0-9]{4})$/,
    'en-ZA': /^(\+?27|0)\d{9}$/,
    'en-ZM': /^(\+?26)?09[567]\d{7}$/,
    'es-ES': /^(\+?34)?(6\d{1}|7[1234])\d{7}$/,
    'es-MX': /^(\+?52)?(1|01)?\d{10,11}$/,
    'es-UY': /^(\+598|0)9[1-9][\d]{6}$/,
    'et-EE': /^(\+?372)?\s?(5|8[1-4])\s?([0-9]\s?){6,7}$/,
    'fa-IR': /^(\+?98[\-\s]?|0)9[0-39]\d[\-\s]?\d{3}[\-\s]?\d{4}$/,
    'fi-FI': /^(\+?358|0)\s?(4(0|1|2|4|5|6)?|50)\s?(\d\s?){4,8}\d$/,
    'fo-FO': /^(\+?298)?\s?\d{2}\s?\d{2}\s?\d{2}$/,
    'fr-FR': /^(\+?33|0)[67]\d{8}$/,
    'he-IL': /^(\+972|0)([23489]|5[012345689]|77)[1-9]\d{6}$/,
    'hu-HU': /^(\+?36)(20|30|70)\d{7}$/,
    'id-ID': /^(\+?62|0)8(1[123456789]|2[1238]|3[1238]|5[12356789]|7[78]|9[56789]|8[123456789])([\s?|\d]{5,11})$/,
    'it-IT': /^(\+?39)?\s?3\d{2} ?\d{6,7}$/,
    'ja-JP': /^(\+?81|0)[789]0[ \-]?[1-9]\d{2}[ \-]?\d{5}$/,
    'kk-KZ': /^(\+?7|8)?7\d{9}$/,
    'kl-GL': /^(\+?299)?\s?\d{2}\s?\d{2}\s?\d{2}$/,
    'ko-KR': /^((\+?82)[ \-]?)?0?1([0|1|6|7|8|9]{1})[ \-]?\d{3,4}[ \-]?\d{4}$/,
    'lt-LT': /^(\+370|8)\d{8}$/,
    'ms-MY': /^(\+?6?01){1}(([0145]{1}(\-|\s)?\d{7,8})|([236789]{1}(\s|\-)?\d{7}))$/,
    'nb-NO': /^(\+?47)?[49]\d{7}$/,
    'nl-BE': /^(\+?32|0)4?\d{8}$/,
    'nn-NO': /^(\+?47)?[49]\d{7}$/,
    'pl-PL': /^(\+?48)? ?[5-8]\d ?\d{3} ?\d{2} ?\d{2}$/,
    'pt-BR': /(?=^(\+?5{2}\-?|0)[1-9]{2}\-?\d{4}\-?\d{4}$)(^(\+?5{2}\-?|0)[1-9]{2}\-?[6-9]{1}\d{3}\-?\d{4}$)|(^(\+?5{2}\-?|0)[1-9]{2}\-?9[6-9]{1}\d{3}\-?\d{4}$)/,
    'pt-PT': /^(\+?351)?9[1236]\d{7}$/,
    'ro-RO': /^(\+?4?0)\s?7\d{2}(\/|\s|\.|\-)?\d{3}(\s|\.|\-)?\d{3}$/,
    'ru-RU': /^(\+?7|8)?9\d{9}$/,
    'sl-SI': /^(\+386\s?|0)(\d{1}\s?\d{3}\s?\d{2}\s?\d{2}|\d{2}\s?\d{3}\s?\d{3})$/,
    'sk-SK': /^(\+?421)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,
    'sr-RS': /^(\+3816|06)[- \d]{5,9}$/,
    'sv-SE': /^(\+?46|0)[\s\-]?7[\s\-]?[02369]([\s\-]?\d){7}$/,
    'th-TH': /^(\+66|66|0)\d{9}$/,
    'tr-TR': /^(\+?90|0)?5\d{9}$/,
    'uk-UA': /^(\+?38|8)?0\d{9}$/,
    'vi-VN': /^(\+?84|0)((3([2-9]))|(5([689]))|(7([0|6-9]))|(8([1-5]))|(9([0-9])))([0-9]{7})$/,
    'zh-CN': /^((\+|00)86)?1([358][0-9]|4[579]|66|7[0135678]|9[89])[0-9]{8}$/,
    'zh-TW': /^(\+?886\-?|0)?9\d{8}$/
};
/* eslint-enable max-len */ // aliases
phones['en-CA'] = phones['en-US'];
phones['fr-BE'] = phones['nl-BE'];
phones['zh-HK'] = phones['en-HK'];
function isMobilePhone(str, locale, options) {
    _assertString.default(str);
    if (options && options.strictMode && !str.startsWith('+')) return false;
    if (Array.isArray(locale)) return locale.some(function(key) {
        if (phones.hasOwnProperty(key)) {
            var phone = phones[key];
            if (phone.test(str)) return true;
        }
        return false;
    });
    else if (locale in phones) return phones[locale].test(str); // alias falsey locale as 'any'
    else if (!locale || locale === 'any') {
        for(var key in phones)if (phones.hasOwnProperty(key)) {
            var phone = phones[key];
            if (phone.test(str)) return true;
        }
        return false;
    }
    throw new Error("Invalid locale '".concat(locale, "'"));
}
var locales = Object.keys(phones);
exports.locales = locales;

},{"./util/assertString":"7omJq"}],"h8rbV":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isCurrency;
var _merge = _interopRequireDefault(require("./util/merge"));
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function currencyRegex(options) {
    var decimal_digits = "\\d{".concat(options.digits_after_decimal[0], "}");
    options.digits_after_decimal.forEach(function(digit, index) {
        if (index !== 0) decimal_digits = "".concat(decimal_digits, "|\\d{").concat(digit, "}");
    });
    var symbol = "(\\".concat(options.symbol.replace(/\./g, '\\.'), ")").concat(options.require_symbol ? '' : '?'), negative = '-?', whole_dollar_amount_without_sep = '[1-9]\\d*', whole_dollar_amount_with_sep = "[1-9]\\d{0,2}(\\".concat(options.thousands_separator, "\\d{3})*"), valid_whole_dollar_amounts = [
        '0',
        whole_dollar_amount_without_sep,
        whole_dollar_amount_with_sep
    ], whole_dollar_amount = "(".concat(valid_whole_dollar_amounts.join('|'), ")?"), decimal_amount = "(\\".concat(options.decimal_separator, "(").concat(decimal_digits, "))").concat(options.require_decimal ? '' : '?');
    var pattern = whole_dollar_amount + (options.allow_decimal || options.require_decimal ? decimal_amount : ''); // default is negative sign before symbol, but there are two other options (besides parens)
    if (options.allow_negatives && !options.parens_for_negatives) {
        if (options.negative_sign_after_digits) pattern += negative;
        else if (options.negative_sign_before_digits) pattern = negative + pattern;
    } // South African Rand, for example, uses R 123 (space) and R-123 (no space)
    if (options.allow_negative_sign_placeholder) pattern = "( (?!\\-))?".concat(pattern);
    else if (options.allow_space_after_symbol) pattern = " ?".concat(pattern);
    else if (options.allow_space_after_digits) pattern += '( (?!$))?';
    if (options.symbol_after_digits) pattern += symbol;
    else pattern = symbol + pattern;
    if (options.allow_negatives) {
        if (options.parens_for_negatives) pattern = "(\\(".concat(pattern, "\\)|").concat(pattern, ")");
        else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) pattern = negative + pattern;
    } // ensure there's a dollar and/or decimal amount, and that
    // it doesn't start with a space or a negative sign followed by a space
    return new RegExp("^(?!-? )(?=.*\\d)".concat(pattern, "$"));
}
var default_currency_options = {
    symbol: '$',
    require_symbol: false,
    allow_space_after_symbol: false,
    symbol_after_digits: false,
    allow_negatives: true,
    parens_for_negatives: false,
    negative_sign_before_digits: false,
    negative_sign_after_digits: false,
    allow_negative_sign_placeholder: false,
    thousands_separator: ',',
    decimal_separator: '.',
    allow_decimal: true,
    require_decimal: false,
    digits_after_decimal: [
        2
    ],
    allow_space_after_digits: false
};
function isCurrency(str, options) {
    _assertString.default(str);
    options = _merge.default(options, default_currency_options);
    return currencyRegex(options).test(str);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/merge":"9Aa5p","./util/assertString":"7omJq"}],"4pFJQ":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isISO8601;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
/* eslint-disable max-len */ // from http://goo.gl/0ejHHW
var iso8601 = /^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/;
/* eslint-enable max-len */ var isValidDate = function isValidDate1(str) {
    // str must have passed the ISO8601 check
    // this check is meant to catch invalid dates
    // like 2009-02-31
    // first check for ordinal dates
    var ordinalMatch = str.match(/^(\d{4})-?(\d{3})([ T]{1}\.*|$)/);
    if (ordinalMatch) {
        var oYear = Number(ordinalMatch[1]);
        var oDay = Number(ordinalMatch[2]); // if is leap year
        if (oYear % 4 === 0 && oYear % 100 !== 0) return oDay <= 366;
        return oDay <= 365;
    }
    var match = str.match(/(\d{4})-?(\d{0,2})-?(\d*)/).map(Number);
    var year = match[1];
    var month = match[2];
    var day = match[3];
    var monthString = month ? "0".concat(month).slice(-2) : month;
    var dayString = day ? "0".concat(day).slice(-2) : day; // create a date object and compare
    var d = new Date("".concat(year, "-").concat(monthString || '01', "-").concat(dayString || '01'));
    if (isNaN(d.getUTCFullYear())) return false;
    if (month && day) return d.getUTCFullYear() === year && d.getUTCMonth() + 1 === month && d.getUTCDate() === day;
    return true;
};
function isISO8601(str, options) {
    _assertString.default(str);
    var check = iso8601.test(str);
    if (!options) return check;
    if (check && options.strict) return isValidDate(str);
    return check;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"lksfR":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isRFC3339;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
/* Based on https://tools.ietf.org/html/rfc3339#section-5.6 */ var dateFullYear = /[0-9]{4}/;
var dateMonth = /(0[1-9]|1[0-2])/;
var dateMDay = /([12]\d|0[1-9]|3[01])/;
var timeHour = /([01][0-9]|2[0-3])/;
var timeMinute = /[0-5][0-9]/;
var timeSecond = /([0-5][0-9]|60)/;
var timeSecFrac = /(\.[0-9]+)?/;
var timeNumOffset = new RegExp("[-+]".concat(timeHour.source, ":").concat(timeMinute.source));
var timeOffset = new RegExp("([zZ]|".concat(timeNumOffset.source, ")"));
var partialTime = new RegExp("".concat(timeHour.source, ":").concat(timeMinute.source, ":").concat(timeSecond.source).concat(timeSecFrac.source));
var fullDate = new RegExp("".concat(dateFullYear.source, "-").concat(dateMonth.source, "-").concat(dateMDay.source));
var fullTime = new RegExp("".concat(partialTime.source).concat(timeOffset.source));
var rfc3339 = new RegExp("".concat(fullDate.source, "[ tT]").concat(fullTime.source));
function isRFC3339(str) {
    _assertString.default(str);
    return rfc3339.test(str);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"2esHf":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isISO31661Alpha2;
var _assertString = _interopRequireDefault(require("./util/assertString"));
var _includes = _interopRequireDefault(require("./util/includes"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
var validISO31661Alpha2CountriesCodes = [
    'AD',
    'AE',
    'AF',
    'AG',
    'AI',
    'AL',
    'AM',
    'AO',
    'AQ',
    'AR',
    'AS',
    'AT',
    'AU',
    'AW',
    'AX',
    'AZ',
    'BA',
    'BB',
    'BD',
    'BE',
    'BF',
    'BG',
    'BH',
    'BI',
    'BJ',
    'BL',
    'BM',
    'BN',
    'BO',
    'BQ',
    'BR',
    'BS',
    'BT',
    'BV',
    'BW',
    'BY',
    'BZ',
    'CA',
    'CC',
    'CD',
    'CF',
    'CG',
    'CH',
    'CI',
    'CK',
    'CL',
    'CM',
    'CN',
    'CO',
    'CR',
    'CU',
    'CV',
    'CW',
    'CX',
    'CY',
    'CZ',
    'DE',
    'DJ',
    'DK',
    'DM',
    'DO',
    'DZ',
    'EC',
    'EE',
    'EG',
    'EH',
    'ER',
    'ES',
    'ET',
    'FI',
    'FJ',
    'FK',
    'FM',
    'FO',
    'FR',
    'GA',
    'GB',
    'GD',
    'GE',
    'GF',
    'GG',
    'GH',
    'GI',
    'GL',
    'GM',
    'GN',
    'GP',
    'GQ',
    'GR',
    'GS',
    'GT',
    'GU',
    'GW',
    'GY',
    'HK',
    'HM',
    'HN',
    'HR',
    'HT',
    'HU',
    'ID',
    'IE',
    'IL',
    'IM',
    'IN',
    'IO',
    'IQ',
    'IR',
    'IS',
    'IT',
    'JE',
    'JM',
    'JO',
    'JP',
    'KE',
    'KG',
    'KH',
    'KI',
    'KM',
    'KN',
    'KP',
    'KR',
    'KW',
    'KY',
    'KZ',
    'LA',
    'LB',
    'LC',
    'LI',
    'LK',
    'LR',
    'LS',
    'LT',
    'LU',
    'LV',
    'LY',
    'MA',
    'MC',
    'MD',
    'ME',
    'MF',
    'MG',
    'MH',
    'MK',
    'ML',
    'MM',
    'MN',
    'MO',
    'MP',
    'MQ',
    'MR',
    'MS',
    'MT',
    'MU',
    'MV',
    'MW',
    'MX',
    'MY',
    'MZ',
    'NA',
    'NC',
    'NE',
    'NF',
    'NG',
    'NI',
    'NL',
    'NO',
    'NP',
    'NR',
    'NU',
    'NZ',
    'OM',
    'PA',
    'PE',
    'PF',
    'PG',
    'PH',
    'PK',
    'PL',
    'PM',
    'PN',
    'PR',
    'PS',
    'PT',
    'PW',
    'PY',
    'QA',
    'RE',
    'RO',
    'RS',
    'RU',
    'RW',
    'SA',
    'SB',
    'SC',
    'SD',
    'SE',
    'SG',
    'SH',
    'SI',
    'SJ',
    'SK',
    'SL',
    'SM',
    'SN',
    'SO',
    'SR',
    'SS',
    'ST',
    'SV',
    'SX',
    'SY',
    'SZ',
    'TC',
    'TD',
    'TF',
    'TG',
    'TH',
    'TJ',
    'TK',
    'TL',
    'TM',
    'TN',
    'TO',
    'TR',
    'TT',
    'TV',
    'TW',
    'TZ',
    'UA',
    'UG',
    'UM',
    'US',
    'UY',
    'UZ',
    'VA',
    'VC',
    'VE',
    'VG',
    'VI',
    'VN',
    'VU',
    'WF',
    'WS',
    'YE',
    'YT',
    'ZA',
    'ZM',
    'ZW'
];
function isISO31661Alpha2(str) {
    _assertString.default(str);
    return _includes.default(validISO31661Alpha2CountriesCodes, str.toUpperCase());
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq","./util/includes":"80ePq"}],"6JDVs":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isISO31661Alpha3;
var _assertString = _interopRequireDefault(require("./util/assertString"));
var _includes = _interopRequireDefault(require("./util/includes"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3
var validISO31661Alpha3CountriesCodes = [
    'AFG',
    'ALA',
    'ALB',
    'DZA',
    'ASM',
    'AND',
    'AGO',
    'AIA',
    'ATA',
    'ATG',
    'ARG',
    'ARM',
    'ABW',
    'AUS',
    'AUT',
    'AZE',
    'BHS',
    'BHR',
    'BGD',
    'BRB',
    'BLR',
    'BEL',
    'BLZ',
    'BEN',
    'BMU',
    'BTN',
    'BOL',
    'BES',
    'BIH',
    'BWA',
    'BVT',
    'BRA',
    'IOT',
    'BRN',
    'BGR',
    'BFA',
    'BDI',
    'KHM',
    'CMR',
    'CAN',
    'CPV',
    'CYM',
    'CAF',
    'TCD',
    'CHL',
    'CHN',
    'CXR',
    'CCK',
    'COL',
    'COM',
    'COG',
    'COD',
    'COK',
    'CRI',
    'CIV',
    'HRV',
    'CUB',
    'CUW',
    'CYP',
    'CZE',
    'DNK',
    'DJI',
    'DMA',
    'DOM',
    'ECU',
    'EGY',
    'SLV',
    'GNQ',
    'ERI',
    'EST',
    'ETH',
    'FLK',
    'FRO',
    'FJI',
    'FIN',
    'FRA',
    'GUF',
    'PYF',
    'ATF',
    'GAB',
    'GMB',
    'GEO',
    'DEU',
    'GHA',
    'GIB',
    'GRC',
    'GRL',
    'GRD',
    'GLP',
    'GUM',
    'GTM',
    'GGY',
    'GIN',
    'GNB',
    'GUY',
    'HTI',
    'HMD',
    'VAT',
    'HND',
    'HKG',
    'HUN',
    'ISL',
    'IND',
    'IDN',
    'IRN',
    'IRQ',
    'IRL',
    'IMN',
    'ISR',
    'ITA',
    'JAM',
    'JPN',
    'JEY',
    'JOR',
    'KAZ',
    'KEN',
    'KIR',
    'PRK',
    'KOR',
    'KWT',
    'KGZ',
    'LAO',
    'LVA',
    'LBN',
    'LSO',
    'LBR',
    'LBY',
    'LIE',
    'LTU',
    'LUX',
    'MAC',
    'MKD',
    'MDG',
    'MWI',
    'MYS',
    'MDV',
    'MLI',
    'MLT',
    'MHL',
    'MTQ',
    'MRT',
    'MUS',
    'MYT',
    'MEX',
    'FSM',
    'MDA',
    'MCO',
    'MNG',
    'MNE',
    'MSR',
    'MAR',
    'MOZ',
    'MMR',
    'NAM',
    'NRU',
    'NPL',
    'NLD',
    'NCL',
    'NZL',
    'NIC',
    'NER',
    'NGA',
    'NIU',
    'NFK',
    'MNP',
    'NOR',
    'OMN',
    'PAK',
    'PLW',
    'PSE',
    'PAN',
    'PNG',
    'PRY',
    'PER',
    'PHL',
    'PCN',
    'POL',
    'PRT',
    'PRI',
    'QAT',
    'REU',
    'ROU',
    'RUS',
    'RWA',
    'BLM',
    'SHN',
    'KNA',
    'LCA',
    'MAF',
    'SPM',
    'VCT',
    'WSM',
    'SMR',
    'STP',
    'SAU',
    'SEN',
    'SRB',
    'SYC',
    'SLE',
    'SGP',
    'SXM',
    'SVK',
    'SVN',
    'SLB',
    'SOM',
    'ZAF',
    'SGS',
    'SSD',
    'ESP',
    'LKA',
    'SDN',
    'SUR',
    'SJM',
    'SWZ',
    'SWE',
    'CHE',
    'SYR',
    'TWN',
    'TJK',
    'TZA',
    'THA',
    'TLS',
    'TGO',
    'TKL',
    'TON',
    'TTO',
    'TUN',
    'TUR',
    'TKM',
    'TCA',
    'TUV',
    'UGA',
    'UKR',
    'ARE',
    'GBR',
    'USA',
    'UMI',
    'URY',
    'UZB',
    'VUT',
    'VEN',
    'VNM',
    'VGB',
    'VIR',
    'WLF',
    'ESH',
    'YEM',
    'ZMB',
    'ZWE'
];
function isISO31661Alpha3(str) {
    _assertString.default(str);
    return _includes.default(validISO31661Alpha3CountriesCodes, str.toUpperCase());
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq","./util/includes":"80ePq"}],"gTRDS":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isBase64;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var notBase64 = /[^A-Z0-9+\/=]/i;
function isBase64(str) {
    _assertString.default(str);
    var len = str.length;
    if (!len || len % 4 !== 0 || notBase64.test(str)) return false;
    var firstPaddingChar = str.indexOf('=');
    return firstPaddingChar === -1 || firstPaddingChar === len - 1 || firstPaddingChar === len - 2 && str[len - 1] === '=';
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"32CzN":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isDataURI;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var validMediaType = /^[a-z]+\/[a-z0-9\-\+]+$/i;
var validAttribute = /^[a-z\-]+=[a-z0-9\-]+$/i;
var validData = /^[a-z0-9!\$&'\(\)\*\+,;=\-\._~:@\/\?%\s]*$/i;
function isDataURI(str) {
    _assertString.default(str);
    var data = str.split(',');
    if (data.length < 2) return false;
    var attributes = data.shift().trim().split(';');
    var schemeAndMediaType = attributes.shift();
    if (schemeAndMediaType.substr(0, 5) !== 'data:') return false;
    var mediaType = schemeAndMediaType.substr(5);
    if (mediaType !== '' && !validMediaType.test(mediaType)) return false;
    for(var i = 0; i < attributes.length; i++){
        if (i === attributes.length - 1 && attributes[i].toLowerCase() === 'base64') ;
        else if (!validAttribute.test(attributes[i])) return false;
    }
    for(var _i = 0; _i < data.length; _i++){
        if (!validData.test(data[_i])) return false;
    }
    return true;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"3Xpxx":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isMagnetURI;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var magnetURI = /^magnet:\?xt=urn:[a-z0-9]+:[a-z0-9]{32,40}&dn=.+&tr=.+$/i;
function isMagnetURI(url) {
    _assertString.default(url);
    return magnetURI.test(url.trim());
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"372iW":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isMimeType;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
/*
  Checks if the provided string matches to a correct Media type format (MIME type)

  This function only checks is the string format follows the
  etablished rules by the according RFC specifications.
  This function supports 'charset' in textual media types
  (https://tools.ietf.org/html/rfc6657).

  This function does not check against all the media types listed
  by the IANA (https://www.iana.org/assignments/media-types/media-types.xhtml)
  because of lightness purposes : it would require to include
  all these MIME types in this librairy, which would weigh it
  significantly. This kind of effort maybe is not worth for the use that
  this function has in this entire librairy.

  More informations in the RFC specifications :
  - https://tools.ietf.org/html/rfc2045
  - https://tools.ietf.org/html/rfc2046
  - https://tools.ietf.org/html/rfc7231#section-3.1.1.1
  - https://tools.ietf.org/html/rfc7231#section-3.1.1.5
*/ // Match simple MIME types
// NB :
//   Subtype length must not exceed 100 characters.
//   This rule does not comply to the RFC specs (what is the max length ?).
var mimeTypeSimple = /^(application|audio|font|image|message|model|multipart|text|video)\/[a-zA-Z0-9\.\-\+]{1,100}$/i; // eslint-disable-line max-len
// Handle "charset" in "text/*"
var mimeTypeText = /^text\/[a-zA-Z0-9\.\-\+]{1,100};\s?charset=("[a-zA-Z0-9\.\-\+\s]{0,70}"|[a-zA-Z0-9\.\-\+]{0,70})(\s?\([a-zA-Z0-9\.\-\+\s]{1,20}\))?$/i; // eslint-disable-line max-len
// Handle "boundary" in "multipart/*"
var mimeTypeMultipart = /^multipart\/[a-zA-Z0-9\.\-\+]{1,100}(;\s?(boundary|charset)=("[a-zA-Z0-9\.\-\+\s]{0,70}"|[a-zA-Z0-9\.\-\+]{0,70})(\s?\([a-zA-Z0-9\.\-\+\s]{1,20}\))?){0,2}$/i; // eslint-disable-line max-len
function isMimeType(str) {
    _assertString.default(str);
    return mimeTypeSimple.test(str) || mimeTypeText.test(str) || mimeTypeMultipart.test(str);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"hZhgb":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var lat = /^\(?[+-]?(90(\.0+)?|[1-8]?\d(\.\d+)?)$/;
var long = /^\s?[+-]?(180(\.0+)?|1[0-7]\d(\.\d+)?|\d{1,2}(\.\d+)?)\)?$/;
function _default(str) {
    _assertString.default(str);
    if (!str.includes(',')) return false;
    var pair = str.split(',');
    return lat.test(pair[0]) && long.test(pair[1]);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"9jhk0":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
exports.locales = void 0;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// common patterns
var threeDigit = /^\d{3}$/;
var fourDigit = /^\d{4}$/;
var fiveDigit = /^\d{5}$/;
var sixDigit = /^\d{6}$/;
var patterns = {
    AD: /^AD\d{3}$/,
    AT: fourDigit,
    AU: fourDigit,
    BE: fourDigit,
    BG: fourDigit,
    CA: /^[ABCEGHJKLMNPRSTVXY]\d[ABCEGHJ-NPRSTV-Z][\s\-]?\d[ABCEGHJ-NPRSTV-Z]\d$/i,
    CH: fourDigit,
    CZ: /^\d{3}\s?\d{2}$/,
    DE: fiveDigit,
    DK: fourDigit,
    DZ: fiveDigit,
    EE: fiveDigit,
    ES: fiveDigit,
    FI: fiveDigit,
    FR: /^\d{2}\s?\d{3}$/,
    GB: /^(gir\s?0aa|[a-z]{1,2}\d[\da-z]?\s?(\d[a-z]{2})?)$/i,
    GR: /^\d{3}\s?\d{2}$/,
    HR: /^([1-5]\d{4}$)/,
    HU: fourDigit,
    IL: fiveDigit,
    IN: sixDigit,
    IS: threeDigit,
    IT: fiveDigit,
    JP: /^\d{3}\-\d{4}$/,
    KE: fiveDigit,
    LI: /^(948[5-9]|949[0-7])$/,
    LT: /^LT\-\d{5}$/,
    LU: fourDigit,
    LV: /^LV\-\d{4}$/,
    MX: fiveDigit,
    NL: /^\d{4}\s?[a-z]{2}$/i,
    NO: fourDigit,
    PL: /^\d{2}\-\d{3}$/,
    PT: /^\d{4}\-\d{3}?$/,
    RO: sixDigit,
    RU: sixDigit,
    SA: fiveDigit,
    SE: /^\d{3}\s?\d{2}$/,
    SI: fourDigit,
    SK: /^\d{3}\s?\d{2}$/,
    TN: fourDigit,
    TW: /^\d{3}(\d{2})?$/,
    UA: fiveDigit,
    US: /^\d{5}(-\d{4})?$/,
    ZA: fourDigit,
    ZM: fiveDigit
};
var locales = Object.keys(patterns);
exports.locales = locales;
function _default(str, locale) {
    _assertString.default(str);
    if (locale in patterns) return patterns[locale].test(str);
    else if (locale === 'any') {
        for(var key in patterns)if (patterns.hasOwnProperty(key)) {
            var pattern = patterns[key];
            if (pattern.test(str)) return true;
        }
        return false;
    }
    throw new Error("Invalid locale '".concat(locale, "'"));
}

},{"./util/assertString":"7omJq"}],"fwWDo":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = ltrim;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function ltrim(str, chars) {
    _assertString.default(str);
    var pattern = chars ? new RegExp("^[".concat(chars, "]+"), 'g') : /^\s+/g;
    return str.replace(pattern, '');
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"fPTza":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = rtrim;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function rtrim(str, chars) {
    _assertString.default(str);
    var pattern = chars ? new RegExp("[".concat(chars, "]")) : /\s/;
    var idx = str.length - 1;
    for(; idx >= 0 && pattern.test(str[idx]); idx--);
    return idx < str.length ? str.substr(0, idx + 1) : str;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"1RE9b":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = trim;
var _rtrim = _interopRequireDefault(require("./rtrim"));
var _ltrim = _interopRequireDefault(require("./ltrim"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function trim(str, chars) {
    return _rtrim.default(_ltrim.default(str, chars), chars);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./rtrim":"fPTza","./ltrim":"fwWDo"}],"hTNM5":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = escape;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function escape(str) {
    _assertString.default(str);
    return str.replace(/&/g, '&amp;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\//g, '&#x2F;').replace(/\\/g, '&#x5C;').replace(/`/g, '&#96;');
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"6RJG0":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = unescape;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function unescape(str) {
    _assertString.default(str);
    return str.replace(/&amp;/g, '&').replace(/&quot;/g, '"').replace(/&#x27;/g, "'").replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&#x2F;/g, '/').replace(/&#x5C;/g, '\\').replace(/&#96;/g, '`');
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"8KaFE":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = stripLow;
var _assertString = _interopRequireDefault(require("./util/assertString"));
var _blacklist = _interopRequireDefault(require("./blacklist"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function stripLow(str, keep_new_lines) {
    _assertString.default(str);
    var chars = keep_new_lines ? '\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F' : '\\x00-\\x1F\\x7F';
    return _blacklist.default(str, chars);
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq","./blacklist":"8aFAV"}],"8aFAV":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = blacklist;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function blacklist(str, chars) {
    _assertString.default(str);
    return str.replace(new RegExp("[".concat(chars, "]+"), 'g'), '');
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"ddNbV":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = whitelist;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function whitelist(str, chars) {
    _assertString.default(str);
    return str.replace(new RegExp("[^".concat(chars, "]+"), 'g'), '');
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"d90U0":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isWhitelisted;
var _assertString = _interopRequireDefault(require("./util/assertString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function isWhitelisted(str, chars) {
    _assertString.default(str);
    for(var i = str.length - 1; i >= 0; i--){
        if (chars.indexOf(str[i]) === -1) return false;
    }
    return true;
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/assertString":"7omJq"}],"egFpg":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = normalizeEmail;
var _merge = _interopRequireDefault(require("./util/merge"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var default_normalize_email_options = {
    // The following options apply to all email addresses
    // Lowercases the local part of the email address.
    // Please note this may violate RFC 5321 as per http://stackoverflow.com/a/9808332/192024).
    // The domain is always lowercased, as per RFC 1035
    all_lowercase: true,
    // The following conversions are specific to GMail
    // Lowercases the local part of the GMail address (known to be case-insensitive)
    gmail_lowercase: true,
    // Removes dots from the local part of the email address, as that's ignored by GMail
    gmail_remove_dots: true,
    // Removes the subaddress (e.g. "+foo") from the email address
    gmail_remove_subaddress: true,
    // Conversts the googlemail.com domain to gmail.com
    gmail_convert_googlemaildotcom: true,
    // The following conversions are specific to Outlook.com / Windows Live / Hotmail
    // Lowercases the local part of the Outlook.com address (known to be case-insensitive)
    outlookdotcom_lowercase: true,
    // Removes the subaddress (e.g. "+foo") from the email address
    outlookdotcom_remove_subaddress: true,
    // The following conversions are specific to Yahoo
    // Lowercases the local part of the Yahoo address (known to be case-insensitive)
    yahoo_lowercase: true,
    // Removes the subaddress (e.g. "-foo") from the email address
    yahoo_remove_subaddress: true,
    // The following conversions are specific to Yandex
    // Lowercases the local part of the Yandex address (known to be case-insensitive)
    yandex_lowercase: true,
    // The following conversions are specific to iCloud
    // Lowercases the local part of the iCloud address (known to be case-insensitive)
    icloud_lowercase: true,
    // Removes the subaddress (e.g. "+foo") from the email address
    icloud_remove_subaddress: true
}; // List of domains used by iCloud
var icloud_domains = [
    'icloud.com',
    'me.com'
]; // List of domains used by Outlook.com and its predecessors
// This list is likely incomplete.
// Partial reference:
// https://blogs.office.com/2013/04/17/outlook-com-gets-two-step-verification-sign-in-by-alias-and-new-international-domains/
var outlookdotcom_domains = [
    'hotmail.at',
    'hotmail.be',
    'hotmail.ca',
    'hotmail.cl',
    'hotmail.co.il',
    'hotmail.co.nz',
    'hotmail.co.th',
    'hotmail.co.uk',
    'hotmail.com',
    'hotmail.com.ar',
    'hotmail.com.au',
    'hotmail.com.br',
    'hotmail.com.gr',
    'hotmail.com.mx',
    'hotmail.com.pe',
    'hotmail.com.tr',
    'hotmail.com.vn',
    'hotmail.cz',
    'hotmail.de',
    'hotmail.dk',
    'hotmail.es',
    'hotmail.fr',
    'hotmail.hu',
    'hotmail.id',
    'hotmail.ie',
    'hotmail.in',
    'hotmail.it',
    'hotmail.jp',
    'hotmail.kr',
    'hotmail.lv',
    'hotmail.my',
    'hotmail.ph',
    'hotmail.pt',
    'hotmail.sa',
    'hotmail.sg',
    'hotmail.sk',
    'live.be',
    'live.co.uk',
    'live.com',
    'live.com.ar',
    'live.com.mx',
    'live.de',
    'live.es',
    'live.eu',
    'live.fr',
    'live.it',
    'live.nl',
    'msn.com',
    'outlook.at',
    'outlook.be',
    'outlook.cl',
    'outlook.co.il',
    'outlook.co.nz',
    'outlook.co.th',
    'outlook.com',
    'outlook.com.ar',
    'outlook.com.au',
    'outlook.com.br',
    'outlook.com.gr',
    'outlook.com.pe',
    'outlook.com.tr',
    'outlook.com.vn',
    'outlook.cz',
    'outlook.de',
    'outlook.dk',
    'outlook.es',
    'outlook.fr',
    'outlook.hu',
    'outlook.id',
    'outlook.ie',
    'outlook.in',
    'outlook.it',
    'outlook.jp',
    'outlook.kr',
    'outlook.lv',
    'outlook.my',
    'outlook.ph',
    'outlook.pt',
    'outlook.sa',
    'outlook.sg',
    'outlook.sk',
    'passport.com'
]; // List of domains used by Yahoo Mail
// This list is likely incomplete
var yahoo_domains = [
    'rocketmail.com',
    'yahoo.ca',
    'yahoo.co.uk',
    'yahoo.com',
    'yahoo.de',
    'yahoo.fr',
    'yahoo.in',
    'yahoo.it',
    'ymail.com'
]; // List of domains used by yandex.ru
var yandex_domains = [
    'yandex.ru',
    'yandex.ua',
    'yandex.kz',
    'yandex.com',
    'yandex.by',
    'ya.ru'
]; // replace single dots, but not multiple consecutive dots
function dotsReplacer(match) {
    if (match.length > 1) return match;
    return '';
}
function normalizeEmail(email, options) {
    options = _merge.default(options, default_normalize_email_options);
    var raw_parts = email.split('@');
    var domain = raw_parts.pop();
    var user = raw_parts.join('@');
    var parts = [
        user,
        domain
    ]; // The domain is always lowercased, as it's case-insensitive per RFC 1035
    parts[1] = parts[1].toLowerCase();
    if (parts[1] === 'gmail.com' || parts[1] === 'googlemail.com') {
        // Address is GMail
        if (options.gmail_remove_subaddress) parts[0] = parts[0].split('+')[0];
        if (options.gmail_remove_dots) // this does not replace consecutive dots like example..email@gmail.com
        parts[0] = parts[0].replace(/\.+/g, dotsReplacer);
        if (!parts[0].length) return false;
        if (options.all_lowercase || options.gmail_lowercase) parts[0] = parts[0].toLowerCase();
        parts[1] = options.gmail_convert_googlemaildotcom ? 'gmail.com' : parts[1];
    } else if (icloud_domains.indexOf(parts[1]) >= 0) {
        // Address is iCloud
        if (options.icloud_remove_subaddress) parts[0] = parts[0].split('+')[0];
        if (!parts[0].length) return false;
        if (options.all_lowercase || options.icloud_lowercase) parts[0] = parts[0].toLowerCase();
    } else if (outlookdotcom_domains.indexOf(parts[1]) >= 0) {
        // Address is Outlook.com
        if (options.outlookdotcom_remove_subaddress) parts[0] = parts[0].split('+')[0];
        if (!parts[0].length) return false;
        if (options.all_lowercase || options.outlookdotcom_lowercase) parts[0] = parts[0].toLowerCase();
    } else if (yahoo_domains.indexOf(parts[1]) >= 0) {
        // Address is Yahoo
        if (options.yahoo_remove_subaddress) {
            var components = parts[0].split('-');
            parts[0] = components.length > 1 ? components.slice(0, -1).join('-') : components[0];
        }
        if (!parts[0].length) return false;
        if (options.all_lowercase || options.yahoo_lowercase) parts[0] = parts[0].toLowerCase();
    } else if (yandex_domains.indexOf(parts[1]) >= 0) {
        if (options.all_lowercase || options.yandex_lowercase) parts[0] = parts[0].toLowerCase();
        parts[1] = 'yandex.ru'; // all yandex domains are equal, 1st preffered
    } else if (options.all_lowercase) // Any other address
    parts[0] = parts[0].toLowerCase();
    return parts.join('@');
}
module.exports = exports.default;
module.exports.default = exports.default;

},{"./util/merge":"9Aa5p"}],"3boYC":[function(require,module,exports) {
var process = require("process");
(function(global, factory) {
    /* AMD */ if (typeof define === 'function' && define["amd"]) define([], factory);
    else if (typeof require === 'function' && typeof module === "object" && module && module["exports"]) module["exports"] = factory();
    else (global["dcodeIO"] = global["dcodeIO"] || {
    })["bcrypt"] = factory();
})(this, function() {
    "use strict";
    /**
     * bcrypt namespace.
     * @type {Object.<string,*>}
     */ var bcrypt = {
    };
    /**
     * The random implementation to use as a fallback.
     * @type {?function(number):!Array.<number>}
     * @inner
     */ var randomFallback = null;
    /**
     * Generates cryptographically secure random bytes.
     * @function
     * @param {number} len Bytes length
     * @returns {!Array.<number>} Random bytes
     * @throws {Error} If no random implementation is available
     * @inner
     */ function random(len) {
        /* node */ if (typeof module !== 'undefined' && module && module['exports']) try {
            return require("crypto")['randomBytes'](len);
        } catch (e) {
        }
        /* WCA */ try {
            var a;
            (self['crypto'] || self['msCrypto'])['getRandomValues'](a = new Uint32Array(len));
            return Array.prototype.slice.call(a);
        } catch (e) {
        }
        /* fallback */ if (!randomFallback) throw Error("Neither WebCryptoAPI nor a crypto module is available. Use bcrypt.setRandomFallback to set an alternative");
        return randomFallback(len);
    }
    // Test if any secure randomness source is available
    var randomAvailable = false;
    try {
        random(1);
        randomAvailable = true;
    } catch (e) {
    }
    // Default fallback, if any
    randomFallback = null;
    /**
     * Sets the pseudo random number generator to use as a fallback if neither node's `crypto` module nor the Web Crypto
     *  API is available. Please note: It is highly important that the PRNG used is cryptographically secure and that it
     *  is seeded properly!
     * @param {?function(number):!Array.<number>} random Function taking the number of bytes to generate as its
     *  sole argument, returning the corresponding array of cryptographically secure random byte values.
     * @see http://nodejs.org/api/crypto.html
     * @see http://www.w3.org/TR/WebCryptoAPI/
     */ bcrypt.setRandomFallback = function(random1) {
        randomFallback = random1;
    };
    /**
     * Synchronously generates a salt.
     * @param {number=} rounds Number of rounds to use, defaults to 10 if omitted
     * @param {number=} seed_length Not supported.
     * @returns {string} Resulting salt
     * @throws {Error} If a random fallback is required but not set
     * @expose
     */ bcrypt.genSaltSync = function(rounds, seed_length) {
        rounds = rounds || GENSALT_DEFAULT_LOG2_ROUNDS;
        if (typeof rounds !== 'number') throw Error("Illegal arguments: " + typeof rounds + ", " + typeof seed_length);
        if (rounds < 4) rounds = 4;
        else if (rounds > 31) rounds = 31;
        var salt = [];
        salt.push("$2a$");
        if (rounds < 10) salt.push("0");
        salt.push(rounds.toString());
        salt.push('$');
        salt.push(base64_encode(random(BCRYPT_SALT_LEN), BCRYPT_SALT_LEN)); // May throw
        return salt.join('');
    };
    /**
     * Asynchronously generates a salt.
     * @param {(number|function(Error, string=))=} rounds Number of rounds to use, defaults to 10 if omitted
     * @param {(number|function(Error, string=))=} seed_length Not supported.
     * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting salt
     * @returns {!Promise} If `callback` has been omitted
     * @throws {Error} If `callback` is present but not a function
     * @expose
     */ bcrypt.genSalt = function(rounds, seed_length, callback) {
        if (typeof seed_length === 'function') callback = seed_length, seed_length = undefined; // Not supported.
        if (typeof rounds === 'function') callback = rounds, rounds = undefined;
        if (typeof rounds === 'undefined') rounds = GENSALT_DEFAULT_LOG2_ROUNDS;
        else if (typeof rounds !== 'number') throw Error("illegal arguments: " + typeof rounds);
        function _async(callback1) {
            nextTick(function() {
                try {
                    callback1(null, bcrypt.genSaltSync(rounds));
                } catch (err) {
                    callback1(err);
                }
            });
        }
        if (callback) {
            if (typeof callback !== 'function') throw Error("Illegal callback: " + typeof callback);
            _async(callback);
        } else return new Promise(function(resolve, reject) {
            _async(function(err, res) {
                if (err) {
                    reject(err);
                    return;
                }
                resolve(res);
            });
        });
    };
    /**
     * Synchronously generates a hash for the given string.
     * @param {string} s String to hash
     * @param {(number|string)=} salt Salt length to generate or salt to use, default to 10
     * @returns {string} Resulting hash
     * @expose
     */ bcrypt.hashSync = function(s, salt) {
        if (typeof salt === 'undefined') salt = GENSALT_DEFAULT_LOG2_ROUNDS;
        if (typeof salt === 'number') salt = bcrypt.genSaltSync(salt);
        if (typeof s !== 'string' || typeof salt !== 'string') throw Error("Illegal arguments: " + typeof s + ', ' + typeof salt);
        return _hash(s, salt);
    };
    /**
     * Asynchronously generates a hash for the given string.
     * @param {string} s String to hash
     * @param {number|string} salt Salt length to generate or salt to use
     * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting hash
     * @param {function(number)=} progressCallback Callback successively called with the percentage of rounds completed
     *  (0.0 - 1.0), maximally once per `MAX_EXECUTION_TIME = 100` ms.
     * @returns {!Promise} If `callback` has been omitted
     * @throws {Error} If `callback` is present but not a function
     * @expose
     */ bcrypt.hash = function(s, salt, callback, progressCallback) {
        function _async(callback1) {
            if (typeof s === 'string' && typeof salt === 'number') bcrypt.genSalt(salt, function(err, salt1) {
                _hash(s, salt1, callback1, progressCallback);
            });
            else if (typeof s === 'string' && typeof salt === 'string') _hash(s, salt, callback1, progressCallback);
            else nextTick(callback1.bind(this, Error("Illegal arguments: " + typeof s + ', ' + typeof salt)));
        }
        if (callback) {
            if (typeof callback !== 'function') throw Error("Illegal callback: " + typeof callback);
            _async(callback);
        } else return new Promise(function(resolve, reject) {
            _async(function(err, res) {
                if (err) {
                    reject(err);
                    return;
                }
                resolve(res);
            });
        });
    };
    /**
     * Compares two strings of the same length in constant time.
     * @param {string} known Must be of the correct length
     * @param {string} unknown Must be the same length as `known`
     * @returns {boolean}
     * @inner
     */ function safeStringCompare(known, unknown) {
        var right = 0, wrong = 0;
        for(var i = 0, k = known.length; i < k; ++i)if (known.charCodeAt(i) === unknown.charCodeAt(i)) ++right;
        else ++wrong;
        // Prevent removal of unused variables (never true, actually)
        if (right < 0) return false;
        return wrong === 0;
    }
    /**
     * Synchronously tests a string against a hash.
     * @param {string} s String to compare
     * @param {string} hash Hash to test against
     * @returns {boolean} true if matching, otherwise false
     * @throws {Error} If an argument is illegal
     * @expose
     */ bcrypt.compareSync = function(s, hash) {
        if (typeof s !== "string" || typeof hash !== "string") throw Error("Illegal arguments: " + typeof s + ', ' + typeof hash);
        if (hash.length !== 60) return false;
        return safeStringCompare(bcrypt.hashSync(s, hash.substr(0, hash.length - 31)), hash);
    };
    /**
     * Asynchronously compares the given data against the given hash.
     * @param {string} s Data to compare
     * @param {string} hash Data to be compared to
     * @param {function(Error, boolean)=} callback Callback receiving the error, if any, otherwise the result
     * @param {function(number)=} progressCallback Callback successively called with the percentage of rounds completed
     *  (0.0 - 1.0), maximally once per `MAX_EXECUTION_TIME = 100` ms.
     * @returns {!Promise} If `callback` has been omitted
     * @throws {Error} If `callback` is present but not a function
     * @expose
     */ bcrypt.compare = function(s, hash, callback, progressCallback) {
        function _async(callback1) {
            if (typeof s !== "string" || typeof hash !== "string") {
                nextTick(callback1.bind(this, Error("Illegal arguments: " + typeof s + ', ' + typeof hash)));
                return;
            }
            if (hash.length !== 60) {
                nextTick(callback1.bind(this, null, false));
                return;
            }
            bcrypt.hash(s, hash.substr(0, 29), function(err, comp) {
                if (err) callback1(err);
                else callback1(null, safeStringCompare(comp, hash));
            }, progressCallback);
        }
        if (callback) {
            if (typeof callback !== 'function') throw Error("Illegal callback: " + typeof callback);
            _async(callback);
        } else return new Promise(function(resolve, reject) {
            _async(function(err, res) {
                if (err) {
                    reject(err);
                    return;
                }
                resolve(res);
            });
        });
    };
    /**
     * Gets the number of rounds used to encrypt the specified hash.
     * @param {string} hash Hash to extract the used number of rounds from
     * @returns {number} Number of rounds used
     * @throws {Error} If `hash` is not a string
     * @expose
     */ bcrypt.getRounds = function(hash) {
        if (typeof hash !== "string") throw Error("Illegal arguments: " + typeof hash);
        return parseInt(hash.split("$")[2], 10);
    };
    /**
     * Gets the salt portion from a hash. Does not validate the hash.
     * @param {string} hash Hash to extract the salt from
     * @returns {string} Extracted salt part
     * @throws {Error} If `hash` is not a string or otherwise invalid
     * @expose
     */ bcrypt.getSalt = function(hash) {
        if (typeof hash !== 'string') throw Error("Illegal arguments: " + typeof hash);
        if (hash.length !== 60) throw Error("Illegal hash length: " + hash.length + " != 60");
        return hash.substring(0, 29);
    };
    /**
     * Continues with the callback on the next tick.
     * @function
     * @param {function(...[*])} callback Callback to execute
     * @inner
     */ var nextTick = typeof process !== 'undefined' && process && typeof process.nextTick === 'function' ? typeof setImmediate === 'function' ? setImmediate : process.nextTick : setTimeout;
    /**
     * Converts a JavaScript string to UTF8 bytes.
     * @param {string} str String
     * @returns {!Array.<number>} UTF8 bytes
     * @inner
     */ function stringToBytes(str) {
        var out = [], i = 0;
        utfx.encodeUTF16toUTF8(function() {
            if (i >= str.length) return null;
            return str.charCodeAt(i++);
        }, function(b) {
            out.push(b);
        });
        return out;
    }
    // A base64 implementation for the bcrypt algorithm. This is partly non-standard.
    /**
     * bcrypt's own non-standard base64 dictionary.
     * @type {!Array.<string>}
     * @const
     * @inner
     **/ var BASE64_CODE = "./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split('');
    /**
     * @type {!Array.<number>}
     * @const
     * @inner
     **/ var BASE64_INDEX = [
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        0,
        1,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        -1,
        -1,
        -1,
        -1,
        -1
    ];
    /**
     * @type {!function(...number):string}
     * @inner
     */ var stringFromCharCode = String.fromCharCode;
    /**
     * Encodes a byte array to base64 with up to len bytes of input.
     * @param {!Array.<number>} b Byte array
     * @param {number} len Maximum input length
     * @returns {string}
     * @inner
     */ function base64_encode(b, len) {
        var off = 0, rs = [], c1, c2;
        if (len <= 0 || len > b.length) throw Error("Illegal len: " + len);
        while(off < len){
            c1 = b[off++] & 255;
            rs.push(BASE64_CODE[c1 >> 2 & 63]);
            c1 = (c1 & 3) << 4;
            if (off >= len) {
                rs.push(BASE64_CODE[c1 & 63]);
                break;
            }
            c2 = b[off++] & 255;
            c1 |= c2 >> 4 & 15;
            rs.push(BASE64_CODE[c1 & 63]);
            c1 = (c2 & 15) << 2;
            if (off >= len) {
                rs.push(BASE64_CODE[c1 & 63]);
                break;
            }
            c2 = b[off++] & 255;
            c1 |= c2 >> 6 & 3;
            rs.push(BASE64_CODE[c1 & 63]);
            rs.push(BASE64_CODE[c2 & 63]);
        }
        return rs.join('');
    }
    /**
     * Decodes a base64 encoded string to up to len bytes of output.
     * @param {string} s String to decode
     * @param {number} len Maximum output length
     * @returns {!Array.<number>}
     * @inner
     */ function base64_decode(s, len) {
        var off = 0, slen = s.length, olen = 0, rs = [], c1, c2, c3, c4, o, code;
        if (len <= 0) throw Error("Illegal len: " + len);
        while(off < slen - 1 && olen < len){
            code = s.charCodeAt(off++);
            c1 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;
            code = s.charCodeAt(off++);
            c2 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;
            if (c1 == -1 || c2 == -1) break;
            o = c1 << 2 >>> 0;
            o |= (c2 & 48) >> 4;
            rs.push(stringFromCharCode(o));
            if ((++olen) >= len || off >= slen) break;
            code = s.charCodeAt(off++);
            c3 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;
            if (c3 == -1) break;
            o = (c2 & 15) << 4 >>> 0;
            o |= (c3 & 60) >> 2;
            rs.push(stringFromCharCode(o));
            if ((++olen) >= len || off >= slen) break;
            code = s.charCodeAt(off++);
            c4 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;
            o = (c3 & 3) << 6 >>> 0;
            o |= c4;
            rs.push(stringFromCharCode(o));
            ++olen;
        }
        var res = [];
        for(off = 0; off < olen; off++)res.push(rs[off].charCodeAt(0));
        return res;
    }
    /**
     * utfx-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>
     * Released under the Apache License, Version 2.0
     * see: https://github.com/dcodeIO/utfx for details
     */ var utfx = function() {
        /**
         * utfx namespace.
         * @inner
         * @type {!Object.<string,*>}
         */ var utfx1 = {
        };
        /**
         * Maximum valid code point.
         * @type {number}
         * @const
         */ utfx1.MAX_CODEPOINT = 1114111;
        /**
         * Encodes UTF8 code points to UTF8 bytes.
         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point
         *  respectively `null` if there are no more code points left or a single numeric code point.
         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte
         */ utfx1.encodeUTF8 = function(src, dst) {
            var cp = null;
            if (typeof src === 'number') cp = src, src = function() {
                return null;
            };
            while(cp !== null || (cp = src()) !== null){
                if (cp < 128) dst(cp & 127);
                else if (cp < 2048) dst(cp >> 6 & 31 | 192), dst(cp & 63 | 128);
                else if (cp < 65536) dst(cp >> 12 & 15 | 224), dst(cp >> 6 & 63 | 128), dst(cp & 63 | 128);
                else dst(cp >> 18 & 7 | 240), dst(cp >> 12 & 63 | 128), dst(cp >> 6 & 63 | 128), dst(cp & 63 | 128);
                cp = null;
            }
        };
        /**
         * Decodes UTF8 bytes to UTF8 code points.
         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there
         *  are no more bytes left.
         * @param {!function(number)} dst Code points destination as a function successively called with each decoded code point.
         * @throws {RangeError} If a starting byte is invalid in UTF8
         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the
         *  remaining bytes.
         */ utfx1.decodeUTF8 = function(src, dst) {
            var a, b, c, d, fail = function(b1) {
                b1 = b1.slice(0, b1.indexOf(null));
                var err = Error(b1.toString());
                err.name = "TruncatedError";
                err['bytes'] = b1;
                throw err;
            };
            while((a = src()) !== null){
                if ((a & 128) === 0) dst(a);
                else if ((a & 224) === 192) (b = src()) === null && fail([
                    a,
                    b
                ]), dst((a & 31) << 6 | b & 63);
                else if ((a & 240) === 224) ((b = src()) === null || (c = src()) === null) && fail([
                    a,
                    b,
                    c
                ]), dst((a & 15) << 12 | (b & 63) << 6 | c & 63);
                else if ((a & 248) === 240) ((b = src()) === null || (c = src()) === null || (d = src()) === null) && fail([
                    a,
                    b,
                    c,
                    d
                ]), dst((a & 7) << 18 | (b & 63) << 12 | (c & 63) << 6 | d & 63);
                else throw RangeError("Illegal starting byte: " + a);
            }
        };
        /**
         * Converts UTF16 characters to UTF8 code points.
         * @param {!function():number|null} src Characters source as a function returning the next char code respectively
         *  `null` if there are no more characters left.
         * @param {!function(number)} dst Code points destination as a function successively called with each converted code
         *  point.
         */ utfx1.UTF16toUTF8 = function(src, dst) {
            var c1, c2 = null;
            while(true){
                if ((c1 = c2 !== null ? c2 : src()) === null) break;
                if (c1 >= 55296 && c1 <= 57343) {
                    if ((c2 = src()) !== null) {
                        if (c2 >= 56320 && c2 <= 57343) {
                            dst((c1 - 55296) * 1024 + c2 - 56320 + 65536);
                            c2 = null;
                            continue;
                        }
                    }
                }
                dst(c1);
            }
            if (c2 !== null) dst(c2);
        };
        /**
         * Converts UTF8 code points to UTF16 characters.
         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point
         *  respectively `null` if there are no more code points left or a single numeric code point.
         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.
         * @throws {RangeError} If a code point is out of range
         */ utfx1.UTF8toUTF16 = function(src, dst) {
            var cp = null;
            if (typeof src === 'number') cp = src, src = function() {
                return null;
            };
            while(cp !== null || (cp = src()) !== null){
                if (cp <= 65535) dst(cp);
                else cp -= 65536, dst((cp >> 10) + 55296), dst(cp % 1024 + 56320);
                cp = null;
            }
        };
        /**
         * Converts and encodes UTF16 characters to UTF8 bytes.
         * @param {!function():number|null} src Characters source as a function returning the next char code respectively `null`
         *  if there are no more characters left.
         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.
         */ utfx1.encodeUTF16toUTF8 = function(src, dst) {
            utfx1.UTF16toUTF8(src, function(cp) {
                utfx1.encodeUTF8(cp, dst);
            });
        };
        /**
         * Decodes and converts UTF8 bytes to UTF16 characters.
         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there
         *  are no more bytes left.
         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.
         * @throws {RangeError} If a starting byte is invalid in UTF8
         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the remaining bytes.
         */ utfx1.decodeUTF8toUTF16 = function(src, dst) {
            utfx1.decodeUTF8(src, function(cp) {
                utfx1.UTF8toUTF16(cp, dst);
            });
        };
        /**
         * Calculates the byte length of an UTF8 code point.
         * @param {number} cp UTF8 code point
         * @returns {number} Byte length
         */ utfx1.calculateCodePoint = function(cp) {
            return cp < 128 ? 1 : cp < 2048 ? 2 : cp < 65536 ? 3 : 4;
        };
        /**
         * Calculates the number of UTF8 bytes required to store UTF8 code points.
         * @param {(!function():number|null)} src Code points source as a function returning the next code point respectively
         *  `null` if there are no more code points left.
         * @returns {number} The number of UTF8 bytes required
         */ utfx1.calculateUTF8 = function(src) {
            var cp, l = 0;
            while((cp = src()) !== null)l += utfx1.calculateCodePoint(cp);
            return l;
        };
        /**
         * Calculates the number of UTF8 code points respectively UTF8 bytes required to store UTF16 char codes.
         * @param {(!function():number|null)} src Characters source as a function returning the next char code respectively
         *  `null` if there are no more characters left.
         * @returns {!Array.<number>} The number of UTF8 code points at index 0 and the number of UTF8 bytes required at index 1.
         */ utfx1.calculateUTF16asUTF8 = function(src) {
            var n = 0, l = 0;
            utfx1.UTF16toUTF8(src, function(cp) {
                ++n;
                l += utfx1.calculateCodePoint(cp);
            });
            return [
                n,
                l
            ];
        };
        return utfx1;
    }();
    Date.now = Date.now || function() {
        return +new Date;
    };
    /**
     * @type {number}
     * @const
     * @inner
     */ var BCRYPT_SALT_LEN = 16;
    /**
     * @type {number}
     * @const
     * @inner
     */ var GENSALT_DEFAULT_LOG2_ROUNDS = 10;
    /**
     * @type {number}
     * @const
     * @inner
     */ var BLOWFISH_NUM_ROUNDS = 16;
    /**
     * @type {number}
     * @const
     * @inner
     */ var MAX_EXECUTION_TIME = 100;
    /**
     * @type {Array.<number>}
     * @const
     * @inner
     */ var P_ORIG = [
        608135816,
        2242054355,
        320440878,
        57701188,
        2752067618,
        698298832,
        137296536,
        3964562569,
        1160258022,
        953160567,
        3193202383,
        887688300,
        3232508343,
        3380367581,
        1065670069,
        3041331479,
        2450970073,
        2306472731
    ];
    /**
     * @type {Array.<number>}
     * @const
     * @inner
     */ var S_ORIG = [
        3509652390,
        2564797868,
        805139163,
        3491422135,
        3101798381,
        1780907670,
        3128725573,
        4046225305,
        614570311,
        3012652279,
        134345442,
        2240740374,
        1667834072,
        1901547113,
        2757295779,
        4103290238,
        227898511,
        1921955416,
        1904987480,
        2182433518,
        2069144605,
        3260701109,
        2620446009,
        720527379,
        3318853667,
        677414384,
        3393288472,
        3101374703,
        2390351024,
        1614419982,
        1822297739,
        2954791486,
        3608508353,
        3174124327,
        2024746970,
        1432378464,
        3864339955,
        2857741204,
        1464375394,
        1676153920,
        1439316330,
        715854006,
        3033291828,
        289532110,
        2706671279,
        2087905683,
        3018724369,
        1668267050,
        732546397,
        1947742710,
        3462151702,
        2609353502,
        2950085171,
        1814351708,
        2050118529,
        680887927,
        999245976,
        1800124847,
        3300911131,
        1713906067,
        1641548236,
        4213287313,
        1216130144,
        1575780402,
        4018429277,
        3917837745,
        3693486850,
        3949271944,
        596196993,
        3549867205,
        258830323,
        2213823033,
        772490370,
        2760122372,
        1774776394,
        2652871518,
        566650946,
        4142492826,
        1728879713,
        2882767088,
        1783734482,
        3629395816,
        2517608232,
        2874225571,
        1861159788,
        326777828,
        3124490320,
        2130389656,
        2716951837,
        967770486,
        1724537150,
        2185432712,
        2364442137,
        1164943284,
        2105845187,
        998989502,
        3765401048,
        2244026483,
        1075463327,
        1455516326,
        1322494562,
        910128902,
        469688178,
        1117454909,
        936433444,
        3490320968,
        3675253459,
        1240580251,
        122909385,
        2157517691,
        634681816,
        4142456567,
        3825094682,
        3061402683,
        2540495037,
        79693498,
        3249098678,
        1084186820,
        1583128258,
        426386531,
        1761308591,
        1047286709,
        322548459,
        995290223,
        1845252383,
        2603652396,
        3431023940,
        2942221577,
        3202600964,
        3727903485,
        1712269319,
        422464435,
        3234572375,
        1170764815,
        3523960633,
        3117677531,
        1434042557,
        442511882,
        3600875718,
        1076654713,
        1738483198,
        4213154764,
        2393238008,
        3677496056,
        1014306527,
        4251020053,
        793779912,
        2902807211,
        842905082,
        4246964064,
        1395751752,
        1040244610,
        2656851899,
        3396308128,
        445077038,
        3742853595,
        3577915638,
        679411651,
        2892444358,
        2354009459,
        1767581616,
        3150600392,
        3791627101,
        3102740896,
        284835224,
        4246832056,
        1258075500,
        768725851,
        2589189241,
        3069724005,
        3532540348,
        1274779536,
        3789419226,
        2764799539,
        1660621633,
        3471099624,
        4011903706,
        913787905,
        3497959166,
        737222580,
        2514213453,
        2928710040,
        3937242737,
        1804850592,
        3499020752,
        2949064160,
        2386320175,
        2390070455,
        2415321851,
        4061277028,
        2290661394,
        2416832540,
        1336762016,
        1754252060,
        3520065937,
        3014181293,
        791618072,
        3188594551,
        3933548030,
        2332172193,
        3852520463,
        3043980520,
        413987798,
        3465142937,
        3030929376,
        4245938359,
        2093235073,
        3534596313,
        375366246,
        2157278981,
        2479649556,
        555357303,
        3870105701,
        2008414854,
        3344188149,
        4221384143,
        3956125452,
        2067696032,
        3594591187,
        2921233993,
        2428461,
        544322398,
        577241275,
        1471733935,
        610547355,
        4027169054,
        1432588573,
        1507829418,
        2025931657,
        3646575487,
        545086370,
        48609733,
        2200306550,
        1653985193,
        298326376,
        1316178497,
        3007786442,
        2064951626,
        458293330,
        2589141269,
        3591329599,
        3164325604,
        727753846,
        2179363840,
        146436021,
        1461446943,
        4069977195,
        705550613,
        3059967265,
        3887724982,
        4281599278,
        3313849956,
        1404054877,
        2845806497,
        146425753,
        1854211946,
        1266315497,
        3048417604,
        3681880366,
        3289982499,
        2909710000,
        1235738493,
        2632868024,
        2414719590,
        3970600049,
        1771706367,
        1449415276,
        3266420449,
        422970021,
        1963543593,
        2690192192,
        3826793022,
        1062508698,
        1531092325,
        1804592342,
        2583117782,
        2714934279,
        4024971509,
        1294809318,
        4028980673,
        1289560198,
        2221992742,
        1669523910,
        35572830,
        157838143,
        1052438473,
        1016535060,
        1802137761,
        1753167236,
        1386275462,
        3080475397,
        2857371447,
        1040679964,
        2145300060,
        2390574316,
        1461121720,
        2956646967,
        4031777805,
        4028374788,
        33600511,
        2920084762,
        1018524850,
        629373528,
        3691585981,
        3515945977,
        2091462646,
        2486323059,
        586499841,
        988145025,
        935516892,
        3367335476,
        2599673255,
        2839830854,
        265290510,
        3972581182,
        2759138881,
        3795373465,
        1005194799,
        847297441,
        406762289,
        1314163512,
        1332590856,
        1866599683,
        4127851711,
        750260880,
        613907577,
        1450815602,
        3165620655,
        3734664991,
        3650291728,
        3012275730,
        3704569646,
        1427272223,
        778793252,
        1343938022,
        2676280711,
        2052605720,
        1946737175,
        3164576444,
        3914038668,
        3967478842,
        3682934266,
        1661551462,
        3294938066,
        4011595847,
        840292616,
        3712170807,
        616741398,
        312560963,
        711312465,
        1351876610,
        322626781,
        1910503582,
        271666773,
        2175563734,
        1594956187,
        70604529,
        3617834859,
        1007753275,
        1495573769,
        4069517037,
        2549218298,
        2663038764,
        504708206,
        2263041392,
        3941167025,
        2249088522,
        1514023603,
        1998579484,
        1312622330,
        694541497,
        2582060303,
        2151582166,
        1382467621,
        776784248,
        2618340202,
        3323268794,
        2497899128,
        2784771155,
        503983604,
        4076293799,
        907881277,
        423175695,
        432175456,
        1378068232,
        4145222326,
        3954048622,
        3938656102,
        3820766613,
        2793130115,
        2977904593,
        26017576,
        3274890735,
        3194772133,
        1700274565,
        1756076034,
        4006520079,
        3677328699,
        720338349,
        1533947780,
        354530856,
        688349552,
        3973924725,
        1637815568,
        332179504,
        3949051286,
        53804574,
        2852348879,
        3044236432,
        1282449977,
        3583942155,
        3416972820,
        4006381244,
        1617046695,
        2628476075,
        3002303598,
        1686838959,
        431878346,
        2686675385,
        1700445008,
        1080580658,
        1009431731,
        832498133,
        3223435511,
        2605976345,
        2271191193,
        2516031870,
        1648197032,
        4164389018,
        2548247927,
        300782431,
        375919233,
        238389289,
        3353747414,
        2531188641,
        2019080857,
        1475708069,
        455242339,
        2609103871,
        448939670,
        3451063019,
        1395535956,
        2413381860,
        1841049896,
        1491858159,
        885456874,
        4264095073,
        4001119347,
        1565136089,
        3898914787,
        1108368660,
        540939232,
        1173283510,
        2745871338,
        3681308437,
        4207628240,
        3343053890,
        4016749493,
        1699691293,
        1103962373,
        3625875870,
        2256883143,
        3830138730,
        1031889488,
        3479347698,
        1535977030,
        4236805024,
        3251091107,
        2132092099,
        1774941330,
        1199868427,
        1452454533,
        157007616,
        2904115357,
        342012276,
        595725824,
        1480756522,
        206960106,
        497939518,
        591360097,
        863170706,
        2375253569,
        3596610801,
        1814182875,
        2094937945,
        3421402208,
        1082520231,
        3463918190,
        2785509508,
        435703966,
        3908032597,
        1641649973,
        2842273706,
        3305899714,
        1510255612,
        2148256476,
        2655287854,
        3276092548,
        4258621189,
        236887753,
        3681803219,
        274041037,
        1734335097,
        3815195456,
        3317970021,
        1899903192,
        1026095262,
        4050517792,
        356393447,
        2410691914,
        3873677099,
        3682840055,
        3913112168,
        2491498743,
        4132185628,
        2489919796,
        1091903735,
        1979897079,
        3170134830,
        3567386728,
        3557303409,
        857797738,
        1136121015,
        1342202287,
        507115054,
        2535736646,
        337727348,
        3213592640,
        1301675037,
        2528481711,
        1895095763,
        1721773893,
        3216771564,
        62756741,
        2142006736,
        835421444,
        2531993523,
        1442658625,
        3659876326,
        2882144922,
        676362277,
        1392781812,
        170690266,
        3921047035,
        1759253602,
        3611846912,
        1745797284,
        664899054,
        1329594018,
        3901205900,
        3045908486,
        2062866102,
        2865634940,
        3543621612,
        3464012697,
        1080764994,
        553557557,
        3656615353,
        3996768171,
        991055499,
        499776247,
        1265440854,
        648242737,
        3940784050,
        980351604,
        3713745714,
        1749149687,
        3396870395,
        4211799374,
        3640570775,
        1161844396,
        3125318951,
        1431517754,
        545492359,
        4268468663,
        3499529547,
        1437099964,
        2702547544,
        3433638243,
        2581715763,
        2787789398,
        1060185593,
        1593081372,
        2418618748,
        4260947970,
        69676912,
        2159744348,
        86519011,
        2512459080,
        3838209314,
        1220612927,
        3339683548,
        133810670,
        1090789135,
        1078426020,
        1569222167,
        845107691,
        3583754449,
        4072456591,
        1091646820,
        628848692,
        1613405280,
        3757631651,
        526609435,
        236106946,
        48312990,
        2942717905,
        3402727701,
        1797494240,
        859738849,
        992217954,
        4005476642,
        2243076622,
        3870952857,
        3732016268,
        765654824,
        3490871365,
        2511836413,
        1685915746,
        3888969200,
        1414112111,
        2273134842,
        3281911079,
        4080962846,
        172450625,
        2569994100,
        980381355,
        4109958455,
        2819808352,
        2716589560,
        2568741196,
        3681446669,
        3329971472,
        1835478071,
        660984891,
        3704678404,
        4045999559,
        3422617507,
        3040415634,
        1762651403,
        1719377915,
        3470491036,
        2693910283,
        3642056355,
        3138596744,
        1364962596,
        2073328063,
        1983633131,
        926494387,
        3423689081,
        2150032023,
        4096667949,
        1749200295,
        3328846651,
        309677260,
        2016342300,
        1779581495,
        3079819751,
        111262694,
        1274766160,
        443224088,
        298511866,
        1025883608,
        3806446537,
        1145181785,
        168956806,
        3641502830,
        3584813610,
        1689216846,
        3666258015,
        3200248200,
        1692713982,
        2646376535,
        4042768518,
        1618508792,
        1610833997,
        3523052358,
        4130873264,
        2001055236,
        3610705100,
        2202168115,
        4028541809,
        2961195399,
        1006657119,
        2006996926,
        3186142756,
        1430667929,
        3210227297,
        1314452623,
        4074634658,
        4101304120,
        2273951170,
        1399257539,
        3367210612,
        3027628629,
        1190975929,
        2062231137,
        2333990788,
        2221543033,
        2438960610,
        1181637006,
        548689776,
        2362791313,
        3372408396,
        3104550113,
        3145860560,
        296247880,
        1970579870,
        3078560182,
        3769228297,
        1714227617,
        3291629107,
        3898220290,
        166772364,
        1251581989,
        493813264,
        448347421,
        195405023,
        2709975567,
        677966185,
        3703036547,
        1463355134,
        2715995803,
        1338867538,
        1343315457,
        2802222074,
        2684532164,
        233230375,
        2599980071,
        2000651841,
        3277868038,
        1638401717,
        4028070440,
        3237316320,
        6314154,
        819756386,
        300326615,
        590932579,
        1405279636,
        3267499572,
        3150704214,
        2428286686,
        3959192993,
        3461946742,
        1862657033,
        1266418056,
        963775037,
        2089974820,
        2263052895,
        1917689273,
        448879540,
        3550394620,
        3981727096,
        150775221,
        3627908307,
        1303187396,
        508620638,
        2975983352,
        2726630617,
        1817252668,
        1876281319,
        1457606340,
        908771278,
        3720792119,
        3617206836,
        2455994898,
        1729034894,
        1080033504,
        976866871,
        3556439503,
        2881648439,
        1522871579,
        1555064734,
        1336096578,
        3548522304,
        2579274686,
        3574697629,
        3205460757,
        3593280638,
        3338716283,
        3079412587,
        564236357,
        2993598910,
        1781952180,
        1464380207,
        3163844217,
        3332601554,
        1699332808,
        1393555694,
        1183702653,
        3581086237,
        1288719814,
        691649499,
        2847557200,
        2895455976,
        3193889540,
        2717570544,
        1781354906,
        1676643554,
        2592534050,
        3230253752,
        1126444790,
        2770207658,
        2633158820,
        2210423226,
        2615765581,
        2414155088,
        3127139286,
        673620729,
        2805611233,
        1269405062,
        4015350505,
        3341807571,
        4149409754,
        1057255273,
        2012875353,
        2162469141,
        2276492801,
        2601117357,
        993977747,
        3918593370,
        2654263191,
        753973209,
        36408145,
        2530585658,
        25011837,
        3520020182,
        2088578344,
        530523599,
        2918365339,
        1524020338,
        1518925132,
        3760827505,
        3759777254,
        1202760957,
        3985898139,
        3906192525,
        674977740,
        4174734889,
        2031300136,
        2019492241,
        3983892565,
        4153806404,
        3822280332,
        352677332,
        2297720250,
        60907813,
        90501309,
        3286998549,
        1016092578,
        2535922412,
        2839152426,
        457141659,
        509813237,
        4120667899,
        652014361,
        1966332200,
        2975202805,
        55981186,
        2327461051,
        676427537,
        3255491064,
        2882294119,
        3433927263,
        1307055953,
        942726286,
        933058658,
        2468411793,
        3933900994,
        4215176142,
        1361170020,
        2001714738,
        2830558078,
        3274259782,
        1222529897,
        1679025792,
        2729314320,
        3714953764,
        1770335741,
        151462246,
        3013232138,
        1682292957,
        1483529935,
        471910574,
        1539241949,
        458788160,
        3436315007,
        1807016891,
        3718408830,
        978976581,
        1043663428,
        3165965781,
        1927990952,
        4200891579,
        2372276910,
        3208408903,
        3533431907,
        1412390302,
        2931980059,
        4132332400,
        1947078029,
        3881505623,
        4168226417,
        2941484381,
        1077988104,
        1320477388,
        886195818,
        18198404,
        3786409000,
        2509781533,
        112762804,
        3463356488,
        1866414978,
        891333506,
        18488651,
        661792760,
        1628790961,
        3885187036,
        3141171499,
        876946877,
        2693282273,
        1372485963,
        791857591,
        2686433993,
        3759982718,
        3167212022,
        3472953795,
        2716379847,
        445679433,
        3561995674,
        3504004811,
        3574258232,
        54117162,
        3331405415,
        2381918588,
        3769707343,
        4154350007,
        1140177722,
        4074052095,
        668550556,
        3214352940,
        367459370,
        261225585,
        2610173221,
        4209349473,
        3468074219,
        3265815641,
        314222801,
        3066103646,
        3808782860,
        282218597,
        3406013506,
        3773591054,
        379116347,
        1285071038,
        846784868,
        2669647154,
        3771962079,
        3550491691,
        2305946142,
        453669953,
        1268987020,
        3317592352,
        3279303384,
        3744833421,
        2610507566,
        3859509063,
        266596637,
        3847019092,
        517658769,
        3462560207,
        3443424879,
        370717030,
        4247526661,
        2224018117,
        4143653529,
        4112773975,
        2788324899,
        2477274417,
        1456262402,
        2901442914,
        1517677493,
        1846949527,
        2295493580,
        3734397586,
        2176403920,
        1280348187,
        1908823572,
        3871786941,
        846861322,
        1172426758,
        3287448474,
        3383383037,
        1655181056,
        3139813346,
        901632758,
        1897031941,
        2986607138,
        3066810236,
        3447102507,
        1393639104,
        373351379,
        950779232,
        625454576,
        3124240540,
        4148612726,
        2007998917,
        544563296,
        2244738638,
        2330496472,
        2058025392,
        1291430526,
        424198748,
        50039436,
        29584100,
        3605783033,
        2429876329,
        2791104160,
        1057563949,
        3255363231,
        3075367218,
        3463963227,
        1469046755,
        985887462
    ];
    /**
     * @type {Array.<number>}
     * @const
     * @inner
     */ var C_ORIG = [
        1332899944,
        1700884034,
        1701343084,
        1684370003,
        1668446532,
        1869963892
    ];
    /**
     * @param {Array.<number>} lr
     * @param {number} off
     * @param {Array.<number>} P
     * @param {Array.<number>} S
     * @returns {Array.<number>}
     * @inner
     */ function _encipher(lr, off, P, S) {
        var n, l = lr[off], r = lr[off + 1];
        l ^= P[0];
        /*
        for (var i=0, k=BLOWFISH_NUM_ROUNDS-2; i<=k;)
            // Feistel substitution on left word
            n  = S[l >>> 24],
            n += S[0x100 | ((l >> 16) & 0xff)],
            n ^= S[0x200 | ((l >> 8) & 0xff)],
            n += S[0x300 | (l & 0xff)],
            r ^= n ^ P[++i],
            // Feistel substitution on right word
            n  = S[r >>> 24],
            n += S[0x100 | ((r >> 16) & 0xff)],
            n ^= S[0x200 | ((r >> 8) & 0xff)],
            n += S[0x300 | (r & 0xff)],
            l ^= n ^ P[++i];
        */ //The following is an unrolled version of the above loop.
        //Iteration 0
        n = S[l >>> 24];
        n += S[256 | l >> 16 & 255];
        n ^= S[512 | l >> 8 & 255];
        n += S[768 | l & 255];
        r ^= n ^ P[1];
        n = S[r >>> 24];
        n += S[256 | r >> 16 & 255];
        n ^= S[512 | r >> 8 & 255];
        n += S[768 | r & 255];
        l ^= n ^ P[2];
        //Iteration 1
        n = S[l >>> 24];
        n += S[256 | l >> 16 & 255];
        n ^= S[512 | l >> 8 & 255];
        n += S[768 | l & 255];
        r ^= n ^ P[3];
        n = S[r >>> 24];
        n += S[256 | r >> 16 & 255];
        n ^= S[512 | r >> 8 & 255];
        n += S[768 | r & 255];
        l ^= n ^ P[4];
        //Iteration 2
        n = S[l >>> 24];
        n += S[256 | l >> 16 & 255];
        n ^= S[512 | l >> 8 & 255];
        n += S[768 | l & 255];
        r ^= n ^ P[5];
        n = S[r >>> 24];
        n += S[256 | r >> 16 & 255];
        n ^= S[512 | r >> 8 & 255];
        n += S[768 | r & 255];
        l ^= n ^ P[6];
        //Iteration 3
        n = S[l >>> 24];
        n += S[256 | l >> 16 & 255];
        n ^= S[512 | l >> 8 & 255];
        n += S[768 | l & 255];
        r ^= n ^ P[7];
        n = S[r >>> 24];
        n += S[256 | r >> 16 & 255];
        n ^= S[512 | r >> 8 & 255];
        n += S[768 | r & 255];
        l ^= n ^ P[8];
        //Iteration 4
        n = S[l >>> 24];
        n += S[256 | l >> 16 & 255];
        n ^= S[512 | l >> 8 & 255];
        n += S[768 | l & 255];
        r ^= n ^ P[9];
        n = S[r >>> 24];
        n += S[256 | r >> 16 & 255];
        n ^= S[512 | r >> 8 & 255];
        n += S[768 | r & 255];
        l ^= n ^ P[10];
        //Iteration 5
        n = S[l >>> 24];
        n += S[256 | l >> 16 & 255];
        n ^= S[512 | l >> 8 & 255];
        n += S[768 | l & 255];
        r ^= n ^ P[11];
        n = S[r >>> 24];
        n += S[256 | r >> 16 & 255];
        n ^= S[512 | r >> 8 & 255];
        n += S[768 | r & 255];
        l ^= n ^ P[12];
        //Iteration 6
        n = S[l >>> 24];
        n += S[256 | l >> 16 & 255];
        n ^= S[512 | l >> 8 & 255];
        n += S[768 | l & 255];
        r ^= n ^ P[13];
        n = S[r >>> 24];
        n += S[256 | r >> 16 & 255];
        n ^= S[512 | r >> 8 & 255];
        n += S[768 | r & 255];
        l ^= n ^ P[14];
        //Iteration 7
        n = S[l >>> 24];
        n += S[256 | l >> 16 & 255];
        n ^= S[512 | l >> 8 & 255];
        n += S[768 | l & 255];
        r ^= n ^ P[15];
        n = S[r >>> 24];
        n += S[256 | r >> 16 & 255];
        n ^= S[512 | r >> 8 & 255];
        n += S[768 | r & 255];
        l ^= n ^ P[16];
        lr[off] = r ^ P[BLOWFISH_NUM_ROUNDS + 1];
        lr[off + 1] = l;
        return lr;
    }
    /**
     * @param {Array.<number>} data
     * @param {number} offp
     * @returns {{key: number, offp: number}}
     * @inner
     */ function _streamtoword(data, offp) {
        for(var i = 0, word = 0; i < 4; ++i)word = word << 8 | data[offp] & 255, offp = (offp + 1) % data.length;
        return {
            key: word,
            offp: offp
        };
    }
    /**
     * @param {Array.<number>} key
     * @param {Array.<number>} P
     * @param {Array.<number>} S
     * @inner
     */ function _key(key, P, S) {
        var offset = 0, lr = [
            0,
            0
        ], plen = P.length, slen = S.length, sw;
        for(var i = 0; i < plen; i++)sw = _streamtoword(key, offset), offset = sw.offp, P[i] = P[i] ^ sw.key;
        for(i = 0; i < plen; i += 2)lr = _encipher(lr, 0, P, S), P[i] = lr[0], P[i + 1] = lr[1];
        for(i = 0; i < slen; i += 2)lr = _encipher(lr, 0, P, S), S[i] = lr[0], S[i + 1] = lr[1];
    }
    /**
     * Expensive key schedule Blowfish.
     * @param {Array.<number>} data
     * @param {Array.<number>} key
     * @param {Array.<number>} P
     * @param {Array.<number>} S
     * @inner
     */ function _ekskey(data, key, P, S) {
        var offp = 0, lr = [
            0,
            0
        ], plen = P.length, slen = S.length, sw;
        for(var i = 0; i < plen; i++)sw = _streamtoword(key, offp), offp = sw.offp, P[i] = P[i] ^ sw.key;
        offp = 0;
        for(i = 0; i < plen; i += 2)sw = _streamtoword(data, offp), offp = sw.offp, lr[0] ^= sw.key, sw = _streamtoword(data, offp), offp = sw.offp, lr[1] ^= sw.key, lr = _encipher(lr, 0, P, S), P[i] = lr[0], P[i + 1] = lr[1];
        for(i = 0; i < slen; i += 2)sw = _streamtoword(data, offp), offp = sw.offp, lr[0] ^= sw.key, sw = _streamtoword(data, offp), offp = sw.offp, lr[1] ^= sw.key, lr = _encipher(lr, 0, P, S), S[i] = lr[0], S[i + 1] = lr[1];
    }
    /**
     * Internaly crypts a string.
     * @param {Array.<number>} b Bytes to crypt
     * @param {Array.<number>} salt Salt bytes to use
     * @param {number} rounds Number of rounds
     * @param {function(Error, Array.<number>=)=} callback Callback receiving the error, if any, and the resulting bytes. If
     *  omitted, the operation will be performed synchronously.
     *  @param {function(number)=} progressCallback Callback called with the current progress
     * @returns {!Array.<number>|undefined} Resulting bytes if callback has been omitted, otherwise `undefined`
     * @inner
     */ function _crypt(b, salt, rounds, callback, progressCallback) {
        var cdata = C_ORIG.slice(), clen = cdata.length, err;
        // Validate
        if (rounds < 4 || rounds > 31) {
            err = Error("Illegal number of rounds (4-31): " + rounds);
            if (callback) {
                nextTick(callback.bind(this, err));
                return;
            } else throw err;
        }
        if (salt.length !== BCRYPT_SALT_LEN) {
            err = Error("Illegal salt length: " + salt.length + " != " + BCRYPT_SALT_LEN);
            if (callback) {
                nextTick(callback.bind(this, err));
                return;
            } else throw err;
        }
        rounds = 1 << rounds >>> 0;
        var P, S, i = 0, j;
        //Use typed arrays when available - huge speedup!
        if (Int32Array) {
            P = new Int32Array(P_ORIG);
            S = new Int32Array(S_ORIG);
        } else {
            P = P_ORIG.slice();
            S = S_ORIG.slice();
        }
        _ekskey(salt, b, P, S);
        /**
         * Calcualtes the next round.
         * @returns {Array.<number>|undefined} Resulting array if callback has been omitted, otherwise `undefined`
         * @inner
         */ function next() {
            if (progressCallback) progressCallback(i / rounds);
            if (i < rounds) {
                var start = Date.now();
                for(; i < rounds;){
                    i = i + 1;
                    _key(b, P, S);
                    _key(salt, P, S);
                    if (Date.now() - start > MAX_EXECUTION_TIME) break;
                }
            } else {
                for(i = 0; i < 64; i++)for(j = 0; j < clen >> 1; j++)_encipher(cdata, j << 1, P, S);
                var ret = [];
                for(i = 0; i < clen; i++)ret.push((cdata[i] >> 24 & 255) >>> 0), ret.push((cdata[i] >> 16 & 255) >>> 0), ret.push((cdata[i] >> 8 & 255) >>> 0), ret.push((cdata[i] & 255) >>> 0);
                if (callback) {
                    callback(null, ret);
                    return;
                } else return ret;
            }
            if (callback) nextTick(next);
        }
        // Async
        if (typeof callback !== 'undefined') next();
        else {
            var res;
            while(true)if (typeof (res = next()) !== 'undefined') return res || [];
        }
    }
    /**
     * Internally hashes a string.
     * @param {string} s String to hash
     * @param {?string} salt Salt to use, actually never null
     * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting hash. If omitted,
     *  hashing is perormed synchronously.
     *  @param {function(number)=} progressCallback Callback called with the current progress
     * @returns {string|undefined} Resulting hash if callback has been omitted, otherwise `undefined`
     * @inner
     */ function _hash(s, salt, callback, progressCallback) {
        var err;
        if (typeof s !== 'string' || typeof salt !== 'string') {
            err = Error("Invalid string / salt: Not a string");
            if (callback) {
                nextTick(callback.bind(this, err));
                return;
            } else throw err;
        }
        // Validate the salt
        var minor, offset;
        if (salt.charAt(0) !== '$' || salt.charAt(1) !== '2') {
            err = Error("Invalid salt version: " + salt.substring(0, 2));
            if (callback) {
                nextTick(callback.bind(this, err));
                return;
            } else throw err;
        }
        if (salt.charAt(2) === '$') minor = String.fromCharCode(0), offset = 3;
        else {
            minor = salt.charAt(2);
            if (minor !== 'a' && minor !== 'b' && minor !== 'y' || salt.charAt(3) !== '$') {
                err = Error("Invalid salt revision: " + salt.substring(2, 4));
                if (callback) {
                    nextTick(callback.bind(this, err));
                    return;
                } else throw err;
            }
            offset = 4;
        }
        // Extract number of rounds
        if (salt.charAt(offset + 2) > '$') {
            err = Error("Missing salt rounds");
            if (callback) {
                nextTick(callback.bind(this, err));
                return;
            } else throw err;
        }
        var r1 = parseInt(salt.substring(offset, offset + 1), 10) * 10, r2 = parseInt(salt.substring(offset + 1, offset + 2), 10), rounds = r1 + r2, real_salt = salt.substring(offset + 3, offset + 25);
        s += minor >= 'a' ? "\x00" : "";
        var passwordb = stringToBytes(s), saltb = base64_decode(real_salt, BCRYPT_SALT_LEN);
        /**
         * Finishes hashing.
         * @param {Array.<number>} bytes Byte array
         * @returns {string}
         * @inner
         */ function finish(bytes) {
            var res = [];
            res.push("$2");
            if (minor >= 'a') res.push(minor);
            res.push("$");
            if (rounds < 10) res.push("0");
            res.push(rounds.toString());
            res.push("$");
            res.push(base64_encode(saltb, saltb.length));
            res.push(base64_encode(bytes, C_ORIG.length * 4 - 1));
            return res.join('');
        }
        // Sync
        if (typeof callback == 'undefined') return finish(_crypt(passwordb, saltb, rounds));
        else _crypt(passwordb, saltb, rounds, function(err1, bytes) {
            if (err1) callback(err1, null);
            else callback(null, finish(bytes));
        }, progressCallback);
    }
    /**
     * Encodes a byte array to base64 with up to len bytes of input, using the custom bcrypt alphabet.
     * @function
     * @param {!Array.<number>} b Byte array
     * @param {number} len Maximum input length
     * @returns {string}
     * @expose
     */ bcrypt.encodeBase64 = base64_encode;
    /**
     * Decodes a base64 encoded string to up to len bytes of output, using the custom bcrypt alphabet.
     * @function
     * @param {string} s String to decode
     * @param {number} len Maximum output length
     * @returns {!Array.<number>}
     * @expose
     */ bcrypt.decodeBase64 = base64_decode;
    return bcrypt;
});

},{"process":"5svFz","crypto":"4cAiC"}],"4cAiC":[function(require,module,exports) {
'use strict';
exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes');
exports.createHash = exports.Hash = require('create-hash');
exports.createHmac = exports.Hmac = require('create-hmac');
var algos = require('browserify-sign/algos');
var algoKeys = Object.keys(algos);
var hashes = [
    'sha1',
    'sha224',
    'sha256',
    'sha384',
    'sha512',
    'md5',
    'rmd160'
].concat(algoKeys);
exports.getHashes = function() {
    return hashes;
};
var p = require('pbkdf2');
exports.pbkdf2 = p.pbkdf2;
exports.pbkdf2Sync = p.pbkdf2Sync;
var aes = require('browserify-cipher');
exports.Cipher = aes.Cipher;
exports.createCipher = aes.createCipher;
exports.Cipheriv = aes.Cipheriv;
exports.createCipheriv = aes.createCipheriv;
exports.Decipher = aes.Decipher;
exports.createDecipher = aes.createDecipher;
exports.Decipheriv = aes.Decipheriv;
exports.createDecipheriv = aes.createDecipheriv;
exports.getCiphers = aes.getCiphers;
exports.listCiphers = aes.listCiphers;
var dh = require('diffie-hellman');
exports.DiffieHellmanGroup = dh.DiffieHellmanGroup;
exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup;
exports.getDiffieHellman = dh.getDiffieHellman;
exports.createDiffieHellman = dh.createDiffieHellman;
exports.DiffieHellman = dh.DiffieHellman;
var sign = require('browserify-sign');
exports.createSign = sign.createSign;
exports.Sign = sign.Sign;
exports.createVerify = sign.createVerify;
exports.Verify = sign.Verify;
exports.createECDH = require('create-ecdh');
var publicEncrypt = require('public-encrypt');
exports.publicEncrypt = publicEncrypt.publicEncrypt;
exports.privateEncrypt = publicEncrypt.privateEncrypt;
exports.publicDecrypt = publicEncrypt.publicDecrypt;
exports.privateDecrypt = publicEncrypt.privateDecrypt;
// the least I can do is make error messages for the rest of the node.js/crypto api.
// ;[
//   'createCredentials'
// ].forEach(function (name) {
//   exports[name] = function () {
//     throw new Error([
//       'sorry, ' + name + ' is not implemented yet',
//       'we accept pull requests',
//       'https://github.com/crypto-browserify/crypto-browserify'
//     ].join('\n'))
//   }
// })
var rf = require('randomfill');
exports.randomFill = rf.randomFill;
exports.randomFillSync = rf.randomFillSync;
exports.createCredentials = function() {
    throw new Error([
        'sorry, createCredentials is not implemented yet',
        'we accept pull requests',
        'https://github.com/crypto-browserify/crypto-browserify'
    ].join('\n'));
};
exports.constants = {
    'DH_CHECK_P_NOT_SAFE_PRIME': 2,
    'DH_CHECK_P_NOT_PRIME': 1,
    'DH_UNABLE_TO_CHECK_GENERATOR': 4,
    'DH_NOT_SUITABLE_GENERATOR': 8,
    'NPN_ENABLED': 1,
    'ALPN_ENABLED': 1,
    'RSA_PKCS1_PADDING': 1,
    'RSA_SSLV23_PADDING': 2,
    'RSA_NO_PADDING': 3,
    'RSA_PKCS1_OAEP_PADDING': 4,
    'RSA_X931_PADDING': 5,
    'RSA_PKCS1_PSS_PADDING': 6,
    'POINT_CONVERSION_COMPRESSED': 2,
    'POINT_CONVERSION_UNCOMPRESSED': 4,
    'POINT_CONVERSION_HYBRID': 6
};

},{"randombytes":"1rFGB","create-hash":"4iPa5","create-hmac":"fMPri","browserify-sign/algos":"gU9vY","pbkdf2":"latLb","browserify-cipher":"hrjdq","diffie-hellman":"7tOnW","browserify-sign":"3g6eU","create-ecdh":"7PYyd","public-encrypt":"e02FU","randomfill":"2fLpt"}],"1rFGB":[function(require,module,exports) {
var global = arguments[3];
var process = require("process");
'use strict';
// limit of Crypto.getRandomValues()
// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues
var MAX_BYTES = 65536;
// Node supports requesting up to this number of bytes
// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48
var MAX_UINT32 = 4294967295;
function oldBrowser() {
    throw new Error('Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11');
}
var Buffer = require('safe-buffer').Buffer;
var crypto = global.crypto || global.msCrypto;
if (crypto && crypto.getRandomValues) module.exports = randomBytes;
else module.exports = oldBrowser;
function randomBytes(size, cb) {
    // phantomjs needs to throw
    if (size > MAX_UINT32) throw new RangeError('requested too many random bytes');
    var bytes = Buffer.allocUnsafe(size);
    if (size > 0) {
        if (size > MAX_BYTES) // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
        for(var generated = 0; generated < size; generated += MAX_BYTES)// buffer.slice automatically checks if the end is past the end of
        // the buffer so we don't have to here
        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES));
        else crypto.getRandomValues(bytes);
    }
    if (typeof cb === 'function') return process.nextTick(function() {
        cb(null, bytes);
    });
    return bytes;
}

},{"process":"5svFz","safe-buffer":"i3ToV"}],"i3ToV":[function(require,module,exports) {
/* eslint-disable node/no-deprecated-api */ var buffer = require('buffer');
var Buffer = buffer.Buffer;
// alternative to using Object.keys for old browsers
function copyProps(src, dst) {
    for(var key in src)dst[key] = src[key];
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) module.exports = buffer;
else {
    // Copy properties from require('buffer')
    copyProps(buffer, exports);
    exports.Buffer = SafeBuffer;
}
function SafeBuffer(arg, encodingOrOffset, length) {
    return Buffer(arg, encodingOrOffset, length);
}
// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer);
SafeBuffer.from = function(arg, encodingOrOffset, length) {
    if (typeof arg === 'number') throw new TypeError('Argument must not be a number');
    return Buffer(arg, encodingOrOffset, length);
};
SafeBuffer.alloc = function(size, fill, encoding) {
    if (typeof size !== 'number') throw new TypeError('Argument must be a number');
    var buf = Buffer(size);
    if (fill !== undefined) {
        if (typeof encoding === 'string') buf.fill(fill, encoding);
        else buf.fill(fill);
    } else buf.fill(0);
    return buf;
};
SafeBuffer.allocUnsafe = function(size) {
    if (typeof size !== 'number') throw new TypeError('Argument must be a number');
    return Buffer(size);
};
SafeBuffer.allocUnsafeSlow = function(size) {
    if (typeof size !== 'number') throw new TypeError('Argument must be a number');
    return buffer.SlowBuffer(size);
};

},{"buffer":"hX7zZ"}],"hX7zZ":[function(require,module,exports) {
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */ /* eslint-disable no-proto */ 'use strict';
var base64 = require('base64-js');
var ieee754 = require('ieee754');
var customInspectSymbol = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation
 : null;
exports.Buffer = Buffer;
exports.SlowBuffer = SlowBuffer;
exports.INSPECT_MAX_BYTES = 50;
var K_MAX_LENGTH = 2147483647;
exports.kMaxLength = K_MAX_LENGTH;
/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */ Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();
if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
function typedArraySupport() {
    // Can typed array instances can be augmented?
    try {
        var arr = new Uint8Array(1);
        var proto = {
            foo: function() {
                return 42;
            }
        };
        Object.setPrototypeOf(proto, Uint8Array.prototype);
        Object.setPrototypeOf(arr, proto);
        return arr.foo() === 42;
    } catch (e) {
        return false;
    }
}
Object.defineProperty(Buffer.prototype, 'parent', {
    enumerable: true,
    get: function() {
        if (!Buffer.isBuffer(this)) return undefined;
        return this.buffer;
    }
});
Object.defineProperty(Buffer.prototype, 'offset', {
    enumerable: true,
    get: function() {
        if (!Buffer.isBuffer(this)) return undefined;
        return this.byteOffset;
    }
});
function createBuffer(length) {
    if (length > K_MAX_LENGTH) throw new RangeError('The value "' + length + '" is invalid for option "size"');
    // Return an augmented `Uint8Array` instance
    var buf = new Uint8Array(length);
    Object.setPrototypeOf(buf, Buffer.prototype);
    return buf;
}
/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */ function Buffer(arg, encodingOrOffset, length) {
    // Common case.
    if (typeof arg === 'number') {
        if (typeof encodingOrOffset === 'string') throw new TypeError('The "string" argument must be of type string. Received type number');
        return allocUnsafe(arg);
    }
    return from(arg, encodingOrOffset, length);
}
Buffer.poolSize = 8192 // not used by this implementation
;
function from(value, encodingOrOffset, length) {
    if (typeof value === 'string') return fromString(value, encodingOrOffset);
    if (ArrayBuffer.isView(value)) return fromArrayView(value);
    if (value == null) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) return fromArrayBuffer(value, encodingOrOffset, length);
    if (typeof SharedArrayBuffer !== 'undefined' && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) return fromArrayBuffer(value, encodingOrOffset, length);
    if (typeof value === 'number') throw new TypeError('The "value" argument must not be of type number. Received type number');
    var valueOf = value.valueOf && value.valueOf();
    if (valueOf != null && valueOf !== value) return Buffer.from(valueOf, encodingOrOffset, length);
    var b = fromObject(value);
    if (b) return b;
    if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);
    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
}
/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/ Buffer.from = function(value, encodingOrOffset, length) {
    return from(value, encodingOrOffset, length);
};
// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);
Object.setPrototypeOf(Buffer, Uint8Array);
function assertSize(size) {
    if (typeof size !== 'number') throw new TypeError('"size" argument must be of type number');
    else if (size < 0) throw new RangeError('The value "' + size + '" is invalid for option "size"');
}
function alloc(size, fill, encoding) {
    assertSize(size);
    if (size <= 0) return createBuffer(size);
    if (fill !== undefined) // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpreted as a start offset.
    return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
    return createBuffer(size);
}
/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/ Buffer.alloc = function(size, fill, encoding) {
    return alloc(size, fill, encoding);
};
function allocUnsafe(size) {
    assertSize(size);
    return createBuffer(size < 0 ? 0 : checked(size) | 0);
}
/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */ Buffer.allocUnsafe = function(size) {
    return allocUnsafe(size);
};
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */ Buffer.allocUnsafeSlow = function(size) {
    return allocUnsafe(size);
};
function fromString(string, encoding) {
    if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8';
    if (!Buffer.isEncoding(encoding)) throw new TypeError('Unknown encoding: ' + encoding);
    var length = byteLength(string, encoding) | 0;
    var buf = createBuffer(length);
    var actual = buf.write(string, encoding);
    if (actual !== length) // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual);
    return buf;
}
function fromArrayLike(array) {
    var length = array.length < 0 ? 0 : checked(array.length) | 0;
    var buf = createBuffer(length);
    for(var i = 0; i < length; i += 1)buf[i] = array[i] & 255;
    return buf;
}
function fromArrayView(arrayView) {
    if (isInstance(arrayView, Uint8Array)) {
        var copy = new Uint8Array(arrayView);
        return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);
    }
    return fromArrayLike(arrayView);
}
function fromArrayBuffer(array, byteOffset, length) {
    if (byteOffset < 0 || array.byteLength < byteOffset) throw new RangeError('"offset" is outside of buffer bounds');
    if (array.byteLength < byteOffset + (length || 0)) throw new RangeError('"length" is outside of buffer bounds');
    var buf;
    if (byteOffset === undefined && length === undefined) buf = new Uint8Array(array);
    else if (length === undefined) buf = new Uint8Array(array, byteOffset);
    else buf = new Uint8Array(array, byteOffset, length);
    // Return an augmented `Uint8Array` instance
    Object.setPrototypeOf(buf, Buffer.prototype);
    return buf;
}
function fromObject(obj) {
    if (Buffer.isBuffer(obj)) {
        var len = checked(obj.length) | 0;
        var buf = createBuffer(len);
        if (buf.length === 0) return buf;
        obj.copy(buf, 0, 0, len);
        return buf;
    }
    if (obj.length !== undefined) {
        if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) return createBuffer(0);
        return fromArrayLike(obj);
    }
    if (obj.type === 'Buffer' && Array.isArray(obj.data)) return fromArrayLike(obj.data);
}
function checked(length) {
    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
    // length is NaN (which is otherwise coerced to zero.)
    if (length >= K_MAX_LENGTH) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + ' bytes');
    return length | 0;
}
function SlowBuffer(length) {
    if (+length != length) length = 0;
    return Buffer.alloc(+length);
}
Buffer.isBuffer = function isBuffer(b) {
    return b != null && b._isBuffer === true && b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
    ;
};
Buffer.compare = function compare(a, b) {
    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);
    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);
    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
    if (a === b) return 0;
    var x = a.length;
    var y = b.length;
    for(var i = 0, len = Math.min(x, y); i < len; ++i)if (a[i] !== b[i]) {
        x = a[i];
        y = b[i];
        break;
    }
    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
};
Buffer.isEncoding = function isEncoding(encoding) {
    switch(String(encoding).toLowerCase()){
        case 'hex':
        case 'utf8':
        case 'utf-8':
        case 'ascii':
        case 'latin1':
        case 'binary':
        case 'base64':
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
            return true;
        default:
            return false;
    }
};
Buffer.concat = function concat(list, length) {
    if (!Array.isArray(list)) throw new TypeError('"list" argument must be an Array of Buffers');
    if (list.length === 0) return Buffer.alloc(0);
    var i;
    if (length === undefined) {
        length = 0;
        for(i = 0; i < list.length; ++i)length += list[i].length;
    }
    var buffer = Buffer.allocUnsafe(length);
    var pos = 0;
    for(i = 0; i < list.length; ++i){
        var buf = list[i];
        if (isInstance(buf, Uint8Array)) {
            if (pos + buf.length > buffer.length) Buffer.from(buf).copy(buffer, pos);
            else Uint8Array.prototype.set.call(buffer, buf, pos);
        } else if (!Buffer.isBuffer(buf)) throw new TypeError('"list" argument must be an Array of Buffers');
        else buf.copy(buffer, pos);
        pos += buf.length;
    }
    return buffer;
};
function byteLength(string, encoding) {
    if (Buffer.isBuffer(string)) return string.length;
    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) return string.byteLength;
    if (typeof string !== 'string') throw new TypeError("The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type " + typeof string);
    var len = string.length;
    var mustMatch = arguments.length > 2 && arguments[2] === true;
    if (!mustMatch && len === 0) return 0;
    // Use a for loop to avoid recursion
    var loweredCase = false;
    for(;;)switch(encoding){
        case 'ascii':
        case 'latin1':
        case 'binary':
            return len;
        case 'utf8':
        case 'utf-8':
            return utf8ToBytes(string).length;
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
            return len * 2;
        case 'hex':
            return len >>> 1;
        case 'base64':
            return base64ToBytes(string).length;
        default:
            if (loweredCase) return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
            ;
            encoding = ('' + encoding).toLowerCase();
            loweredCase = true;
    }
}
Buffer.byteLength = byteLength;
function slowToString(encoding, start, end) {
    var loweredCase = false;
    // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
    // property of a typed array.
    // This behaves neither like String nor Uint8Array in that we set start/end
    // to their upper/lower bounds if the value passed is out of range.
    // undefined is handled specially as per ECMA-262 6th Edition,
    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
    if (start === undefined || start < 0) start = 0;
    // Return early if start > this.length. Done here to prevent potential uint32
    // coercion fail below.
    if (start > this.length) return '';
    if (end === undefined || end > this.length) end = this.length;
    if (end <= 0) return '';
    // Force coercion to uint32. This will also coerce falsey/NaN values to 0.
    end >>>= 0;
    start >>>= 0;
    if (end <= start) return '';
    if (!encoding) encoding = 'utf8';
    while(true)switch(encoding){
        case 'hex':
            return hexSlice(this, start, end);
        case 'utf8':
        case 'utf-8':
            return utf8Slice(this, start, end);
        case 'ascii':
            return asciiSlice(this, start, end);
        case 'latin1':
        case 'binary':
            return latin1Slice(this, start, end);
        case 'base64':
            return base64Slice(this, start, end);
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
            return utf16leSlice(this, start, end);
        default:
            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
            encoding = (encoding + '').toLowerCase();
            loweredCase = true;
    }
}
// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true;
function swap(b, n, m) {
    var i = b[n];
    b[n] = b[m];
    b[m] = i;
}
Buffer.prototype.swap16 = function swap16() {
    var len = this.length;
    if (len % 2 !== 0) throw new RangeError('Buffer size must be a multiple of 16-bits');
    for(var i = 0; i < len; i += 2)swap(this, i, i + 1);
    return this;
};
Buffer.prototype.swap32 = function swap32() {
    var len = this.length;
    if (len % 4 !== 0) throw new RangeError('Buffer size must be a multiple of 32-bits');
    for(var i = 0; i < len; i += 4){
        swap(this, i, i + 3);
        swap(this, i + 1, i + 2);
    }
    return this;
};
Buffer.prototype.swap64 = function swap64() {
    var len = this.length;
    if (len % 8 !== 0) throw new RangeError('Buffer size must be a multiple of 64-bits');
    for(var i = 0; i < len; i += 8){
        swap(this, i, i + 7);
        swap(this, i + 1, i + 6);
        swap(this, i + 2, i + 5);
        swap(this, i + 3, i + 4);
    }
    return this;
};
Buffer.prototype.toString = function toString() {
    var length = this.length;
    if (length === 0) return '';
    if (arguments.length === 0) return utf8Slice(this, 0, length);
    return slowToString.apply(this, arguments);
};
Buffer.prototype.toLocaleString = Buffer.prototype.toString;
Buffer.prototype.equals = function equals(b) {
    if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');
    if (this === b) return true;
    return Buffer.compare(this, b) === 0;
};
Buffer.prototype.inspect = function inspect() {
    var str = '';
    var max = exports.INSPECT_MAX_BYTES;
    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();
    if (this.length > max) str += ' ... ';
    return '<Buffer ' + str + '>';
};
if (customInspectSymbol) Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;
Buffer.prototype.compare = function compare1(target, start, end, thisStart, thisEnd) {
    if (isInstance(target, Uint8Array)) target = Buffer.from(target, target.offset, target.byteLength);
    if (!Buffer.isBuffer(target)) throw new TypeError("The \"target\" argument must be one of type Buffer or Uint8Array. Received type " + typeof target);
    if (start === undefined) start = 0;
    if (end === undefined) end = target ? target.length : 0;
    if (thisStart === undefined) thisStart = 0;
    if (thisEnd === undefined) thisEnd = this.length;
    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) throw new RangeError('out of range index');
    if (thisStart >= thisEnd && start >= end) return 0;
    if (thisStart >= thisEnd) return -1;
    if (start >= end) return 1;
    start >>>= 0;
    end >>>= 0;
    thisStart >>>= 0;
    thisEnd >>>= 0;
    if (this === target) return 0;
    var x = thisEnd - thisStart;
    var y = end - start;
    var len = Math.min(x, y);
    var thisCopy = this.slice(thisStart, thisEnd);
    var targetCopy = target.slice(start, end);
    for(var i = 0; i < len; ++i)if (thisCopy[i] !== targetCopy[i]) {
        x = thisCopy[i];
        y = targetCopy[i];
        break;
    }
    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
};
// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
    // Empty buffer means no match
    if (buffer.length === 0) return -1;
    // Normalize byteOffset
    if (typeof byteOffset === 'string') {
        encoding = byteOffset;
        byteOffset = 0;
    } else if (byteOffset > 2147483647) byteOffset = 2147483647;
    else if (byteOffset < -2147483648) byteOffset = -2147483648;
    byteOffset = +byteOffset // Coerce to Number.
    ;
    if (numberIsNaN(byteOffset)) // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : buffer.length - 1;
    // Normalize byteOffset: negative offsets start from the end of the buffer
    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
    if (byteOffset >= buffer.length) {
        if (dir) return -1;
        else byteOffset = buffer.length - 1;
    } else if (byteOffset < 0) {
        if (dir) byteOffset = 0;
        else return -1;
    }
    // Normalize val
    if (typeof val === 'string') val = Buffer.from(val, encoding);
    // Finally, search either indexOf (if dir is true) or lastIndexOf
    if (Buffer.isBuffer(val)) {
        // Special case: looking for empty string/buffer always fails
        if (val.length === 0) return -1;
        return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
    } else if (typeof val === 'number') {
        val = val & 255 // Search for a byte value [0-255]
        ;
        if (typeof Uint8Array.prototype.indexOf === 'function') {
            if (dir) return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
            else return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
        }
        return arrayIndexOf(buffer, [
            val
        ], byteOffset, encoding, dir);
    }
    throw new TypeError('val must be string, number or Buffer');
}
function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
    var indexSize = 1;
    var arrLength = arr.length;
    var valLength = val.length;
    if (encoding !== undefined) {
        encoding = String(encoding).toLowerCase();
        if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
            if (arr.length < 2 || val.length < 2) return -1;
            indexSize = 2;
            arrLength /= 2;
            valLength /= 2;
            byteOffset /= 2;
        }
    }
    function read(buf, i) {
        if (indexSize === 1) return buf[i];
        else return buf.readUInt16BE(i * indexSize);
    }
    var i;
    if (dir) {
        var foundIndex = -1;
        for(i = byteOffset; i < arrLength; i++)if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
            if (foundIndex === -1) foundIndex = i;
            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
        } else {
            if (foundIndex !== -1) i -= i - foundIndex;
            foundIndex = -1;
        }
    } else {
        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
        for(i = byteOffset; i >= 0; i--){
            var found = true;
            for(var j = 0; j < valLength; j++)if (read(arr, i + j) !== read(val, j)) {
                found = false;
                break;
            }
            if (found) return i;
        }
    }
    return -1;
}
Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
    return this.indexOf(val, byteOffset, encoding) !== -1;
};
Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
};
Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
};
function hexWrite(buf, string, offset, length) {
    offset = Number(offset) || 0;
    var remaining = buf.length - offset;
    if (!length) length = remaining;
    else {
        length = Number(length);
        if (length > remaining) length = remaining;
    }
    var strLen = string.length;
    if (length > strLen / 2) length = strLen / 2;
    for(var i = 0; i < length; ++i){
        var parsed = parseInt(string.substr(i * 2, 2), 16);
        if (numberIsNaN(parsed)) return i;
        buf[offset + i] = parsed;
    }
    return i;
}
function utf8Write(buf, string, offset, length) {
    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
}
function asciiWrite(buf, string, offset, length) {
    return blitBuffer(asciiToBytes(string), buf, offset, length);
}
function base64Write(buf, string, offset, length) {
    return blitBuffer(base64ToBytes(string), buf, offset, length);
}
function ucs2Write(buf, string, offset, length) {
    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
}
Buffer.prototype.write = function write(string, offset, length, encoding) {
    // Buffer#write(string)
    if (offset === undefined) {
        encoding = 'utf8';
        length = this.length;
        offset = 0;
    // Buffer#write(string, encoding)
    } else if (length === undefined && typeof offset === 'string') {
        encoding = offset;
        length = this.length;
        offset = 0;
    // Buffer#write(string, offset[, length][, encoding])
    } else if (isFinite(offset)) {
        offset = offset >>> 0;
        if (isFinite(length)) {
            length = length >>> 0;
            if (encoding === undefined) encoding = 'utf8';
        } else {
            encoding = length;
            length = undefined;
        }
    } else throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
    var remaining = this.length - offset;
    if (length === undefined || length > remaining) length = remaining;
    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) throw new RangeError('Attempt to write outside buffer bounds');
    if (!encoding) encoding = 'utf8';
    var loweredCase = false;
    for(;;)switch(encoding){
        case 'hex':
            return hexWrite(this, string, offset, length);
        case 'utf8':
        case 'utf-8':
            return utf8Write(this, string, offset, length);
        case 'ascii':
        case 'latin1':
        case 'binary':
            return asciiWrite(this, string, offset, length);
        case 'base64':
            // Warning: maxLength not taken into account in base64Write
            return base64Write(this, string, offset, length);
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
            return ucs2Write(this, string, offset, length);
        default:
            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
            encoding = ('' + encoding).toLowerCase();
            loweredCase = true;
    }
};
Buffer.prototype.toJSON = function toJSON() {
    return {
        type: 'Buffer',
        data: Array.prototype.slice.call(this._arr || this, 0)
    };
};
function base64Slice(buf, start, end) {
    if (start === 0 && end === buf.length) return base64.fromByteArray(buf);
    else return base64.fromByteArray(buf.slice(start, end));
}
function utf8Slice(buf, start, end) {
    end = Math.min(buf.length, end);
    var res = [];
    var i = start;
    while(i < end){
        var firstByte = buf[i];
        var codePoint = null;
        var bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
        if (i + bytesPerSequence <= end) {
            var secondByte, thirdByte, fourthByte, tempCodePoint;
            switch(bytesPerSequence){
                case 1:
                    if (firstByte < 128) codePoint = firstByte;
                    break;
                case 2:
                    secondByte = buf[i + 1];
                    if ((secondByte & 192) === 128) {
                        tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;
                        if (tempCodePoint > 127) codePoint = tempCodePoint;
                    }
                    break;
                case 3:
                    secondByte = buf[i + 1];
                    thirdByte = buf[i + 2];
                    if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {
                        tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;
                        if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) codePoint = tempCodePoint;
                    }
                    break;
                case 4:
                    secondByte = buf[i + 1];
                    thirdByte = buf[i + 2];
                    fourthByte = buf[i + 3];
                    if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {
                        tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;
                        if (tempCodePoint > 65535 && tempCodePoint < 1114112) codePoint = tempCodePoint;
                    }
            }
        }
        if (codePoint === null) {
            // we did not generate a valid codePoint so insert a
            // replacement char (U+FFFD) and advance only 1 byte
            codePoint = 65533;
            bytesPerSequence = 1;
        } else if (codePoint > 65535) {
            // encode to utf16 (surrogate pair dance)
            codePoint -= 65536;
            res.push(codePoint >>> 10 & 1023 | 55296);
            codePoint = 56320 | codePoint & 1023;
        }
        res.push(codePoint);
        i += bytesPerSequence;
    }
    return decodeCodePointsArray(res);
}
// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 4096;
function decodeCodePointsArray(codePoints) {
    var len = codePoints.length;
    if (len <= MAX_ARGUMENTS_LENGTH) return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
    ;
    // Decode in chunks to avoid "call stack size exceeded".
    var res = '';
    var i = 0;
    while(i < len)res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
    return res;
}
function asciiSlice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);
    for(var i = start; i < end; ++i)ret += String.fromCharCode(buf[i] & 127);
    return ret;
}
function latin1Slice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);
    for(var i = start; i < end; ++i)ret += String.fromCharCode(buf[i]);
    return ret;
}
function hexSlice(buf, start, end) {
    var len = buf.length;
    if (!start || start < 0) start = 0;
    if (!end || end < 0 || end > len) end = len;
    var out = '';
    for(var i = start; i < end; ++i)out += hexSliceLookupTable[buf[i]];
    return out;
}
function utf16leSlice(buf, start, end) {
    var bytes = buf.slice(start, end);
    var res = '';
    // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)
    for(var i = 0; i < bytes.length - 1; i += 2)res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
    return res;
}
Buffer.prototype.slice = function slice(start, end) {
    var len = this.length;
    start = ~~start;
    end = end === undefined ? len : ~~end;
    if (start < 0) {
        start += len;
        if (start < 0) start = 0;
    } else if (start > len) start = len;
    if (end < 0) {
        end += len;
        if (end < 0) end = 0;
    } else if (end > len) end = len;
    if (end < start) end = start;
    var newBuf = this.subarray(start, end);
    // Return an augmented `Uint8Array` instance
    Object.setPrototypeOf(newBuf, Buffer.prototype);
    return newBuf;
};
/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */ function checkOffset(offset, ext, length) {
    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
}
Buffer.prototype.readUintLE = Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength1, noAssert) {
    offset = offset >>> 0;
    byteLength1 = byteLength1 >>> 0;
    if (!noAssert) checkOffset(offset, byteLength1, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;
    while((++i) < byteLength1 && (mul *= 256))val += this[offset + i] * mul;
    return val;
};
Buffer.prototype.readUintBE = Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength1, noAssert) {
    offset = offset >>> 0;
    byteLength1 = byteLength1 >>> 0;
    if (!noAssert) checkOffset(offset, byteLength1, this.length);
    var val = this[offset + --byteLength1];
    var mul = 1;
    while(byteLength1 > 0 && (mul *= 256))val += this[offset + --byteLength1] * mul;
    return val;
};
Buffer.prototype.readUint8 = Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    return this[offset];
};
Buffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] | this[offset + 1] << 8;
};
Buffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] << 8 | this[offset + 1];
};
Buffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;
};
Buffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
};
Buffer.prototype.readIntLE = function readIntLE(offset, byteLength1, noAssert) {
    offset = offset >>> 0;
    byteLength1 = byteLength1 >>> 0;
    if (!noAssert) checkOffset(offset, byteLength1, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;
    while((++i) < byteLength1 && (mul *= 256))val += this[offset + i] * mul;
    mul *= 128;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength1);
    return val;
};
Buffer.prototype.readIntBE = function readIntBE(offset, byteLength1, noAssert) {
    offset = offset >>> 0;
    byteLength1 = byteLength1 >>> 0;
    if (!noAssert) checkOffset(offset, byteLength1, this.length);
    var i = byteLength1;
    var mul = 1;
    var val = this[offset + --i];
    while(i > 0 && (mul *= 256))val += this[offset + --i] * mul;
    mul *= 128;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength1);
    return val;
};
Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    if (!(this[offset] & 128)) return this[offset];
    return (255 - this[offset] + 1) * -1;
};
Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset] | this[offset + 1] << 8;
    return val & 32768 ? val | 4294901760 : val;
};
Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset + 1] | this[offset] << 8;
    return val & 32768 ? val | 4294901760 : val;
};
Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
};
Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
};
Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, true, 23, 4);
};
Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, false, 23, 4);
};
Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, true, 52, 8);
};
Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, false, 52, 8);
};
function checkInt(buf, value, offset, ext, max, min) {
    if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
    if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
}
Buffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength1, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength1 = byteLength1 >>> 0;
    if (!noAssert) {
        var maxBytes = Math.pow(2, 8 * byteLength1) - 1;
        checkInt(this, value, offset, byteLength1, maxBytes, 0);
    }
    var mul = 1;
    var i = 0;
    this[offset] = value & 255;
    while((++i) < byteLength1 && (mul *= 256))this[offset + i] = value / mul & 255;
    return offset + byteLength1;
};
Buffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength1, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength1 = byteLength1 >>> 0;
    if (!noAssert) {
        var maxBytes = Math.pow(2, 8 * byteLength1) - 1;
        checkInt(this, value, offset, byteLength1, maxBytes, 0);
    }
    var i = byteLength1 - 1;
    var mul = 1;
    this[offset + i] = value & 255;
    while((--i) >= 0 && (mul *= 256))this[offset + i] = value / mul & 255;
    return offset + byteLength1;
};
Buffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 255, 0);
    this[offset] = value & 255;
    return offset + 1;
};
Buffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);
    this[offset] = value & 255;
    this[offset + 1] = value >>> 8;
    return offset + 2;
};
Buffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 255;
    return offset + 2;
};
Buffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);
    this[offset + 3] = value >>> 24;
    this[offset + 2] = value >>> 16;
    this[offset + 1] = value >>> 8;
    this[offset] = value & 255;
    return offset + 4;
};
Buffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 255;
    return offset + 4;
};
Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength1, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
        var limit = Math.pow(2, 8 * byteLength1 - 1);
        checkInt(this, value, offset, byteLength1, limit - 1, -limit);
    }
    var i = 0;
    var mul = 1;
    var sub = 0;
    this[offset] = value & 255;
    while((++i) < byteLength1 && (mul *= 256)){
        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) sub = 1;
        this[offset + i] = (value / mul >> 0) - sub & 255;
    }
    return offset + byteLength1;
};
Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength1, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
        var limit = Math.pow(2, 8 * byteLength1 - 1);
        checkInt(this, value, offset, byteLength1, limit - 1, -limit);
    }
    var i = byteLength1 - 1;
    var mul = 1;
    var sub = 0;
    this[offset + i] = value & 255;
    while((--i) >= 0 && (mul *= 256)){
        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) sub = 1;
        this[offset + i] = (value / mul >> 0) - sub & 255;
    }
    return offset + byteLength1;
};
Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 127, -128);
    if (value < 0) value = 255 + value + 1;
    this[offset] = value & 255;
    return offset + 1;
};
Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);
    this[offset] = value & 255;
    this[offset + 1] = value >>> 8;
    return offset + 2;
};
Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 255;
    return offset + 2;
};
Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);
    this[offset] = value & 255;
    this[offset + 1] = value >>> 8;
    this[offset + 2] = value >>> 16;
    this[offset + 3] = value >>> 24;
    return offset + 4;
};
Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);
    if (value < 0) value = 4294967295 + value + 1;
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 255;
    return offset + 4;
};
function checkIEEE754(buf, value, offset, ext, max, min) {
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
    if (offset < 0) throw new RangeError('Index out of range');
}
function writeFloat(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkIEEE754(buf, value, offset, 4, 340282346638528860000000000000000000000, -340282346638528860000000000000000000000);
    ieee754.write(buf, value, offset, littleEndian, 23, 4);
    return offset + 4;
}
Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
    return writeFloat(this, value, offset, true, noAssert);
};
Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
    return writeFloat(this, value, offset, false, noAssert);
};
function writeDouble(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkIEEE754(buf, value, offset
    ieee754.write(buf, value, offset, littleEndian, 52, 8);
    return offset + 8;
}
Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
    return writeDouble(this, value, offset, true, noAssert);
};
Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
    return writeDouble(this, value, offset, false, noAssert);
};
// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy(target, targetStart, start, end) {
    if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');
    if (!start) start = 0;
    if (!end && end !== 0) end = this.length;
    if (targetStart >= target.length) targetStart = target.length;
    if (!targetStart) targetStart = 0;
    if (end > 0 && end < start) end = start;
    // Copy 0 bytes; we're done
    if (end === start) return 0;
    if (target.length === 0 || this.length === 0) return 0;
    // Fatal error conditions
    if (targetStart < 0) throw new RangeError('targetStart out of bounds');
    if (start < 0 || start >= this.length) throw new RangeError('Index out of range');
    if (end < 0) throw new RangeError('sourceEnd out of bounds');
    // Are we oob?
    if (end > this.length) end = this.length;
    if (target.length - targetStart < end - start) end = target.length - targetStart + start;
    var len = end - start;
    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end);
    else Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);
    return len;
};
// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill(val, start, end, encoding) {
    // Handle string cases:
    if (typeof val === 'string') {
        if (typeof start === 'string') {
            encoding = start;
            start = 0;
            end = this.length;
        } else if (typeof end === 'string') {
            encoding = end;
            end = this.length;
        }
        if (encoding !== undefined && typeof encoding !== 'string') throw new TypeError('encoding must be a string');
        if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) throw new TypeError('Unknown encoding: ' + encoding);
        if (val.length === 1) {
            var code = val.charCodeAt(0);
            if (encoding === 'utf8' && code < 128 || encoding === 'latin1') // Fast path: If `val` fits into a single byte, use that numeric value.
            val = code;
        }
    } else if (typeof val === 'number') val = val & 255;
    else if (typeof val === 'boolean') val = Number(val);
    // Invalid ranges are not set to a default, so can range check early.
    if (start < 0 || this.length < start || this.length < end) throw new RangeError('Out of range index');
    if (end <= start) return this;
    start = start >>> 0;
    end = end === undefined ? this.length : end >>> 0;
    if (!val) val = 0;
    var i;
    if (typeof val === 'number') for(i = start; i < end; ++i)this[i] = val;
    else {
        var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);
        var len = bytes.length;
        if (len === 0) throw new TypeError('The value "' + val + '" is invalid for argument "value"');
        for(i = 0; i < end - start; ++i)this[i + start] = bytes[i % len];
    }
    return this;
};
// HELPER FUNCTIONS
// ================
var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;
function base64clean(str) {
    // Node takes equal signs as end of the Base64 encoding
    str = str.split('=')[0];
    // Node strips out invalid characters like \n and \t from the string, base64-js does not
    str = str.trim().replace(INVALID_BASE64_RE, '');
    // Node converts strings with length < 2 to ''
    if (str.length < 2) return '';
    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
    while(str.length % 4 !== 0)str = str + '=';
    return str;
}
function utf8ToBytes(string, units) {
    units = units || Infinity;
    var codePoint;
    var length = string.length;
    var leadSurrogate = null;
    var bytes = [];
    for(var i = 0; i < length; ++i){
        codePoint = string.charCodeAt(i);
        // is surrogate component
        if (codePoint > 55295 && codePoint < 57344) {
            // last char was a lead
            if (!leadSurrogate) {
                // no lead yet
                if (codePoint > 56319) {
                    // unexpected trail
                    if ((units -= 3) > -1) bytes.push(239, 191, 189);
                    continue;
                } else if (i + 1 === length) {
                    // unpaired lead
                    if ((units -= 3) > -1) bytes.push(239, 191, 189);
                    continue;
                }
                // valid lead
                leadSurrogate = codePoint;
                continue;
            }
            // 2 leads in a row
            if (codePoint < 56320) {
                if ((units -= 3) > -1) bytes.push(239, 191, 189);
                leadSurrogate = codePoint;
                continue;
            }
            // valid surrogate pair
            codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;
        } else if (leadSurrogate) // valid bmp char, but last char was a lead
        {
            if ((units -= 3) > -1) bytes.push(239, 191, 189);
        }
        leadSurrogate = null;
        // encode utf8
        if (codePoint < 128) {
            if ((units -= 1) < 0) break;
            bytes.push(codePoint);
        } else if (codePoint < 2048) {
            if ((units -= 2) < 0) break;
            bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);
        } else if (codePoint < 65536) {
            if ((units -= 3) < 0) break;
            bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);
        } else if (codePoint < 1114112) {
            if ((units -= 4) < 0) break;
            bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);
        } else throw new Error('Invalid code point');
    }
    return bytes;
}
function asciiToBytes(str) {
    var byteArray = [];
    for(var i = 0; i < str.length; ++i)// Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 255);
    return byteArray;
}
function utf16leToBytes(str, units) {
    var c, hi, lo;
    var byteArray = [];
    for(var i = 0; i < str.length; ++i){
        if ((units -= 2) < 0) break;
        c = str.charCodeAt(i);
        hi = c >> 8;
        lo = c % 256;
        byteArray.push(lo);
        byteArray.push(hi);
    }
    return byteArray;
}
function base64ToBytes(str) {
    return base64.toByteArray(base64clean(str));
}
function blitBuffer(src, dst, offset, length) {
    for(var i = 0; i < length; ++i){
        if (i + offset >= dst.length || i >= src.length) break;
        dst[i + offset] = src[i];
    }
    return i;
}
// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance(obj, type) {
    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
}
function numberIsNaN(obj) {
    // For IE11 support
    return obj !== obj // eslint-disable-line no-self-compare
    ;
}
// Create lookup table for `toString('hex')`
// See: https://github.com/feross/buffer/issues/219
var hexSliceLookupTable = function() {
    var alphabet = '0123456789abcdef';
    var table = new Array(256);
    for(var i = 0; i < 16; ++i){
        var i16 = i * 16;
        for(var j = 0; j < 16; ++j)table[i16 + j] = alphabet[i] + alphabet[j];
    }
    return table;
}();

},{"base64-js":"lJPBp","ieee754":"lcV5f"}],"lJPBp":[function(require,module,exports) {
'use strict';
exports.byteLength = byteLength;
exports.toByteArray = toByteArray;
exports.fromByteArray = fromByteArray;
var lookup = [];
var revLookup = [];
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;
var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
for(var i = 0, len = code.length; i < len; ++i){
    lookup[i] = code[i];
    revLookup[code.charCodeAt(i)] = i;
}
// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62;
revLookup['_'.charCodeAt(0)] = 63;
function getLens(b64) {
    var len1 = b64.length;
    if (len1 % 4 > 0) throw new Error('Invalid string. Length must be a multiple of 4');
    // Trim off extra bytes after placeholder bytes are found
    // See: https://github.com/beatgammit/base64-js/issues/42
    var validLen = b64.indexOf('=');
    if (validLen === -1) validLen = len1;
    var placeHoldersLen = validLen === len1 ? 0 : 4 - validLen % 4;
    return [
        validLen,
        placeHoldersLen
    ];
}
// base64 is 4/3 + up to two characters of the original data
function byteLength(b64) {
    var lens = getLens(b64);
    var validLen = lens[0];
    var placeHoldersLen = lens[1];
    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
}
function _byteLength(b64, validLen, placeHoldersLen) {
    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
}
function toByteArray(b64) {
    var tmp;
    var lens = getLens(b64);
    var validLen = lens[0];
    var placeHoldersLen = lens[1];
    var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
    var curByte = 0;
    // if there are placeholders, only get up to the last complete 4 chars
    var len1 = placeHoldersLen > 0 ? validLen - 4 : validLen;
    var i1;
    for(i1 = 0; i1 < len1; i1 += 4){
        tmp = revLookup[b64.charCodeAt(i1)] << 18 | revLookup[b64.charCodeAt(i1 + 1)] << 12 | revLookup[b64.charCodeAt(i1 + 2)] << 6 | revLookup[b64.charCodeAt(i1 + 3)];
        arr[curByte++] = tmp >> 16 & 255;
        arr[curByte++] = tmp >> 8 & 255;
        arr[curByte++] = tmp & 255;
    }
    if (placeHoldersLen === 2) {
        tmp = revLookup[b64.charCodeAt(i1)] << 2 | revLookup[b64.charCodeAt(i1 + 1)] >> 4;
        arr[curByte++] = tmp & 255;
    }
    if (placeHoldersLen === 1) {
        tmp = revLookup[b64.charCodeAt(i1)] << 10 | revLookup[b64.charCodeAt(i1 + 1)] << 4 | revLookup[b64.charCodeAt(i1 + 2)] >> 2;
        arr[curByte++] = tmp >> 8 & 255;
        arr[curByte++] = tmp & 255;
    }
    return arr;
}
function tripletToBase64(num) {
    return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];
}
function encodeChunk(uint8, start, end) {
    var tmp;
    var output = [];
    for(var i1 = start; i1 < end; i1 += 3){
        tmp = (uint8[i1] << 16 & 16711680) + (uint8[i1 + 1] << 8 & 65280) + (uint8[i1 + 2] & 255);
        output.push(tripletToBase64(tmp));
    }
    return output.join('');
}
function fromByteArray(uint8) {
    var tmp;
    var len1 = uint8.length;
    var extraBytes = len1 % 3 // if we have 1 byte left, pad 2 bytes
    ;
    var parts = [];
    var maxChunkLength = 16383 // must be multiple of 3
    ;
    // go through the array every three bytes, we'll deal with trailing stuff later
    for(var i1 = 0, len2 = len1 - extraBytes; i1 < len2; i1 += maxChunkLength)parts.push(encodeChunk(uint8, i1, i1 + maxChunkLength > len2 ? len2 : i1 + maxChunkLength));
    // pad the end with zeros, but make sure to not forget the extra bytes
    if (extraBytes === 1) {
        tmp = uint8[len1 - 1];
        parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 63] + '==');
    } else if (extraBytes === 2) {
        tmp = (uint8[len1 - 2] << 8) + uint8[len1 - 1];
        parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + '=');
    }
    return parts.join('');
}

},{}],"lcV5f":[function(require,module,exports) {
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ exports.read = function(buffer, offset, isLE, mLen, nBytes) {
    var e, m;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var nBits = -7;
    var i = isLE ? nBytes - 1 : 0;
    var d = isLE ? -1 : 1;
    var s = buffer[offset + i];
    i += d;
    e = s & (1 << -nBits) - 1;
    s >>= -nBits;
    nBits += eLen;
    for(; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);
    m = e & (1 << -nBits) - 1;
    e >>= -nBits;
    nBits += mLen;
    for(; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);
    if (e === 0) e = 1 - eBias;
    else if (e === eMax) return m ? NaN : (s ? -1 : 1) * Infinity;
    else {
        m = m + Math.pow(2, mLen);
        e = e - eBias;
    }
    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
};
exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
    var e, m, c;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
    var i = isLE ? 0 : nBytes - 1;
    var d = isLE ? 1 : -1;
    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
    value = Math.abs(value);
    if (isNaN(value) || value === Infinity) {
        m = isNaN(value) ? 1 : 0;
        e = eMax;
    } else {
        e = Math.floor(Math.log(value) / Math.LN2);
        if (value * (c = Math.pow(2, -e)) < 1) {
            e--;
            c *= 2;
        }
        if (e + eBias >= 1) value += rt / c;
        else value += rt * Math.pow(2, 1 - eBias);
        if (value * c >= 2) {
            e++;
            c /= 2;
        }
        if (e + eBias >= eMax) {
            m = 0;
            e = eMax;
        } else if (e + eBias >= 1) {
            m = (value * c - 1) * Math.pow(2, mLen);
            e = e + eBias;
        } else {
            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
            e = 0;
        }
    }
    for(; mLen >= 8; buffer[offset + i] = m & 255, i += d, m /= 256, mLen -= 8);
    e = e << mLen | m;
    eLen += mLen;
    for(; eLen > 0; buffer[offset + i] = e & 255, i += d, e /= 256, eLen -= 8);
    buffer[offset + i - d] |= s * 128;
};

},{}],"4iPa5":[function(require,module,exports) {
'use strict';
var inherits = require('inherits');
var MD5 = require('md5.js');
var RIPEMD160 = require('ripemd160');
var sha = require('sha.js');
var Base = require('cipher-base');
function Hash(hash) {
    Base.call(this, 'digest');
    this._hash = hash;
}
inherits(Hash, Base);
Hash.prototype._update = function(data) {
    this._hash.update(data);
};
Hash.prototype._final = function() {
    return this._hash.digest();
};
module.exports = function createHash(alg) {
    alg = alg.toLowerCase();
    if (alg === 'md5') return new MD5();
    if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160();
    return new Hash(sha(alg));
};

},{"inherits":"9Y2vC","md5.js":"2KF08","ripemd160":"c0r51","sha.js":"ln1EO","cipher-base":"btswB"}],"9Y2vC":[function(require,module,exports) {
if (typeof Object.create === 'function') // implementation from standard node.js 'util' module
module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
        ctor.super_ = superCtor;
        ctor.prototype = Object.create(superCtor.prototype, {
            constructor: {
                value: ctor,
                enumerable: false,
                writable: true,
                configurable: true
            }
        });
    }
};
else // old school shim for old browsers
module.exports = function inherits1(ctor, superCtor) {
    if (superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
    }
};

},{}],"2KF08":[function(require,module,exports) {
'use strict';
var inherits = require('inherits');
var HashBase = require('hash-base');
var Buffer = require('safe-buffer').Buffer;
var ARRAY16 = new Array(16);
function MD5() {
    HashBase.call(this, 64);
    // state
    this._a = 1732584193;
    this._b = 4023233417;
    this._c = 2562383102;
    this._d = 271733878;
}
inherits(MD5, HashBase);
MD5.prototype._update = function() {
    var M = ARRAY16;
    for(var i = 0; i < 16; ++i)M[i] = this._block.readInt32LE(i * 4);
    var a = this._a;
    var b = this._b;
    var c = this._c;
    var d = this._d;
    a = fnF(a, b, c, d, M[0], 3614090360, 7);
    d = fnF(d, a, b, c, M[1], 3905402710, 12);
    c = fnF(c, d, a, b, M[2], 606105819, 17);
    b = fnF(b, c, d, a, M[3], 3250441966, 22);
    a = fnF(a, b, c, d, M[4], 4118548399, 7);
    d = fnF(d, a, b, c, M[5], 1200080426, 12);
    c = fnF(c, d, a, b, M[6], 2821735955, 17);
    b = fnF(b, c, d, a, M[7], 4249261313, 22);
    a = fnF(a, b, c, d, M[8], 1770035416, 7);
    d = fnF(d, a, b, c, M[9], 2336552879, 12);
    c = fnF(c, d, a, b, M[10], 4294925233, 17);
    b = fnF(b, c, d, a, M[11], 2304563134, 22);
    a = fnF(a, b, c, d, M[12], 1804603682, 7);
    d = fnF(d, a, b, c, M[13], 4254626195, 12);
    c = fnF(c, d, a, b, M[14], 2792965006, 17);
    b = fnF(b, c, d, a, M[15], 1236535329, 22);
    a = fnG(a, b, c, d, M[1], 4129170786, 5);
    d = fnG(d, a, b, c, M[6], 3225465664, 9);
    c = fnG(c, d, a, b, M[11], 643717713, 14);
    b = fnG(b, c, d, a, M[0], 3921069994, 20);
    a = fnG(a, b, c, d, M[5], 3593408605, 5);
    d = fnG(d, a, b, c, M[10], 38016083, 9);
    c = fnG(c, d, a, b, M[15], 3634488961, 14);
    b = fnG(b, c, d, a, M[4], 3889429448, 20);
    a = fnG(a, b, c, d, M[9], 568446438, 5);
    d = fnG(d, a, b, c, M[14], 3275163606, 9);
    c = fnG(c, d, a, b, M[3], 4107603335, 14);
    b = fnG(b, c, d, a, M[8], 1163531501, 20);
    a = fnG(a, b, c, d, M[13], 2850285829, 5);
    d = fnG(d, a, b, c, M[2], 4243563512, 9);
    c = fnG(c, d, a, b, M[7], 1735328473, 14);
    b = fnG(b, c, d, a, M[12], 2368359562, 20);
    a = fnH(a, b, c, d, M[5], 4294588738, 4);
    d = fnH(d, a, b, c, M[8], 2272392833, 11);
    c = fnH(c, d, a, b, M[11], 1839030562, 16);
    b = fnH(b, c, d, a, M[14], 4259657740, 23);
    a = fnH(a, b, c, d, M[1], 2763975236, 4);
    d = fnH(d, a, b, c, M[4], 1272893353, 11);
    c = fnH(c, d, a, b, M[7], 4139469664, 16);
    b = fnH(b, c, d, a, M[10], 3200236656, 23);
    a = fnH(a, b, c, d, M[13], 681279174, 4);
    d = fnH(d, a, b, c, M[0], 3936430074, 11);
    c = fnH(c, d, a, b, M[3], 3572445317, 16);
    b = fnH(b, c, d, a, M[6], 76029189, 23);
    a = fnH(a, b, c, d, M[9], 3654602809, 4);
    d = fnH(d, a, b, c, M[12], 3873151461, 11);
    c = fnH(c, d, a, b, M[15], 530742520, 16);
    b = fnH(b, c, d, a, M[2], 3299628645, 23);
    a = fnI(a, b, c, d, M[0], 4096336452, 6);
    d = fnI(d, a, b, c, M[7], 1126891415, 10);
    c = fnI(c, d, a, b, M[14], 2878612391, 15);
    b = fnI(b, c, d, a, M[5], 4237533241, 21);
    a = fnI(a, b, c, d, M[12], 1700485571, 6);
    d = fnI(d, a, b, c, M[3], 2399980690, 10);
    c = fnI(c, d, a, b, M[10], 4293915773, 15);
    b = fnI(b, c, d, a, M[1], 2240044497, 21);
    a = fnI(a, b, c, d, M[8], 1873313359, 6);
    d = fnI(d, a, b, c, M[15], 4264355552, 10);
    c = fnI(c, d, a, b, M[6], 2734768916, 15);
    b = fnI(b, c, d, a, M[13], 1309151649, 21);
    a = fnI(a, b, c, d, M[4], 4149444226, 6);
    d = fnI(d, a, b, c, M[11], 3174756917, 10);
    c = fnI(c, d, a, b, M[2], 718787259, 15);
    b = fnI(b, c, d, a, M[9], 3951481745, 21);
    this._a = this._a + a | 0;
    this._b = this._b + b | 0;
    this._c = this._c + c | 0;
    this._d = this._d + d | 0;
};
MD5.prototype._digest = function() {
    // create padding and handle blocks
    this._block[this._blockOffset++] = 128;
    if (this._blockOffset > 56) {
        this._block.fill(0, this._blockOffset, 64);
        this._update();
        this._blockOffset = 0;
    }
    this._block.fill(0, this._blockOffset, 56);
    this._block.writeUInt32LE(this._length[0], 56);
    this._block.writeUInt32LE(this._length[1], 60);
    this._update();
    // produce result
    var buffer = Buffer.allocUnsafe(16);
    buffer.writeInt32LE(this._a, 0);
    buffer.writeInt32LE(this._b, 4);
    buffer.writeInt32LE(this._c, 8);
    buffer.writeInt32LE(this._d, 12);
    return buffer;
};
function rotl(x, n) {
    return x << n | x >>> 32 - n;
}
function fnF(a, b, c, d, m, k, s) {
    return rotl(a + (b & c | ~b & d) + m + k | 0, s) + b | 0;
}
function fnG(a, b, c, d, m, k, s) {
    return rotl(a + (b & d | c & ~d) + m + k | 0, s) + b | 0;
}
function fnH(a, b, c, d, m, k, s) {
    return rotl(a + (b ^ c ^ d) + m + k | 0, s) + b | 0;
}
function fnI(a, b, c, d, m, k, s) {
    return rotl(a + (c ^ (b | ~d)) + m + k | 0, s) + b | 0;
}
module.exports = MD5;

},{"inherits":"9Y2vC","hash-base":"1obQO","safe-buffer":"i3ToV"}],"1obQO":[function(require,module,exports) {
'use strict';
var Buffer = require('safe-buffer').Buffer;
var Transform = require('readable-stream').Transform;
var inherits = require('inherits');
function throwIfNotStringOrBuffer(val, prefix) {
    if (!Buffer.isBuffer(val) && typeof val !== 'string') throw new TypeError(prefix + ' must be a string or a buffer');
}
function HashBase(blockSize) {
    Transform.call(this);
    this._block = Buffer.allocUnsafe(blockSize);
    this._blockSize = blockSize;
    this._blockOffset = 0;
    this._length = [
        0,
        0,
        0,
        0
    ];
    this._finalized = false;
}
inherits(HashBase, Transform);
HashBase.prototype._transform = function(chunk, encoding, callback) {
    var error = null;
    try {
        this.update(chunk, encoding);
    } catch (err) {
        error = err;
    }
    callback(error);
};
HashBase.prototype._flush = function(callback) {
    var error = null;
    try {
        this.push(this.digest());
    } catch (err) {
        error = err;
    }
    callback(error);
};
HashBase.prototype.update = function(data, encoding) {
    throwIfNotStringOrBuffer(data, 'Data');
    if (this._finalized) throw new Error('Digest already called');
    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding);
    // consume data
    var block = this._block;
    var offset = 0;
    while(this._blockOffset + data.length - offset >= this._blockSize){
        for(var i = this._blockOffset; i < this._blockSize;)block[i++] = data[offset++];
        this._update();
        this._blockOffset = 0;
    }
    while(offset < data.length)block[this._blockOffset++] = data[offset++];
    // update length
    for(var j = 0, carry = data.length * 8; carry > 0; ++j){
        this._length[j] += carry;
        carry = this._length[j] / 4294967296 | 0;
        if (carry > 0) this._length[j] -= 4294967296 * carry;
    }
    return this;
};
HashBase.prototype._update = function() {
    throw new Error('_update is not implemented');
};
HashBase.prototype.digest = function(encoding) {
    if (this._finalized) throw new Error('Digest already called');
    this._finalized = true;
    var digest = this._digest();
    if (encoding !== undefined) digest = digest.toString(encoding);
    // reset state
    this._block.fill(0);
    this._blockOffset = 0;
    for(var i = 0; i < 4; ++i)this._length[i] = 0;
    return digest;
};
HashBase.prototype._digest = function() {
    throw new Error('_digest is not implemented');
};
module.exports = HashBase;

},{"safe-buffer":"hRcQ0","readable-stream":"wn3hp","inherits":"9Y2vC"}],"hRcQ0":[function(require,module,exports) {
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */ /* eslint-disable node/no-deprecated-api */ var buffer = require('buffer');
var Buffer = buffer.Buffer;
// alternative to using Object.keys for old browsers
function copyProps(src, dst) {
    for(var key in src)dst[key] = src[key];
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) module.exports = buffer;
else {
    // Copy properties from require('buffer')
    copyProps(buffer, exports);
    exports.Buffer = SafeBuffer;
}
function SafeBuffer(arg, encodingOrOffset, length) {
    return Buffer(arg, encodingOrOffset, length);
}
SafeBuffer.prototype = Object.create(Buffer.prototype);
// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer);
SafeBuffer.from = function(arg, encodingOrOffset, length) {
    if (typeof arg === 'number') throw new TypeError('Argument must not be a number');
    return Buffer(arg, encodingOrOffset, length);
};
SafeBuffer.alloc = function(size, fill, encoding) {
    if (typeof size !== 'number') throw new TypeError('Argument must be a number');
    var buf = Buffer(size);
    if (fill !== undefined) {
        if (typeof encoding === 'string') buf.fill(fill, encoding);
        else buf.fill(fill);
    } else buf.fill(0);
    return buf;
};
SafeBuffer.allocUnsafe = function(size) {
    if (typeof size !== 'number') throw new TypeError('Argument must be a number');
    return Buffer(size);
};
SafeBuffer.allocUnsafeSlow = function(size) {
    if (typeof size !== 'number') throw new TypeError('Argument must be a number');
    return buffer.SlowBuffer(size);
};

},{"buffer":"hX7zZ"}],"wn3hp":[function(require,module,exports) {
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');
exports.finished = require('./lib/internal/streams/end-of-stream.js');
exports.pipeline = require('./lib/internal/streams/pipeline.js');

},{"./lib/_stream_readable.js":"emN7r","./lib/_stream_writable.js":"64P04","./lib/_stream_duplex.js":"jstZQ","./lib/_stream_transform.js":"knEgY","./lib/_stream_passthrough.js":"7ya8k","./lib/internal/streams/end-of-stream.js":"ctPaP","./lib/internal/streams/pipeline.js":"6tAZ7"}],"emN7r":[function(require,module,exports) {
var process = require("process");
var global = arguments[3];
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
module.exports = Readable;
/*<replacement>*/ var Duplex;
/*</replacement>*/ Readable.ReadableState = ReadableState;
/*<replacement>*/ var EE = require('events').EventEmitter;
var EElistenerCount = function EElistenerCount1(emitter, type) {
    return emitter.listeners(type).length;
};
/*</replacement>*/ /*<replacement>*/ var Stream = require('./internal/streams/stream');
/*</replacement>*/ var Buffer = require('buffer').Buffer;
var OurUint8Array = global.Uint8Array || function() {
};
function _uint8ArrayToBuffer(chunk) {
    return Buffer.from(chunk);
}
function _isUint8Array(obj) {
    return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*<replacement>*/ var debugUtil = require('util');
var debug;
if (debugUtil && debugUtil.debuglog) debug = debugUtil.debuglog('stream');
else debug = function debug1() {
};
/*</replacement>*/ var BufferList = require('./internal/streams/buffer_list');
var destroyImpl = require('./internal/streams/destroy');
var _require = require('./internal/streams/state'), getHighWaterMark = _require.getHighWaterMark;
var _require$codes = require('../errors').codes, ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE, ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF, ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED, ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.
var StringDecoder;
var createReadableStreamAsyncIterator;
var from;
require('inherits')(Readable, Stream);
var errorOrDestroy = destroyImpl.errorOrDestroy;
var kProxyEvents = [
    'error',
    'close',
    'destroy',
    'pause',
    'resume'
];
function prependListener(emitter, event, fn) {
    // Sadly this is not cacheable as some libraries bundle their own
    // event emitter implementation with them.
    if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any
    // userland ones.  NEVER DO THIS. This is here only because this code needs
    // to continue to work with older versions of Node.js that do not include
    // the prependListener() method. The goal is to eventually remove this hack.
    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);
    else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);
    else emitter._events[event] = [
        fn,
        emitter._events[event]
    ];
}
function ReadableState(options, stream, isDuplex) {
    Duplex = Duplex || require('./_stream_duplex');
    options = options || {
    }; // Duplex streams are both readable and writable, but share
    // the same options object.
    // However, some cases require setting options to different
    // values for the readable and the writable sides of the duplex stream.
    // These options can be provided separately as readableXXX and writableXXX.
    if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to
    // make all the buffer merging and length checks go away
    this.objectMode = !!options.objectMode;
    if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer
    // Note: 0 is a valid value, means "don't call _read preemptively ever"
    this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the
    // linked list can remove elements from the beginning faster than
    // array.shift()
    this.buffer = new BufferList();
    this.length = 0;
    this.pipes = null;
    this.pipesCount = 0;
    this.flowing = null;
    this.ended = false;
    this.endEmitted = false;
    this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted
    // immediately, or on a later tick.  We set this to true at first, because
    // any actions that shouldn't happen until "later" should generally also
    // not happen before the first read call.
    this.sync = true; // whenever we return null, then we set a flag to say
    // that we're awaiting a 'readable' event emission.
    this.needReadable = false;
    this.emittedReadable = false;
    this.readableListening = false;
    this.resumeScheduled = false;
    this.paused = true; // Should close be emitted on destroy. Defaults to true.
    this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')
    this.autoDestroy = !!options.autoDestroy; // has it been destroyed
    this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string
    // encoding is 'binary' so we have to make this configurable.
    // Everything else in the universe uses 'utf8', though.
    this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s
    this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled
    this.readingMore = false;
    this.decoder = null;
    this.encoding = null;
    if (options.encoding) {
        if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
        this.decoder = new StringDecoder(options.encoding);
        this.encoding = options.encoding;
    }
}
function Readable(options) {
    Duplex = Duplex || require('./_stream_duplex');
    if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside
    // the ReadableState constructor, at least with V8 6.5
    var isDuplex = this instanceof Duplex;
    this._readableState = new ReadableState(options, this, isDuplex); // legacy
    this.readable = true;
    if (options) {
        if (typeof options.read === 'function') this._read = options.read;
        if (typeof options.destroy === 'function') this._destroy = options.destroy;
    }
    Stream.call(this);
}
Object.defineProperty(Readable.prototype, 'destroyed', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        if (this._readableState === undefined) return false;
        return this._readableState.destroyed;
    },
    set: function set(value) {
        // we ignore the value if the stream
        // has not been initialized yet
        if (!this._readableState) return;
         // backward compatibility, the user is explicitly
        // managing destroyed
        this._readableState.destroyed = value;
    }
});
Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function(err, cb) {
    cb(err);
}; // Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function(chunk, encoding) {
    var state = this._readableState;
    var skipChunkCheck;
    if (!state.objectMode) {
        if (typeof chunk === 'string') {
            encoding = encoding || state.defaultEncoding;
            if (encoding !== state.encoding) {
                chunk = Buffer.from(chunk, encoding);
                encoding = '';
            }
            skipChunkCheck = true;
        }
    } else skipChunkCheck = true;
    return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
}; // Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function(chunk) {
    return readableAddChunk(this, chunk, null, true, false);
};
function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
    debug('readableAddChunk', chunk);
    var state = stream._readableState;
    if (chunk === null) {
        state.reading = false;
        onEofChunk(stream, state);
    } else {
        var er;
        if (!skipChunkCheck) er = chunkInvalid(state, chunk);
        if (er) errorOrDestroy(stream, er);
        else if (state.objectMode || chunk && chunk.length > 0) {
            if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) chunk = _uint8ArrayToBuffer(chunk);
            if (addToFront) {
                if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());
                else addChunk(stream, state, chunk, true);
            } else if (state.ended) errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
            else if (state.destroyed) return false;
            else {
                state.reading = false;
                if (state.decoder && !encoding) {
                    chunk = state.decoder.write(chunk);
                    if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);
                    else maybeReadMore(stream, state);
                } else addChunk(stream, state, chunk, false);
            }
        } else if (!addToFront) {
            state.reading = false;
            maybeReadMore(stream, state);
        }
    } // We can push more data if we are below the highWaterMark.
    // Also, if we have no data yet, we can stand some more bytes.
    // This is to work around cases where hwm=0, such as the repl.
    return !state.ended && (state.length < state.highWaterMark || state.length === 0);
}
function addChunk(stream, state, chunk, addToFront) {
    if (state.flowing && state.length === 0 && !state.sync) {
        state.awaitDrain = 0;
        stream.emit('data', chunk);
    } else {
        // update the buffer info.
        state.length += state.objectMode ? 1 : chunk.length;
        if (addToFront) state.buffer.unshift(chunk);
        else state.buffer.push(chunk);
        if (state.needReadable) emitReadable(stream);
    }
    maybeReadMore(stream, state);
}
function chunkInvalid(state, chunk) {
    var er;
    if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) er = new ERR_INVALID_ARG_TYPE('chunk', [
        'string',
        'Buffer',
        'Uint8Array'
    ], chunk);
    return er;
}
Readable.prototype.isPaused = function() {
    return this._readableState.flowing === false;
}; // backwards compatibility.
Readable.prototype.setEncoding = function(enc) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    var decoder = new StringDecoder(enc);
    this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8
    this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:
    var p = this._readableState.buffer.head;
    var content = '';
    while(p !== null){
        content += decoder.write(p.data);
        p = p.next;
    }
    this._readableState.buffer.clear();
    if (content !== '') this._readableState.buffer.push(content);
    this._readableState.length = content.length;
    return this;
}; // Don't raise the hwm > 1GB
var MAX_HWM = 1073741824;
function computeNewHighWaterMark(n) {
    if (n >= MAX_HWM) // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
    n = MAX_HWM;
    else {
        // Get the next highest power of 2 to prevent increasing hwm excessively in
        // tiny amounts
        n--;
        n |= n >>> 1;
        n |= n >>> 2;
        n |= n >>> 4;
        n |= n >>> 8;
        n |= n >>> 16;
        n++;
    }
    return n;
} // This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
    if (n <= 0 || state.length === 0 && state.ended) return 0;
    if (state.objectMode) return 1;
    if (n !== n) {
        // Only flow one buffer at a time
        if (state.flowing && state.length) return state.buffer.head.data.length;
        else return state.length;
    } // If we're asking for more than the current hwm, then raise the hwm.
    if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
    if (n <= state.length) return n; // Don't have enough
    if (!state.ended) {
        state.needReadable = true;
        return 0;
    }
    return state.length;
} // you can override either this method, or the async _read(n) below.
Readable.prototype.read = function(n) {
    debug('read', n);
    n = parseInt(n, 10);
    var state = this._readableState;
    var nOrig = n;
    if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we
    // already have a bunch of data in the buffer, then just trigger
    // the 'readable' event and move on.
    if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
        debug('read: emitReadable', state.length, state.ended);
        if (state.length === 0 && state.ended) endReadable(this);
        else emitReadable(this);
        return null;
    }
    n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.
    if (n === 0 && state.ended) {
        if (state.length === 0) endReadable(this);
        return null;
    } // All the actual chunk generation logic needs to be
    // *below* the call to _read.  The reason is that in certain
    // synthetic stream cases, such as passthrough streams, _read
    // may be a completely synchronous operation which may change
    // the state of the read buffer, providing enough data when
    // before there was *not* enough.
    //
    // So, the steps are:
    // 1. Figure out what the state of things will be after we do
    // a read from the buffer.
    //
    // 2. If that resulting state will trigger a _read, then call _read.
    // Note that this may be asynchronous, or synchronous.  Yes, it is
    // deeply ugly to write APIs this way, but that still doesn't mean
    // that the Readable class should behave improperly, as streams are
    // designed to be sync/async agnostic.
    // Take note if the _read call is sync or async (ie, if the read call
    // has returned yet), so that we know whether or not it's safe to emit
    // 'readable' etc.
    //
    // 3. Actually pull the requested chunks out of the buffer and return.
    // if we need a readable event, then we need to do some reading.
    var doRead = state.needReadable;
    debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some
    if (state.length === 0 || state.length - n < state.highWaterMark) {
        doRead = true;
        debug('length less than watermark', doRead);
    } // however, if we've ended, then there's no point, and if we're already
    // reading, then it's unnecessary.
    if (state.ended || state.reading) {
        doRead = false;
        debug('reading or ended', doRead);
    } else if (doRead) {
        debug('do read');
        state.reading = true;
        state.sync = true; // if the length is currently zero, then we *need* a readable event.
        if (state.length === 0) state.needReadable = true; // call internal read method
        this._read(state.highWaterMark);
        state.sync = false; // If _read pushed data synchronously, then `reading` will be false,
        // and we need to re-evaluate how much data we can return to the user.
        if (!state.reading) n = howMuchToRead(nOrig, state);
    }
    var ret;
    if (n > 0) ret = fromList(n, state);
    else ret = null;
    if (ret === null) {
        state.needReadable = state.length <= state.highWaterMark;
        n = 0;
    } else {
        state.length -= n;
        state.awaitDrain = 0;
    }
    if (state.length === 0) {
        // If we have nothing in the buffer, then we want to know
        // as soon as we *do* get something into the buffer.
        if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.
        if (nOrig !== n && state.ended) endReadable(this);
    }
    if (ret !== null) this.emit('data', ret);
    return ret;
};
function onEofChunk(stream, state) {
    debug('onEofChunk');
    if (state.ended) return;
    if (state.decoder) {
        var chunk = state.decoder.end();
        if (chunk && chunk.length) {
            state.buffer.push(chunk);
            state.length += state.objectMode ? 1 : chunk.length;
        }
    }
    state.ended = true;
    if (state.sync) // if we are sync, wait until next tick to emit the data.
    // Otherwise we risk emitting data in the flow()
    // the readable code triggers during a read() call
    emitReadable(stream);
    else {
        // emit 'readable' now to make sure it gets picked up.
        state.needReadable = false;
        if (!state.emittedReadable) {
            state.emittedReadable = true;
            emitReadable_(stream);
        }
    }
} // Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
    var state = stream._readableState;
    debug('emitReadable', state.needReadable, state.emittedReadable);
    state.needReadable = false;
    if (!state.emittedReadable) {
        debug('emitReadable', state.flowing);
        state.emittedReadable = true;
        process.nextTick(emitReadable_, stream);
    }
}
function emitReadable_(stream) {
    var state = stream._readableState;
    debug('emitReadable_', state.destroyed, state.length, state.ended);
    if (!state.destroyed && (state.length || state.ended)) {
        stream.emit('readable');
        state.emittedReadable = false;
    } // The stream needs another readable event if
    // 1. It is not flowing, as the flow mechanism will take
    //    care of it.
    // 2. It is not ended.
    // 3. It is below the highWaterMark, so we can schedule
    //    another readable later.
    state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
    flow(stream);
} // at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
    if (!state.readingMore) {
        state.readingMore = true;
        process.nextTick(maybeReadMore_, stream, state);
    }
}
function maybeReadMore_(stream, state) {
    // Attempt to read more data if we should.
    //
    // The conditions for reading more data are (one of):
    // - Not enough data buffered (state.length < state.highWaterMark). The loop
    //   is responsible for filling the buffer with enough data if such data
    //   is available. If highWaterMark is 0 and we are not in the flowing mode
    //   we should _not_ attempt to buffer any extra data. We'll get more data
    //   when the stream consumer calls read() instead.
    // - No data in the buffer, and the stream is in flowing mode. In this mode
    //   the loop below is responsible for ensuring read() is called. Failing to
    //   call read here would abort the flow and there's no other mechanism for
    //   continuing the flow if the stream consumer has just subscribed to the
    //   'data' event.
    //
    // In addition to the above conditions to keep reading data, the following
    // conditions prevent the data from being read:
    // - The stream has ended (state.ended).
    // - There is already a pending 'read' operation (state.reading). This is a
    //   case where the the stream has called the implementation defined _read()
    //   method, but they are processing the call asynchronously and have _not_
    //   called push() with new data. In this case we skip performing more
    //   read()s. The execution ends in this method again after the _read() ends
    //   up calling push() with more data.
    while(!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)){
        var len = state.length;
        debug('maybeReadMore read 0');
        stream.read(0);
        if (len === state.length) break;
    }
    state.readingMore = false;
} // abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function(n) {
    errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
};
Readable.prototype.pipe = function(dest, pipeOpts) {
    var src = this;
    var state = this._readableState;
    switch(state.pipesCount){
        case 0:
            state.pipes = dest;
            break;
        case 1:
            state.pipes = [
                state.pipes,
                dest
            ];
            break;
        default:
            state.pipes.push(dest);
            break;
    }
    state.pipesCount += 1;
    debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
    var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
    var endFn = doEnd ? onend : unpipe;
    if (state.endEmitted) process.nextTick(endFn);
    else src.once('end', endFn);
    dest.on('unpipe', onunpipe);
    function onunpipe(readable, unpipeInfo) {
        debug('onunpipe');
        if (readable === src) {
            if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
                unpipeInfo.hasUnpiped = true;
                cleanup();
            }
        }
    }
    function onend() {
        debug('onend');
        dest.end();
    } // when the dest drains, it reduces the awaitDrain counter
    // on the source.  This would be more elegant with a .once()
    // handler in flow(), but adding and removing repeatedly is
    // too slow.
    var ondrain = pipeOnDrain(src);
    dest.on('drain', ondrain);
    var cleanedUp = false;
    function cleanup() {
        debug('cleanup'); // cleanup event handlers once the pipe is broken
        dest.removeListener('close', onclose);
        dest.removeListener('finish', onfinish);
        dest.removeListener('drain', ondrain);
        dest.removeListener('error', onerror);
        dest.removeListener('unpipe', onunpipe);
        src.removeListener('end', onend);
        src.removeListener('end', unpipe);
        src.removeListener('data', ondata);
        cleanedUp = true; // if the reader is waiting for a drain event from this
        // specific writer, then it would cause it to never start
        // flowing again.
        // So, if this is awaiting a drain, then we just call it now.
        // If we don't know, then assume that we are waiting for one.
        if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
    }
    src.on('data', ondata);
    function ondata(chunk) {
        debug('ondata');
        var ret = dest.write(chunk);
        debug('dest.write', ret);
        if (ret === false) {
            // If the user unpiped during `dest.write()`, it is possible
            // to get stuck in a permanently paused state if that write
            // also returned false.
            // => Check whether `dest` is still a piping destination.
            if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
                debug('false write response, pause', state.awaitDrain);
                state.awaitDrain++;
            }
            src.pause();
        }
    } // if the dest has an error, then stop piping into it.
    // however, don't suppress the throwing behavior for this.
    function onerror(er) {
        debug('onerror', er);
        unpipe();
        dest.removeListener('error', onerror);
        if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);
    } // Make sure our error handler is attached before userland ones.
    prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.
    function onclose() {
        dest.removeListener('finish', onfinish);
        unpipe();
    }
    dest.once('close', onclose);
    function onfinish() {
        debug('onfinish');
        dest.removeListener('close', onclose);
        unpipe();
    }
    dest.once('finish', onfinish);
    function unpipe() {
        debug('unpipe');
        src.unpipe(dest);
    } // tell the dest that it's being piped to
    dest.emit('pipe', src); // start the flow if it hasn't been started already.
    if (!state.flowing) {
        debug('pipe resume');
        src.resume();
    }
    return dest;
};
function pipeOnDrain(src) {
    return function pipeOnDrainFunctionResult() {
        var state = src._readableState;
        debug('pipeOnDrain', state.awaitDrain);
        if (state.awaitDrain) state.awaitDrain--;
        if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
            state.flowing = true;
            flow(src);
        }
    };
}
Readable.prototype.unpipe = function(dest) {
    var state = this._readableState;
    var unpipeInfo = {
        hasUnpiped: false
    }; // if we're not piping anywhere, then do nothing.
    if (state.pipesCount === 0) return this; // just one destination.  most common case.
    if (state.pipesCount === 1) {
        // passed in one, but it's not the right one.
        if (dest && dest !== state.pipes) return this;
        if (!dest) dest = state.pipes; // got a match.
        state.pipes = null;
        state.pipesCount = 0;
        state.flowing = false;
        if (dest) dest.emit('unpipe', this, unpipeInfo);
        return this;
    } // slow case. multiple pipe destinations.
    if (!dest) {
        // remove all.
        var dests = state.pipes;
        var len = state.pipesCount;
        state.pipes = null;
        state.pipesCount = 0;
        state.flowing = false;
        for(var i = 0; i < len; i++)dests[i].emit('unpipe', this, {
            hasUnpiped: false
        });
        return this;
    } // try to find the right one.
    var index = indexOf(state.pipes, dest);
    if (index === -1) return this;
    state.pipes.splice(index, 1);
    state.pipesCount -= 1;
    if (state.pipesCount === 1) state.pipes = state.pipes[0];
    dest.emit('unpipe', this, unpipeInfo);
    return this;
}; // set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function(ev, fn) {
    var res = Stream.prototype.on.call(this, ev, fn);
    var state = this._readableState;
    if (ev === 'data') {
        // update readableListening so that resume() may be a no-op
        // a few lines down. This is needed to support once('readable').
        state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused
        if (state.flowing !== false) this.resume();
    } else if (ev === 'readable') {
        if (!state.endEmitted && !state.readableListening) {
            state.readableListening = state.needReadable = true;
            state.flowing = false;
            state.emittedReadable = false;
            debug('on readable', state.length, state.reading);
            if (state.length) emitReadable(this);
            else if (!state.reading) process.nextTick(nReadingNextTick, this);
        }
    }
    return res;
};
Readable.prototype.addListener = Readable.prototype.on;
Readable.prototype.removeListener = function(ev, fn) {
    var res = Stream.prototype.removeListener.call(this, ev, fn);
    if (ev === 'readable') // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
    return res;
};
Readable.prototype.removeAllListeners = function(ev) {
    var res = Stream.prototype.removeAllListeners.apply(this, arguments);
    if (ev === 'readable' || ev === undefined) // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
    return res;
};
function updateReadableListening(self) {
    var state = self._readableState;
    state.readableListening = self.listenerCount('readable') > 0;
    if (state.resumeScheduled && !state.paused) // flowing needs to be set to true now, otherwise
    // the upcoming resume will not flow.
    state.flowing = true; // crude way to check if we should resume
    else if (self.listenerCount('data') > 0) self.resume();
}
function nReadingNextTick(self) {
    debug('readable nexttick read 0');
    self.read(0);
} // pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function() {
    var state = this._readableState;
    if (!state.flowing) {
        debug('resume'); // we flow only if there is no one listening
        // for readable, but we still have to call
        // resume()
        state.flowing = !state.readableListening;
        resume(this, state);
    }
    state.paused = false;
    return this;
};
function resume(stream, state) {
    if (!state.resumeScheduled) {
        state.resumeScheduled = true;
        process.nextTick(resume_, stream, state);
    }
}
function resume_(stream, state) {
    debug('resume', state.reading);
    if (!state.reading) stream.read(0);
    state.resumeScheduled = false;
    stream.emit('resume');
    flow(stream);
    if (state.flowing && !state.reading) stream.read(0);
}
Readable.prototype.pause = function() {
    debug('call pause flowing=%j', this._readableState.flowing);
    if (this._readableState.flowing !== false) {
        debug('pause');
        this._readableState.flowing = false;
        this.emit('pause');
    }
    this._readableState.paused = true;
    return this;
};
function flow(stream) {
    var state = stream._readableState;
    debug('flow', state.flowing);
    while(state.flowing && stream.read() !== null);
} // wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function(stream) {
    var _this = this;
    var state = this._readableState;
    var paused = false;
    stream.on('end', function() {
        debug('wrapped end');
        if (state.decoder && !state.ended) {
            var chunk = state.decoder.end();
            if (chunk && chunk.length) _this.push(chunk);
        }
        _this.push(null);
    });
    stream.on('data', function(chunk) {
        debug('wrapped data');
        if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode
        if (state.objectMode && (chunk === null || chunk === undefined)) return;
        else if (!state.objectMode && (!chunk || !chunk.length)) return;
        var ret = _this.push(chunk);
        if (!ret) {
            paused = true;
            stream.pause();
        }
    }); // proxy all the other methods.
    // important when wrapping filters and duplexes.
    for(var i in stream)if (this[i] === undefined && typeof stream[i] === 'function') this[i] = (function methodWrap(method) {
        return function methodWrapReturnFunction() {
            return stream[method].apply(stream, arguments);
        };
    })(i);
     // proxy certain important events.
    for(var n = 0; n < kProxyEvents.length; n++)stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
     // when we try to consume some more bytes, simply unpause the
    // underlying stream.
    this._read = function(n1) {
        debug('wrapped _read', n1);
        if (paused) {
            paused = false;
            stream.resume();
        }
    };
    return this;
};
if (typeof Symbol === 'function') Readable.prototype[Symbol.asyncIterator] = function() {
    if (createReadableStreamAsyncIterator === undefined) createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');
    return createReadableStreamAsyncIterator(this);
};
Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._readableState.highWaterMark;
    }
});
Object.defineProperty(Readable.prototype, 'readableBuffer', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._readableState && this._readableState.buffer;
    }
});
Object.defineProperty(Readable.prototype, 'readableFlowing', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._readableState.flowing;
    },
    set: function set(state) {
        if (this._readableState) this._readableState.flowing = state;
    }
}); // exposed for testing purposes only.
Readable._fromList = fromList;
Object.defineProperty(Readable.prototype, 'readableLength', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._readableState.length;
    }
}); // Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
    // nothing buffered
    if (state.length === 0) return null;
    var ret;
    if (state.objectMode) ret = state.buffer.shift();
    else if (!n || n >= state.length) {
        // read it all, truncate the list
        if (state.decoder) ret = state.buffer.join('');
        else if (state.buffer.length === 1) ret = state.buffer.first();
        else ret = state.buffer.concat(state.length);
        state.buffer.clear();
    } else // read part of list
    ret = state.buffer.consume(n, state.decoder);
    return ret;
}
function endReadable(stream) {
    var state = stream._readableState;
    debug('endReadable', state.endEmitted);
    if (!state.endEmitted) {
        state.ended = true;
        process.nextTick(endReadableNT, state, stream);
    }
}
function endReadableNT(state, stream) {
    debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.
    if (!state.endEmitted && state.length === 0) {
        state.endEmitted = true;
        stream.readable = false;
        stream.emit('end');
        if (state.autoDestroy) {
            // In case of duplex streams we need a way to detect
            // if the writable side is ready for autoDestroy as well
            var wState = stream._writableState;
            if (!wState || wState.autoDestroy && wState.finished) stream.destroy();
        }
    }
}
if (typeof Symbol === 'function') Readable.from = function(iterable, opts) {
    if (from === undefined) from = require('./internal/streams/from');
    return from(Readable, iterable, opts);
};
function indexOf(xs, x) {
    for(var i = 0, l = xs.length; i < l; i++){
        if (xs[i] === x) return i;
    }
    return -1;
}

},{"process":"5svFz","events":"gm7Nh","./internal/streams/stream":"d335q","buffer":"hX7zZ","util":"4LM6B","./internal/streams/buffer_list":"9p5WS","./internal/streams/destroy":"fmSPH","./internal/streams/state":"2smXG","../errors":"2FcbZ","inherits":"9Y2vC","./_stream_duplex":"jstZQ","string_decoder/":"bjdCH","./internal/streams/async_iterator":"NsuGC","./internal/streams/from":"i2OfR"}],"gm7Nh":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
var R = typeof Reflect === 'object' ? Reflect : null;
var ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply1(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
};
var ReflectOwnKeys;
if (R && typeof R.ownKeys === 'function') ReflectOwnKeys = R.ownKeys;
else if (Object.getOwnPropertySymbols) ReflectOwnKeys = function ReflectOwnKeys1(target) {
    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));
};
else ReflectOwnKeys = function ReflectOwnKeys2(target) {
    return Object.getOwnPropertyNames(target);
};
function ProcessEmitWarning(warning) {
    if (console && console.warn) console.warn(warning);
}
var NumberIsNaN = Number.isNaN || function NumberIsNaN1(value) {
    return value !== value;
};
function EventEmitter() {
    EventEmitter.init.call(this);
}
module.exports = EventEmitter;
module.exports.once = once1;
// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;
EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;
// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;
function checkListener(listener) {
    if (typeof listener !== 'function') throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
}
Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
    enumerable: true,
    get: function() {
        return defaultMaxListeners;
    },
    set: function(arg) {
        if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
        defaultMaxListeners = arg;
    }
});
EventEmitter.init = function() {
    if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {
        this._events = Object.create(null);
        this._eventsCount = 0;
    }
    this._maxListeners = this._maxListeners || undefined;
};
// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
    this._maxListeners = n;
    return this;
};
function _getMaxListeners(that) {
    if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;
    return that._maxListeners;
}
EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
    return _getMaxListeners(this);
};
EventEmitter.prototype.emit = function emit(type) {
    var args = [];
    for(var i = 1; i < arguments.length; i++)args.push(arguments[i]);
    var doError = type === 'error';
    var events = this._events;
    if (events !== undefined) doError = doError && events.error === undefined;
    else if (!doError) return false;
    // If there is no 'error' event listener then throw.
    if (doError) {
        var er;
        if (args.length > 0) er = args[0];
        if (er instanceof Error) // Note: The comments on the `throw` lines are intentional, they show
        // up in Node's output if this results in an unhandled exception.
        throw er; // Unhandled 'error' event
        // At least give some kind of context to the user
        var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
        err.context = er;
        throw err; // Unhandled 'error' event
    }
    var handler = events[type];
    if (handler === undefined) return false;
    if (typeof handler === 'function') ReflectApply(handler, this, args);
    else {
        var len = handler.length;
        var listeners = arrayClone(handler, len);
        for(var i = 0; i < len; ++i)ReflectApply(listeners[i], this, args);
    }
    return true;
};
function _addListener(target, type, listener, prepend) {
    var m;
    var events;
    var existing;
    checkListener(listener);
    events = target._events;
    if (events === undefined) {
        events = target._events = Object.create(null);
        target._eventsCount = 0;
    } else {
        // To avoid recursion in the case that type === "newListener"! Before
        // adding it to the listeners, first emit "newListener".
        if (events.newListener !== undefined) {
            target.emit('newListener', type, listener.listener ? listener.listener : listener);
            // Re-assign `events` because a newListener handler could have caused the
            // this._events to be assigned to a new object
            events = target._events;
        }
        existing = events[type];
    }
    if (existing === undefined) {
        // Optimize the case of one listener. Don't need the extra array object.
        existing = events[type] = listener;
        ++target._eventsCount;
    } else {
        if (typeof existing === 'function') // Adding the second element, need to change to array.
        existing = events[type] = prepend ? [
            listener,
            existing
        ] : [
            existing,
            listener
        ];
        else if (prepend) existing.unshift(listener);
        else existing.push(listener);
        // Check for listener leak
        m = _getMaxListeners(target);
        if (m > 0 && existing.length > m && !existing.warned) {
            existing.warned = true;
            // No error code for this since it is a Warning
            // eslint-disable-next-line no-restricted-syntax
            var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');
            w.name = 'MaxListenersExceededWarning';
            w.emitter = target;
            w.type = type;
            w.count = existing.length;
            ProcessEmitWarning(w);
        }
    }
    return target;
}
EventEmitter.prototype.addListener = function addListener(type, listener) {
    return _addListener(this, type, listener, false);
};
EventEmitter.prototype.on = EventEmitter.prototype.addListener;
EventEmitter.prototype.prependListener = function prependListener(type, listener) {
    return _addListener(this, type, listener, true);
};
function onceWrapper() {
    if (!this.fired) {
        this.target.removeListener(this.type, this.wrapFn);
        this.fired = true;
        if (arguments.length === 0) return this.listener.call(this.target);
        return this.listener.apply(this.target, arguments);
    }
}
function _onceWrap(target, type, listener) {
    var state = {
        fired: false,
        wrapFn: undefined,
        target: target,
        type: type,
        listener: listener
    };
    var wrapped = onceWrapper.bind(state);
    wrapped.listener = listener;
    state.wrapFn = wrapped;
    return wrapped;
}
EventEmitter.prototype.once = function once(type, listener) {
    checkListener(listener);
    this.on(type, _onceWrap(this, type, listener));
    return this;
};
EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
    checkListener(listener);
    this.prependListener(type, _onceWrap(this, type, listener));
    return this;
};
// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener = function removeListener(type, listener) {
    var list, events, position, i, originalListener;
    checkListener(listener);
    events = this._events;
    if (events === undefined) return this;
    list = events[type];
    if (list === undefined) return this;
    if (list === listener || list.listener === listener) {
        if ((--this._eventsCount) === 0) this._events = Object.create(null);
        else {
            delete events[type];
            if (events.removeListener) this.emit('removeListener', type, list.listener || listener);
        }
    } else if (typeof list !== 'function') {
        position = -1;
        for(i = list.length - 1; i >= 0; i--)if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
        }
        if (position < 0) return this;
        if (position === 0) list.shift();
        else spliceOne(list, position);
        if (list.length === 1) events[type] = list[0];
        if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);
    }
    return this;
};
EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
    var listeners, events, i;
    events = this._events;
    if (events === undefined) return this;
    // not listening for removeListener, no need to emit
    if (events.removeListener === undefined) {
        if (arguments.length === 0) {
            this._events = Object.create(null);
            this._eventsCount = 0;
        } else if (events[type] !== undefined) {
            if ((--this._eventsCount) === 0) this._events = Object.create(null);
            else delete events[type];
        }
        return this;
    }
    // emit removeListener for all listeners on all events
    if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for(i = 0; i < keys.length; ++i){
            key = keys[i];
            if (key === 'removeListener') continue;
            this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
    }
    listeners = events[type];
    if (typeof listeners === 'function') this.removeListener(type, listeners);
    else if (listeners !== undefined) // LIFO order
    for(i = listeners.length - 1; i >= 0; i--)this.removeListener(type, listeners[i]);
    return this;
};
function _listeners(target, type, unwrap) {
    var events = target._events;
    if (events === undefined) return [];
    var evlistener = events[type];
    if (evlistener === undefined) return [];
    if (typeof evlistener === 'function') return unwrap ? [
        evlistener.listener || evlistener
    ] : [
        evlistener
    ];
    return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}
EventEmitter.prototype.listeners = function listeners(type) {
    return _listeners(this, type, true);
};
EventEmitter.prototype.rawListeners = function rawListeners(type) {
    return _listeners(this, type, false);
};
EventEmitter.listenerCount = function(emitter, type) {
    if (typeof emitter.listenerCount === 'function') return emitter.listenerCount(type);
    else return listenerCount.call(emitter, type);
};
EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
    var events = this._events;
    if (events !== undefined) {
        var evlistener = events[type];
        if (typeof evlistener === 'function') return 1;
        else if (evlistener !== undefined) return evlistener.length;
    }
    return 0;
}
EventEmitter.prototype.eventNames = function eventNames() {
    return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};
function arrayClone(arr, n) {
    var copy = new Array(n);
    for(var i = 0; i < n; ++i)copy[i] = arr[i];
    return copy;
}
function spliceOne(list, index) {
    for(; index + 1 < list.length; index++)list[index] = list[index + 1];
    list.pop();
}
function unwrapListeners(arr) {
    var ret = new Array(arr.length);
    for(var i = 0; i < ret.length; ++i)ret[i] = arr[i].listener || arr[i];
    return ret;
}
function once1(emitter, name) {
    return new Promise(function(resolve, reject) {
        function errorListener(err) {
            emitter.removeListener(name, resolver);
            reject(err);
        }
        function resolver() {
            if (typeof emitter.removeListener === 'function') emitter.removeListener('error', errorListener);
            resolve([].slice.call(arguments));
        }
        eventTargetAgnosticAddListener(emitter, name, resolver, {
            once: true
        });
        if (name !== 'error') addErrorHandlerIfEventEmitter(emitter, errorListener, {
            once: true
        });
    });
}
function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
    if (typeof emitter.on === 'function') eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
}
function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
    if (typeof emitter.on === 'function') {
        if (flags.once) emitter.once(name, listener);
        else emitter.on(name, listener);
    } else if (typeof emitter.addEventListener === 'function') // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
        // IE does not have builtin `{ once: true }` support so we
        // have to do it manually.
        if (flags.once) emitter.removeEventListener(name, wrapListener);
        listener(arg);
    });
    else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
}

},{}],"d335q":[function(require,module,exports) {
module.exports = require('events').EventEmitter;

},{"events":"gm7Nh"}],"4LM6B":[function(require,module,exports) {
"use strict";

},{}],"9p5WS":[function(require,module,exports) {
'use strict';
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _objectSpread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {
        };
        if (i % 2) ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
        });
        else if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        else ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _defineProperty(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
var _require = require('buffer'), Buffer = _require.Buffer;
var _require2 = require('util'), inspect = _require2.inspect;
var custom = inspect && inspect.custom || 'inspect';
function copyBuffer(src, target, offset) {
    Buffer.prototype.copy.call(src, target, offset);
}
module.exports = /*#__PURE__*/ (function() {
    function BufferList() {
        _classCallCheck(this, BufferList);
        this.head = null;
        this.tail = null;
        this.length = 0;
    }
    _createClass(BufferList, [
        {
            key: "push",
            value: function push(v) {
                var entry = {
                    data: v,
                    next: null
                };
                if (this.length > 0) this.tail.next = entry;
                else this.head = entry;
                this.tail = entry;
                ++this.length;
            }
        },
        {
            key: "unshift",
            value: function unshift(v) {
                var entry = {
                    data: v,
                    next: this.head
                };
                if (this.length === 0) this.tail = entry;
                this.head = entry;
                ++this.length;
            }
        },
        {
            key: "shift",
            value: function shift() {
                if (this.length === 0) return;
                var ret = this.head.data;
                if (this.length === 1) this.head = this.tail = null;
                else this.head = this.head.next;
                --this.length;
                return ret;
            }
        },
        {
            key: "clear",
            value: function clear() {
                this.head = this.tail = null;
                this.length = 0;
            }
        },
        {
            key: "join",
            value: function join(s) {
                if (this.length === 0) return '';
                var p = this.head;
                var ret = '' + p.data;
                while(p = p.next)ret += s + p.data;
                return ret;
            }
        },
        {
            key: "concat",
            value: function concat(n) {
                if (this.length === 0) return Buffer.alloc(0);
                var ret = Buffer.allocUnsafe(n >>> 0);
                var p = this.head;
                var i = 0;
                while(p){
                    copyBuffer(p.data, ret, i);
                    i += p.data.length;
                    p = p.next;
                }
                return ret;
            } // Consumes a specified amount of bytes or characters from the buffered data.
        },
        {
            key: "consume",
            value: function consume(n, hasStrings) {
                var ret;
                if (n < this.head.data.length) {
                    // `slice` is the same for buffers and strings.
                    ret = this.head.data.slice(0, n);
                    this.head.data = this.head.data.slice(n);
                } else if (n === this.head.data.length) // First chunk is a perfect match.
                ret = this.shift();
                else // Result spans more than one buffer.
                ret = hasStrings ? this._getString(n) : this._getBuffer(n);
                return ret;
            }
        },
        {
            key: "first",
            value: function first() {
                return this.head.data;
            } // Consumes a specified amount of characters from the buffered data.
        },
        {
            key: "_getString",
            value: function _getString(n) {
                var p = this.head;
                var c = 1;
                var ret = p.data;
                n -= ret.length;
                while(p = p.next){
                    var str = p.data;
                    var nb = n > str.length ? str.length : n;
                    if (nb === str.length) ret += str;
                    else ret += str.slice(0, n);
                    n -= nb;
                    if (n === 0) {
                        if (nb === str.length) {
                            ++c;
                            if (p.next) this.head = p.next;
                            else this.head = this.tail = null;
                        } else {
                            this.head = p;
                            p.data = str.slice(nb);
                        }
                        break;
                    }
                    ++c;
                }
                this.length -= c;
                return ret;
            } // Consumes a specified amount of bytes from the buffered data.
        },
        {
            key: "_getBuffer",
            value: function _getBuffer(n) {
                var ret = Buffer.allocUnsafe(n);
                var p = this.head;
                var c = 1;
                p.data.copy(ret);
                n -= p.data.length;
                while(p = p.next){
                    var buf = p.data;
                    var nb = n > buf.length ? buf.length : n;
                    buf.copy(ret, ret.length - n, 0, nb);
                    n -= nb;
                    if (n === 0) {
                        if (nb === buf.length) {
                            ++c;
                            if (p.next) this.head = p.next;
                            else this.head = this.tail = null;
                        } else {
                            this.head = p;
                            p.data = buf.slice(nb);
                        }
                        break;
                    }
                    ++c;
                }
                this.length -= c;
                return ret;
            } // Make sure the linked list only shows the minimal necessary information.
        },
        {
            key: custom,
            value: function value(_, options) {
                return inspect(this, _objectSpread({
                }, options, {
                    // Only inspect one level.
                    depth: 0,
                    // It should not recurse.
                    customInspect: false
                }));
            }
        }
    ]);
    return BufferList;
})();

},{"buffer":"hX7zZ","util":"4LM6B"}],"fmSPH":[function(require,module,exports) {
var process = require("process");
'use strict'; // undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
    var _this = this;
    var readableDestroyed = this._readableState && this._readableState.destroyed;
    var writableDestroyed = this._writableState && this._writableState.destroyed;
    if (readableDestroyed || writableDestroyed) {
        if (cb) cb(err);
        else if (err) {
            if (!this._writableState) process.nextTick(emitErrorNT, this, err);
            else if (!this._writableState.errorEmitted) {
                this._writableState.errorEmitted = true;
                process.nextTick(emitErrorNT, this, err);
            }
        }
        return this;
    } // we set destroyed to true before firing error callbacks in order
    // to make it re-entrance safe in case destroy() is called within callbacks
    if (this._readableState) this._readableState.destroyed = true;
     // if this is a duplex stream mark the writable part as destroyed as well
    if (this._writableState) this._writableState.destroyed = true;
    this._destroy(err || null, function(err1) {
        if (!cb && err1) {
            if (!_this._writableState) process.nextTick(emitErrorAndCloseNT, _this, err1);
            else if (!_this._writableState.errorEmitted) {
                _this._writableState.errorEmitted = true;
                process.nextTick(emitErrorAndCloseNT, _this, err1);
            } else process.nextTick(emitCloseNT, _this);
        } else if (cb) {
            process.nextTick(emitCloseNT, _this);
            cb(err1);
        } else process.nextTick(emitCloseNT, _this);
    });
    return this;
}
function emitErrorAndCloseNT(self, err) {
    emitErrorNT(self, err);
    emitCloseNT(self);
}
function emitCloseNT(self) {
    if (self._writableState && !self._writableState.emitClose) return;
    if (self._readableState && !self._readableState.emitClose) return;
    self.emit('close');
}
function undestroy() {
    if (this._readableState) {
        this._readableState.destroyed = false;
        this._readableState.reading = false;
        this._readableState.ended = false;
        this._readableState.endEmitted = false;
    }
    if (this._writableState) {
        this._writableState.destroyed = false;
        this._writableState.ended = false;
        this._writableState.ending = false;
        this._writableState.finalCalled = false;
        this._writableState.prefinished = false;
        this._writableState.finished = false;
        this._writableState.errorEmitted = false;
    }
}
function emitErrorNT(self, err) {
    self.emit('error', err);
}
function errorOrDestroy(stream, err) {
    // We have tests that rely on errors being emitted
    // in the same tick, so changing this is semver major.
    // For now when you opt-in to autoDestroy we allow
    // the error to be emitted nextTick. In a future
    // semver major update we should change the default to this.
    var rState = stream._readableState;
    var wState = stream._writableState;
    if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);
    else stream.emit('error', err);
}
module.exports = {
    destroy: destroy,
    undestroy: undestroy,
    errorOrDestroy: errorOrDestroy
};

},{"process":"5svFz"}],"2smXG":[function(require,module,exports) {
'use strict';
var ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;
function highWaterMarkFrom(options, isDuplex, duplexKey) {
    return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
}
function getHighWaterMark(state, options, duplexKey, isDuplex) {
    var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);
    if (hwm != null) {
        if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
            var name = isDuplex ? duplexKey : 'highWaterMark';
            throw new ERR_INVALID_OPT_VALUE(name, hwm);
        }
        return Math.floor(hwm);
    } // Default value
    return state.objectMode ? 16 : 16384;
}
module.exports = {
    getHighWaterMark: getHighWaterMark
};

},{"../../../errors":"2FcbZ"}],"2FcbZ":[function(require,module,exports) {
'use strict';
function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
}
var codes = {
};
function createErrorType(code, message, Base) {
    if (!Base) Base = Error;
    function getMessage(arg1, arg2, arg3) {
        if (typeof message === 'string') return message;
        else return message(arg1, arg2, arg3);
    }
    var NodeError1 = /*#__PURE__*/ function(_Base) {
        _inheritsLoose(NodeError2, _Base);
        function NodeError2(arg1, arg2, arg3) {
            return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
        }
        return NodeError2;
    }(Base);
    NodeError1.prototype.name = Base.name;
    NodeError1.prototype.code = code;
    codes[code] = NodeError1;
} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js
function oneOf(expected, thing) {
    if (Array.isArray(expected)) {
        var len = expected.length;
        expected = expected.map(function(i) {
            return String(i);
        });
        if (len > 2) return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(', '), ", or ") + expected[len - 1];
        else if (len === 2) return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
        else return "of ".concat(thing, " ").concat(expected[0]);
    } else return "of ".concat(thing, " ").concat(String(expected));
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith
function startsWith(str, search, pos) {
    return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith
function endsWith(str, search, this_len) {
    if (this_len === undefined || this_len > str.length) this_len = str.length;
    return str.substring(this_len - search.length, this_len) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes
function includes(str, search, start) {
    if (typeof start !== 'number') start = 0;
    if (start + search.length > str.length) return false;
    else return str.indexOf(search, start) !== -1;
}
createErrorType('ERR_INVALID_OPT_VALUE', function(name, value) {
    return 'The value "' + value + '" is invalid for option "' + name + '"';
}, TypeError);
createErrorType('ERR_INVALID_ARG_TYPE', function(name, expected, actual) {
    // determiner: 'must be' or 'must not be'
    var determiner;
    if (typeof expected === 'string' && startsWith(expected, 'not ')) {
        determiner = 'must not be';
        expected = expected.replace(/^not /, '');
    } else determiner = 'must be';
    var msg;
    if (endsWith(name, ' argument')) // For cases like 'first argument'
    msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
    else {
        var type = includes(name, '.') ? 'property' : 'argument';
        msg = "The \"".concat(name, "\" ").concat(type, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
    }
    msg += ". Received type ".concat(typeof actual);
    return msg;
}, TypeError);
createErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');
createErrorType('ERR_METHOD_NOT_IMPLEMENTED', function(name) {
    return 'The ' + name + ' method is not implemented';
});
createErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');
createErrorType('ERR_STREAM_DESTROYED', function(name) {
    return 'Cannot call ' + name + ' after a stream was destroyed';
});
createErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');
createErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');
createErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');
createErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);
createErrorType('ERR_UNKNOWN_ENCODING', function(arg) {
    return 'Unknown encoding: ' + arg;
}, TypeError);
createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');
module.exports.codes = codes;

},{}],"jstZQ":[function(require,module,exports) {
var process = require("process");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.
'use strict';
/*<replacement>*/ var objectKeys = Object.keys || function(obj) {
    var keys = [];
    for(var key in obj)keys.push(key);
    return keys;
};
/*</replacement>*/ module.exports = Duplex;
var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');
require('inherits')(Duplex, Readable);
// Allow the keys array to be GC'ed.
var keys = objectKeys(Writable.prototype);
for(var v = 0; v < keys.length; v++){
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
}
function Duplex(options) {
    if (!(this instanceof Duplex)) return new Duplex(options);
    Readable.call(this, options);
    Writable.call(this, options);
    this.allowHalfOpen = true;
    if (options) {
        if (options.readable === false) this.readable = false;
        if (options.writable === false) this.writable = false;
        if (options.allowHalfOpen === false) {
            this.allowHalfOpen = false;
            this.once('end', onend);
        }
    }
}
Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._writableState.highWaterMark;
    }
});
Object.defineProperty(Duplex.prototype, 'writableBuffer', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._writableState && this._writableState.getBuffer();
    }
});
Object.defineProperty(Duplex.prototype, 'writableLength', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._writableState.length;
    }
}); // the no-half-open enforcer
function onend() {
    // If the writable side ended, then we're ok.
    if (this._writableState.ended) return; // no more data can be written.
    // But allow more writes to happen in this tick.
    process.nextTick(onEndNT, this);
}
function onEndNT(self) {
    self.end();
}
Object.defineProperty(Duplex.prototype, 'destroyed', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        if (this._readableState === undefined || this._writableState === undefined) return false;
        return this._readableState.destroyed && this._writableState.destroyed;
    },
    set: function set(value) {
        // we ignore the value if the stream
        // has not been initialized yet
        if (this._readableState === undefined || this._writableState === undefined) return;
         // backward compatibility, the user is explicitly
        // managing destroyed
        this._readableState.destroyed = value;
        this._writableState.destroyed = value;
    }
});

},{"process":"5svFz","./_stream_readable":"emN7r","./_stream_writable":"64P04","inherits":"9Y2vC"}],"64P04":[function(require,module,exports) {
var global = arguments[3];
var process = require("process");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.
'use strict';
module.exports = Writable;
/* <replacement> */ function WriteReq(chunk, encoding, cb) {
    this.chunk = chunk;
    this.encoding = encoding;
    this.callback = cb;
    this.next = null;
} // It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
    var _this = this;
    this.next = null;
    this.entry = null;
    this.finish = function() {
        onCorkedFinish(_this, state);
    };
}
/* </replacement> */ /*<replacement>*/ var Duplex;
/*</replacement>*/ Writable.WritableState = WritableState;
/*<replacement>*/ var internalUtil = {
    deprecate: require('util-deprecate')
};
/*</replacement>*/ /*<replacement>*/ var Stream = require('./internal/streams/stream');
/*</replacement>*/ var Buffer = require('buffer').Buffer;
var OurUint8Array = global.Uint8Array || function() {
};
function _uint8ArrayToBuffer(chunk) {
    return Buffer.from(chunk);
}
function _isUint8Array(obj) {
    return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
var destroyImpl = require('./internal/streams/destroy');
var _require = require('./internal/streams/state'), getHighWaterMark = _require.getHighWaterMark;
var _require$codes = require('../errors').codes, ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE, ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED, ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK, ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE, ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED, ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES, ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END, ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;
var errorOrDestroy = destroyImpl.errorOrDestroy;
require('inherits')(Writable, Stream);
function nop() {
}
function WritableState(options, stream, isDuplex) {
    Duplex = Duplex || require('./_stream_duplex');
    options = options || {
    }; // Duplex streams are both readable and writable, but share
    // the same options object.
    // However, some cases require setting options to different
    // values for the readable and the writable sides of the duplex stream,
    // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.
    if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream
    // contains buffers or objects.
    this.objectMode = !!options.objectMode;
    if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false
    // Note: 0 is a valid value, means that we always return false if
    // the entire buffer is not flushed immediately on write()
    this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called
    this.finalCalled = false; // drain event flag.
    this.needDrain = false; // at the start of calling end()
    this.ending = false; // when end() has been called, and returned
    this.ended = false; // when 'finish' is emitted
    this.finished = false; // has it been destroyed
    this.destroyed = false; // should we decode strings into buffers before passing to _write?
    // this is here so that some node-core streams can optimize string
    // handling at a lower level.
    var noDecode = options.decodeStrings === false;
    this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string
    // encoding is 'binary' so we have to make this configurable.
    // Everything else in the universe uses 'utf8', though.
    this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement
    // of how much we're waiting to get pushed to some underlying
    // socket or file.
    this.length = 0; // a flag to see when we're in the middle of a write.
    this.writing = false; // when true all writes will be buffered until .uncork() call
    this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,
    // or on a later tick.  We set this to true at first, because any
    // actions that shouldn't happen until "later" should generally also
    // not happen before the first write call.
    this.sync = true; // a flag to know if we're processing previously buffered items, which
    // may call the _write() callback in the same tick, so that we don't
    // end up in an overlapped onwrite situation.
    this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)
    this.onwrite = function(er) {
        onwrite(stream, er);
    }; // the callback that the user supplies to write(chunk,encoding,cb)
    this.writecb = null; // the amount that is being written when _write is called.
    this.writelen = 0;
    this.bufferedRequest = null;
    this.lastBufferedRequest = null; // number of pending user-supplied write callbacks
    // this must be 0 before 'finish' can be emitted
    this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs
    // This is relevant for synchronous Transform streams
    this.prefinished = false; // True if the error was already emitted and should not be thrown again
    this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.
    this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')
    this.autoDestroy = !!options.autoDestroy; // count buffered requests
    this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always
    // one allocated and free to use, and we maintain at most two
    this.corkedRequestsFree = new CorkedRequest(this);
}
WritableState.prototype.getBuffer = function getBuffer() {
    var current = this.bufferedRequest;
    var out = [];
    while(current){
        out.push(current);
        current = current.next;
    }
    return out;
};
(function() {
    try {
        Object.defineProperty(WritableState.prototype, 'buffer', {
            get: internalUtil.deprecate(function writableStateBufferGetter() {
                return this.getBuffer();
            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", 'DEP0003')
        });
    } catch (_) {
    }
})(); // Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
    realHasInstance = Function.prototype[Symbol.hasInstance];
    Object.defineProperty(Writable, Symbol.hasInstance, {
        value: function value(object) {
            if (realHasInstance.call(this, object)) return true;
            if (this !== Writable) return false;
            return object && object._writableState instanceof WritableState;
        }
    });
} else realHasInstance = function realHasInstance1(object) {
    return object instanceof this;
};
function Writable(options) {
    Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.
    // `realHasInstance` is necessary because using plain `instanceof`
    // would return false, as no `_writableState` property is attached.
    // Trying to use the custom `instanceof` for Writable here will also break the
    // Node.js LazyTransform implementation, which has a non-trivial getter for
    // `_writableState` that would lead to infinite recursion.
    // Checking for a Stream.Duplex instance is faster here instead of inside
    // the WritableState constructor, at least with V8 6.5
    var isDuplex = this instanceof Duplex;
    if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
    this._writableState = new WritableState(options, this, isDuplex); // legacy.
    this.writable = true;
    if (options) {
        if (typeof options.write === 'function') this._write = options.write;
        if (typeof options.writev === 'function') this._writev = options.writev;
        if (typeof options.destroy === 'function') this._destroy = options.destroy;
        if (typeof options.final === 'function') this._final = options.final;
    }
    Stream.call(this);
} // Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function() {
    errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
};
function writeAfterEnd(stream, cb) {
    var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb
    errorOrDestroy(stream, er);
    process.nextTick(cb, er);
} // Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
    var er;
    if (chunk === null) er = new ERR_STREAM_NULL_VALUES();
    else if (typeof chunk !== 'string' && !state.objectMode) er = new ERR_INVALID_ARG_TYPE('chunk', [
        'string',
        'Buffer'
    ], chunk);
    if (er) {
        errorOrDestroy(stream, er);
        process.nextTick(cb, er);
        return false;
    }
    return true;
}
Writable.prototype.write = function(chunk, encoding, cb) {
    var state = this._writableState;
    var ret = false;
    var isBuf = !state.objectMode && _isUint8Array(chunk);
    if (isBuf && !Buffer.isBuffer(chunk)) chunk = _uint8ArrayToBuffer(chunk);
    if (typeof encoding === 'function') {
        cb = encoding;
        encoding = null;
    }
    if (isBuf) encoding = 'buffer';
    else if (!encoding) encoding = state.defaultEncoding;
    if (typeof cb !== 'function') cb = nop;
    if (state.ending) writeAfterEnd(this, cb);
    else if (isBuf || validChunk(this, state, chunk, cb)) {
        state.pendingcb++;
        ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
    }
    return ret;
};
Writable.prototype.cork = function() {
    this._writableState.corked++;
};
Writable.prototype.uncork = function() {
    var state = this._writableState;
    if (state.corked) {
        state.corked--;
        if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
    }
};
Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
    // node::ParseEncoding() requires lower case.
    if (typeof encoding === 'string') encoding = encoding.toLowerCase();
    if (!([
        'hex',
        'utf8',
        'utf-8',
        'ascii',
        'binary',
        'base64',
        'ucs2',
        'ucs-2',
        'utf16le',
        'utf-16le',
        'raw'
    ].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);
    this._writableState.defaultEncoding = encoding;
    return this;
};
Object.defineProperty(Writable.prototype, 'writableBuffer', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._writableState && this._writableState.getBuffer();
    }
});
function decodeChunk(state, chunk, encoding) {
    if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') chunk = Buffer.from(chunk, encoding);
    return chunk;
}
Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._writableState.highWaterMark;
    }
}); // if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
    if (!isBuf) {
        var newChunk = decodeChunk(state, chunk, encoding);
        if (chunk !== newChunk) {
            isBuf = true;
            encoding = 'buffer';
            chunk = newChunk;
        }
    }
    var len = state.objectMode ? 1 : chunk.length;
    state.length += len;
    var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.
    if (!ret) state.needDrain = true;
    if (state.writing || state.corked) {
        var last = state.lastBufferedRequest;
        state.lastBufferedRequest = {
            chunk: chunk,
            encoding: encoding,
            isBuf: isBuf,
            callback: cb,
            next: null
        };
        if (last) last.next = state.lastBufferedRequest;
        else state.bufferedRequest = state.lastBufferedRequest;
        state.bufferedRequestCount += 1;
    } else doWrite(stream, state, false, len, chunk, encoding, cb);
    return ret;
}
function doWrite(stream, state, writev, len, chunk, encoding, cb) {
    state.writelen = len;
    state.writecb = cb;
    state.writing = true;
    state.sync = true;
    if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));
    else if (writev) stream._writev(chunk, state.onwrite);
    else stream._write(chunk, encoding, state.onwrite);
    state.sync = false;
}
function onwriteError(stream, state, sync, er, cb) {
    --state.pendingcb;
    if (sync) {
        // defer the callback if we are being called synchronously
        // to avoid piling up things on the stack
        process.nextTick(cb, er); // this can emit finish, and it will always happen
        // after error
        process.nextTick(finishMaybe, stream, state);
        stream._writableState.errorEmitted = true;
        errorOrDestroy(stream, er);
    } else {
        // the caller expect this to happen before if
        // it is async
        cb(er);
        stream._writableState.errorEmitted = true;
        errorOrDestroy(stream, er); // this can emit finish, but finish must
        // always follow error
        finishMaybe(stream, state);
    }
}
function onwriteStateUpdate(state) {
    state.writing = false;
    state.writecb = null;
    state.length -= state.writelen;
    state.writelen = 0;
}
function onwrite(stream, er) {
    var state = stream._writableState;
    var sync = state.sync;
    var cb = state.writecb;
    if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();
    onwriteStateUpdate(state);
    if (er) onwriteError(stream, state, sync, er, cb);
    else {
        // Check if we're actually ready to finish, but don't emit yet
        var finished = needFinish(state) || stream.destroyed;
        if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(stream, state);
        if (sync) process.nextTick(afterWrite, stream, state, finished, cb);
        else afterWrite(stream, state, finished, cb);
    }
}
function afterWrite(stream, state, finished, cb) {
    if (!finished) onwriteDrain(stream, state);
    state.pendingcb--;
    cb();
    finishMaybe(stream, state);
} // Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
    if (state.length === 0 && state.needDrain) {
        state.needDrain = false;
        stream.emit('drain');
    }
} // if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
    state.bufferProcessing = true;
    var entry = state.bufferedRequest;
    if (stream._writev && entry && entry.next) {
        // Fast case, write everything using _writev()
        var l = state.bufferedRequestCount;
        var buffer = new Array(l);
        var holder = state.corkedRequestsFree;
        holder.entry = entry;
        var count = 0;
        var allBuffers = true;
        while(entry){
            buffer[count] = entry;
            if (!entry.isBuf) allBuffers = false;
            entry = entry.next;
            count += 1;
        }
        buffer.allBuffers = allBuffers;
        doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time
        // as the hot path ends with doWrite
        state.pendingcb++;
        state.lastBufferedRequest = null;
        if (holder.next) {
            state.corkedRequestsFree = holder.next;
            holder.next = null;
        } else state.corkedRequestsFree = new CorkedRequest(state);
        state.bufferedRequestCount = 0;
    } else {
        // Slow case, write chunks one-by-one
        while(entry){
            var chunk = entry.chunk;
            var encoding = entry.encoding;
            var cb = entry.callback;
            var len = state.objectMode ? 1 : chunk.length;
            doWrite(stream, state, false, len, chunk, encoding, cb);
            entry = entry.next;
            state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then
            // it means that we need to wait until it does.
            // also, that means that the chunk and cb are currently
            // being processed, so move the buffer counter past them.
            if (state.writing) break;
        }
        if (entry === null) state.lastBufferedRequest = null;
    }
    state.bufferedRequest = entry;
    state.bufferProcessing = false;
}
Writable.prototype._write = function(chunk, encoding, cb) {
    cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
};
Writable.prototype._writev = null;
Writable.prototype.end = function(chunk, encoding, cb) {
    var state = this._writableState;
    if (typeof chunk === 'function') {
        cb = chunk;
        chunk = null;
        encoding = null;
    } else if (typeof encoding === 'function') {
        cb = encoding;
        encoding = null;
    }
    if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks
    if (state.corked) {
        state.corked = 1;
        this.uncork();
    } // ignore unnecessary end() calls.
    if (!state.ending) endWritable(this, state, cb);
    return this;
};
Object.defineProperty(Writable.prototype, 'writableLength', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._writableState.length;
    }
});
function needFinish(state) {
    return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
    stream._final(function(err) {
        state.pendingcb--;
        if (err) errorOrDestroy(stream, err);
        state.prefinished = true;
        stream.emit('prefinish');
        finishMaybe(stream, state);
    });
}
function prefinish(stream, state) {
    if (!state.prefinished && !state.finalCalled) {
        if (typeof stream._final === 'function' && !state.destroyed) {
            state.pendingcb++;
            state.finalCalled = true;
            process.nextTick(callFinal, stream, state);
        } else {
            state.prefinished = true;
            stream.emit('prefinish');
        }
    }
}
function finishMaybe(stream, state) {
    var need = needFinish(state);
    if (need) {
        prefinish(stream, state);
        if (state.pendingcb === 0) {
            state.finished = true;
            stream.emit('finish');
            if (state.autoDestroy) {
                // In case of duplex streams we need a way to detect
                // if the readable side is ready for autoDestroy as well
                var rState = stream._readableState;
                if (!rState || rState.autoDestroy && rState.endEmitted) stream.destroy();
            }
        }
    }
    return need;
}
function endWritable(stream, state, cb) {
    state.ending = true;
    finishMaybe(stream, state);
    if (cb) {
        if (state.finished) process.nextTick(cb);
        else stream.once('finish', cb);
    }
    state.ended = true;
    stream.writable = false;
}
function onCorkedFinish(corkReq, state, err) {
    var entry = corkReq.entry;
    corkReq.entry = null;
    while(entry){
        var cb = entry.callback;
        state.pendingcb--;
        cb(err);
        entry = entry.next;
    } // reuse the free corkReq.
    state.corkedRequestsFree.next = corkReq;
}
Object.defineProperty(Writable.prototype, 'destroyed', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        if (this._writableState === undefined) return false;
        return this._writableState.destroyed;
    },
    set: function set(value) {
        // we ignore the value if the stream
        // has not been initialized yet
        if (!this._writableState) return;
         // backward compatibility, the user is explicitly
        // managing destroyed
        this._writableState.destroyed = value;
    }
});
Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function(err, cb) {
    cb(err);
};

},{"process":"5svFz","util-deprecate":"4BOnC","./internal/streams/stream":"d335q","buffer":"hX7zZ","./internal/streams/destroy":"fmSPH","./internal/streams/state":"2smXG","../errors":"2FcbZ","inherits":"9Y2vC","./_stream_duplex":"jstZQ"}],"4BOnC":[function(require,module,exports) {
var global = arguments[3];
/**
 * Module exports.
 */ module.exports = deprecate;
/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */ function deprecate(fn, msg) {
    if (config('noDeprecation')) return fn;
    var warned = false;
    function deprecated() {
        if (!warned) {
            if (config('throwDeprecation')) throw new Error(msg);
            else if (config('traceDeprecation')) console.trace(msg);
            else console.warn(msg);
            warned = true;
        }
        return fn.apply(this, arguments);
    }
    return deprecated;
}
/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */ function config(name) {
    // accessing global.localStorage can trigger a DOMException in sandboxed iframes
    try {
        if (!global.localStorage) return false;
    } catch (_) {
        return false;
    }
    var val = global.localStorage[name];
    if (null == val) return false;
    return String(val).toLowerCase() === 'true';
}

},{}],"bjdCH":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
/*<replacement>*/ var Buffer = require('safe-buffer').Buffer;
/*</replacement>*/ var isEncoding = Buffer.isEncoding || function(encoding) {
    encoding = '' + encoding;
    switch(encoding && encoding.toLowerCase()){
        case 'hex':
        case 'utf8':
        case 'utf-8':
        case 'ascii':
        case 'binary':
        case 'base64':
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
        case 'raw':
            return true;
        default:
            return false;
    }
};
function _normalizeEncoding(enc) {
    if (!enc) return 'utf8';
    var retried;
    while(true)switch(enc){
        case 'utf8':
        case 'utf-8':
            return 'utf8';
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
            return 'utf16le';
        case 'latin1':
        case 'binary':
            return 'latin1';
        case 'base64':
        case 'ascii':
        case 'hex':
            return enc;
        default:
            if (retried) return; // undefined
            enc = ('' + enc).toLowerCase();
            retried = true;
    }
}
// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
    var nenc = _normalizeEncoding(enc);
    if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
    return nenc || enc;
}
// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
    this.encoding = normalizeEncoding(encoding);
    var nb;
    switch(this.encoding){
        case 'utf16le':
            this.text = utf16Text;
            this.end = utf16End;
            nb = 4;
            break;
        case 'utf8':
            this.fillLast = utf8FillLast;
            nb = 4;
            break;
        case 'base64':
            this.text = base64Text;
            this.end = base64End;
            nb = 3;
            break;
        default:
            this.write = simpleWrite;
            this.end = simpleEnd;
            return;
    }
    this.lastNeed = 0;
    this.lastTotal = 0;
    this.lastChar = Buffer.allocUnsafe(nb);
}
StringDecoder.prototype.write = function(buf) {
    if (buf.length === 0) return '';
    var r;
    var i;
    if (this.lastNeed) {
        r = this.fillLast(buf);
        if (r === undefined) return '';
        i = this.lastNeed;
        this.lastNeed = 0;
    } else i = 0;
    if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
    return r || '';
};
StringDecoder.prototype.end = utf8End;
// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;
// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function(buf) {
    if (this.lastNeed <= buf.length) {
        buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
        return this.lastChar.toString(this.encoding, 0, this.lastTotal);
    }
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
    this.lastNeed -= buf.length;
};
// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
    if (byte <= 127) return 0;
    else if (byte >> 5 === 6) return 2;
    else if (byte >> 4 === 14) return 3;
    else if (byte >> 3 === 30) return 4;
    return byte >> 6 === 2 ? -1 : -2;
}
// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
    var j = buf.length - 1;
    if (j < i) return 0;
    var nb = utf8CheckByte(buf[j]);
    if (nb >= 0) {
        if (nb > 0) self.lastNeed = nb - 1;
        return nb;
    }
    if ((--j) < i || nb === -2) return 0;
    nb = utf8CheckByte(buf[j]);
    if (nb >= 0) {
        if (nb > 0) self.lastNeed = nb - 2;
        return nb;
    }
    if ((--j) < i || nb === -2) return 0;
    nb = utf8CheckByte(buf[j]);
    if (nb >= 0) {
        if (nb > 0) {
            if (nb === 2) nb = 0;
            else self.lastNeed = nb - 3;
        }
        return nb;
    }
    return 0;
}
// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
    if ((buf[0] & 192) !== 128) {
        self.lastNeed = 0;
        return '\ufffd';
    }
    if (self.lastNeed > 1 && buf.length > 1) {
        if ((buf[1] & 192) !== 128) {
            self.lastNeed = 1;
            return '\ufffd';
        }
        if (self.lastNeed > 2 && buf.length > 2) {
            if ((buf[2] & 192) !== 128) {
                self.lastNeed = 2;
                return '\ufffd';
            }
        }
    }
}
// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
    var p = this.lastTotal - this.lastNeed;
    var r = utf8CheckExtraBytes(this, buf, p);
    if (r !== undefined) return r;
    if (this.lastNeed <= buf.length) {
        buf.copy(this.lastChar, p, 0, this.lastNeed);
        return this.lastChar.toString(this.encoding, 0, this.lastTotal);
    }
    buf.copy(this.lastChar, p, 0, buf.length);
    this.lastNeed -= buf.length;
}
// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
    var total = utf8CheckIncomplete(this, buf, i);
    if (!this.lastNeed) return buf.toString('utf8', i);
    this.lastTotal = total;
    var end = buf.length - (total - this.lastNeed);
    buf.copy(this.lastChar, 0, end);
    return buf.toString('utf8', i, end);
}
// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
    var r = buf && buf.length ? this.write(buf) : '';
    if (this.lastNeed) return r + '\ufffd';
    return r;
}
// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
    if ((buf.length - i) % 2 === 0) {
        var r = buf.toString('utf16le', i);
        if (r) {
            var c = r.charCodeAt(r.length - 1);
            if (c >= 55296 && c <= 56319) {
                this.lastNeed = 2;
                this.lastTotal = 4;
                this.lastChar[0] = buf[buf.length - 2];
                this.lastChar[1] = buf[buf.length - 1];
                return r.slice(0, -1);
            }
        }
        return r;
    }
    this.lastNeed = 1;
    this.lastTotal = 2;
    this.lastChar[0] = buf[buf.length - 1];
    return buf.toString('utf16le', i, buf.length - 1);
}
// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
    var r = buf && buf.length ? this.write(buf) : '';
    if (this.lastNeed) {
        var end = this.lastTotal - this.lastNeed;
        return r + this.lastChar.toString('utf16le', 0, end);
    }
    return r;
}
function base64Text(buf, i) {
    var n = (buf.length - i) % 3;
    if (n === 0) return buf.toString('base64', i);
    this.lastNeed = 3 - n;
    this.lastTotal = 3;
    if (n === 1) this.lastChar[0] = buf[buf.length - 1];
    else {
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
    }
    return buf.toString('base64', i, buf.length - n);
}
function base64End(buf) {
    var r = buf && buf.length ? this.write(buf) : '';
    if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
    return r;
}
// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
    return buf.toString(this.encoding);
}
function simpleEnd(buf) {
    return buf && buf.length ? this.write(buf) : '';
}

},{"safe-buffer":"i3ToV"}],"NsuGC":[function(require,module,exports) {
var process = require("process");
'use strict';
var _Object$setPrototypeO;
function _defineProperty(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
var finished = require('./end-of-stream');
var kLastResolve = Symbol('lastResolve');
var kLastReject = Symbol('lastReject');
var kError = Symbol('error');
var kEnded = Symbol('ended');
var kLastPromise = Symbol('lastPromise');
var kHandlePromise = Symbol('handlePromise');
var kStream = Symbol('stream');
function createIterResult(value, done) {
    return {
        value: value,
        done: done
    };
}
function readAndResolve(iter) {
    var resolve = iter[kLastResolve];
    if (resolve !== null) {
        var data = iter[kStream].read(); // we defer if data is null
        // we can be expecting either 'end' or
        // 'error'
        if (data !== null) {
            iter[kLastPromise] = null;
            iter[kLastResolve] = null;
            iter[kLastReject] = null;
            resolve(createIterResult(data, false));
        }
    }
}
function onReadable(iter) {
    // we wait for the next tick, because it might
    // emit an error with process.nextTick
    process.nextTick(readAndResolve, iter);
}
function wrapForNext(lastPromise, iter) {
    return function(resolve, reject) {
        lastPromise.then(function() {
            if (iter[kEnded]) {
                resolve(createIterResult(undefined, true));
                return;
            }
            iter[kHandlePromise](resolve, reject);
        }, reject);
    };
}
var AsyncIteratorPrototype = Object.getPrototypeOf(function() {
});
var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
    get stream () {
        return this[kStream];
    },
    next: function next() {
        var _this = this;
        // if we have detected an error in the meanwhile
        // reject straight away
        var error = this[kError];
        if (error !== null) return Promise.reject(error);
        if (this[kEnded]) return Promise.resolve(createIterResult(undefined, true));
        if (this[kStream].destroyed) // We need to defer via nextTick because if .destroy(err) is
        // called, the error will be emitted via nextTick, and
        // we cannot guarantee that there is no error lingering around
        // waiting to be emitted.
        return new Promise(function(resolve, reject) {
            process.nextTick(function() {
                if (_this[kError]) reject(_this[kError]);
                else resolve(createIterResult(undefined, true));
            });
        });
         // if we have multiple next() calls
        // we will wait for the previous Promise to finish
        // this logic is optimized to support for await loops,
        // where next() is only called once at a time
        var lastPromise = this[kLastPromise];
        var promise;
        if (lastPromise) promise = new Promise(wrapForNext(lastPromise, this));
        else {
            // fast path needed to support multiple this.push()
            // without triggering the next() queue
            var data = this[kStream].read();
            if (data !== null) return Promise.resolve(createIterResult(data, false));
            promise = new Promise(this[kHandlePromise]);
        }
        this[kLastPromise] = promise;
        return promise;
    }
}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function() {
    return this;
}), _defineProperty(_Object$setPrototypeO, "return", function _return() {
    var _this2 = this;
    // destroy(err, cb) is a private API
    // we can guarantee we have that here, because we control the
    // Readable class this is attached to
    return new Promise(function(resolve, reject) {
        _this2[kStream].destroy(null, function(err) {
            if (err) {
                reject(err);
                return;
            }
            resolve(createIterResult(undefined, true));
        });
    });
}), _Object$setPrototypeO), AsyncIteratorPrototype);
var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator1(stream) {
    var _Object$create;
    var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {
    }, _defineProperty(_Object$create, kStream, {
        value: stream,
        writable: true
    }), _defineProperty(_Object$create, kLastResolve, {
        value: null,
        writable: true
    }), _defineProperty(_Object$create, kLastReject, {
        value: null,
        writable: true
    }), _defineProperty(_Object$create, kError, {
        value: null,
        writable: true
    }), _defineProperty(_Object$create, kEnded, {
        value: stream._readableState.endEmitted,
        writable: true
    }), _defineProperty(_Object$create, kHandlePromise, {
        value: function value(resolve, reject) {
            var data = iterator[kStream].read();
            if (data) {
                iterator[kLastPromise] = null;
                iterator[kLastResolve] = null;
                iterator[kLastReject] = null;
                resolve(createIterResult(data, false));
            } else {
                iterator[kLastResolve] = resolve;
                iterator[kLastReject] = reject;
            }
        },
        writable: true
    }), _Object$create));
    iterator[kLastPromise] = null;
    finished(stream, function(err) {
        if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {
            var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise
            // returned by next() and store the error
            if (reject !== null) {
                iterator[kLastPromise] = null;
                iterator[kLastResolve] = null;
                iterator[kLastReject] = null;
                reject(err);
            }
            iterator[kError] = err;
            return;
        }
        var resolve = iterator[kLastResolve];
        if (resolve !== null) {
            iterator[kLastPromise] = null;
            iterator[kLastResolve] = null;
            iterator[kLastReject] = null;
            resolve(createIterResult(undefined, true));
        }
        iterator[kEnded] = true;
    });
    stream.on('readable', onReadable.bind(null, iterator));
    return iterator;
};
module.exports = createReadableStreamAsyncIterator;

},{"process":"5svFz","./end-of-stream":"ctPaP"}],"ctPaP":[function(require,module,exports) {
// Ported from https://github.com/mafintosh/end-of-stream with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';
var ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;
function once(callback) {
    var called = false;
    return function() {
        if (called) return;
        called = true;
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        callback.apply(this, args);
    };
}
function noop() {
}
function isRequest(stream) {
    return stream.setHeader && typeof stream.abort === 'function';
}
function eos(stream, opts, callback) {
    if (typeof opts === 'function') return eos(stream, null, opts);
    if (!opts) opts = {
    };
    callback = once(callback || noop);
    var readable = opts.readable || opts.readable !== false && stream.readable;
    var writable = opts.writable || opts.writable !== false && stream.writable;
    var onlegacyfinish = function onlegacyfinish1() {
        if (!stream.writable) onfinish();
    };
    var writableEnded = stream._writableState && stream._writableState.finished;
    var onfinish = function onfinish1() {
        writable = false;
        writableEnded = true;
        if (!readable) callback.call(stream);
    };
    var readableEnded = stream._readableState && stream._readableState.endEmitted;
    var onend = function onend1() {
        readable = false;
        readableEnded = true;
        if (!writable) callback.call(stream);
    };
    var onerror = function onerror1(err) {
        callback.call(stream, err);
    };
    var onclose = function onclose1() {
        var err;
        if (readable && !readableEnded) {
            if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
            return callback.call(stream, err);
        }
        if (writable && !writableEnded) {
            if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
            return callback.call(stream, err);
        }
    };
    var onrequest = function onrequest1() {
        stream.req.on('finish', onfinish);
    };
    if (isRequest(stream)) {
        stream.on('complete', onfinish);
        stream.on('abort', onclose);
        if (stream.req) onrequest();
        else stream.on('request', onrequest);
    } else if (writable && !stream._writableState) {
        // legacy streams
        stream.on('end', onlegacyfinish);
        stream.on('close', onlegacyfinish);
    }
    stream.on('end', onend);
    stream.on('finish', onfinish);
    if (opts.error !== false) stream.on('error', onerror);
    stream.on('close', onclose);
    return function() {
        stream.removeListener('complete', onfinish);
        stream.removeListener('abort', onclose);
        stream.removeListener('request', onrequest);
        if (stream.req) stream.req.removeListener('finish', onfinish);
        stream.removeListener('end', onlegacyfinish);
        stream.removeListener('close', onlegacyfinish);
        stream.removeListener('finish', onfinish);
        stream.removeListener('end', onend);
        stream.removeListener('error', onerror);
        stream.removeListener('close', onclose);
    };
}
module.exports = eos;

},{"../../../errors":"2FcbZ"}],"i2OfR":[function(require,module,exports) {
module.exports = function() {
    throw new Error('Readable.from is not available in the browser');
};

},{}],"knEgY":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.
'use strict';
module.exports = Transform;
var _require$codes = require('../errors').codes, ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED, ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK, ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING, ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;
var Duplex = require('./_stream_duplex');
require('inherits')(Transform, Duplex);
function afterTransform(er, data) {
    var ts = this._transformState;
    ts.transforming = false;
    var cb = ts.writecb;
    if (cb === null) return this.emit('error', new ERR_MULTIPLE_CALLBACK());
    ts.writechunk = null;
    ts.writecb = null;
    if (data != null) this.push(data);
    cb(er);
    var rs = this._readableState;
    rs.reading = false;
    if (rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
}
function Transform(options) {
    if (!(this instanceof Transform)) return new Transform(options);
    Duplex.call(this, options);
    this._transformState = {
        afterTransform: afterTransform.bind(this),
        needTransform: false,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: null
    }; // start out asking for a readable event once data is transformed.
    this._readableState.needReadable = true; // we have implemented the _read method, and done the other things
    // that Readable wants before the first _read call, so unset the
    // sync guard flag.
    this._readableState.sync = false;
    if (options) {
        if (typeof options.transform === 'function') this._transform = options.transform;
        if (typeof options.flush === 'function') this._flush = options.flush;
    } // When the writable side finishes, then flush out anything remaining.
    this.on('prefinish', prefinish);
}
function prefinish() {
    var _this = this;
    if (typeof this._flush === 'function' && !this._readableState.destroyed) this._flush(function(er, data) {
        done(_this, er, data);
    });
    else done(this, null, null);
}
Transform.prototype.push = function(chunk, encoding) {
    this._transformState.needTransform = false;
    return Duplex.prototype.push.call(this, chunk, encoding);
}; // This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function(chunk, encoding, cb) {
    cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
};
Transform.prototype._write = function(chunk, encoding, cb) {
    var ts = this._transformState;
    ts.writecb = cb;
    ts.writechunk = chunk;
    ts.writeencoding = encoding;
    if (!ts.transforming) {
        var rs = this._readableState;
        if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
    }
}; // Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function(n) {
    var ts = this._transformState;
    if (ts.writechunk !== null && !ts.transforming) {
        ts.transforming = true;
        this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
    } else // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
};
Transform.prototype._destroy = function(err, cb) {
    Duplex.prototype._destroy.call(this, err, function(err2) {
        cb(err2);
    });
};
function done(stream, er, data) {
    if (er) return stream.emit('error', er);
    if (data != null) stream.push(data); // TODO(BridgeAR): Write a test for these two error cases
    // if there's nothing in the write buffer, then that means
    // that nothing more will ever be provided
    if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();
    if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
    return stream.push(null);
}

},{"../errors":"2FcbZ","./_stream_duplex":"jstZQ","inherits":"9Y2vC"}],"7ya8k":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.
'use strict';
module.exports = PassThrough;
var Transform = require('./_stream_transform');
require('inherits')(PassThrough, Transform);
function PassThrough(options) {
    if (!(this instanceof PassThrough)) return new PassThrough(options);
    Transform.call(this, options);
}
PassThrough.prototype._transform = function(chunk, encoding, cb) {
    cb(null, chunk);
};

},{"./_stream_transform":"knEgY","inherits":"9Y2vC"}],"6tAZ7":[function(require,module,exports) {
// Ported from https://github.com/mafintosh/pump with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';
var eos;
function once(callback) {
    var called = false;
    return function() {
        if (called) return;
        called = true;
        callback.apply(void 0, arguments);
    };
}
var _require$codes = require('../../../errors').codes, ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS, ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;
function noop(err) {
    // Rethrow the error if it exists to avoid swallowing it
    if (err) throw err;
}
function isRequest(stream) {
    return stream.setHeader && typeof stream.abort === 'function';
}
function destroyer(stream, reading, writing, callback) {
    callback = once(callback);
    var closed = false;
    stream.on('close', function() {
        closed = true;
    });
    if (eos === undefined) eos = require('./end-of-stream');
    eos(stream, {
        readable: reading,
        writable: writing
    }, function(err) {
        if (err) return callback(err);
        closed = true;
        callback();
    });
    var destroyed = false;
    return function(err) {
        if (closed) return;
        if (destroyed) return;
        destroyed = true; // request.destroy just do .end - .abort is what we want
        if (isRequest(stream)) return stream.abort();
        if (typeof stream.destroy === 'function') return stream.destroy();
        callback(err || new ERR_STREAM_DESTROYED('pipe'));
    };
}
function call(fn) {
    fn();
}
function pipe(from, to) {
    return from.pipe(to);
}
function popCallback(streams) {
    if (!streams.length) return noop;
    if (typeof streams[streams.length - 1] !== 'function') return noop;
    return streams.pop();
}
function pipeline() {
    for(var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++)streams[_key] = arguments[_key];
    var callback = popCallback(streams);
    if (Array.isArray(streams[0])) streams = streams[0];
    if (streams.length < 2) throw new ERR_MISSING_ARGS('streams');
    var error;
    var destroys = streams.map(function(stream, i) {
        var reading = i < streams.length - 1;
        var writing = i > 0;
        return destroyer(stream, reading, writing, function(err) {
            if (!error) error = err;
            if (err) destroys.forEach(call);
            if (reading) return;
            destroys.forEach(call);
            callback(error);
        });
    });
    return streams.reduce(pipe);
}
module.exports = pipeline;

},{"../../../errors":"2FcbZ","./end-of-stream":"ctPaP"}],"c0r51":[function(require,module,exports) {
'use strict';
var Buffer = require('buffer').Buffer;
var inherits = require('inherits');
var HashBase = require('hash-base');
var ARRAY16 = new Array(16);
var zl = [
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    7,
    4,
    13,
    1,
    10,
    6,
    15,
    3,
    12,
    0,
    9,
    5,
    2,
    14,
    11,
    8,
    3,
    10,
    14,
    4,
    9,
    15,
    8,
    1,
    2,
    7,
    0,
    6,
    13,
    11,
    5,
    12,
    1,
    9,
    11,
    10,
    0,
    8,
    12,
    4,
    13,
    3,
    7,
    15,
    14,
    5,
    6,
    2,
    4,
    0,
    5,
    9,
    7,
    12,
    2,
    10,
    14,
    1,
    3,
    8,
    11,
    6,
    15,
    13
];
var zr = [
    5,
    14,
    7,
    0,
    9,
    2,
    11,
    4,
    13,
    6,
    15,
    8,
    1,
    10,
    3,
    12,
    6,
    11,
    3,
    7,
    0,
    13,
    5,
    10,
    14,
    15,
    8,
    12,
    4,
    9,
    1,
    2,
    15,
    5,
    1,
    3,
    7,
    14,
    6,
    9,
    11,
    8,
    12,
    2,
    10,
    0,
    4,
    13,
    8,
    6,
    4,
    1,
    3,
    11,
    15,
    0,
    5,
    12,
    2,
    13,
    9,
    7,
    10,
    14,
    12,
    15,
    10,
    4,
    1,
    5,
    8,
    7,
    6,
    2,
    13,
    14,
    0,
    3,
    9,
    11
];
var sl = [
    11,
    14,
    15,
    12,
    5,
    8,
    7,
    9,
    11,
    13,
    14,
    15,
    6,
    7,
    9,
    8,
    7,
    6,
    8,
    13,
    11,
    9,
    7,
    15,
    7,
    12,
    15,
    9,
    11,
    7,
    13,
    12,
    11,
    13,
    6,
    7,
    14,
    9,
    13,
    15,
    14,
    8,
    13,
    6,
    5,
    12,
    7,
    5,
    11,
    12,
    14,
    15,
    14,
    15,
    9,
    8,
    9,
    14,
    5,
    6,
    8,
    6,
    5,
    12,
    9,
    15,
    5,
    11,
    6,
    8,
    13,
    12,
    5,
    12,
    13,
    14,
    11,
    8,
    5,
    6
];
var sr = [
    8,
    9,
    9,
    11,
    13,
    15,
    15,
    5,
    7,
    7,
    8,
    11,
    14,
    14,
    12,
    6,
    9,
    13,
    15,
    7,
    12,
    8,
    9,
    11,
    7,
    7,
    12,
    7,
    6,
    15,
    13,
    11,
    9,
    7,
    15,
    11,
    8,
    6,
    6,
    14,
    12,
    13,
    5,
    14,
    13,
    13,
    7,
    5,
    15,
    5,
    8,
    11,
    14,
    14,
    6,
    14,
    6,
    9,
    12,
    9,
    12,
    5,
    15,
    8,
    8,
    5,
    12,
    9,
    12,
    5,
    14,
    6,
    8,
    13,
    6,
    5,
    15,
    13,
    11,
    11
];
var hl = [
    0,
    1518500249,
    1859775393,
    2400959708,
    2840853838
];
var hr = [
    1352829926,
    1548603684,
    1836072691,
    2053994217,
    0
];
function RIPEMD160() {
    HashBase.call(this, 64);
    // state
    this._a = 1732584193;
    this._b = 4023233417;
    this._c = 2562383102;
    this._d = 271733878;
    this._e = 3285377520;
}
inherits(RIPEMD160, HashBase);
RIPEMD160.prototype._update = function() {
    var words = ARRAY16;
    for(var j = 0; j < 16; ++j)words[j] = this._block.readInt32LE(j * 4);
    var al = this._a | 0;
    var bl = this._b | 0;
    var cl = this._c | 0;
    var dl = this._d | 0;
    var el = this._e | 0;
    var ar = this._a | 0;
    var br = this._b | 0;
    var cr = this._c | 0;
    var dr = this._d | 0;
    var er = this._e | 0;
    // computation
    for(var i = 0; i < 80; i += 1){
        var tl;
        var tr;
        if (i < 16) {
            tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i]);
            tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i]);
        } else if (i < 32) {
            tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i]);
            tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i]);
        } else if (i < 48) {
            tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i]);
            tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i]);
        } else if (i < 64) {
            tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i]);
            tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i]);
        } else {
            tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i]);
            tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i]);
        }
        al = el;
        el = dl;
        dl = rotl(cl, 10);
        cl = bl;
        bl = tl;
        ar = er;
        er = dr;
        dr = rotl(cr, 10);
        cr = br;
        br = tr;
    }
    // update state
    var t = this._b + cl + dr | 0;
    this._b = this._c + dl + er | 0;
    this._c = this._d + el + ar | 0;
    this._d = this._e + al + br | 0;
    this._e = this._a + bl + cr | 0;
    this._a = t;
};
RIPEMD160.prototype._digest = function() {
    // create padding and handle blocks
    this._block[this._blockOffset++] = 128;
    if (this._blockOffset > 56) {
        this._block.fill(0, this._blockOffset, 64);
        this._update();
        this._blockOffset = 0;
    }
    this._block.fill(0, this._blockOffset, 56);
    this._block.writeUInt32LE(this._length[0], 56);
    this._block.writeUInt32LE(this._length[1], 60);
    this._update();
    // produce result
    var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20);
    buffer.writeInt32LE(this._a, 0);
    buffer.writeInt32LE(this._b, 4);
    buffer.writeInt32LE(this._c, 8);
    buffer.writeInt32LE(this._d, 12);
    buffer.writeInt32LE(this._e, 16);
    return buffer;
};
function rotl(x, n) {
    return x << n | x >>> 32 - n;
}
function fn1(a, b, c, d, e, m, k, s) {
    return rotl(a + (b ^ c ^ d) + m + k | 0, s) + e | 0;
}
function fn2(a, b, c, d, e, m, k, s) {
    return rotl(a + (b & c | ~b & d) + m + k | 0, s) + e | 0;
}
function fn3(a, b, c, d, e, m, k, s) {
    return rotl(a + ((b | ~c) ^ d) + m + k | 0, s) + e | 0;
}
function fn4(a, b, c, d, e, m, k, s) {
    return rotl(a + (b & d | c & ~d) + m + k | 0, s) + e | 0;
}
function fn5(a, b, c, d, e, m, k, s) {
    return rotl(a + (b ^ (c | ~d)) + m + k | 0, s) + e | 0;
}
module.exports = RIPEMD160;

},{"buffer":"hX7zZ","inherits":"9Y2vC","hash-base":"1obQO"}],"ln1EO":[function(require,module,exports) {
var exports = module.exports = function SHA(algorithm) {
    algorithm = algorithm.toLowerCase();
    var Algorithm = exports[algorithm];
    if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)');
    return new Algorithm();
};
exports.sha = require('./sha');
exports.sha1 = require('./sha1');
exports.sha224 = require('./sha224');
exports.sha256 = require('./sha256');
exports.sha384 = require('./sha384');
exports.sha512 = require('./sha512');

},{"./sha":"TcH7p","./sha1":"itWGB","./sha224":"cIaM2","./sha256":"bF2Nw","./sha384":"kVmi7","./sha512":"1WMQA"}],"TcH7p":[function(require,module,exports) {
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */ var inherits = require('inherits');
var Hash = require('./hash');
var Buffer = require('safe-buffer').Buffer;
var K = [
    1518500249,
    1859775393,
    -1894007588,
    -899497514
];
var W = new Array(80);
function Sha() {
    this.init();
    this._w = W;
    Hash.call(this, 64, 56);
}
inherits(Sha, Hash);
Sha.prototype.init = function() {
    this._a = 1732584193;
    this._b = 4023233417;
    this._c = 2562383102;
    this._d = 271733878;
    this._e = 3285377520;
    return this;
};
function rotl5(num) {
    return num << 5 | num >>> 27;
}
function rotl30(num) {
    return num << 30 | num >>> 2;
}
function ft(s, b, c, d) {
    if (s === 0) return b & c | ~b & d;
    if (s === 2) return b & c | b & d | c & d;
    return b ^ c ^ d;
}
Sha.prototype._update = function(M) {
    var W1 = this._w;
    var a = this._a | 0;
    var b = this._b | 0;
    var c = this._c | 0;
    var d = this._d | 0;
    var e = this._e | 0;
    for(var i = 0; i < 16; ++i)W1[i] = M.readInt32BE(i * 4);
    for(; i < 80; ++i)W1[i] = W1[i - 3] ^ W1[i - 8] ^ W1[i - 14] ^ W1[i - 16];
    for(var j = 0; j < 80; ++j){
        var s = ~~(j / 20);
        var t = rotl5(a) + ft(s, b, c, d) + e + W1[j] + K[s] | 0;
        e = d;
        d = c;
        c = rotl30(b);
        b = a;
        a = t;
    }
    this._a = a + this._a | 0;
    this._b = b + this._b | 0;
    this._c = c + this._c | 0;
    this._d = d + this._d | 0;
    this._e = e + this._e | 0;
};
Sha.prototype._hash = function() {
    var H = Buffer.allocUnsafe(20);
    H.writeInt32BE(this._a | 0, 0);
    H.writeInt32BE(this._b | 0, 4);
    H.writeInt32BE(this._c | 0, 8);
    H.writeInt32BE(this._d | 0, 12);
    H.writeInt32BE(this._e | 0, 16);
    return H;
};
module.exports = Sha;

},{"inherits":"9Y2vC","./hash":"bd0CT","safe-buffer":"i3ToV"}],"bd0CT":[function(require,module,exports) {
var Buffer = require('safe-buffer').Buffer;
// prototype class for hash functions
function Hash(blockSize, finalSize) {
    this._block = Buffer.alloc(blockSize);
    this._finalSize = finalSize;
    this._blockSize = blockSize;
    this._len = 0;
}
Hash.prototype.update = function(data, enc) {
    if (typeof data === 'string') {
        enc = enc || 'utf8';
        data = Buffer.from(data, enc);
    }
    var block = this._block;
    var blockSize = this._blockSize;
    var length = data.length;
    var accum = this._len;
    for(var offset = 0; offset < length;){
        var assigned = accum % blockSize;
        var remainder = Math.min(length - offset, blockSize - assigned);
        for(var i = 0; i < remainder; i++)block[assigned + i] = data[offset + i];
        accum += remainder;
        offset += remainder;
        if (accum % blockSize === 0) this._update(block);
    }
    this._len += length;
    return this;
};
Hash.prototype.digest = function(enc) {
    var rem = this._len % this._blockSize;
    this._block[rem] = 128;
    // zero (rem + 1) trailing bits, where (rem + 1) is the smallest
    // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize
    this._block.fill(0, rem + 1);
    if (rem >= this._finalSize) {
        this._update(this._block);
        this._block.fill(0);
    }
    var bits = this._len * 8;
    // uint32
    if (bits <= 4294967295) this._block.writeUInt32BE(bits, this._blockSize - 4);
    else {
        var lowBits = (bits & 4294967295) >>> 0;
        var highBits = (bits - lowBits) / 4294967296;
        this._block.writeUInt32BE(highBits, this._blockSize - 8);
        this._block.writeUInt32BE(lowBits, this._blockSize - 4);
    }
    this._update(this._block);
    var hash = this._hash();
    return enc ? hash.toString(enc) : hash;
};
Hash.prototype._update = function() {
    throw new Error('_update must be implemented by subclass');
};
module.exports = Hash;

},{"safe-buffer":"i3ToV"}],"itWGB":[function(require,module,exports) {
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */ var inherits = require('inherits');
var Hash = require('./hash');
var Buffer = require('safe-buffer').Buffer;
var K = [
    1518500249,
    1859775393,
    -1894007588,
    -899497514
];
var W = new Array(80);
function Sha1() {
    this.init();
    this._w = W;
    Hash.call(this, 64, 56);
}
inherits(Sha1, Hash);
Sha1.prototype.init = function() {
    this._a = 1732584193;
    this._b = 4023233417;
    this._c = 2562383102;
    this._d = 271733878;
    this._e = 3285377520;
    return this;
};
function rotl1(num) {
    return num << 1 | num >>> 31;
}
function rotl5(num) {
    return num << 5 | num >>> 27;
}
function rotl30(num) {
    return num << 30 | num >>> 2;
}
function ft(s, b, c, d) {
    if (s === 0) return b & c | ~b & d;
    if (s === 2) return b & c | b & d | c & d;
    return b ^ c ^ d;
}
Sha1.prototype._update = function(M) {
    var W1 = this._w;
    var a = this._a | 0;
    var b = this._b | 0;
    var c = this._c | 0;
    var d = this._d | 0;
    var e = this._e | 0;
    for(var i = 0; i < 16; ++i)W1[i] = M.readInt32BE(i * 4);
    for(; i < 80; ++i)W1[i] = rotl1(W1[i - 3] ^ W1[i - 8] ^ W1[i - 14] ^ W1[i - 16]);
    for(var j = 0; j < 80; ++j){
        var s = ~~(j / 20);
        var t = rotl5(a) + ft(s, b, c, d) + e + W1[j] + K[s] | 0;
        e = d;
        d = c;
        c = rotl30(b);
        b = a;
        a = t;
    }
    this._a = a + this._a | 0;
    this._b = b + this._b | 0;
    this._c = c + this._c | 0;
    this._d = d + this._d | 0;
    this._e = e + this._e | 0;
};
Sha1.prototype._hash = function() {
    var H = Buffer.allocUnsafe(20);
    H.writeInt32BE(this._a | 0, 0);
    H.writeInt32BE(this._b | 0, 4);
    H.writeInt32BE(this._c | 0, 8);
    H.writeInt32BE(this._d | 0, 12);
    H.writeInt32BE(this._e | 0, 16);
    return H;
};
module.exports = Sha1;

},{"inherits":"9Y2vC","./hash":"bd0CT","safe-buffer":"i3ToV"}],"cIaM2":[function(require,module,exports) {
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */ var inherits = require('inherits');
var Sha256 = require('./sha256');
var Hash = require('./hash');
var Buffer = require('safe-buffer').Buffer;
var W = new Array(64);
function Sha224() {
    this.init();
    this._w = W // new Array(64)
    ;
    Hash.call(this, 64, 56);
}
inherits(Sha224, Sha256);
Sha224.prototype.init = function() {
    this._a = 3238371032;
    this._b = 914150663;
    this._c = 812702999;
    this._d = 4144912697;
    this._e = 4290775857;
    this._f = 1750603025;
    this._g = 1694076839;
    this._h = 3204075428;
    return this;
};
Sha224.prototype._hash = function() {
    var H = Buffer.allocUnsafe(28);
    H.writeInt32BE(this._a, 0);
    H.writeInt32BE(this._b, 4);
    H.writeInt32BE(this._c, 8);
    H.writeInt32BE(this._d, 12);
    H.writeInt32BE(this._e, 16);
    H.writeInt32BE(this._f, 20);
    H.writeInt32BE(this._g, 24);
    return H;
};
module.exports = Sha224;

},{"inherits":"9Y2vC","./sha256":"bF2Nw","./hash":"bd0CT","safe-buffer":"i3ToV"}],"bF2Nw":[function(require,module,exports) {
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */ var inherits = require('inherits');
var Hash = require('./hash');
var Buffer = require('safe-buffer').Buffer;
var K = [
    1116352408,
    1899447441,
    3049323471,
    3921009573,
    961987163,
    1508970993,
    2453635748,
    2870763221,
    3624381080,
    310598401,
    607225278,
    1426881987,
    1925078388,
    2162078206,
    2614888103,
    3248222580,
    3835390401,
    4022224774,
    264347078,
    604807628,
    770255983,
    1249150122,
    1555081692,
    1996064986,
    2554220882,
    2821834349,
    2952996808,
    3210313671,
    3336571891,
    3584528711,
    113926993,
    338241895,
    666307205,
    773529912,
    1294757372,
    1396182291,
    1695183700,
    1986661051,
    2177026350,
    2456956037,
    2730485921,
    2820302411,
    3259730800,
    3345764771,
    3516065817,
    3600352804,
    4094571909,
    275423344,
    430227734,
    506948616,
    659060556,
    883997877,
    958139571,
    1322822218,
    1537002063,
    1747873779,
    1955562222,
    2024104815,
    2227730452,
    2361852424,
    2428436474,
    2756734187,
    3204031479,
    3329325298
];
var W = new Array(64);
function Sha256() {
    this.init();
    this._w = W // new Array(64)
    ;
    Hash.call(this, 64, 56);
}
inherits(Sha256, Hash);
Sha256.prototype.init = function() {
    this._a = 1779033703;
    this._b = 3144134277;
    this._c = 1013904242;
    this._d = 2773480762;
    this._e = 1359893119;
    this._f = 2600822924;
    this._g = 528734635;
    this._h = 1541459225;
    return this;
};
function ch(x, y, z) {
    return z ^ x & (y ^ z);
}
function maj(x, y, z) {
    return x & y | z & (x | y);
}
function sigma0(x) {
    return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10);
}
function sigma1(x) {
    return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7);
}
function gamma0(x) {
    return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ x >>> 3;
}
function gamma1(x) {
    return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ x >>> 10;
}
Sha256.prototype._update = function(M) {
    var W1 = this._w;
    var a = this._a | 0;
    var b = this._b | 0;
    var c = this._c | 0;
    var d = this._d | 0;
    var e = this._e | 0;
    var f = this._f | 0;
    var g = this._g | 0;
    var h = this._h | 0;
    for(var i = 0; i < 16; ++i)W1[i] = M.readInt32BE(i * 4);
    for(; i < 64; ++i)W1[i] = gamma1(W1[i - 2]) + W1[i - 7] + gamma0(W1[i - 15]) + W1[i - 16] | 0;
    for(var j = 0; j < 64; ++j){
        var T1 = h + sigma1(e) + ch(e, f, g) + K[j] + W1[j] | 0;
        var T2 = sigma0(a) + maj(a, b, c) | 0;
        h = g;
        g = f;
        f = e;
        e = d + T1 | 0;
        d = c;
        c = b;
        b = a;
        a = T1 + T2 | 0;
    }
    this._a = a + this._a | 0;
    this._b = b + this._b | 0;
    this._c = c + this._c | 0;
    this._d = d + this._d | 0;
    this._e = e + this._e | 0;
    this._f = f + this._f | 0;
    this._g = g + this._g | 0;
    this._h = h + this._h | 0;
};
Sha256.prototype._hash = function() {
    var H = Buffer.allocUnsafe(32);
    H.writeInt32BE(this._a, 0);
    H.writeInt32BE(this._b, 4);
    H.writeInt32BE(this._c, 8);
    H.writeInt32BE(this._d, 12);
    H.writeInt32BE(this._e, 16);
    H.writeInt32BE(this._f, 20);
    H.writeInt32BE(this._g, 24);
    H.writeInt32BE(this._h, 28);
    return H;
};
module.exports = Sha256;

},{"inherits":"9Y2vC","./hash":"bd0CT","safe-buffer":"i3ToV"}],"kVmi7":[function(require,module,exports) {
var inherits = require('inherits');
var SHA512 = require('./sha512');
var Hash = require('./hash');
var Buffer = require('safe-buffer').Buffer;
var W = new Array(160);
function Sha384() {
    this.init();
    this._w = W;
    Hash.call(this, 128, 112);
}
inherits(Sha384, SHA512);
Sha384.prototype.init = function() {
    this._ah = 3418070365;
    this._bh = 1654270250;
    this._ch = 2438529370;
    this._dh = 355462360;
    this._eh = 1731405415;
    this._fh = 2394180231;
    this._gh = 3675008525;
    this._hh = 1203062813;
    this._al = 3238371032;
    this._bl = 914150663;
    this._cl = 812702999;
    this._dl = 4144912697;
    this._el = 4290775857;
    this._fl = 1750603025;
    this._gl = 1694076839;
    this._hl = 3204075428;
    return this;
};
Sha384.prototype._hash = function() {
    var H = Buffer.allocUnsafe(48);
    function writeInt64BE(h, l, offset) {
        H.writeInt32BE(h, offset);
        H.writeInt32BE(l, offset + 4);
    }
    writeInt64BE(this._ah, this._al, 0);
    writeInt64BE(this._bh, this._bl, 8);
    writeInt64BE(this._ch, this._cl, 16);
    writeInt64BE(this._dh, this._dl, 24);
    writeInt64BE(this._eh, this._el, 32);
    writeInt64BE(this._fh, this._fl, 40);
    return H;
};
module.exports = Sha384;

},{"inherits":"9Y2vC","./sha512":"1WMQA","./hash":"bd0CT","safe-buffer":"i3ToV"}],"1WMQA":[function(require,module,exports) {
var inherits = require('inherits');
var Hash = require('./hash');
var Buffer = require('safe-buffer').Buffer;
var K = [
    1116352408,
    3609767458,
    1899447441,
    602891725,
    3049323471,
    3964484399,
    3921009573,
    2173295548,
    961987163,
    4081628472,
    1508970993,
    3053834265,
    2453635748,
    2937671579,
    2870763221,
    3664609560,
    3624381080,
    2734883394,
    310598401,
    1164996542,
    607225278,
    1323610764,
    1426881987,
    3590304994,
    1925078388,
    4068182383,
    2162078206,
    991336113,
    2614888103,
    633803317,
    3248222580,
    3479774868,
    3835390401,
    2666613458,
    4022224774,
    944711139,
    264347078,
    2341262773,
    604807628,
    2007800933,
    770255983,
    1495990901,
    1249150122,
    1856431235,
    1555081692,
    3175218132,
    1996064986,
    2198950837,
    2554220882,
    3999719339,
    2821834349,
    766784016,
    2952996808,
    2566594879,
    3210313671,
    3203337956,
    3336571891,
    1034457026,
    3584528711,
    2466948901,
    113926993,
    3758326383,
    338241895,
    168717936,
    666307205,
    1188179964,
    773529912,
    1546045734,
    1294757372,
    1522805485,
    1396182291,
    2643833823,
    1695183700,
    2343527390,
    1986661051,
    1014477480,
    2177026350,
    1206759142,
    2456956037,
    344077627,
    2730485921,
    1290863460,
    2820302411,
    3158454273,
    3259730800,
    3505952657,
    3345764771,
    106217008,
    3516065817,
    3606008344,
    3600352804,
    1432725776,
    4094571909,
    1467031594,
    275423344,
    851169720,
    430227734,
    3100823752,
    506948616,
    1363258195,
    659060556,
    3750685593,
    883997877,
    3785050280,
    958139571,
    3318307427,
    1322822218,
    3812723403,
    1537002063,
    2003034995,
    1747873779,
    3602036899,
    1955562222,
    1575990012,
    2024104815,
    1125592928,
    2227730452,
    2716904306,
    2361852424,
    442776044,
    2428436474,
    593698344,
    2756734187,
    3733110249,
    3204031479,
    2999351573,
    3329325298,
    3815920427,
    3391569614,
    3928383900,
    3515267271,
    566280711,
    3940187606,
    3454069534,
    4118630271,
    4000239992,
    116418474,
    1914138554,
    174292421,
    2731055270,
    289380356,
    3203993006,
    460393269,
    320620315,
    685471733,
    587496836,
    852142971,
    1086792851,
    1017036298,
    365543100,
    1126000580,
    2618297676,
    1288033470,
    3409855158,
    1501505948,
    4234509866,
    1607167915,
    987167468,
    1816402316,
    1246189591
];
var W = new Array(160);
function Sha512() {
    this.init();
    this._w = W;
    Hash.call(this, 128, 112);
}
inherits(Sha512, Hash);
Sha512.prototype.init = function() {
    this._ah = 1779033703;
    this._bh = 3144134277;
    this._ch = 1013904242;
    this._dh = 2773480762;
    this._eh = 1359893119;
    this._fh = 2600822924;
    this._gh = 528734635;
    this._hh = 1541459225;
    this._al = 4089235720;
    this._bl = 2227873595;
    this._cl = 4271175723;
    this._dl = 1595750129;
    this._el = 2917565137;
    this._fl = 725511199;
    this._gl = 4215389547;
    this._hl = 327033209;
    return this;
};
function Ch(x, y, z) {
    return z ^ x & (y ^ z);
}
function maj(x, y, z) {
    return x & y | z & (x | y);
}
function sigma0(x, xl) {
    return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25);
}
function sigma1(x, xl) {
    return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23);
}
function Gamma0(x, xl) {
    return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ x >>> 7;
}
function Gamma0l(x, xl) {
    return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25);
}
function Gamma1(x, xl) {
    return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ x >>> 6;
}
function Gamma1l(x, xl) {
    return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26);
}
function getCarry(a, b) {
    return a >>> 0 < b >>> 0 ? 1 : 0;
}
Sha512.prototype._update = function(M) {
    var W1 = this._w;
    var ah = this._ah | 0;
    var bh = this._bh | 0;
    var ch = this._ch | 0;
    var dh = this._dh | 0;
    var eh = this._eh | 0;
    var fh = this._fh | 0;
    var gh = this._gh | 0;
    var hh = this._hh | 0;
    var al = this._al | 0;
    var bl = this._bl | 0;
    var cl = this._cl | 0;
    var dl = this._dl | 0;
    var el = this._el | 0;
    var fl = this._fl | 0;
    var gl = this._gl | 0;
    var hl = this._hl | 0;
    for(var i = 0; i < 32; i += 2){
        W1[i] = M.readInt32BE(i * 4);
        W1[i + 1] = M.readInt32BE(i * 4 + 4);
    }
    for(; i < 160; i += 2){
        var xh = W1[i - 30];
        var xl = W1[i - 30 + 1];
        var gamma0 = Gamma0(xh, xl);
        var gamma0l = Gamma0l(xl, xh);
        xh = W1[i - 4];
        xl = W1[i - 4 + 1];
        var gamma1 = Gamma1(xh, xl);
        var gamma1l = Gamma1l(xl, xh);
        // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
        var Wi7h = W1[i - 14];
        var Wi7l = W1[i - 14 + 1];
        var Wi16h = W1[i - 32];
        var Wi16l = W1[i - 32 + 1];
        var Wil = gamma0l + Wi7l | 0;
        var Wih = gamma0 + Wi7h + getCarry(Wil, gamma0l) | 0;
        Wil = Wil + gamma1l | 0;
        Wih = Wih + gamma1 + getCarry(Wil, gamma1l) | 0;
        Wil = Wil + Wi16l | 0;
        Wih = Wih + Wi16h + getCarry(Wil, Wi16l) | 0;
        W1[i] = Wih;
        W1[i + 1] = Wil;
    }
    for(var j = 0; j < 160; j += 2){
        Wih = W1[j];
        Wil = W1[j + 1];
        var majh = maj(ah, bh, ch);
        var majl = maj(al, bl, cl);
        var sigma0h = sigma0(ah, al);
        var sigma0l = sigma0(al, ah);
        var sigma1h = sigma1(eh, el);
        var sigma1l = sigma1(el, eh);
        // t1 = h + sigma1 + ch + K[j] + W[j]
        var Kih = K[j];
        var Kil = K[j + 1];
        var chh = Ch(eh, fh, gh);
        var chl = Ch(el, fl, gl);
        var t1l = hl + sigma1l | 0;
        var t1h = hh + sigma1h + getCarry(t1l, hl) | 0;
        t1l = t1l + chl | 0;
        t1h = t1h + chh + getCarry(t1l, chl) | 0;
        t1l = t1l + Kil | 0;
        t1h = t1h + Kih + getCarry(t1l, Kil) | 0;
        t1l = t1l + Wil | 0;
        t1h = t1h + Wih + getCarry(t1l, Wil) | 0;
        // t2 = sigma0 + maj
        var t2l = sigma0l + majl | 0;
        var t2h = sigma0h + majh + getCarry(t2l, sigma0l) | 0;
        hh = gh;
        hl = gl;
        gh = fh;
        gl = fl;
        fh = eh;
        fl = el;
        el = dl + t1l | 0;
        eh = dh + t1h + getCarry(el, dl) | 0;
        dh = ch;
        dl = cl;
        ch = bh;
        cl = bl;
        bh = ah;
        bl = al;
        al = t1l + t2l | 0;
        ah = t1h + t2h + getCarry(al, t1l) | 0;
    }
    this._al = this._al + al | 0;
    this._bl = this._bl + bl | 0;
    this._cl = this._cl + cl | 0;
    this._dl = this._dl + dl | 0;
    this._el = this._el + el | 0;
    this._fl = this._fl + fl | 0;
    this._gl = this._gl + gl | 0;
    this._hl = this._hl + hl | 0;
    this._ah = this._ah + ah + getCarry(this._al, al) | 0;
    this._bh = this._bh + bh + getCarry(this._bl, bl) | 0;
    this._ch = this._ch + ch + getCarry(this._cl, cl) | 0;
    this._dh = this._dh + dh + getCarry(this._dl, dl) | 0;
    this._eh = this._eh + eh + getCarry(this._el, el) | 0;
    this._fh = this._fh + fh + getCarry(this._fl, fl) | 0;
    this._gh = this._gh + gh + getCarry(this._gl, gl) | 0;
    this._hh = this._hh + hh + getCarry(this._hl, hl) | 0;
};
Sha512.prototype._hash = function() {
    var H = Buffer.allocUnsafe(64);
    function writeInt64BE(h, l, offset) {
        H.writeInt32BE(h, offset);
        H.writeInt32BE(l, offset + 4);
    }
    writeInt64BE(this._ah, this._al, 0);
    writeInt64BE(this._bh, this._bl, 8);
    writeInt64BE(this._ch, this._cl, 16);
    writeInt64BE(this._dh, this._dl, 24);
    writeInt64BE(this._eh, this._el, 32);
    writeInt64BE(this._fh, this._fl, 40);
    writeInt64BE(this._gh, this._gl, 48);
    writeInt64BE(this._hh, this._hl, 56);
    return H;
};
module.exports = Sha512;

},{"inherits":"9Y2vC","./hash":"bd0CT","safe-buffer":"i3ToV"}],"btswB":[function(require,module,exports) {
var Buffer = require('safe-buffer').Buffer;
var Transform = require('stream').Transform;
var StringDecoder = require('string_decoder').StringDecoder;
var inherits = require('inherits');
function CipherBase(hashMode) {
    Transform.call(this);
    this.hashMode = typeof hashMode === 'string';
    if (this.hashMode) this[hashMode] = this._finalOrDigest;
    else this.final = this._finalOrDigest;
    if (this._final) {
        this.__final = this._final;
        this._final = null;
    }
    this._decoder = null;
    this._encoding = null;
}
inherits(CipherBase, Transform);
CipherBase.prototype.update = function(data, inputEnc, outputEnc) {
    if (typeof data === 'string') data = Buffer.from(data, inputEnc);
    var outData = this._update(data);
    if (this.hashMode) return this;
    if (outputEnc) outData = this._toString(outData, outputEnc);
    return outData;
};
CipherBase.prototype.setAutoPadding = function() {
};
CipherBase.prototype.getAuthTag = function() {
    throw new Error('trying to get auth tag in unsupported state');
};
CipherBase.prototype.setAuthTag = function() {
    throw new Error('trying to set auth tag in unsupported state');
};
CipherBase.prototype.setAAD = function() {
    throw new Error('trying to set aad in unsupported state');
};
CipherBase.prototype._transform = function(data, _, next) {
    var err;
    try {
        if (this.hashMode) this._update(data);
        else this.push(this._update(data));
    } catch (e) {
        err = e;
    } finally{
        next(err);
    }
};
CipherBase.prototype._flush = function(done) {
    var err;
    try {
        this.push(this.__final());
    } catch (e) {
        err = e;
    }
    done(err);
};
CipherBase.prototype._finalOrDigest = function(outputEnc) {
    var outData = this.__final() || Buffer.alloc(0);
    if (outputEnc) outData = this._toString(outData, outputEnc, true);
    return outData;
};
CipherBase.prototype._toString = function(value, enc, fin) {
    if (!this._decoder) {
        this._decoder = new StringDecoder(enc);
        this._encoding = enc;
    }
    if (this._encoding !== enc) throw new Error('can\'t switch encodings');
    var out = this._decoder.write(value);
    if (fin) out += this._decoder.end();
    return out;
};
module.exports = CipherBase;

},{"safe-buffer":"i3ToV","stream":"7NXEf","string_decoder":"6vLXz","inherits":"9Y2vC"}],"7NXEf":[function(require,module,exports) {
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');
exports.finished = require('./lib/internal/streams/end-of-stream.js');
exports.pipeline = require('./lib/internal/streams/pipeline.js');

},{"./lib/_stream_readable.js":"aOE43","./lib/_stream_writable.js":"iHxeK","./lib/_stream_duplex.js":"kezQ9","./lib/_stream_transform.js":"jgXsv","./lib/_stream_passthrough.js":"j9j29","./lib/internal/streams/end-of-stream.js":"jPDaQ","./lib/internal/streams/pipeline.js":"cUUVr"}],"aOE43":[function(require,module,exports) {
var process = require("process");
var global = arguments[3];
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
module.exports = Readable;
/*<replacement>*/ var Duplex;
/*</replacement>*/ Readable.ReadableState = ReadableState;
/*<replacement>*/ var EE = require('events').EventEmitter;
var EElistenerCount = function EElistenerCount1(emitter, type) {
    return emitter.listeners(type).length;
};
/*</replacement>*/ /*<replacement>*/ var Stream = require('./internal/streams/stream');
/*</replacement>*/ var Buffer = require('buffer').Buffer;
var OurUint8Array = global.Uint8Array || function() {
};
function _uint8ArrayToBuffer(chunk) {
    return Buffer.from(chunk);
}
function _isUint8Array(obj) {
    return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*<replacement>*/ var debugUtil = require('util');
var debug;
if (debugUtil && debugUtil.debuglog) debug = debugUtil.debuglog('stream');
else debug = function debug1() {
};
/*</replacement>*/ var BufferList = require('./internal/streams/buffer_list');
var destroyImpl = require('./internal/streams/destroy');
var _require = require('./internal/streams/state'), getHighWaterMark = _require.getHighWaterMark;
var _require$codes = require('../errors').codes, ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE, ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF, ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED, ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.
var StringDecoder;
var createReadableStreamAsyncIterator;
var from;
require('inherits')(Readable, Stream);
var errorOrDestroy = destroyImpl.errorOrDestroy;
var kProxyEvents = [
    'error',
    'close',
    'destroy',
    'pause',
    'resume'
];
function prependListener(emitter, event, fn) {
    // Sadly this is not cacheable as some libraries bundle their own
    // event emitter implementation with them.
    if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any
    // userland ones.  NEVER DO THIS. This is here only because this code needs
    // to continue to work with older versions of Node.js that do not include
    // the prependListener() method. The goal is to eventually remove this hack.
    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);
    else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);
    else emitter._events[event] = [
        fn,
        emitter._events[event]
    ];
}
function ReadableState(options, stream, isDuplex) {
    Duplex = Duplex || require('./_stream_duplex');
    options = options || {
    }; // Duplex streams are both readable and writable, but share
    // the same options object.
    // However, some cases require setting options to different
    // values for the readable and the writable sides of the duplex stream.
    // These options can be provided separately as readableXXX and writableXXX.
    if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to
    // make all the buffer merging and length checks go away
    this.objectMode = !!options.objectMode;
    if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer
    // Note: 0 is a valid value, means "don't call _read preemptively ever"
    this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the
    // linked list can remove elements from the beginning faster than
    // array.shift()
    this.buffer = new BufferList();
    this.length = 0;
    this.pipes = null;
    this.pipesCount = 0;
    this.flowing = null;
    this.ended = false;
    this.endEmitted = false;
    this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted
    // immediately, or on a later tick.  We set this to true at first, because
    // any actions that shouldn't happen until "later" should generally also
    // not happen before the first read call.
    this.sync = true; // whenever we return null, then we set a flag to say
    // that we're awaiting a 'readable' event emission.
    this.needReadable = false;
    this.emittedReadable = false;
    this.readableListening = false;
    this.resumeScheduled = false;
    this.paused = true; // Should close be emitted on destroy. Defaults to true.
    this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')
    this.autoDestroy = !!options.autoDestroy; // has it been destroyed
    this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string
    // encoding is 'binary' so we have to make this configurable.
    // Everything else in the universe uses 'utf8', though.
    this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s
    this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled
    this.readingMore = false;
    this.decoder = null;
    this.encoding = null;
    if (options.encoding) {
        if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
        this.decoder = new StringDecoder(options.encoding);
        this.encoding = options.encoding;
    }
}
function Readable(options) {
    Duplex = Duplex || require('./_stream_duplex');
    if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside
    // the ReadableState constructor, at least with V8 6.5
    var isDuplex = this instanceof Duplex;
    this._readableState = new ReadableState(options, this, isDuplex); // legacy
    this.readable = true;
    if (options) {
        if (typeof options.read === 'function') this._read = options.read;
        if (typeof options.destroy === 'function') this._destroy = options.destroy;
    }
    Stream.call(this);
}
Object.defineProperty(Readable.prototype, 'destroyed', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        if (this._readableState === undefined) return false;
        return this._readableState.destroyed;
    },
    set: function set(value) {
        // we ignore the value if the stream
        // has not been initialized yet
        if (!this._readableState) return;
         // backward compatibility, the user is explicitly
        // managing destroyed
        this._readableState.destroyed = value;
    }
});
Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function(err, cb) {
    cb(err);
}; // Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function(chunk, encoding) {
    var state = this._readableState;
    var skipChunkCheck;
    if (!state.objectMode) {
        if (typeof chunk === 'string') {
            encoding = encoding || state.defaultEncoding;
            if (encoding !== state.encoding) {
                chunk = Buffer.from(chunk, encoding);
                encoding = '';
            }
            skipChunkCheck = true;
        }
    } else skipChunkCheck = true;
    return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
}; // Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function(chunk) {
    return readableAddChunk(this, chunk, null, true, false);
};
function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
    debug('readableAddChunk', chunk);
    var state = stream._readableState;
    if (chunk === null) {
        state.reading = false;
        onEofChunk(stream, state);
    } else {
        var er;
        if (!skipChunkCheck) er = chunkInvalid(state, chunk);
        if (er) errorOrDestroy(stream, er);
        else if (state.objectMode || chunk && chunk.length > 0) {
            if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) chunk = _uint8ArrayToBuffer(chunk);
            if (addToFront) {
                if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());
                else addChunk(stream, state, chunk, true);
            } else if (state.ended) errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
            else if (state.destroyed) return false;
            else {
                state.reading = false;
                if (state.decoder && !encoding) {
                    chunk = state.decoder.write(chunk);
                    if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);
                    else maybeReadMore(stream, state);
                } else addChunk(stream, state, chunk, false);
            }
        } else if (!addToFront) {
            state.reading = false;
            maybeReadMore(stream, state);
        }
    } // We can push more data if we are below the highWaterMark.
    // Also, if we have no data yet, we can stand some more bytes.
    // This is to work around cases where hwm=0, such as the repl.
    return !state.ended && (state.length < state.highWaterMark || state.length === 0);
}
function addChunk(stream, state, chunk, addToFront) {
    if (state.flowing && state.length === 0 && !state.sync) {
        state.awaitDrain = 0;
        stream.emit('data', chunk);
    } else {
        // update the buffer info.
        state.length += state.objectMode ? 1 : chunk.length;
        if (addToFront) state.buffer.unshift(chunk);
        else state.buffer.push(chunk);
        if (state.needReadable) emitReadable(stream);
    }
    maybeReadMore(stream, state);
}
function chunkInvalid(state, chunk) {
    var er;
    if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) er = new ERR_INVALID_ARG_TYPE('chunk', [
        'string',
        'Buffer',
        'Uint8Array'
    ], chunk);
    return er;
}
Readable.prototype.isPaused = function() {
    return this._readableState.flowing === false;
}; // backwards compatibility.
Readable.prototype.setEncoding = function(enc) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    var decoder = new StringDecoder(enc);
    this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8
    this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:
    var p = this._readableState.buffer.head;
    var content = '';
    while(p !== null){
        content += decoder.write(p.data);
        p = p.next;
    }
    this._readableState.buffer.clear();
    if (content !== '') this._readableState.buffer.push(content);
    this._readableState.length = content.length;
    return this;
}; // Don't raise the hwm > 1GB
var MAX_HWM = 1073741824;
function computeNewHighWaterMark(n) {
    if (n >= MAX_HWM) // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
    n = MAX_HWM;
    else {
        // Get the next highest power of 2 to prevent increasing hwm excessively in
        // tiny amounts
        n--;
        n |= n >>> 1;
        n |= n >>> 2;
        n |= n >>> 4;
        n |= n >>> 8;
        n |= n >>> 16;
        n++;
    }
    return n;
} // This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
    if (n <= 0 || state.length === 0 && state.ended) return 0;
    if (state.objectMode) return 1;
    if (n !== n) {
        // Only flow one buffer at a time
        if (state.flowing && state.length) return state.buffer.head.data.length;
        else return state.length;
    } // If we're asking for more than the current hwm, then raise the hwm.
    if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
    if (n <= state.length) return n; // Don't have enough
    if (!state.ended) {
        state.needReadable = true;
        return 0;
    }
    return state.length;
} // you can override either this method, or the async _read(n) below.
Readable.prototype.read = function(n) {
    debug('read', n);
    n = parseInt(n, 10);
    var state = this._readableState;
    var nOrig = n;
    if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we
    // already have a bunch of data in the buffer, then just trigger
    // the 'readable' event and move on.
    if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
        debug('read: emitReadable', state.length, state.ended);
        if (state.length === 0 && state.ended) endReadable(this);
        else emitReadable(this);
        return null;
    }
    n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.
    if (n === 0 && state.ended) {
        if (state.length === 0) endReadable(this);
        return null;
    } // All the actual chunk generation logic needs to be
    // *below* the call to _read.  The reason is that in certain
    // synthetic stream cases, such as passthrough streams, _read
    // may be a completely synchronous operation which may change
    // the state of the read buffer, providing enough data when
    // before there was *not* enough.
    //
    // So, the steps are:
    // 1. Figure out what the state of things will be after we do
    // a read from the buffer.
    //
    // 2. If that resulting state will trigger a _read, then call _read.
    // Note that this may be asynchronous, or synchronous.  Yes, it is
    // deeply ugly to write APIs this way, but that still doesn't mean
    // that the Readable class should behave improperly, as streams are
    // designed to be sync/async agnostic.
    // Take note if the _read call is sync or async (ie, if the read call
    // has returned yet), so that we know whether or not it's safe to emit
    // 'readable' etc.
    //
    // 3. Actually pull the requested chunks out of the buffer and return.
    // if we need a readable event, then we need to do some reading.
    var doRead = state.needReadable;
    debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some
    if (state.length === 0 || state.length - n < state.highWaterMark) {
        doRead = true;
        debug('length less than watermark', doRead);
    } // however, if we've ended, then there's no point, and if we're already
    // reading, then it's unnecessary.
    if (state.ended || state.reading) {
        doRead = false;
        debug('reading or ended', doRead);
    } else if (doRead) {
        debug('do read');
        state.reading = true;
        state.sync = true; // if the length is currently zero, then we *need* a readable event.
        if (state.length === 0) state.needReadable = true; // call internal read method
        this._read(state.highWaterMark);
        state.sync = false; // If _read pushed data synchronously, then `reading` will be false,
        // and we need to re-evaluate how much data we can return to the user.
        if (!state.reading) n = howMuchToRead(nOrig, state);
    }
    var ret;
    if (n > 0) ret = fromList(n, state);
    else ret = null;
    if (ret === null) {
        state.needReadable = state.length <= state.highWaterMark;
        n = 0;
    } else {
        state.length -= n;
        state.awaitDrain = 0;
    }
    if (state.length === 0) {
        // If we have nothing in the buffer, then we want to know
        // as soon as we *do* get something into the buffer.
        if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.
        if (nOrig !== n && state.ended) endReadable(this);
    }
    if (ret !== null) this.emit('data', ret);
    return ret;
};
function onEofChunk(stream, state) {
    debug('onEofChunk');
    if (state.ended) return;
    if (state.decoder) {
        var chunk = state.decoder.end();
        if (chunk && chunk.length) {
            state.buffer.push(chunk);
            state.length += state.objectMode ? 1 : chunk.length;
        }
    }
    state.ended = true;
    if (state.sync) // if we are sync, wait until next tick to emit the data.
    // Otherwise we risk emitting data in the flow()
    // the readable code triggers during a read() call
    emitReadable(stream);
    else {
        // emit 'readable' now to make sure it gets picked up.
        state.needReadable = false;
        if (!state.emittedReadable) {
            state.emittedReadable = true;
            emitReadable_(stream);
        }
    }
} // Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
    var state = stream._readableState;
    debug('emitReadable', state.needReadable, state.emittedReadable);
    state.needReadable = false;
    if (!state.emittedReadable) {
        debug('emitReadable', state.flowing);
        state.emittedReadable = true;
        process.nextTick(emitReadable_, stream);
    }
}
function emitReadable_(stream) {
    var state = stream._readableState;
    debug('emitReadable_', state.destroyed, state.length, state.ended);
    if (!state.destroyed && (state.length || state.ended)) {
        stream.emit('readable');
        state.emittedReadable = false;
    } // The stream needs another readable event if
    // 1. It is not flowing, as the flow mechanism will take
    //    care of it.
    // 2. It is not ended.
    // 3. It is below the highWaterMark, so we can schedule
    //    another readable later.
    state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
    flow(stream);
} // at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
    if (!state.readingMore) {
        state.readingMore = true;
        process.nextTick(maybeReadMore_, stream, state);
    }
}
function maybeReadMore_(stream, state) {
    // Attempt to read more data if we should.
    //
    // The conditions for reading more data are (one of):
    // - Not enough data buffered (state.length < state.highWaterMark). The loop
    //   is responsible for filling the buffer with enough data if such data
    //   is available. If highWaterMark is 0 and we are not in the flowing mode
    //   we should _not_ attempt to buffer any extra data. We'll get more data
    //   when the stream consumer calls read() instead.
    // - No data in the buffer, and the stream is in flowing mode. In this mode
    //   the loop below is responsible for ensuring read() is called. Failing to
    //   call read here would abort the flow and there's no other mechanism for
    //   continuing the flow if the stream consumer has just subscribed to the
    //   'data' event.
    //
    // In addition to the above conditions to keep reading data, the following
    // conditions prevent the data from being read:
    // - The stream has ended (state.ended).
    // - There is already a pending 'read' operation (state.reading). This is a
    //   case where the the stream has called the implementation defined _read()
    //   method, but they are processing the call asynchronously and have _not_
    //   called push() with new data. In this case we skip performing more
    //   read()s. The execution ends in this method again after the _read() ends
    //   up calling push() with more data.
    while(!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)){
        var len = state.length;
        debug('maybeReadMore read 0');
        stream.read(0);
        if (len === state.length) break;
    }
    state.readingMore = false;
} // abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function(n) {
    errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
};
Readable.prototype.pipe = function(dest, pipeOpts) {
    var src = this;
    var state = this._readableState;
    switch(state.pipesCount){
        case 0:
            state.pipes = dest;
            break;
        case 1:
            state.pipes = [
                state.pipes,
                dest
            ];
            break;
        default:
            state.pipes.push(dest);
            break;
    }
    state.pipesCount += 1;
    debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
    var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
    var endFn = doEnd ? onend : unpipe;
    if (state.endEmitted) process.nextTick(endFn);
    else src.once('end', endFn);
    dest.on('unpipe', onunpipe);
    function onunpipe(readable, unpipeInfo) {
        debug('onunpipe');
        if (readable === src) {
            if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
                unpipeInfo.hasUnpiped = true;
                cleanup();
            }
        }
    }
    function onend() {
        debug('onend');
        dest.end();
    } // when the dest drains, it reduces the awaitDrain counter
    // on the source.  This would be more elegant with a .once()
    // handler in flow(), but adding and removing repeatedly is
    // too slow.
    var ondrain = pipeOnDrain(src);
    dest.on('drain', ondrain);
    var cleanedUp = false;
    function cleanup() {
        debug('cleanup'); // cleanup event handlers once the pipe is broken
        dest.removeListener('close', onclose);
        dest.removeListener('finish', onfinish);
        dest.removeListener('drain', ondrain);
        dest.removeListener('error', onerror);
        dest.removeListener('unpipe', onunpipe);
        src.removeListener('end', onend);
        src.removeListener('end', unpipe);
        src.removeListener('data', ondata);
        cleanedUp = true; // if the reader is waiting for a drain event from this
        // specific writer, then it would cause it to never start
        // flowing again.
        // So, if this is awaiting a drain, then we just call it now.
        // If we don't know, then assume that we are waiting for one.
        if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
    }
    src.on('data', ondata);
    function ondata(chunk) {
        debug('ondata');
        var ret = dest.write(chunk);
        debug('dest.write', ret);
        if (ret === false) {
            // If the user unpiped during `dest.write()`, it is possible
            // to get stuck in a permanently paused state if that write
            // also returned false.
            // => Check whether `dest` is still a piping destination.
            if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
                debug('false write response, pause', state.awaitDrain);
                state.awaitDrain++;
            }
            src.pause();
        }
    } // if the dest has an error, then stop piping into it.
    // however, don't suppress the throwing behavior for this.
    function onerror(er) {
        debug('onerror', er);
        unpipe();
        dest.removeListener('error', onerror);
        if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);
    } // Make sure our error handler is attached before userland ones.
    prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.
    function onclose() {
        dest.removeListener('finish', onfinish);
        unpipe();
    }
    dest.once('close', onclose);
    function onfinish() {
        debug('onfinish');
        dest.removeListener('close', onclose);
        unpipe();
    }
    dest.once('finish', onfinish);
    function unpipe() {
        debug('unpipe');
        src.unpipe(dest);
    } // tell the dest that it's being piped to
    dest.emit('pipe', src); // start the flow if it hasn't been started already.
    if (!state.flowing) {
        debug('pipe resume');
        src.resume();
    }
    return dest;
};
function pipeOnDrain(src) {
    return function pipeOnDrainFunctionResult() {
        var state = src._readableState;
        debug('pipeOnDrain', state.awaitDrain);
        if (state.awaitDrain) state.awaitDrain--;
        if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
            state.flowing = true;
            flow(src);
        }
    };
}
Readable.prototype.unpipe = function(dest) {
    var state = this._readableState;
    var unpipeInfo = {
        hasUnpiped: false
    }; // if we're not piping anywhere, then do nothing.
    if (state.pipesCount === 0) return this; // just one destination.  most common case.
    if (state.pipesCount === 1) {
        // passed in one, but it's not the right one.
        if (dest && dest !== state.pipes) return this;
        if (!dest) dest = state.pipes; // got a match.
        state.pipes = null;
        state.pipesCount = 0;
        state.flowing = false;
        if (dest) dest.emit('unpipe', this, unpipeInfo);
        return this;
    } // slow case. multiple pipe destinations.
    if (!dest) {
        // remove all.
        var dests = state.pipes;
        var len = state.pipesCount;
        state.pipes = null;
        state.pipesCount = 0;
        state.flowing = false;
        for(var i = 0; i < len; i++)dests[i].emit('unpipe', this, {
            hasUnpiped: false
        });
        return this;
    } // try to find the right one.
    var index = indexOf(state.pipes, dest);
    if (index === -1) return this;
    state.pipes.splice(index, 1);
    state.pipesCount -= 1;
    if (state.pipesCount === 1) state.pipes = state.pipes[0];
    dest.emit('unpipe', this, unpipeInfo);
    return this;
}; // set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function(ev, fn) {
    var res = Stream.prototype.on.call(this, ev, fn);
    var state = this._readableState;
    if (ev === 'data') {
        // update readableListening so that resume() may be a no-op
        // a few lines down. This is needed to support once('readable').
        state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused
        if (state.flowing !== false) this.resume();
    } else if (ev === 'readable') {
        if (!state.endEmitted && !state.readableListening) {
            state.readableListening = state.needReadable = true;
            state.flowing = false;
            state.emittedReadable = false;
            debug('on readable', state.length, state.reading);
            if (state.length) emitReadable(this);
            else if (!state.reading) process.nextTick(nReadingNextTick, this);
        }
    }
    return res;
};
Readable.prototype.addListener = Readable.prototype.on;
Readable.prototype.removeListener = function(ev, fn) {
    var res = Stream.prototype.removeListener.call(this, ev, fn);
    if (ev === 'readable') // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
    return res;
};
Readable.prototype.removeAllListeners = function(ev) {
    var res = Stream.prototype.removeAllListeners.apply(this, arguments);
    if (ev === 'readable' || ev === undefined) // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
    return res;
};
function updateReadableListening(self) {
    var state = self._readableState;
    state.readableListening = self.listenerCount('readable') > 0;
    if (state.resumeScheduled && !state.paused) // flowing needs to be set to true now, otherwise
    // the upcoming resume will not flow.
    state.flowing = true; // crude way to check if we should resume
    else if (self.listenerCount('data') > 0) self.resume();
}
function nReadingNextTick(self) {
    debug('readable nexttick read 0');
    self.read(0);
} // pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function() {
    var state = this._readableState;
    if (!state.flowing) {
        debug('resume'); // we flow only if there is no one listening
        // for readable, but we still have to call
        // resume()
        state.flowing = !state.readableListening;
        resume(this, state);
    }
    state.paused = false;
    return this;
};
function resume(stream, state) {
    if (!state.resumeScheduled) {
        state.resumeScheduled = true;
        process.nextTick(resume_, stream, state);
    }
}
function resume_(stream, state) {
    debug('resume', state.reading);
    if (!state.reading) stream.read(0);
    state.resumeScheduled = false;
    stream.emit('resume');
    flow(stream);
    if (state.flowing && !state.reading) stream.read(0);
}
Readable.prototype.pause = function() {
    debug('call pause flowing=%j', this._readableState.flowing);
    if (this._readableState.flowing !== false) {
        debug('pause');
        this._readableState.flowing = false;
        this.emit('pause');
    }
    this._readableState.paused = true;
    return this;
};
function flow(stream) {
    var state = stream._readableState;
    debug('flow', state.flowing);
    while(state.flowing && stream.read() !== null);
} // wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function(stream) {
    var _this = this;
    var state = this._readableState;
    var paused = false;
    stream.on('end', function() {
        debug('wrapped end');
        if (state.decoder && !state.ended) {
            var chunk = state.decoder.end();
            if (chunk && chunk.length) _this.push(chunk);
        }
        _this.push(null);
    });
    stream.on('data', function(chunk) {
        debug('wrapped data');
        if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode
        if (state.objectMode && (chunk === null || chunk === undefined)) return;
        else if (!state.objectMode && (!chunk || !chunk.length)) return;
        var ret = _this.push(chunk);
        if (!ret) {
            paused = true;
            stream.pause();
        }
    }); // proxy all the other methods.
    // important when wrapping filters and duplexes.
    for(var i in stream)if (this[i] === undefined && typeof stream[i] === 'function') this[i] = (function methodWrap(method) {
        return function methodWrapReturnFunction() {
            return stream[method].apply(stream, arguments);
        };
    })(i);
     // proxy certain important events.
    for(var n = 0; n < kProxyEvents.length; n++)stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
     // when we try to consume some more bytes, simply unpause the
    // underlying stream.
    this._read = function(n1) {
        debug('wrapped _read', n1);
        if (paused) {
            paused = false;
            stream.resume();
        }
    };
    return this;
};
if (typeof Symbol === 'function') Readable.prototype[Symbol.asyncIterator] = function() {
    if (createReadableStreamAsyncIterator === undefined) createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');
    return createReadableStreamAsyncIterator(this);
};
Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._readableState.highWaterMark;
    }
});
Object.defineProperty(Readable.prototype, 'readableBuffer', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._readableState && this._readableState.buffer;
    }
});
Object.defineProperty(Readable.prototype, 'readableFlowing', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._readableState.flowing;
    },
    set: function set(state) {
        if (this._readableState) this._readableState.flowing = state;
    }
}); // exposed for testing purposes only.
Readable._fromList = fromList;
Object.defineProperty(Readable.prototype, 'readableLength', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._readableState.length;
    }
}); // Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
    // nothing buffered
    if (state.length === 0) return null;
    var ret;
    if (state.objectMode) ret = state.buffer.shift();
    else if (!n || n >= state.length) {
        // read it all, truncate the list
        if (state.decoder) ret = state.buffer.join('');
        else if (state.buffer.length === 1) ret = state.buffer.first();
        else ret = state.buffer.concat(state.length);
        state.buffer.clear();
    } else // read part of list
    ret = state.buffer.consume(n, state.decoder);
    return ret;
}
function endReadable(stream) {
    var state = stream._readableState;
    debug('endReadable', state.endEmitted);
    if (!state.endEmitted) {
        state.ended = true;
        process.nextTick(endReadableNT, state, stream);
    }
}
function endReadableNT(state, stream) {
    debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.
    if (!state.endEmitted && state.length === 0) {
        state.endEmitted = true;
        stream.readable = false;
        stream.emit('end');
        if (state.autoDestroy) {
            // In case of duplex streams we need a way to detect
            // if the writable side is ready for autoDestroy as well
            var wState = stream._writableState;
            if (!wState || wState.autoDestroy && wState.finished) stream.destroy();
        }
    }
}
if (typeof Symbol === 'function') Readable.from = function(iterable, opts) {
    if (from === undefined) from = require('./internal/streams/from');
    return from(Readable, iterable, opts);
};
function indexOf(xs, x) {
    for(var i = 0, l = xs.length; i < l; i++){
        if (xs[i] === x) return i;
    }
    return -1;
}

},{"process":"5svFz","events":"gm7Nh","./internal/streams/stream":"bxOMR","buffer":"hX7zZ","util":"4LM6B","./internal/streams/buffer_list":"9rbsd","./internal/streams/destroy":"dFSWx","./internal/streams/state":"lLHv7","../errors":"kn2bf","inherits":"9Y2vC","./_stream_duplex":"kezQ9","string_decoder/":"6vLXz","./internal/streams/async_iterator":"bsio6","./internal/streams/from":"f2tW9"}],"bxOMR":[function(require,module,exports) {
module.exports = require('events').EventEmitter;

},{"events":"gm7Nh"}],"9rbsd":[function(require,module,exports) {
'use strict';
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _objectSpread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {
        };
        if (i % 2) ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
        });
        else if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        else ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _defineProperty(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
var _require = require('buffer'), Buffer = _require.Buffer;
var _require2 = require('util'), inspect = _require2.inspect;
var custom = inspect && inspect.custom || 'inspect';
function copyBuffer(src, target, offset) {
    Buffer.prototype.copy.call(src, target, offset);
}
module.exports = /*#__PURE__*/ (function() {
    function BufferList() {
        _classCallCheck(this, BufferList);
        this.head = null;
        this.tail = null;
        this.length = 0;
    }
    _createClass(BufferList, [
        {
            key: "push",
            value: function push(v) {
                var entry = {
                    data: v,
                    next: null
                };
                if (this.length > 0) this.tail.next = entry;
                else this.head = entry;
                this.tail = entry;
                ++this.length;
            }
        },
        {
            key: "unshift",
            value: function unshift(v) {
                var entry = {
                    data: v,
                    next: this.head
                };
                if (this.length === 0) this.tail = entry;
                this.head = entry;
                ++this.length;
            }
        },
        {
            key: "shift",
            value: function shift() {
                if (this.length === 0) return;
                var ret = this.head.data;
                if (this.length === 1) this.head = this.tail = null;
                else this.head = this.head.next;
                --this.length;
                return ret;
            }
        },
        {
            key: "clear",
            value: function clear() {
                this.head = this.tail = null;
                this.length = 0;
            }
        },
        {
            key: "join",
            value: function join(s) {
                if (this.length === 0) return '';
                var p = this.head;
                var ret = '' + p.data;
                while(p = p.next)ret += s + p.data;
                return ret;
            }
        },
        {
            key: "concat",
            value: function concat(n) {
                if (this.length === 0) return Buffer.alloc(0);
                var ret = Buffer.allocUnsafe(n >>> 0);
                var p = this.head;
                var i = 0;
                while(p){
                    copyBuffer(p.data, ret, i);
                    i += p.data.length;
                    p = p.next;
                }
                return ret;
            } // Consumes a specified amount of bytes or characters from the buffered data.
        },
        {
            key: "consume",
            value: function consume(n, hasStrings) {
                var ret;
                if (n < this.head.data.length) {
                    // `slice` is the same for buffers and strings.
                    ret = this.head.data.slice(0, n);
                    this.head.data = this.head.data.slice(n);
                } else if (n === this.head.data.length) // First chunk is a perfect match.
                ret = this.shift();
                else // Result spans more than one buffer.
                ret = hasStrings ? this._getString(n) : this._getBuffer(n);
                return ret;
            }
        },
        {
            key: "first",
            value: function first() {
                return this.head.data;
            } // Consumes a specified amount of characters from the buffered data.
        },
        {
            key: "_getString",
            value: function _getString(n) {
                var p = this.head;
                var c = 1;
                var ret = p.data;
                n -= ret.length;
                while(p = p.next){
                    var str = p.data;
                    var nb = n > str.length ? str.length : n;
                    if (nb === str.length) ret += str;
                    else ret += str.slice(0, n);
                    n -= nb;
                    if (n === 0) {
                        if (nb === str.length) {
                            ++c;
                            if (p.next) this.head = p.next;
                            else this.head = this.tail = null;
                        } else {
                            this.head = p;
                            p.data = str.slice(nb);
                        }
                        break;
                    }
                    ++c;
                }
                this.length -= c;
                return ret;
            } // Consumes a specified amount of bytes from the buffered data.
        },
        {
            key: "_getBuffer",
            value: function _getBuffer(n) {
                var ret = Buffer.allocUnsafe(n);
                var p = this.head;
                var c = 1;
                p.data.copy(ret);
                n -= p.data.length;
                while(p = p.next){
                    var buf = p.data;
                    var nb = n > buf.length ? buf.length : n;
                    buf.copy(ret, ret.length - n, 0, nb);
                    n -= nb;
                    if (n === 0) {
                        if (nb === buf.length) {
                            ++c;
                            if (p.next) this.head = p.next;
                            else this.head = this.tail = null;
                        } else {
                            this.head = p;
                            p.data = buf.slice(nb);
                        }
                        break;
                    }
                    ++c;
                }
                this.length -= c;
                return ret;
            } // Make sure the linked list only shows the minimal necessary information.
        },
        {
            key: custom,
            value: function value(_, options) {
                return inspect(this, _objectSpread({
                }, options, {
                    // Only inspect one level.
                    depth: 0,
                    // It should not recurse.
                    customInspect: false
                }));
            }
        }
    ]);
    return BufferList;
})();

},{"buffer":"hX7zZ","util":"4LM6B"}],"dFSWx":[function(require,module,exports) {
var process = require("process");
'use strict'; // undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
    var _this = this;
    var readableDestroyed = this._readableState && this._readableState.destroyed;
    var writableDestroyed = this._writableState && this._writableState.destroyed;
    if (readableDestroyed || writableDestroyed) {
        if (cb) cb(err);
        else if (err) {
            if (!this._writableState) process.nextTick(emitErrorNT, this, err);
            else if (!this._writableState.errorEmitted) {
                this._writableState.errorEmitted = true;
                process.nextTick(emitErrorNT, this, err);
            }
        }
        return this;
    } // we set destroyed to true before firing error callbacks in order
    // to make it re-entrance safe in case destroy() is called within callbacks
    if (this._readableState) this._readableState.destroyed = true;
     // if this is a duplex stream mark the writable part as destroyed as well
    if (this._writableState) this._writableState.destroyed = true;
    this._destroy(err || null, function(err1) {
        if (!cb && err1) {
            if (!_this._writableState) process.nextTick(emitErrorAndCloseNT, _this, err1);
            else if (!_this._writableState.errorEmitted) {
                _this._writableState.errorEmitted = true;
                process.nextTick(emitErrorAndCloseNT, _this, err1);
            } else process.nextTick(emitCloseNT, _this);
        } else if (cb) {
            process.nextTick(emitCloseNT, _this);
            cb(err1);
        } else process.nextTick(emitCloseNT, _this);
    });
    return this;
}
function emitErrorAndCloseNT(self, err) {
    emitErrorNT(self, err);
    emitCloseNT(self);
}
function emitCloseNT(self) {
    if (self._writableState && !self._writableState.emitClose) return;
    if (self._readableState && !self._readableState.emitClose) return;
    self.emit('close');
}
function undestroy() {
    if (this._readableState) {
        this._readableState.destroyed = false;
        this._readableState.reading = false;
        this._readableState.ended = false;
        this._readableState.endEmitted = false;
    }
    if (this._writableState) {
        this._writableState.destroyed = false;
        this._writableState.ended = false;
        this._writableState.ending = false;
        this._writableState.finalCalled = false;
        this._writableState.prefinished = false;
        this._writableState.finished = false;
        this._writableState.errorEmitted = false;
    }
}
function emitErrorNT(self, err) {
    self.emit('error', err);
}
function errorOrDestroy(stream, err) {
    // We have tests that rely on errors being emitted
    // in the same tick, so changing this is semver major.
    // For now when you opt-in to autoDestroy we allow
    // the error to be emitted nextTick. In a future
    // semver major update we should change the default to this.
    var rState = stream._readableState;
    var wState = stream._writableState;
    if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);
    else stream.emit('error', err);
}
module.exports = {
    destroy: destroy,
    undestroy: undestroy,
    errorOrDestroy: errorOrDestroy
};

},{"process":"5svFz"}],"lLHv7":[function(require,module,exports) {
'use strict';
var ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;
function highWaterMarkFrom(options, isDuplex, duplexKey) {
    return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
}
function getHighWaterMark(state, options, duplexKey, isDuplex) {
    var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);
    if (hwm != null) {
        if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
            var name = isDuplex ? duplexKey : 'highWaterMark';
            throw new ERR_INVALID_OPT_VALUE(name, hwm);
        }
        return Math.floor(hwm);
    } // Default value
    return state.objectMode ? 16 : 16384;
}
module.exports = {
    getHighWaterMark: getHighWaterMark
};

},{"../../../errors":"kn2bf"}],"kn2bf":[function(require,module,exports) {
'use strict';
function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
}
var codes = {
};
function createErrorType(code, message, Base) {
    if (!Base) Base = Error;
    function getMessage(arg1, arg2, arg3) {
        if (typeof message === 'string') return message;
        else return message(arg1, arg2, arg3);
    }
    var NodeError1 = /*#__PURE__*/ function(_Base) {
        _inheritsLoose(NodeError2, _Base);
        function NodeError2(arg1, arg2, arg3) {
            return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
        }
        return NodeError2;
    }(Base);
    NodeError1.prototype.name = Base.name;
    NodeError1.prototype.code = code;
    codes[code] = NodeError1;
} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js
function oneOf(expected, thing) {
    if (Array.isArray(expected)) {
        var len = expected.length;
        expected = expected.map(function(i) {
            return String(i);
        });
        if (len > 2) return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(', '), ", or ") + expected[len - 1];
        else if (len === 2) return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
        else return "of ".concat(thing, " ").concat(expected[0]);
    } else return "of ".concat(thing, " ").concat(String(expected));
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith
function startsWith(str, search, pos) {
    return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith
function endsWith(str, search, this_len) {
    if (this_len === undefined || this_len > str.length) this_len = str.length;
    return str.substring(this_len - search.length, this_len) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes
function includes(str, search, start) {
    if (typeof start !== 'number') start = 0;
    if (start + search.length > str.length) return false;
    else return str.indexOf(search, start) !== -1;
}
createErrorType('ERR_INVALID_OPT_VALUE', function(name, value) {
    return 'The value "' + value + '" is invalid for option "' + name + '"';
}, TypeError);
createErrorType('ERR_INVALID_ARG_TYPE', function(name, expected, actual) {
    // determiner: 'must be' or 'must not be'
    var determiner;
    if (typeof expected === 'string' && startsWith(expected, 'not ')) {
        determiner = 'must not be';
        expected = expected.replace(/^not /, '');
    } else determiner = 'must be';
    var msg;
    if (endsWith(name, ' argument')) // For cases like 'first argument'
    msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
    else {
        var type = includes(name, '.') ? 'property' : 'argument';
        msg = "The \"".concat(name, "\" ").concat(type, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
    }
    msg += ". Received type ".concat(typeof actual);
    return msg;
}, TypeError);
createErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');
createErrorType('ERR_METHOD_NOT_IMPLEMENTED', function(name) {
    return 'The ' + name + ' method is not implemented';
});
createErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');
createErrorType('ERR_STREAM_DESTROYED', function(name) {
    return 'Cannot call ' + name + ' after a stream was destroyed';
});
createErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');
createErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');
createErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');
createErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);
createErrorType('ERR_UNKNOWN_ENCODING', function(arg) {
    return 'Unknown encoding: ' + arg;
}, TypeError);
createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');
module.exports.codes = codes;

},{}],"kezQ9":[function(require,module,exports) {
var process = require("process");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.
'use strict';
/*<replacement>*/ var objectKeys = Object.keys || function(obj) {
    var keys = [];
    for(var key in obj)keys.push(key);
    return keys;
};
/*</replacement>*/ module.exports = Duplex;
var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');
require('inherits')(Duplex, Readable);
// Allow the keys array to be GC'ed.
var keys = objectKeys(Writable.prototype);
for(var v = 0; v < keys.length; v++){
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
}
function Duplex(options) {
    if (!(this instanceof Duplex)) return new Duplex(options);
    Readable.call(this, options);
    Writable.call(this, options);
    this.allowHalfOpen = true;
    if (options) {
        if (options.readable === false) this.readable = false;
        if (options.writable === false) this.writable = false;
        if (options.allowHalfOpen === false) {
            this.allowHalfOpen = false;
            this.once('end', onend);
        }
    }
}
Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._writableState.highWaterMark;
    }
});
Object.defineProperty(Duplex.prototype, 'writableBuffer', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._writableState && this._writableState.getBuffer();
    }
});
Object.defineProperty(Duplex.prototype, 'writableLength', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._writableState.length;
    }
}); // the no-half-open enforcer
function onend() {
    // If the writable side ended, then we're ok.
    if (this._writableState.ended) return; // no more data can be written.
    // But allow more writes to happen in this tick.
    process.nextTick(onEndNT, this);
}
function onEndNT(self) {
    self.end();
}
Object.defineProperty(Duplex.prototype, 'destroyed', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        if (this._readableState === undefined || this._writableState === undefined) return false;
        return this._readableState.destroyed && this._writableState.destroyed;
    },
    set: function set(value) {
        // we ignore the value if the stream
        // has not been initialized yet
        if (this._readableState === undefined || this._writableState === undefined) return;
         // backward compatibility, the user is explicitly
        // managing destroyed
        this._readableState.destroyed = value;
        this._writableState.destroyed = value;
    }
});

},{"process":"5svFz","./_stream_readable":"aOE43","./_stream_writable":"iHxeK","inherits":"9Y2vC"}],"iHxeK":[function(require,module,exports) {
var process = require("process");
var global = arguments[3];
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.
'use strict';
module.exports = Writable;
/* <replacement> */ function WriteReq(chunk, encoding, cb) {
    this.chunk = chunk;
    this.encoding = encoding;
    this.callback = cb;
    this.next = null;
} // It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
    var _this = this;
    this.next = null;
    this.entry = null;
    this.finish = function() {
        onCorkedFinish(_this, state);
    };
}
/* </replacement> */ /*<replacement>*/ var Duplex;
/*</replacement>*/ Writable.WritableState = WritableState;
/*<replacement>*/ var internalUtil = {
    deprecate: require('util-deprecate')
};
/*</replacement>*/ /*<replacement>*/ var Stream = require('./internal/streams/stream');
/*</replacement>*/ var Buffer = require('buffer').Buffer;
var OurUint8Array = global.Uint8Array || function() {
};
function _uint8ArrayToBuffer(chunk) {
    return Buffer.from(chunk);
}
function _isUint8Array(obj) {
    return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
var destroyImpl = require('./internal/streams/destroy');
var _require = require('./internal/streams/state'), getHighWaterMark = _require.getHighWaterMark;
var _require$codes = require('../errors').codes, ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE, ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED, ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK, ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE, ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED, ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES, ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END, ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;
var errorOrDestroy = destroyImpl.errorOrDestroy;
require('inherits')(Writable, Stream);
function nop() {
}
function WritableState(options, stream, isDuplex) {
    Duplex = Duplex || require('./_stream_duplex');
    options = options || {
    }; // Duplex streams are both readable and writable, but share
    // the same options object.
    // However, some cases require setting options to different
    // values for the readable and the writable sides of the duplex stream,
    // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.
    if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream
    // contains buffers or objects.
    this.objectMode = !!options.objectMode;
    if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false
    // Note: 0 is a valid value, means that we always return false if
    // the entire buffer is not flushed immediately on write()
    this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called
    this.finalCalled = false; // drain event flag.
    this.needDrain = false; // at the start of calling end()
    this.ending = false; // when end() has been called, and returned
    this.ended = false; // when 'finish' is emitted
    this.finished = false; // has it been destroyed
    this.destroyed = false; // should we decode strings into buffers before passing to _write?
    // this is here so that some node-core streams can optimize string
    // handling at a lower level.
    var noDecode = options.decodeStrings === false;
    this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string
    // encoding is 'binary' so we have to make this configurable.
    // Everything else in the universe uses 'utf8', though.
    this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement
    // of how much we're waiting to get pushed to some underlying
    // socket or file.
    this.length = 0; // a flag to see when we're in the middle of a write.
    this.writing = false; // when true all writes will be buffered until .uncork() call
    this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,
    // or on a later tick.  We set this to true at first, because any
    // actions that shouldn't happen until "later" should generally also
    // not happen before the first write call.
    this.sync = true; // a flag to know if we're processing previously buffered items, which
    // may call the _write() callback in the same tick, so that we don't
    // end up in an overlapped onwrite situation.
    this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)
    this.onwrite = function(er) {
        onwrite(stream, er);
    }; // the callback that the user supplies to write(chunk,encoding,cb)
    this.writecb = null; // the amount that is being written when _write is called.
    this.writelen = 0;
    this.bufferedRequest = null;
    this.lastBufferedRequest = null; // number of pending user-supplied write callbacks
    // this must be 0 before 'finish' can be emitted
    this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs
    // This is relevant for synchronous Transform streams
    this.prefinished = false; // True if the error was already emitted and should not be thrown again
    this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.
    this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')
    this.autoDestroy = !!options.autoDestroy; // count buffered requests
    this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always
    // one allocated and free to use, and we maintain at most two
    this.corkedRequestsFree = new CorkedRequest(this);
}
WritableState.prototype.getBuffer = function getBuffer() {
    var current = this.bufferedRequest;
    var out = [];
    while(current){
        out.push(current);
        current = current.next;
    }
    return out;
};
(function() {
    try {
        Object.defineProperty(WritableState.prototype, 'buffer', {
            get: internalUtil.deprecate(function writableStateBufferGetter() {
                return this.getBuffer();
            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", 'DEP0003')
        });
    } catch (_) {
    }
})(); // Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
    realHasInstance = Function.prototype[Symbol.hasInstance];
    Object.defineProperty(Writable, Symbol.hasInstance, {
        value: function value(object) {
            if (realHasInstance.call(this, object)) return true;
            if (this !== Writable) return false;
            return object && object._writableState instanceof WritableState;
        }
    });
} else realHasInstance = function realHasInstance1(object) {
    return object instanceof this;
};
function Writable(options) {
    Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.
    // `realHasInstance` is necessary because using plain `instanceof`
    // would return false, as no `_writableState` property is attached.
    // Trying to use the custom `instanceof` for Writable here will also break the
    // Node.js LazyTransform implementation, which has a non-trivial getter for
    // `_writableState` that would lead to infinite recursion.
    // Checking for a Stream.Duplex instance is faster here instead of inside
    // the WritableState constructor, at least with V8 6.5
    var isDuplex = this instanceof Duplex;
    if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
    this._writableState = new WritableState(options, this, isDuplex); // legacy.
    this.writable = true;
    if (options) {
        if (typeof options.write === 'function') this._write = options.write;
        if (typeof options.writev === 'function') this._writev = options.writev;
        if (typeof options.destroy === 'function') this._destroy = options.destroy;
        if (typeof options.final === 'function') this._final = options.final;
    }
    Stream.call(this);
} // Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function() {
    errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
};
function writeAfterEnd(stream, cb) {
    var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb
    errorOrDestroy(stream, er);
    process.nextTick(cb, er);
} // Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
    var er;
    if (chunk === null) er = new ERR_STREAM_NULL_VALUES();
    else if (typeof chunk !== 'string' && !state.objectMode) er = new ERR_INVALID_ARG_TYPE('chunk', [
        'string',
        'Buffer'
    ], chunk);
    if (er) {
        errorOrDestroy(stream, er);
        process.nextTick(cb, er);
        return false;
    }
    return true;
}
Writable.prototype.write = function(chunk, encoding, cb) {
    var state = this._writableState;
    var ret = false;
    var isBuf = !state.objectMode && _isUint8Array(chunk);
    if (isBuf && !Buffer.isBuffer(chunk)) chunk = _uint8ArrayToBuffer(chunk);
    if (typeof encoding === 'function') {
        cb = encoding;
        encoding = null;
    }
    if (isBuf) encoding = 'buffer';
    else if (!encoding) encoding = state.defaultEncoding;
    if (typeof cb !== 'function') cb = nop;
    if (state.ending) writeAfterEnd(this, cb);
    else if (isBuf || validChunk(this, state, chunk, cb)) {
        state.pendingcb++;
        ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
    }
    return ret;
};
Writable.prototype.cork = function() {
    this._writableState.corked++;
};
Writable.prototype.uncork = function() {
    var state = this._writableState;
    if (state.corked) {
        state.corked--;
        if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
    }
};
Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
    // node::ParseEncoding() requires lower case.
    if (typeof encoding === 'string') encoding = encoding.toLowerCase();
    if (!([
        'hex',
        'utf8',
        'utf-8',
        'ascii',
        'binary',
        'base64',
        'ucs2',
        'ucs-2',
        'utf16le',
        'utf-16le',
        'raw'
    ].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);
    this._writableState.defaultEncoding = encoding;
    return this;
};
Object.defineProperty(Writable.prototype, 'writableBuffer', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._writableState && this._writableState.getBuffer();
    }
});
function decodeChunk(state, chunk, encoding) {
    if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') chunk = Buffer.from(chunk, encoding);
    return chunk;
}
Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._writableState.highWaterMark;
    }
}); // if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
    if (!isBuf) {
        var newChunk = decodeChunk(state, chunk, encoding);
        if (chunk !== newChunk) {
            isBuf = true;
            encoding = 'buffer';
            chunk = newChunk;
        }
    }
    var len = state.objectMode ? 1 : chunk.length;
    state.length += len;
    var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.
    if (!ret) state.needDrain = true;
    if (state.writing || state.corked) {
        var last = state.lastBufferedRequest;
        state.lastBufferedRequest = {
            chunk: chunk,
            encoding: encoding,
            isBuf: isBuf,
            callback: cb,
            next: null
        };
        if (last) last.next = state.lastBufferedRequest;
        else state.bufferedRequest = state.lastBufferedRequest;
        state.bufferedRequestCount += 1;
    } else doWrite(stream, state, false, len, chunk, encoding, cb);
    return ret;
}
function doWrite(stream, state, writev, len, chunk, encoding, cb) {
    state.writelen = len;
    state.writecb = cb;
    state.writing = true;
    state.sync = true;
    if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));
    else if (writev) stream._writev(chunk, state.onwrite);
    else stream._write(chunk, encoding, state.onwrite);
    state.sync = false;
}
function onwriteError(stream, state, sync, er, cb) {
    --state.pendingcb;
    if (sync) {
        // defer the callback if we are being called synchronously
        // to avoid piling up things on the stack
        process.nextTick(cb, er); // this can emit finish, and it will always happen
        // after error
        process.nextTick(finishMaybe, stream, state);
        stream._writableState.errorEmitted = true;
        errorOrDestroy(stream, er);
    } else {
        // the caller expect this to happen before if
        // it is async
        cb(er);
        stream._writableState.errorEmitted = true;
        errorOrDestroy(stream, er); // this can emit finish, but finish must
        // always follow error
        finishMaybe(stream, state);
    }
}
function onwriteStateUpdate(state) {
    state.writing = false;
    state.writecb = null;
    state.length -= state.writelen;
    state.writelen = 0;
}
function onwrite(stream, er) {
    var state = stream._writableState;
    var sync = state.sync;
    var cb = state.writecb;
    if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();
    onwriteStateUpdate(state);
    if (er) onwriteError(stream, state, sync, er, cb);
    else {
        // Check if we're actually ready to finish, but don't emit yet
        var finished = needFinish(state) || stream.destroyed;
        if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(stream, state);
        if (sync) process.nextTick(afterWrite, stream, state, finished, cb);
        else afterWrite(stream, state, finished, cb);
    }
}
function afterWrite(stream, state, finished, cb) {
    if (!finished) onwriteDrain(stream, state);
    state.pendingcb--;
    cb();
    finishMaybe(stream, state);
} // Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
    if (state.length === 0 && state.needDrain) {
        state.needDrain = false;
        stream.emit('drain');
    }
} // if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
    state.bufferProcessing = true;
    var entry = state.bufferedRequest;
    if (stream._writev && entry && entry.next) {
        // Fast case, write everything using _writev()
        var l = state.bufferedRequestCount;
        var buffer = new Array(l);
        var holder = state.corkedRequestsFree;
        holder.entry = entry;
        var count = 0;
        var allBuffers = true;
        while(entry){
            buffer[count] = entry;
            if (!entry.isBuf) allBuffers = false;
            entry = entry.next;
            count += 1;
        }
        buffer.allBuffers = allBuffers;
        doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time
        // as the hot path ends with doWrite
        state.pendingcb++;
        state.lastBufferedRequest = null;
        if (holder.next) {
            state.corkedRequestsFree = holder.next;
            holder.next = null;
        } else state.corkedRequestsFree = new CorkedRequest(state);
        state.bufferedRequestCount = 0;
    } else {
        // Slow case, write chunks one-by-one
        while(entry){
            var chunk = entry.chunk;
            var encoding = entry.encoding;
            var cb = entry.callback;
            var len = state.objectMode ? 1 : chunk.length;
            doWrite(stream, state, false, len, chunk, encoding, cb);
            entry = entry.next;
            state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then
            // it means that we need to wait until it does.
            // also, that means that the chunk and cb are currently
            // being processed, so move the buffer counter past them.
            if (state.writing) break;
        }
        if (entry === null) state.lastBufferedRequest = null;
    }
    state.bufferedRequest = entry;
    state.bufferProcessing = false;
}
Writable.prototype._write = function(chunk, encoding, cb) {
    cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
};
Writable.prototype._writev = null;
Writable.prototype.end = function(chunk, encoding, cb) {
    var state = this._writableState;
    if (typeof chunk === 'function') {
        cb = chunk;
        chunk = null;
        encoding = null;
    } else if (typeof encoding === 'function') {
        cb = encoding;
        encoding = null;
    }
    if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks
    if (state.corked) {
        state.corked = 1;
        this.uncork();
    } // ignore unnecessary end() calls.
    if (!state.ending) endWritable(this, state, cb);
    return this;
};
Object.defineProperty(Writable.prototype, 'writableLength', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._writableState.length;
    }
});
function needFinish(state) {
    return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
    stream._final(function(err) {
        state.pendingcb--;
        if (err) errorOrDestroy(stream, err);
        state.prefinished = true;
        stream.emit('prefinish');
        finishMaybe(stream, state);
    });
}
function prefinish(stream, state) {
    if (!state.prefinished && !state.finalCalled) {
        if (typeof stream._final === 'function' && !state.destroyed) {
            state.pendingcb++;
            state.finalCalled = true;
            process.nextTick(callFinal, stream, state);
        } else {
            state.prefinished = true;
            stream.emit('prefinish');
        }
    }
}
function finishMaybe(stream, state) {
    var need = needFinish(state);
    if (need) {
        prefinish(stream, state);
        if (state.pendingcb === 0) {
            state.finished = true;
            stream.emit('finish');
            if (state.autoDestroy) {
                // In case of duplex streams we need a way to detect
                // if the readable side is ready for autoDestroy as well
                var rState = stream._readableState;
                if (!rState || rState.autoDestroy && rState.endEmitted) stream.destroy();
            }
        }
    }
    return need;
}
function endWritable(stream, state, cb) {
    state.ending = true;
    finishMaybe(stream, state);
    if (cb) {
        if (state.finished) process.nextTick(cb);
        else stream.once('finish', cb);
    }
    state.ended = true;
    stream.writable = false;
}
function onCorkedFinish(corkReq, state, err) {
    var entry = corkReq.entry;
    corkReq.entry = null;
    while(entry){
        var cb = entry.callback;
        state.pendingcb--;
        cb(err);
        entry = entry.next;
    } // reuse the free corkReq.
    state.corkedRequestsFree.next = corkReq;
}
Object.defineProperty(Writable.prototype, 'destroyed', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        if (this._writableState === undefined) return false;
        return this._writableState.destroyed;
    },
    set: function set(value) {
        // we ignore the value if the stream
        // has not been initialized yet
        if (!this._writableState) return;
         // backward compatibility, the user is explicitly
        // managing destroyed
        this._writableState.destroyed = value;
    }
});
Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function(err, cb) {
    cb(err);
};

},{"process":"5svFz","util-deprecate":"4BOnC","./internal/streams/stream":"bxOMR","buffer":"hX7zZ","./internal/streams/destroy":"dFSWx","./internal/streams/state":"lLHv7","../errors":"kn2bf","inherits":"9Y2vC","./_stream_duplex":"kezQ9"}],"6vLXz":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
/*<replacement>*/ var Buffer = require('safe-buffer').Buffer;
/*</replacement>*/ var isEncoding = Buffer.isEncoding || function(encoding) {
    encoding = '' + encoding;
    switch(encoding && encoding.toLowerCase()){
        case 'hex':
        case 'utf8':
        case 'utf-8':
        case 'ascii':
        case 'binary':
        case 'base64':
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
        case 'raw':
            return true;
        default:
            return false;
    }
};
function _normalizeEncoding(enc) {
    if (!enc) return 'utf8';
    var retried;
    while(true)switch(enc){
        case 'utf8':
        case 'utf-8':
            return 'utf8';
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
            return 'utf16le';
        case 'latin1':
        case 'binary':
            return 'latin1';
        case 'base64':
        case 'ascii':
        case 'hex':
            return enc;
        default:
            if (retried) return; // undefined
            enc = ('' + enc).toLowerCase();
            retried = true;
    }
}
// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
    var nenc = _normalizeEncoding(enc);
    if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
    return nenc || enc;
}
// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
    this.encoding = normalizeEncoding(encoding);
    var nb;
    switch(this.encoding){
        case 'utf16le':
            this.text = utf16Text;
            this.end = utf16End;
            nb = 4;
            break;
        case 'utf8':
            this.fillLast = utf8FillLast;
            nb = 4;
            break;
        case 'base64':
            this.text = base64Text;
            this.end = base64End;
            nb = 3;
            break;
        default:
            this.write = simpleWrite;
            this.end = simpleEnd;
            return;
    }
    this.lastNeed = 0;
    this.lastTotal = 0;
    this.lastChar = Buffer.allocUnsafe(nb);
}
StringDecoder.prototype.write = function(buf) {
    if (buf.length === 0) return '';
    var r;
    var i;
    if (this.lastNeed) {
        r = this.fillLast(buf);
        if (r === undefined) return '';
        i = this.lastNeed;
        this.lastNeed = 0;
    } else i = 0;
    if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
    return r || '';
};
StringDecoder.prototype.end = utf8End;
// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;
// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function(buf) {
    if (this.lastNeed <= buf.length) {
        buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
        return this.lastChar.toString(this.encoding, 0, this.lastTotal);
    }
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
    this.lastNeed -= buf.length;
};
// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
    if (byte <= 127) return 0;
    else if (byte >> 5 === 6) return 2;
    else if (byte >> 4 === 14) return 3;
    else if (byte >> 3 === 30) return 4;
    return byte >> 6 === 2 ? -1 : -2;
}
// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
    var j = buf.length - 1;
    if (j < i) return 0;
    var nb = utf8CheckByte(buf[j]);
    if (nb >= 0) {
        if (nb > 0) self.lastNeed = nb - 1;
        return nb;
    }
    if ((--j) < i || nb === -2) return 0;
    nb = utf8CheckByte(buf[j]);
    if (nb >= 0) {
        if (nb > 0) self.lastNeed = nb - 2;
        return nb;
    }
    if ((--j) < i || nb === -2) return 0;
    nb = utf8CheckByte(buf[j]);
    if (nb >= 0) {
        if (nb > 0) {
            if (nb === 2) nb = 0;
            else self.lastNeed = nb - 3;
        }
        return nb;
    }
    return 0;
}
// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
    if ((buf[0] & 192) !== 128) {
        self.lastNeed = 0;
        return '\ufffd';
    }
    if (self.lastNeed > 1 && buf.length > 1) {
        if ((buf[1] & 192) !== 128) {
            self.lastNeed = 1;
            return '\ufffd';
        }
        if (self.lastNeed > 2 && buf.length > 2) {
            if ((buf[2] & 192) !== 128) {
                self.lastNeed = 2;
                return '\ufffd';
            }
        }
    }
}
// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
    var p = this.lastTotal - this.lastNeed;
    var r = utf8CheckExtraBytes(this, buf, p);
    if (r !== undefined) return r;
    if (this.lastNeed <= buf.length) {
        buf.copy(this.lastChar, p, 0, this.lastNeed);
        return this.lastChar.toString(this.encoding, 0, this.lastTotal);
    }
    buf.copy(this.lastChar, p, 0, buf.length);
    this.lastNeed -= buf.length;
}
// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
    var total = utf8CheckIncomplete(this, buf, i);
    if (!this.lastNeed) return buf.toString('utf8', i);
    this.lastTotal = total;
    var end = buf.length - (total - this.lastNeed);
    buf.copy(this.lastChar, 0, end);
    return buf.toString('utf8', i, end);
}
// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
    var r = buf && buf.length ? this.write(buf) : '';
    if (this.lastNeed) return r + '\ufffd';
    return r;
}
// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
    if ((buf.length - i) % 2 === 0) {
        var r = buf.toString('utf16le', i);
        if (r) {
            var c = r.charCodeAt(r.length - 1);
            if (c >= 55296 && c <= 56319) {
                this.lastNeed = 2;
                this.lastTotal = 4;
                this.lastChar[0] = buf[buf.length - 2];
                this.lastChar[1] = buf[buf.length - 1];
                return r.slice(0, -1);
            }
        }
        return r;
    }
    this.lastNeed = 1;
    this.lastTotal = 2;
    this.lastChar[0] = buf[buf.length - 1];
    return buf.toString('utf16le', i, buf.length - 1);
}
// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
    var r = buf && buf.length ? this.write(buf) : '';
    if (this.lastNeed) {
        var end = this.lastTotal - this.lastNeed;
        return r + this.lastChar.toString('utf16le', 0, end);
    }
    return r;
}
function base64Text(buf, i) {
    var n = (buf.length - i) % 3;
    if (n === 0) return buf.toString('base64', i);
    this.lastNeed = 3 - n;
    this.lastTotal = 3;
    if (n === 1) this.lastChar[0] = buf[buf.length - 1];
    else {
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
    }
    return buf.toString('base64', i, buf.length - n);
}
function base64End(buf) {
    var r = buf && buf.length ? this.write(buf) : '';
    if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
    return r;
}
// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
    return buf.toString(this.encoding);
}
function simpleEnd(buf) {
    return buf && buf.length ? this.write(buf) : '';
}

},{"safe-buffer":"7MRZs"}],"7MRZs":[function(require,module,exports) {
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */ /* eslint-disable node/no-deprecated-api */ var buffer = require('buffer');
var Buffer = buffer.Buffer;
// alternative to using Object.keys for old browsers
function copyProps(src, dst) {
    for(var key in src)dst[key] = src[key];
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) module.exports = buffer;
else {
    // Copy properties from require('buffer')
    copyProps(buffer, exports);
    exports.Buffer = SafeBuffer;
}
function SafeBuffer(arg, encodingOrOffset, length) {
    return Buffer(arg, encodingOrOffset, length);
}
SafeBuffer.prototype = Object.create(Buffer.prototype);
// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer);
SafeBuffer.from = function(arg, encodingOrOffset, length) {
    if (typeof arg === 'number') throw new TypeError('Argument must not be a number');
    return Buffer(arg, encodingOrOffset, length);
};
SafeBuffer.alloc = function(size, fill, encoding) {
    if (typeof size !== 'number') throw new TypeError('Argument must be a number');
    var buf = Buffer(size);
    if (fill !== undefined) {
        if (typeof encoding === 'string') buf.fill(fill, encoding);
        else buf.fill(fill);
    } else buf.fill(0);
    return buf;
};
SafeBuffer.allocUnsafe = function(size) {
    if (typeof size !== 'number') throw new TypeError('Argument must be a number');
    return Buffer(size);
};
SafeBuffer.allocUnsafeSlow = function(size) {
    if (typeof size !== 'number') throw new TypeError('Argument must be a number');
    return buffer.SlowBuffer(size);
};

},{"buffer":"hX7zZ"}],"bsio6":[function(require,module,exports) {
var process = require("process");
'use strict';
var _Object$setPrototypeO;
function _defineProperty(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
var finished = require('./end-of-stream');
var kLastResolve = Symbol('lastResolve');
var kLastReject = Symbol('lastReject');
var kError = Symbol('error');
var kEnded = Symbol('ended');
var kLastPromise = Symbol('lastPromise');
var kHandlePromise = Symbol('handlePromise');
var kStream = Symbol('stream');
function createIterResult(value, done) {
    return {
        value: value,
        done: done
    };
}
function readAndResolve(iter) {
    var resolve = iter[kLastResolve];
    if (resolve !== null) {
        var data = iter[kStream].read(); // we defer if data is null
        // we can be expecting either 'end' or
        // 'error'
        if (data !== null) {
            iter[kLastPromise] = null;
            iter[kLastResolve] = null;
            iter[kLastReject] = null;
            resolve(createIterResult(data, false));
        }
    }
}
function onReadable(iter) {
    // we wait for the next tick, because it might
    // emit an error with process.nextTick
    process.nextTick(readAndResolve, iter);
}
function wrapForNext(lastPromise, iter) {
    return function(resolve, reject) {
        lastPromise.then(function() {
            if (iter[kEnded]) {
                resolve(createIterResult(undefined, true));
                return;
            }
            iter[kHandlePromise](resolve, reject);
        }, reject);
    };
}
var AsyncIteratorPrototype = Object.getPrototypeOf(function() {
});
var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
    get stream () {
        return this[kStream];
    },
    next: function next() {
        var _this = this;
        // if we have detected an error in the meanwhile
        // reject straight away
        var error = this[kError];
        if (error !== null) return Promise.reject(error);
        if (this[kEnded]) return Promise.resolve(createIterResult(undefined, true));
        if (this[kStream].destroyed) // We need to defer via nextTick because if .destroy(err) is
        // called, the error will be emitted via nextTick, and
        // we cannot guarantee that there is no error lingering around
        // waiting to be emitted.
        return new Promise(function(resolve, reject) {
            process.nextTick(function() {
                if (_this[kError]) reject(_this[kError]);
                else resolve(createIterResult(undefined, true));
            });
        });
         // if we have multiple next() calls
        // we will wait for the previous Promise to finish
        // this logic is optimized to support for await loops,
        // where next() is only called once at a time
        var lastPromise = this[kLastPromise];
        var promise;
        if (lastPromise) promise = new Promise(wrapForNext(lastPromise, this));
        else {
            // fast path needed to support multiple this.push()
            // without triggering the next() queue
            var data = this[kStream].read();
            if (data !== null) return Promise.resolve(createIterResult(data, false));
            promise = new Promise(this[kHandlePromise]);
        }
        this[kLastPromise] = promise;
        return promise;
    }
}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function() {
    return this;
}), _defineProperty(_Object$setPrototypeO, "return", function _return() {
    var _this2 = this;
    // destroy(err, cb) is a private API
    // we can guarantee we have that here, because we control the
    // Readable class this is attached to
    return new Promise(function(resolve, reject) {
        _this2[kStream].destroy(null, function(err) {
            if (err) {
                reject(err);
                return;
            }
            resolve(createIterResult(undefined, true));
        });
    });
}), _Object$setPrototypeO), AsyncIteratorPrototype);
var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator1(stream) {
    var _Object$create;
    var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {
    }, _defineProperty(_Object$create, kStream, {
        value: stream,
        writable: true
    }), _defineProperty(_Object$create, kLastResolve, {
        value: null,
        writable: true
    }), _defineProperty(_Object$create, kLastReject, {
        value: null,
        writable: true
    }), _defineProperty(_Object$create, kError, {
        value: null,
        writable: true
    }), _defineProperty(_Object$create, kEnded, {
        value: stream._readableState.endEmitted,
        writable: true
    }), _defineProperty(_Object$create, kHandlePromise, {
        value: function value(resolve, reject) {
            var data = iterator[kStream].read();
            if (data) {
                iterator[kLastPromise] = null;
                iterator[kLastResolve] = null;
                iterator[kLastReject] = null;
                resolve(createIterResult(data, false));
            } else {
                iterator[kLastResolve] = resolve;
                iterator[kLastReject] = reject;
            }
        },
        writable: true
    }), _Object$create));
    iterator[kLastPromise] = null;
    finished(stream, function(err) {
        if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {
            var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise
            // returned by next() and store the error
            if (reject !== null) {
                iterator[kLastPromise] = null;
                iterator[kLastResolve] = null;
                iterator[kLastReject] = null;
                reject(err);
            }
            iterator[kError] = err;
            return;
        }
        var resolve = iterator[kLastResolve];
        if (resolve !== null) {
            iterator[kLastPromise] = null;
            iterator[kLastResolve] = null;
            iterator[kLastReject] = null;
            resolve(createIterResult(undefined, true));
        }
        iterator[kEnded] = true;
    });
    stream.on('readable', onReadable.bind(null, iterator));
    return iterator;
};
module.exports = createReadableStreamAsyncIterator;

},{"process":"5svFz","./end-of-stream":"jPDaQ"}],"jPDaQ":[function(require,module,exports) {
// Ported from https://github.com/mafintosh/end-of-stream with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';
var ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;
function once(callback) {
    var called = false;
    return function() {
        if (called) return;
        called = true;
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        callback.apply(this, args);
    };
}
function noop() {
}
function isRequest(stream) {
    return stream.setHeader && typeof stream.abort === 'function';
}
function eos(stream, opts, callback) {
    if (typeof opts === 'function') return eos(stream, null, opts);
    if (!opts) opts = {
    };
    callback = once(callback || noop);
    var readable = opts.readable || opts.readable !== false && stream.readable;
    var writable = opts.writable || opts.writable !== false && stream.writable;
    var onlegacyfinish = function onlegacyfinish1() {
        if (!stream.writable) onfinish();
    };
    var writableEnded = stream._writableState && stream._writableState.finished;
    var onfinish = function onfinish1() {
        writable = false;
        writableEnded = true;
        if (!readable) callback.call(stream);
    };
    var readableEnded = stream._readableState && stream._readableState.endEmitted;
    var onend = function onend1() {
        readable = false;
        readableEnded = true;
        if (!writable) callback.call(stream);
    };
    var onerror = function onerror1(err) {
        callback.call(stream, err);
    };
    var onclose = function onclose1() {
        var err;
        if (readable && !readableEnded) {
            if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
            return callback.call(stream, err);
        }
        if (writable && !writableEnded) {
            if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
            return callback.call(stream, err);
        }
    };
    var onrequest = function onrequest1() {
        stream.req.on('finish', onfinish);
    };
    if (isRequest(stream)) {
        stream.on('complete', onfinish);
        stream.on('abort', onclose);
        if (stream.req) onrequest();
        else stream.on('request', onrequest);
    } else if (writable && !stream._writableState) {
        // legacy streams
        stream.on('end', onlegacyfinish);
        stream.on('close', onlegacyfinish);
    }
    stream.on('end', onend);
    stream.on('finish', onfinish);
    if (opts.error !== false) stream.on('error', onerror);
    stream.on('close', onclose);
    return function() {
        stream.removeListener('complete', onfinish);
        stream.removeListener('abort', onclose);
        stream.removeListener('request', onrequest);
        if (stream.req) stream.req.removeListener('finish', onfinish);
        stream.removeListener('end', onlegacyfinish);
        stream.removeListener('close', onlegacyfinish);
        stream.removeListener('finish', onfinish);
        stream.removeListener('end', onend);
        stream.removeListener('error', onerror);
        stream.removeListener('close', onclose);
    };
}
module.exports = eos;

},{"../../../errors":"kn2bf"}],"f2tW9":[function(require,module,exports) {
module.exports = function() {
    throw new Error('Readable.from is not available in the browser');
};

},{}],"jgXsv":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.
'use strict';
module.exports = Transform;
var _require$codes = require('../errors').codes, ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED, ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK, ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING, ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;
var Duplex = require('./_stream_duplex');
require('inherits')(Transform, Duplex);
function afterTransform(er, data) {
    var ts = this._transformState;
    ts.transforming = false;
    var cb = ts.writecb;
    if (cb === null) return this.emit('error', new ERR_MULTIPLE_CALLBACK());
    ts.writechunk = null;
    ts.writecb = null;
    if (data != null) this.push(data);
    cb(er);
    var rs = this._readableState;
    rs.reading = false;
    if (rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
}
function Transform(options) {
    if (!(this instanceof Transform)) return new Transform(options);
    Duplex.call(this, options);
    this._transformState = {
        afterTransform: afterTransform.bind(this),
        needTransform: false,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: null
    }; // start out asking for a readable event once data is transformed.
    this._readableState.needReadable = true; // we have implemented the _read method, and done the other things
    // that Readable wants before the first _read call, so unset the
    // sync guard flag.
    this._readableState.sync = false;
    if (options) {
        if (typeof options.transform === 'function') this._transform = options.transform;
        if (typeof options.flush === 'function') this._flush = options.flush;
    } // When the writable side finishes, then flush out anything remaining.
    this.on('prefinish', prefinish);
}
function prefinish() {
    var _this = this;
    if (typeof this._flush === 'function' && !this._readableState.destroyed) this._flush(function(er, data) {
        done(_this, er, data);
    });
    else done(this, null, null);
}
Transform.prototype.push = function(chunk, encoding) {
    this._transformState.needTransform = false;
    return Duplex.prototype.push.call(this, chunk, encoding);
}; // This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function(chunk, encoding, cb) {
    cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
};
Transform.prototype._write = function(chunk, encoding, cb) {
    var ts = this._transformState;
    ts.writecb = cb;
    ts.writechunk = chunk;
    ts.writeencoding = encoding;
    if (!ts.transforming) {
        var rs = this._readableState;
        if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
    }
}; // Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function(n) {
    var ts = this._transformState;
    if (ts.writechunk !== null && !ts.transforming) {
        ts.transforming = true;
        this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
    } else // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
};
Transform.prototype._destroy = function(err, cb) {
    Duplex.prototype._destroy.call(this, err, function(err2) {
        cb(err2);
    });
};
function done(stream, er, data) {
    if (er) return stream.emit('error', er);
    if (data != null) stream.push(data); // TODO(BridgeAR): Write a test for these two error cases
    // if there's nothing in the write buffer, then that means
    // that nothing more will ever be provided
    if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();
    if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
    return stream.push(null);
}

},{"../errors":"kn2bf","./_stream_duplex":"kezQ9","inherits":"9Y2vC"}],"j9j29":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.
'use strict';
module.exports = PassThrough;
var Transform = require('./_stream_transform');
require('inherits')(PassThrough, Transform);
function PassThrough(options) {
    if (!(this instanceof PassThrough)) return new PassThrough(options);
    Transform.call(this, options);
}
PassThrough.prototype._transform = function(chunk, encoding, cb) {
    cb(null, chunk);
};

},{"./_stream_transform":"jgXsv","inherits":"9Y2vC"}],"cUUVr":[function(require,module,exports) {
// Ported from https://github.com/mafintosh/pump with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';
var eos;
function once(callback) {
    var called = false;
    return function() {
        if (called) return;
        called = true;
        callback.apply(void 0, arguments);
    };
}
var _require$codes = require('../../../errors').codes, ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS, ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;
function noop(err) {
    // Rethrow the error if it exists to avoid swallowing it
    if (err) throw err;
}
function isRequest(stream) {
    return stream.setHeader && typeof stream.abort === 'function';
}
function destroyer(stream, reading, writing, callback) {
    callback = once(callback);
    var closed = false;
    stream.on('close', function() {
        closed = true;
    });
    if (eos === undefined) eos = require('./end-of-stream');
    eos(stream, {
        readable: reading,
        writable: writing
    }, function(err) {
        if (err) return callback(err);
        closed = true;
        callback();
    });
    var destroyed = false;
    return function(err) {
        if (closed) return;
        if (destroyed) return;
        destroyed = true; // request.destroy just do .end - .abort is what we want
        if (isRequest(stream)) return stream.abort();
        if (typeof stream.destroy === 'function') return stream.destroy();
        callback(err || new ERR_STREAM_DESTROYED('pipe'));
    };
}
function call(fn) {
    fn();
}
function pipe(from, to) {
    return from.pipe(to);
}
function popCallback(streams) {
    if (!streams.length) return noop;
    if (typeof streams[streams.length - 1] !== 'function') return noop;
    return streams.pop();
}
function pipeline() {
    for(var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++)streams[_key] = arguments[_key];
    var callback = popCallback(streams);
    if (Array.isArray(streams[0])) streams = streams[0];
    if (streams.length < 2) throw new ERR_MISSING_ARGS('streams');
    var error;
    var destroys = streams.map(function(stream, i) {
        var reading = i < streams.length - 1;
        var writing = i > 0;
        return destroyer(stream, reading, writing, function(err) {
            if (!error) error = err;
            if (err) destroys.forEach(call);
            if (reading) return;
            destroys.forEach(call);
            callback(error);
        });
    });
    return streams.reduce(pipe);
}
module.exports = pipeline;

},{"../../../errors":"kn2bf","./end-of-stream":"jPDaQ"}],"fMPri":[function(require,module,exports) {
'use strict';
var inherits = require('inherits');
var Legacy = require('./legacy');
var Base = require('cipher-base');
var Buffer = require('safe-buffer').Buffer;
var md5 = require('create-hash/md5');
var RIPEMD160 = require('ripemd160');
var sha = require('sha.js');
var ZEROS = Buffer.alloc(128);
function Hmac(alg, key) {
    Base.call(this, 'digest');
    if (typeof key === 'string') key = Buffer.from(key);
    var blocksize = alg === 'sha512' || alg === 'sha384' ? 128 : 64;
    this._alg = alg;
    this._key = key;
    if (key.length > blocksize) {
        var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg);
        key = hash.update(key).digest();
    } else if (key.length < blocksize) key = Buffer.concat([
        key,
        ZEROS
    ], blocksize);
    var ipad = this._ipad = Buffer.allocUnsafe(blocksize);
    var opad = this._opad = Buffer.allocUnsafe(blocksize);
    for(var i = 0; i < blocksize; i++){
        ipad[i] = key[i] ^ 54;
        opad[i] = key[i] ^ 92;
    }
    this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg);
    this._hash.update(ipad);
}
inherits(Hmac, Base);
Hmac.prototype._update = function(data) {
    this._hash.update(data);
};
Hmac.prototype._final = function() {
    var h = this._hash.digest();
    var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg);
    return hash.update(this._opad).update(h).digest();
};
module.exports = function createHmac(alg, key) {
    alg = alg.toLowerCase();
    if (alg === 'rmd160' || alg === 'ripemd160') return new Hmac('rmd160', key);
    if (alg === 'md5') return new Legacy(md5, key);
    return new Hmac(alg, key);
};

},{"inherits":"9Y2vC","./legacy":"iV7YN","cipher-base":"btswB","safe-buffer":"i3ToV","create-hash/md5":"6mjIb","ripemd160":"c0r51","sha.js":"ln1EO"}],"iV7YN":[function(require,module,exports) {
'use strict';
var inherits = require('inherits');
var Buffer = require('safe-buffer').Buffer;
var Base = require('cipher-base');
var ZEROS = Buffer.alloc(128);
var blocksize = 64;
function Hmac(alg, key) {
    Base.call(this, 'digest');
    if (typeof key === 'string') key = Buffer.from(key);
    this._alg = alg;
    this._key = key;
    if (key.length > blocksize) key = alg(key);
    else if (key.length < blocksize) key = Buffer.concat([
        key,
        ZEROS
    ], blocksize);
    var ipad = this._ipad = Buffer.allocUnsafe(blocksize);
    var opad = this._opad = Buffer.allocUnsafe(blocksize);
    for(var i = 0; i < blocksize; i++){
        ipad[i] = key[i] ^ 54;
        opad[i] = key[i] ^ 92;
    }
    this._hash = [
        ipad
    ];
}
inherits(Hmac, Base);
Hmac.prototype._update = function(data) {
    this._hash.push(data);
};
Hmac.prototype._final = function() {
    var h = this._alg(Buffer.concat(this._hash));
    return this._alg(Buffer.concat([
        this._opad,
        h
    ]));
};
module.exports = Hmac;

},{"inherits":"9Y2vC","safe-buffer":"i3ToV","cipher-base":"btswB"}],"6mjIb":[function(require,module,exports) {
var MD5 = require('md5.js');
module.exports = function(buffer) {
    return new MD5().update(buffer).digest();
};

},{"md5.js":"2KF08"}],"gU9vY":[function(require,module,exports) {
module.exports = require('./browser/algorithms.json');

},{"./browser/algorithms.json":"5y2AN"}],"5y2AN":[function(require,module,exports) {
module.exports = JSON.parse("{\"sha224WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha224\",\"id\":\"302d300d06096086480165030402040500041c\"},\"RSA-SHA224\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha224\",\"id\":\"302d300d06096086480165030402040500041c\"},\"sha256WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha256\",\"id\":\"3031300d060960864801650304020105000420\"},\"RSA-SHA256\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha256\",\"id\":\"3031300d060960864801650304020105000420\"},\"sha384WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha384\",\"id\":\"3041300d060960864801650304020205000430\"},\"RSA-SHA384\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha384\",\"id\":\"3041300d060960864801650304020205000430\"},\"sha512WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha512\",\"id\":\"3051300d060960864801650304020305000440\"},\"RSA-SHA512\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha512\",\"id\":\"3051300d060960864801650304020305000440\"},\"RSA-SHA1\":{\"sign\":\"rsa\",\"hash\":\"sha1\",\"id\":\"3021300906052b0e03021a05000414\"},\"ecdsa-with-SHA1\":{\"sign\":\"ecdsa\",\"hash\":\"sha1\",\"id\":\"\"},\"sha256\":{\"sign\":\"ecdsa\",\"hash\":\"sha256\",\"id\":\"\"},\"sha224\":{\"sign\":\"ecdsa\",\"hash\":\"sha224\",\"id\":\"\"},\"sha384\":{\"sign\":\"ecdsa\",\"hash\":\"sha384\",\"id\":\"\"},\"sha512\":{\"sign\":\"ecdsa\",\"hash\":\"sha512\",\"id\":\"\"},\"DSA-SHA\":{\"sign\":\"dsa\",\"hash\":\"sha1\",\"id\":\"\"},\"DSA-SHA1\":{\"sign\":\"dsa\",\"hash\":\"sha1\",\"id\":\"\"},\"DSA\":{\"sign\":\"dsa\",\"hash\":\"sha1\",\"id\":\"\"},\"DSA-WITH-SHA224\":{\"sign\":\"dsa\",\"hash\":\"sha224\",\"id\":\"\"},\"DSA-SHA224\":{\"sign\":\"dsa\",\"hash\":\"sha224\",\"id\":\"\"},\"DSA-WITH-SHA256\":{\"sign\":\"dsa\",\"hash\":\"sha256\",\"id\":\"\"},\"DSA-SHA256\":{\"sign\":\"dsa\",\"hash\":\"sha256\",\"id\":\"\"},\"DSA-WITH-SHA384\":{\"sign\":\"dsa\",\"hash\":\"sha384\",\"id\":\"\"},\"DSA-SHA384\":{\"sign\":\"dsa\",\"hash\":\"sha384\",\"id\":\"\"},\"DSA-WITH-SHA512\":{\"sign\":\"dsa\",\"hash\":\"sha512\",\"id\":\"\"},\"DSA-SHA512\":{\"sign\":\"dsa\",\"hash\":\"sha512\",\"id\":\"\"},\"DSA-RIPEMD160\":{\"sign\":\"dsa\",\"hash\":\"rmd160\",\"id\":\"\"},\"ripemd160WithRSA\":{\"sign\":\"rsa\",\"hash\":\"rmd160\",\"id\":\"3021300906052b2403020105000414\"},\"RSA-RIPEMD160\":{\"sign\":\"rsa\",\"hash\":\"rmd160\",\"id\":\"3021300906052b2403020105000414\"},\"md5WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"md5\",\"id\":\"3020300c06082a864886f70d020505000410\"},\"RSA-MD5\":{\"sign\":\"rsa\",\"hash\":\"md5\",\"id\":\"3020300c06082a864886f70d020505000410\"}}");

},{}],"latLb":[function(require,module,exports) {
exports.pbkdf2 = require('./lib/async');
exports.pbkdf2Sync = require('./lib/sync');

},{"./lib/async":"TPdfn","./lib/sync":"hAEHZ"}],"TPdfn":[function(require,module,exports) {
var global = arguments[3];
var Buffer = require('safe-buffer').Buffer;
var checkParameters = require('./precondition');
var defaultEncoding = require('./default-encoding');
var sync = require('./sync');
var toBuffer = require('./to-buffer');
var ZERO_BUF;
var subtle = global.crypto && global.crypto.subtle;
var toBrowser = {
    sha: 'SHA-1',
    'sha-1': 'SHA-1',
    sha1: 'SHA-1',
    sha256: 'SHA-256',
    'sha-256': 'SHA-256',
    sha384: 'SHA-384',
    'sha-384': 'SHA-384',
    'sha-512': 'SHA-512',
    sha512: 'SHA-512'
};
var checks = [];
function checkNative(algo) {
    if (global.process && !global.process.browser) return Promise.resolve(false);
    if (!subtle || !subtle.importKey || !subtle.deriveBits) return Promise.resolve(false);
    if (checks[algo] !== undefined) return checks[algo];
    ZERO_BUF = ZERO_BUF || Buffer.alloc(8);
    var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo).then(function() {
        return true;
    }).catch(function() {
        return false;
    });
    checks[algo] = prom;
    return prom;
}
var nextTick;
function getNextTick() {
    if (nextTick) return nextTick;
    if (global.process && global.process.nextTick) nextTick = global.process.nextTick;
    else if (global.queueMicrotask) nextTick = global.queueMicrotask;
    else if (global.setImmediate) nextTick = global.setImmediate;
    else nextTick = global.setTimeout;
    return nextTick;
}
function browserPbkdf2(password, salt, iterations, length, algo) {
    return subtle.importKey('raw', password, {
        name: 'PBKDF2'
    }, false, [
        'deriveBits'
    ]).then(function(key) {
        return subtle.deriveBits({
            name: 'PBKDF2',
            salt: salt,
            iterations: iterations,
            hash: {
                name: algo
            }
        }, key, length << 3);
    }).then(function(res) {
        return Buffer.from(res);
    });
}
function resolvePromise(promise, callback) {
    promise.then(function(out) {
        getNextTick()(function() {
            callback(null, out);
        });
    }, function(e) {
        getNextTick()(function() {
            callback(e);
        });
    });
}
module.exports = function(password, salt, iterations, keylen, digest, callback) {
    if (typeof digest === 'function') {
        callback = digest;
        digest = undefined;
    }
    digest = digest || 'sha1';
    var algo = toBrowser[digest.toLowerCase()];
    if (!algo || typeof global.Promise !== 'function') {
        getNextTick()(function() {
            var out;
            try {
                out = sync(password, salt, iterations, keylen, digest);
            } catch (e) {
                return callback(e);
            }
            callback(null, out);
        });
        return;
    }
    checkParameters(iterations, keylen);
    password = toBuffer(password, defaultEncoding, 'Password');
    salt = toBuffer(salt, defaultEncoding, 'Salt');
    if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2');
    resolvePromise(checkNative(algo).then(function(resp) {
        if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo);
        return sync(password, salt, iterations, keylen, digest);
    }), callback);
};

},{"safe-buffer":"i3ToV","./precondition":"5dyPS","./default-encoding":"8yEm5","./sync":"hAEHZ","./to-buffer":"4Ohwr"}],"5dyPS":[function(require,module,exports) {
var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs
;
module.exports = function(iterations, keylen) {
    if (typeof iterations !== 'number') throw new TypeError('Iterations not a number');
    if (iterations < 0) throw new TypeError('Bad iterations');
    if (typeof keylen !== 'number') throw new TypeError('Key length not a number');
    if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) throw new TypeError('Bad key length');
};

},{}],"8yEm5":[function(require,module,exports) {
var process = require("process");
var global = arguments[3];
var defaultEncoding;
/* istanbul ignore next */ if (global.process && global.process.browser) defaultEncoding = 'utf-8';
else if (global.process && global.process.version) {
    var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10);
    defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary';
} else defaultEncoding = 'utf-8';
module.exports = defaultEncoding;

},{"process":"5svFz"}],"hAEHZ":[function(require,module,exports) {
var md5 = require('create-hash/md5');
var RIPEMD160 = require('ripemd160');
var sha = require('sha.js');
var Buffer = require('safe-buffer').Buffer;
var checkParameters = require('./precondition');
var defaultEncoding = require('./default-encoding');
var toBuffer = require('./to-buffer');
var ZEROS = Buffer.alloc(128);
var sizes = {
    md5: 16,
    sha1: 20,
    sha224: 28,
    sha256: 32,
    sha384: 48,
    sha512: 64,
    rmd160: 20,
    ripemd160: 20
};
function Hmac(alg, key, saltLen) {
    var hash = getDigest(alg);
    var blocksize = alg === 'sha512' || alg === 'sha384' ? 128 : 64;
    if (key.length > blocksize) key = hash(key);
    else if (key.length < blocksize) key = Buffer.concat([
        key,
        ZEROS
    ], blocksize);
    var ipad = Buffer.allocUnsafe(blocksize + sizes[alg]);
    var opad = Buffer.allocUnsafe(blocksize + sizes[alg]);
    for(var i = 0; i < blocksize; i++){
        ipad[i] = key[i] ^ 54;
        opad[i] = key[i] ^ 92;
    }
    var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4);
    ipad.copy(ipad1, 0, 0, blocksize);
    this.ipad1 = ipad1;
    this.ipad2 = ipad;
    this.opad = opad;
    this.alg = alg;
    this.blocksize = blocksize;
    this.hash = hash;
    this.size = sizes[alg];
}
Hmac.prototype.run = function(data, ipad) {
    data.copy(ipad, this.blocksize);
    var h = this.hash(ipad);
    h.copy(this.opad, this.blocksize);
    return this.hash(this.opad);
};
function getDigest(alg) {
    function shaFunc(data) {
        return sha(alg).update(data).digest();
    }
    function rmd160Func(data) {
        return new RIPEMD160().update(data).digest();
    }
    if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func;
    if (alg === 'md5') return md5;
    return shaFunc;
}
function pbkdf2(password, salt, iterations, keylen, digest) {
    checkParameters(iterations, keylen);
    password = toBuffer(password, defaultEncoding, 'Password');
    salt = toBuffer(salt, defaultEncoding, 'Salt');
    digest = digest || 'sha1';
    var hmac = new Hmac(digest, password, salt.length);
    var DK = Buffer.allocUnsafe(keylen);
    var block1 = Buffer.allocUnsafe(salt.length + 4);
    salt.copy(block1, 0, 0, salt.length);
    var destPos = 0;
    var hLen = sizes[digest];
    var l = Math.ceil(keylen / hLen);
    for(var i = 1; i <= l; i++){
        block1.writeUInt32BE(i, salt.length);
        var T = hmac.run(block1, hmac.ipad1);
        var U = T;
        for(var j = 1; j < iterations; j++){
            U = hmac.run(U, hmac.ipad2);
            for(var k = 0; k < hLen; k++)T[k] ^= U[k];
        }
        T.copy(DK, destPos);
        destPos += hLen;
    }
    return DK;
}
module.exports = pbkdf2;

},{"create-hash/md5":"6mjIb","ripemd160":"c0r51","sha.js":"ln1EO","safe-buffer":"i3ToV","./precondition":"5dyPS","./default-encoding":"8yEm5","./to-buffer":"4Ohwr"}],"4Ohwr":[function(require,module,exports) {
var Buffer = require('safe-buffer').Buffer;
module.exports = function(thing, encoding, name) {
    if (Buffer.isBuffer(thing)) return thing;
    else if (typeof thing === 'string') return Buffer.from(thing, encoding);
    else if (ArrayBuffer.isView(thing)) return Buffer.from(thing.buffer);
    else throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView');
};

},{"safe-buffer":"i3ToV"}],"hrjdq":[function(require,module,exports) {
var DES = require('browserify-des');
var aes = require('browserify-aes/browser');
var aesModes = require('browserify-aes/modes');
var desModes = require('browserify-des/modes');
var ebtk = require('evp_bytestokey');
function createCipher(suite, password) {
    suite = suite.toLowerCase();
    var keyLen, ivLen;
    if (aesModes[suite]) {
        keyLen = aesModes[suite].key;
        ivLen = aesModes[suite].iv;
    } else if (desModes[suite]) {
        keyLen = desModes[suite].key * 8;
        ivLen = desModes[suite].iv;
    } else throw new TypeError('invalid suite type');
    var keys = ebtk(password, false, keyLen, ivLen);
    return createCipheriv(suite, keys.key, keys.iv);
}
function createDecipher(suite, password) {
    suite = suite.toLowerCase();
    var keyLen, ivLen;
    if (aesModes[suite]) {
        keyLen = aesModes[suite].key;
        ivLen = aesModes[suite].iv;
    } else if (desModes[suite]) {
        keyLen = desModes[suite].key * 8;
        ivLen = desModes[suite].iv;
    } else throw new TypeError('invalid suite type');
    var keys = ebtk(password, false, keyLen, ivLen);
    return createDecipheriv(suite, keys.key, keys.iv);
}
function createCipheriv(suite, key, iv) {
    suite = suite.toLowerCase();
    if (aesModes[suite]) return aes.createCipheriv(suite, key, iv);
    if (desModes[suite]) return new DES({
        key: key,
        iv: iv,
        mode: suite
    });
    throw new TypeError('invalid suite type');
}
function createDecipheriv(suite, key, iv) {
    suite = suite.toLowerCase();
    if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv);
    if (desModes[suite]) return new DES({
        key: key,
        iv: iv,
        mode: suite,
        decrypt: true
    });
    throw new TypeError('invalid suite type');
}
function getCiphers() {
    return Object.keys(desModes).concat(aes.getCiphers());
}
exports.createCipher = exports.Cipher = createCipher;
exports.createCipheriv = exports.Cipheriv = createCipheriv;
exports.createDecipher = exports.Decipher = createDecipher;
exports.createDecipheriv = exports.Decipheriv = createDecipheriv;
exports.listCiphers = exports.getCiphers = getCiphers;

},{"browserify-des":"F5Bje","browserify-aes/browser":"bLzB9","browserify-aes/modes":"h8Zil","browserify-des/modes":"gjp7q","evp_bytestokey":"40fSI"}],"F5Bje":[function(require,module,exports) {
var CipherBase = require('cipher-base');
var des = require('des.js');
var inherits = require('inherits');
var Buffer = require('safe-buffer').Buffer;
var modes = {
    'des-ede3-cbc': des.CBC.instantiate(des.EDE),
    'des-ede3': des.EDE,
    'des-ede-cbc': des.CBC.instantiate(des.EDE),
    'des-ede': des.EDE,
    'des-cbc': des.CBC.instantiate(des.DES),
    'des-ecb': des.DES
};
modes.des = modes['des-cbc'];
modes.des3 = modes['des-ede3-cbc'];
module.exports = DES;
inherits(DES, CipherBase);
function DES(opts) {
    CipherBase.call(this);
    var modeName = opts.mode.toLowerCase();
    var mode = modes[modeName];
    var type;
    if (opts.decrypt) type = 'decrypt';
    else type = 'encrypt';
    var key = opts.key;
    if (!Buffer.isBuffer(key)) key = Buffer.from(key);
    if (modeName === 'des-ede' || modeName === 'des-ede-cbc') key = Buffer.concat([
        key,
        key.slice(0, 8)
    ]);
    var iv = opts.iv;
    if (!Buffer.isBuffer(iv)) iv = Buffer.from(iv);
    this._des = mode.create({
        key: key,
        iv: iv,
        type: type
    });
}
DES.prototype._update = function(data) {
    return Buffer.from(this._des.update(data));
};
DES.prototype._final = function() {
    return Buffer.from(this._des.final());
};

},{"cipher-base":"btswB","des.js":"2yPVK","inherits":"9Y2vC","safe-buffer":"i3ToV"}],"2yPVK":[function(require,module,exports) {
'use strict';
exports.utils = require('./des/utils');
exports.Cipher = require('./des/cipher');
exports.DES = require('./des/des');
exports.CBC = require('./des/cbc');
exports.EDE = require('./des/ede');

},{"./des/utils":"5cq7W","./des/cipher":"4xcxS","./des/des":"iuKfZ","./des/cbc":"k0RXZ","./des/ede":"dhltb"}],"5cq7W":[function(require,module,exports) {
'use strict';
exports.readUInt32BE = function readUInt32BE(bytes, off) {
    var res = bytes[0 + off] << 24 | bytes[1 + off] << 16 | bytes[2 + off] << 8 | bytes[3 + off];
    return res >>> 0;
};
exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
    bytes[0 + off] = value >>> 24;
    bytes[1 + off] = value >>> 16 & 255;
    bytes[2 + off] = value >>> 8 & 255;
    bytes[3 + off] = value & 255;
};
exports.ip = function ip(inL, inR, out, off) {
    var outL = 0;
    var outR = 0;
    for(var i = 6; i >= 0; i -= 2){
        for(var j = 0; j <= 24; j += 8){
            outL <<= 1;
            outL |= inR >>> j + i & 1;
        }
        for(var j = 0; j <= 24; j += 8){
            outL <<= 1;
            outL |= inL >>> j + i & 1;
        }
    }
    for(var i = 6; i >= 0; i -= 2){
        for(var j = 1; j <= 25; j += 8){
            outR <<= 1;
            outR |= inR >>> j + i & 1;
        }
        for(var j = 1; j <= 25; j += 8){
            outR <<= 1;
            outR |= inL >>> j + i & 1;
        }
    }
    out[off + 0] = outL >>> 0;
    out[off + 1] = outR >>> 0;
};
exports.rip = function rip(inL, inR, out, off) {
    var outL = 0;
    var outR = 0;
    for(var i = 0; i < 4; i++)for(var j = 24; j >= 0; j -= 8){
        outL <<= 1;
        outL |= inR >>> j + i & 1;
        outL <<= 1;
        outL |= inL >>> j + i & 1;
    }
    for(var i = 4; i < 8; i++)for(var j = 24; j >= 0; j -= 8){
        outR <<= 1;
        outR |= inR >>> j + i & 1;
        outR <<= 1;
        outR |= inL >>> j + i & 1;
    }
    out[off + 0] = outL >>> 0;
    out[off + 1] = outR >>> 0;
};
exports.pc1 = function pc1(inL, inR, out, off) {
    var outL = 0;
    var outR = 0;
    // 7, 15, 23, 31, 39, 47, 55, 63
    // 6, 14, 22, 30, 39, 47, 55, 63
    // 5, 13, 21, 29, 39, 47, 55, 63
    // 4, 12, 20, 28
    for(var i = 7; i >= 5; i--){
        for(var j = 0; j <= 24; j += 8){
            outL <<= 1;
            outL |= inR >> j + i & 1;
        }
        for(var j = 0; j <= 24; j += 8){
            outL <<= 1;
            outL |= inL >> j + i & 1;
        }
    }
    for(var j = 0; j <= 24; j += 8){
        outL <<= 1;
        outL |= inR >> j + i & 1;
    }
    // 1, 9, 17, 25, 33, 41, 49, 57
    // 2, 10, 18, 26, 34, 42, 50, 58
    // 3, 11, 19, 27, 35, 43, 51, 59
    // 36, 44, 52, 60
    for(var i = 1; i <= 3; i++){
        for(var j = 0; j <= 24; j += 8){
            outR <<= 1;
            outR |= inR >> j + i & 1;
        }
        for(var j = 0; j <= 24; j += 8){
            outR <<= 1;
            outR |= inL >> j + i & 1;
        }
    }
    for(var j = 0; j <= 24; j += 8){
        outR <<= 1;
        outR |= inL >> j + i & 1;
    }
    out[off + 0] = outL >>> 0;
    out[off + 1] = outR >>> 0;
};
exports.r28shl = function r28shl(num, shift) {
    return num << shift & 268435455 | num >>> 28 - shift;
};
var pc2table = [
    // inL => outL
    14,
    11,
    17,
    4,
    27,
    23,
    25,
    0,
    13,
    22,
    7,
    18,
    5,
    9,
    16,
    24,
    2,
    20,
    12,
    21,
    1,
    8,
    15,
    26,
    // inR => outR
    15,
    4,
    25,
    19,
    9,
    1,
    26,
    16,
    5,
    11,
    23,
    8,
    12,
    7,
    17,
    0,
    22,
    3,
    10,
    14,
    6,
    20,
    27,
    24
];
exports.pc2 = function pc2(inL, inR, out, off) {
    var outL = 0;
    var outR = 0;
    var len = pc2table.length >>> 1;
    for(var i = 0; i < len; i++){
        outL <<= 1;
        outL |= inL >>> pc2table[i] & 1;
    }
    for(var i = len; i < pc2table.length; i++){
        outR <<= 1;
        outR |= inR >>> pc2table[i] & 1;
    }
    out[off + 0] = outL >>> 0;
    out[off + 1] = outR >>> 0;
};
exports.expand = function expand(r, out, off) {
    var outL = 0;
    var outR = 0;
    outL = (r & 1) << 5 | r >>> 27;
    for(var i = 23; i >= 15; i -= 4){
        outL <<= 6;
        outL |= r >>> i & 63;
    }
    for(var i = 11; i >= 3; i -= 4){
        outR |= r >>> i & 63;
        outR <<= 6;
    }
    outR |= (r & 31) << 1 | r >>> 31;
    out[off + 0] = outL >>> 0;
    out[off + 1] = outR >>> 0;
};
var sTable = [
    14,
    0,
    4,
    15,
    13,
    7,
    1,
    4,
    2,
    14,
    15,
    2,
    11,
    13,
    8,
    1,
    3,
    10,
    10,
    6,
    6,
    12,
    12,
    11,
    5,
    9,
    9,
    5,
    0,
    3,
    7,
    8,
    4,
    15,
    1,
    12,
    14,
    8,
    8,
    2,
    13,
    4,
    6,
    9,
    2,
    1,
    11,
    7,
    15,
    5,
    12,
    11,
    9,
    3,
    7,
    14,
    3,
    10,
    10,
    0,
    5,
    6,
    0,
    13,
    15,
    3,
    1,
    13,
    8,
    4,
    14,
    7,
    6,
    15,
    11,
    2,
    3,
    8,
    4,
    14,
    9,
    12,
    7,
    0,
    2,
    1,
    13,
    10,
    12,
    6,
    0,
    9,
    5,
    11,
    10,
    5,
    0,
    13,
    14,
    8,
    7,
    10,
    11,
    1,
    10,
    3,
    4,
    15,
    13,
    4,
    1,
    2,
    5,
    11,
    8,
    6,
    12,
    7,
    6,
    12,
    9,
    0,
    3,
    5,
    2,
    14,
    15,
    9,
    10,
    13,
    0,
    7,
    9,
    0,
    14,
    9,
    6,
    3,
    3,
    4,
    15,
    6,
    5,
    10,
    1,
    2,
    13,
    8,
    12,
    5,
    7,
    14,
    11,
    12,
    4,
    11,
    2,
    15,
    8,
    1,
    13,
    1,
    6,
    10,
    4,
    13,
    9,
    0,
    8,
    6,
    15,
    9,
    3,
    8,
    0,
    7,
    11,
    4,
    1,
    15,
    2,
    14,
    12,
    3,
    5,
    11,
    10,
    5,
    14,
    2,
    7,
    12,
    7,
    13,
    13,
    8,
    14,
    11,
    3,
    5,
    0,
    6,
    6,
    15,
    9,
    0,
    10,
    3,
    1,
    4,
    2,
    7,
    8,
    2,
    5,
    12,
    11,
    1,
    12,
    10,
    4,
    14,
    15,
    9,
    10,
    3,
    6,
    15,
    9,
    0,
    0,
    6,
    12,
    10,
    11,
    1,
    7,
    13,
    13,
    8,
    15,
    9,
    1,
    4,
    3,
    5,
    14,
    11,
    5,
    12,
    2,
    7,
    8,
    2,
    4,
    14,
    2,
    14,
    12,
    11,
    4,
    2,
    1,
    12,
    7,
    4,
    10,
    7,
    11,
    13,
    6,
    1,
    8,
    5,
    5,
    0,
    3,
    15,
    15,
    10,
    13,
    3,
    0,
    9,
    14,
    8,
    9,
    6,
    4,
    11,
    2,
    8,
    1,
    12,
    11,
    7,
    10,
    1,
    13,
    14,
    7,
    2,
    8,
    13,
    15,
    6,
    9,
    15,
    12,
    0,
    5,
    9,
    6,
    10,
    3,
    4,
    0,
    5,
    14,
    3,
    12,
    10,
    1,
    15,
    10,
    4,
    15,
    2,
    9,
    7,
    2,
    12,
    6,
    9,
    8,
    5,
    0,
    6,
    13,
    1,
    3,
    13,
    4,
    14,
    14,
    0,
    7,
    11,
    5,
    3,
    11,
    8,
    9,
    4,
    14,
    3,
    15,
    2,
    5,
    12,
    2,
    9,
    8,
    5,
    12,
    15,
    3,
    10,
    7,
    11,
    0,
    14,
    4,
    1,
    10,
    7,
    1,
    6,
    13,
    0,
    11,
    8,
    6,
    13,
    4,
    13,
    11,
    0,
    2,
    11,
    14,
    7,
    15,
    4,
    0,
    9,
    8,
    1,
    13,
    10,
    3,
    14,
    12,
    3,
    9,
    5,
    7,
    12,
    5,
    2,
    10,
    15,
    6,
    8,
    1,
    6,
    1,
    6,
    4,
    11,
    11,
    13,
    13,
    8,
    12,
    1,
    3,
    4,
    7,
    10,
    14,
    7,
    10,
    9,
    15,
    5,
    6,
    0,
    8,
    15,
    0,
    14,
    5,
    2,
    9,
    3,
    2,
    12,
    13,
    1,
    2,
    15,
    8,
    13,
    4,
    8,
    6,
    10,
    15,
    3,
    11,
    7,
    1,
    4,
    10,
    12,
    9,
    5,
    3,
    6,
    14,
    11,
    5,
    0,
    0,
    14,
    12,
    9,
    7,
    2,
    7,
    2,
    11,
    1,
    4,
    14,
    1,
    7,
    9,
    4,
    12,
    10,
    14,
    8,
    2,
    13,
    0,
    15,
    6,
    12,
    10,
    9,
    13,
    0,
    15,
    3,
    3,
    5,
    5,
    6,
    8,
    11
];
exports.substitute = function substitute(inL, inR) {
    var out = 0;
    for(var i = 0; i < 4; i++){
        var b = inL >>> 18 - i * 6 & 63;
        var sb = sTable[i * 64 + b];
        out <<= 4;
        out |= sb;
    }
    for(var i = 0; i < 4; i++){
        var b = inR >>> 18 - i * 6 & 63;
        var sb = sTable[256 + i * 64 + b];
        out <<= 4;
        out |= sb;
    }
    return out >>> 0;
};
var permuteTable = [
    16,
    25,
    12,
    11,
    3,
    20,
    4,
    15,
    31,
    17,
    9,
    6,
    27,
    14,
    1,
    22,
    30,
    24,
    8,
    18,
    0,
    5,
    29,
    23,
    13,
    19,
    2,
    26,
    10,
    21,
    28,
    7
];
exports.permute = function permute(num) {
    var out = 0;
    for(var i = 0; i < permuteTable.length; i++){
        out <<= 1;
        out |= num >>> permuteTable[i] & 1;
    }
    return out >>> 0;
};
exports.padSplit = function padSplit(num, size, group) {
    var str = num.toString(2);
    while(str.length < size)str = '0' + str;
    var out = [];
    for(var i = 0; i < size; i += group)out.push(str.slice(i, i + group));
    return out.join(' ');
};

},{}],"4xcxS":[function(require,module,exports) {
'use strict';
var assert = require('minimalistic-assert');
function Cipher(options) {
    this.options = options;
    this.type = this.options.type;
    this.blockSize = 8;
    this._init();
    this.buffer = new Array(this.blockSize);
    this.bufferOff = 0;
}
module.exports = Cipher;
Cipher.prototype._init = function _init() {
// Might be overrided
};
Cipher.prototype.update = function update(data) {
    if (data.length === 0) return [];
    if (this.type === 'decrypt') return this._updateDecrypt(data);
    else return this._updateEncrypt(data);
};
Cipher.prototype._buffer = function _buffer(data, off) {
    // Append data to buffer
    var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
    for(var i = 0; i < min; i++)this.buffer[this.bufferOff + i] = data[off + i];
    this.bufferOff += min;
    // Shift next
    return min;
};
Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
    this._update(this.buffer, 0, out, off);
    this.bufferOff = 0;
    return this.blockSize;
};
Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
    var inputOff = 0;
    var outputOff = 0;
    var count = (this.bufferOff + data.length) / this.blockSize | 0;
    var out = new Array(count * this.blockSize);
    if (this.bufferOff !== 0) {
        inputOff += this._buffer(data, inputOff);
        if (this.bufferOff === this.buffer.length) outputOff += this._flushBuffer(out, outputOff);
    }
    // Write blocks
    var max = data.length - (data.length - inputOff) % this.blockSize;
    for(; inputOff < max; inputOff += this.blockSize){
        this._update(data, inputOff, out, outputOff);
        outputOff += this.blockSize;
    }
    // Queue rest
    for(; inputOff < data.length; inputOff++, this.bufferOff++)this.buffer[this.bufferOff] = data[inputOff];
    return out;
};
Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
    var inputOff = 0;
    var outputOff = 0;
    var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
    var out = new Array(count * this.blockSize);
    // TODO(indutny): optimize it, this is far from optimal
    for(; count > 0; count--){
        inputOff += this._buffer(data, inputOff);
        outputOff += this._flushBuffer(out, outputOff);
    }
    // Buffer rest of the input
    inputOff += this._buffer(data, inputOff);
    return out;
};
Cipher.prototype.final = function final(buffer) {
    var first;
    if (buffer) first = this.update(buffer);
    var last;
    if (this.type === 'encrypt') last = this._finalEncrypt();
    else last = this._finalDecrypt();
    if (first) return first.concat(last);
    else return last;
};
Cipher.prototype._pad = function _pad(buffer, off) {
    if (off === 0) return false;
    while(off < buffer.length)buffer[off++] = 0;
    return true;
};
Cipher.prototype._finalEncrypt = function _finalEncrypt() {
    if (!this._pad(this.buffer, this.bufferOff)) return [];
    var out = new Array(this.blockSize);
    this._update(this.buffer, 0, out, 0);
    return out;
};
Cipher.prototype._unpad = function _unpad(buffer) {
    return buffer;
};
Cipher.prototype._finalDecrypt = function _finalDecrypt() {
    assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');
    var out = new Array(this.blockSize);
    this._flushBuffer(out, 0);
    return this._unpad(out);
};

},{"minimalistic-assert":"fS90O"}],"fS90O":[function(require,module,exports) {
module.exports = assert;
function assert(val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
}
assert.equal = function assertEqual(l, r, msg) {
    if (l != r) throw new Error(msg || 'Assertion failed: ' + l + ' != ' + r);
};

},{}],"iuKfZ":[function(require,module,exports) {
'use strict';
var assert = require('minimalistic-assert');
var inherits = require('inherits');
var utils = require('./utils');
var Cipher = require('./cipher');
function DESState() {
    this.tmp = new Array(2);
    this.keys = null;
}
function DES(options) {
    Cipher.call(this, options);
    var state = new DESState();
    this._desState = state;
    this.deriveKeys(state, options.key);
}
inherits(DES, Cipher);
module.exports = DES;
DES.create = function create(options) {
    return new DES(options);
};
var shiftTable = [
    1,
    1,
    2,
    2,
    2,
    2,
    2,
    2,
    1,
    2,
    2,
    2,
    2,
    2,
    2,
    1
];
DES.prototype.deriveKeys = function deriveKeys(state, key) {
    state.keys = new Array(32);
    assert.equal(key.length, this.blockSize, 'Invalid key length');
    var kL = utils.readUInt32BE(key, 0);
    var kR = utils.readUInt32BE(key, 4);
    utils.pc1(kL, kR, state.tmp, 0);
    kL = state.tmp[0];
    kR = state.tmp[1];
    for(var i = 0; i < state.keys.length; i += 2){
        var shift = shiftTable[i >>> 1];
        kL = utils.r28shl(kL, shift);
        kR = utils.r28shl(kR, shift);
        utils.pc2(kL, kR, state.keys, i);
    }
};
DES.prototype._update = function _update(inp, inOff, out, outOff) {
    var state = this._desState;
    var l = utils.readUInt32BE(inp, inOff);
    var r = utils.readUInt32BE(inp, inOff + 4);
    // Initial Permutation
    utils.ip(l, r, state.tmp, 0);
    l = state.tmp[0];
    r = state.tmp[1];
    if (this.type === 'encrypt') this._encrypt(state, l, r, state.tmp, 0);
    else this._decrypt(state, l, r, state.tmp, 0);
    l = state.tmp[0];
    r = state.tmp[1];
    utils.writeUInt32BE(out, l, outOff);
    utils.writeUInt32BE(out, r, outOff + 4);
};
DES.prototype._pad = function _pad(buffer, off) {
    var value = buffer.length - off;
    for(var i = off; i < buffer.length; i++)buffer[i] = value;
    return true;
};
DES.prototype._unpad = function _unpad(buffer) {
    var pad = buffer[buffer.length - 1];
    for(var i = buffer.length - pad; i < buffer.length; i++)assert.equal(buffer[i], pad);
    return buffer.slice(0, buffer.length - pad);
};
DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
    var l = lStart;
    var r = rStart;
    // Apply f() x16 times
    for(var i = 0; i < state.keys.length; i += 2){
        var keyL = state.keys[i];
        var keyR = state.keys[i + 1];
        // f(r, k)
        utils.expand(r, state.tmp, 0);
        keyL ^= state.tmp[0];
        keyR ^= state.tmp[1];
        var s = utils.substitute(keyL, keyR);
        var f = utils.permute(s);
        var t = r;
        r = (l ^ f) >>> 0;
        l = t;
    }
    // Reverse Initial Permutation
    utils.rip(r, l, out, off);
};
DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
    var l = rStart;
    var r = lStart;
    // Apply f() x16 times
    for(var i = state.keys.length - 2; i >= 0; i -= 2){
        var keyL = state.keys[i];
        var keyR = state.keys[i + 1];
        // f(r, k)
        utils.expand(l, state.tmp, 0);
        keyL ^= state.tmp[0];
        keyR ^= state.tmp[1];
        var s = utils.substitute(keyL, keyR);
        var f = utils.permute(s);
        var t = l;
        l = (r ^ f) >>> 0;
        r = t;
    }
    // Reverse Initial Permutation
    utils.rip(l, r, out, off);
};

},{"minimalistic-assert":"fS90O","inherits":"9Y2vC","./utils":"5cq7W","./cipher":"4xcxS"}],"k0RXZ":[function(require,module,exports) {
'use strict';
var assert = require('minimalistic-assert');
var inherits = require('inherits');
var proto = {
};
function CBCState(iv) {
    assert.equal(iv.length, 8, 'Invalid IV length');
    this.iv = new Array(8);
    for(var i = 0; i < this.iv.length; i++)this.iv[i] = iv[i];
}
function instantiate(Base) {
    function CBC(options) {
        Base.call(this, options);
        this._cbcInit();
    }
    inherits(CBC, Base);
    var keys = Object.keys(proto);
    for(var i = 0; i < keys.length; i++){
        var key = keys[i];
        CBC.prototype[key] = proto[key];
    }
    CBC.create = function create(options) {
        return new CBC(options);
    };
    return CBC;
}
exports.instantiate = instantiate;
proto._cbcInit = function _cbcInit() {
    var state = new CBCState(this.options.iv);
    this._cbcState = state;
};
proto._update = function _update(inp, inOff, out, outOff) {
    var state = this._cbcState;
    var superProto = this.constructor.super_.prototype;
    var iv = state.iv;
    if (this.type === 'encrypt') {
        for(var i = 0; i < this.blockSize; i++)iv[i] ^= inp[inOff + i];
        superProto._update.call(this, iv, 0, out, outOff);
        for(var i = 0; i < this.blockSize; i++)iv[i] = out[outOff + i];
    } else {
        superProto._update.call(this, inp, inOff, out, outOff);
        for(var i = 0; i < this.blockSize; i++)out[outOff + i] ^= iv[i];
        for(var i = 0; i < this.blockSize; i++)iv[i] = inp[inOff + i];
    }
};

},{"minimalistic-assert":"fS90O","inherits":"9Y2vC"}],"dhltb":[function(require,module,exports) {
'use strict';
var assert = require('minimalistic-assert');
var inherits = require('inherits');
var Cipher = require('./cipher');
var DES = require('./des');
function EDEState(type, key) {
    assert.equal(key.length, 24, 'Invalid key length');
    var k1 = key.slice(0, 8);
    var k2 = key.slice(8, 16);
    var k3 = key.slice(16, 24);
    if (type === 'encrypt') this.ciphers = [
        DES.create({
            type: 'encrypt',
            key: k1
        }),
        DES.create({
            type: 'decrypt',
            key: k2
        }),
        DES.create({
            type: 'encrypt',
            key: k3
        })
    ];
    else this.ciphers = [
        DES.create({
            type: 'decrypt',
            key: k3
        }),
        DES.create({
            type: 'encrypt',
            key: k2
        }),
        DES.create({
            type: 'decrypt',
            key: k1
        })
    ];
}
function EDE(options) {
    Cipher.call(this, options);
    var state = new EDEState(this.type, this.options.key);
    this._edeState = state;
}
inherits(EDE, Cipher);
module.exports = EDE;
EDE.create = function create(options) {
    return new EDE(options);
};
EDE.prototype._update = function _update(inp, inOff, out, outOff) {
    var state = this._edeState;
    state.ciphers[0]._update(inp, inOff, out, outOff);
    state.ciphers[1]._update(out, outOff, out, outOff);
    state.ciphers[2]._update(out, outOff, out, outOff);
};
EDE.prototype._pad = DES.prototype._pad;
EDE.prototype._unpad = DES.prototype._unpad;

},{"minimalistic-assert":"fS90O","inherits":"9Y2vC","./cipher":"4xcxS","./des":"iuKfZ"}],"bLzB9":[function(require,module,exports) {
var ciphers = require('./encrypter');
var deciphers = require('./decrypter');
var modes = require('./modes/list.json');
function getCiphers() {
    return Object.keys(modes);
}
exports.createCipher = exports.Cipher = ciphers.createCipher;
exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv;
exports.createDecipher = exports.Decipher = deciphers.createDecipher;
exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv;
exports.listCiphers = exports.getCiphers = getCiphers;

},{"./encrypter":"kZMpq","./decrypter":"feZ74","./modes/list.json":"bNLo5"}],"kZMpq":[function(require,module,exports) {
var MODES = require('./modes');
var AuthCipher = require('./authCipher');
var Buffer = require('safe-buffer').Buffer;
var StreamCipher = require('./streamCipher');
var Transform = require('cipher-base');
var aes = require('./aes');
var ebtk = require('evp_bytestokey');
var inherits = require('inherits');
function Cipher(mode, key, iv) {
    Transform.call(this);
    this._cache = new Splitter();
    this._cipher = new aes.AES(key);
    this._prev = Buffer.from(iv);
    this._mode = mode;
    this._autopadding = true;
}
inherits(Cipher, Transform);
Cipher.prototype._update = function(data) {
    this._cache.add(data);
    var chunk;
    var thing;
    var out = [];
    while(chunk = this._cache.get()){
        thing = this._mode.encrypt(this, chunk);
        out.push(thing);
    }
    return Buffer.concat(out);
};
var PADDING = Buffer.alloc(16, 16);
Cipher.prototype._final = function() {
    var chunk = this._cache.flush();
    if (this._autopadding) {
        chunk = this._mode.encrypt(this, chunk);
        this._cipher.scrub();
        return chunk;
    }
    if (!chunk.equals(PADDING)) {
        this._cipher.scrub();
        throw new Error('data not multiple of block length');
    }
};
Cipher.prototype.setAutoPadding = function(setTo) {
    this._autopadding = !!setTo;
    return this;
};
function Splitter() {
    this.cache = Buffer.allocUnsafe(0);
}
Splitter.prototype.add = function(data) {
    this.cache = Buffer.concat([
        this.cache,
        data
    ]);
};
Splitter.prototype.get = function() {
    if (this.cache.length > 15) {
        var out = this.cache.slice(0, 16);
        this.cache = this.cache.slice(16);
        return out;
    }
    return null;
};
Splitter.prototype.flush = function() {
    var len = 16 - this.cache.length;
    var padBuff = Buffer.allocUnsafe(len);
    var i = -1;
    while((++i) < len)padBuff.writeUInt8(len, i);
    return Buffer.concat([
        this.cache,
        padBuff
    ]);
};
function createCipheriv(suite, password, iv) {
    var config = MODES[suite.toLowerCase()];
    if (!config) throw new TypeError('invalid suite type');
    if (typeof password === 'string') password = Buffer.from(password);
    if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length);
    if (typeof iv === 'string') iv = Buffer.from(iv);
    if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length);
    if (config.type === 'stream') return new StreamCipher(config.module, password, iv);
    else if (config.type === 'auth') return new AuthCipher(config.module, password, iv);
    return new Cipher(config.module, password, iv);
}
function createCipher(suite, password) {
    var config = MODES[suite.toLowerCase()];
    if (!config) throw new TypeError('invalid suite type');
    var keys = ebtk(password, false, config.key, config.iv);
    return createCipheriv(suite, keys.key, keys.iv);
}
exports.createCipheriv = createCipheriv;
exports.createCipher = createCipher;

},{"./modes":"h8Zil","./authCipher":"6adYr","safe-buffer":"i3ToV","./streamCipher":"4n2fX","cipher-base":"btswB","./aes":"81yU8","evp_bytestokey":"40fSI","inherits":"9Y2vC"}],"h8Zil":[function(require,module,exports) {
var modeModules = {
    ECB: require('./ecb'),
    CBC: require('./cbc'),
    CFB: require('./cfb'),
    CFB8: require('./cfb8'),
    CFB1: require('./cfb1'),
    OFB: require('./ofb'),
    CTR: require('./ctr'),
    GCM: require('./ctr')
};
var modes = require('./list.json');
for(var key in modes)modes[key].module = modeModules[modes[key].mode];
module.exports = modes;

},{"./ecb":"gpYbi","./cbc":"ii5jf","./cfb":"kMPEq","./cfb8":"aAWmM","./cfb1":"9Appv","./ofb":"2ex5M","./ctr":"4r4eT","./list.json":"bNLo5"}],"gpYbi":[function(require,module,exports) {
exports.encrypt = function(self, block) {
    return self._cipher.encryptBlock(block);
};
exports.decrypt = function(self, block) {
    return self._cipher.decryptBlock(block);
};

},{}],"ii5jf":[function(require,module,exports) {
var xor = require('buffer-xor');
exports.encrypt = function(self, block) {
    var data = xor(block, self._prev);
    self._prev = self._cipher.encryptBlock(data);
    return self._prev;
};
exports.decrypt = function(self, block) {
    var pad = self._prev;
    self._prev = block;
    var out = self._cipher.decryptBlock(block);
    return xor(out, pad);
};

},{"buffer-xor":"3bOZL"}],"3bOZL":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
module.exports = function xor(a, b) {
    var length = Math.min(a.length, b.length);
    var buffer = new Buffer(length);
    for(var i = 0; i < length; ++i)buffer[i] = a[i] ^ b[i];
    return buffer;
};

},{"buffer":"hX7zZ"}],"kMPEq":[function(require,module,exports) {
var Buffer = require('safe-buffer').Buffer;
var xor = require('buffer-xor');
function encryptStart(self, data, decrypt) {
    var len = data.length;
    var out = xor(data, self._cache);
    self._cache = self._cache.slice(len);
    self._prev = Buffer.concat([
        self._prev,
        decrypt ? data : out
    ]);
    return out;
}
exports.encrypt = function(self, data, decrypt) {
    var out = Buffer.allocUnsafe(0);
    var len;
    while(data.length){
        if (self._cache.length === 0) {
            self._cache = self._cipher.encryptBlock(self._prev);
            self._prev = Buffer.allocUnsafe(0);
        }
        if (self._cache.length <= data.length) {
            len = self._cache.length;
            out = Buffer.concat([
                out,
                encryptStart(self, data.slice(0, len), decrypt)
            ]);
            data = data.slice(len);
        } else {
            out = Buffer.concat([
                out,
                encryptStart(self, data, decrypt)
            ]);
            break;
        }
    }
    return out;
};

},{"safe-buffer":"i3ToV","buffer-xor":"3bOZL"}],"aAWmM":[function(require,module,exports) {
var Buffer = require('safe-buffer').Buffer;
function encryptByte(self, byteParam, decrypt) {
    var pad = self._cipher.encryptBlock(self._prev);
    var out = pad[0] ^ byteParam;
    self._prev = Buffer.concat([
        self._prev.slice(1),
        Buffer.from([
            decrypt ? byteParam : out
        ])
    ]);
    return out;
}
exports.encrypt = function(self, chunk, decrypt) {
    var len = chunk.length;
    var out = Buffer.allocUnsafe(len);
    var i = -1;
    while((++i) < len)out[i] = encryptByte(self, chunk[i], decrypt);
    return out;
};

},{"safe-buffer":"i3ToV"}],"9Appv":[function(require,module,exports) {
var Buffer = require('safe-buffer').Buffer;
function encryptByte(self, byteParam, decrypt) {
    var pad;
    var i = -1;
    var len = 8;
    var out = 0;
    var bit, value;
    while((++i) < len){
        pad = self._cipher.encryptBlock(self._prev);
        bit = byteParam & 1 << 7 - i ? 128 : 0;
        value = pad[0] ^ bit;
        out += (value & 128) >> i % 8;
        self._prev = shiftIn(self._prev, decrypt ? bit : value);
    }
    return out;
}
function shiftIn(buffer, value) {
    var len = buffer.length;
    var i = -1;
    var out = Buffer.allocUnsafe(buffer.length);
    buffer = Buffer.concat([
        buffer,
        Buffer.from([
            value
        ])
    ]);
    while((++i) < len)out[i] = buffer[i] << 1 | buffer[i + 1] >> 7;
    return out;
}
exports.encrypt = function(self, chunk, decrypt) {
    var len = chunk.length;
    var out = Buffer.allocUnsafe(len);
    var i = -1;
    while((++i) < len)out[i] = encryptByte(self, chunk[i], decrypt);
    return out;
};

},{"safe-buffer":"i3ToV"}],"2ex5M":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
var xor = require('buffer-xor');
function getBlock(self) {
    self._prev = self._cipher.encryptBlock(self._prev);
    return self._prev;
}
exports.encrypt = function(self, chunk) {
    while(self._cache.length < chunk.length)self._cache = Buffer.concat([
        self._cache,
        getBlock(self)
    ]);
    var pad = self._cache.slice(0, chunk.length);
    self._cache = self._cache.slice(chunk.length);
    return xor(chunk, pad);
};

},{"buffer":"hX7zZ","buffer-xor":"3bOZL"}],"4r4eT":[function(require,module,exports) {
var xor = require('buffer-xor');
var Buffer = require('safe-buffer').Buffer;
var incr32 = require('../incr32');
function getBlock(self) {
    var out = self._cipher.encryptBlockRaw(self._prev);
    incr32(self._prev);
    return out;
}
var blockSize = 16;
exports.encrypt = function(self, chunk) {
    var chunkNum = Math.ceil(chunk.length / blockSize);
    var start = self._cache.length;
    self._cache = Buffer.concat([
        self._cache,
        Buffer.allocUnsafe(chunkNum * blockSize)
    ]);
    for(var i = 0; i < chunkNum; i++){
        var out = getBlock(self);
        var offset = start + i * blockSize;
        self._cache.writeUInt32BE(out[0], offset + 0);
        self._cache.writeUInt32BE(out[1], offset + 4);
        self._cache.writeUInt32BE(out[2], offset + 8);
        self._cache.writeUInt32BE(out[3], offset + 12);
    }
    var pad = self._cache.slice(0, chunk.length);
    self._cache = self._cache.slice(chunk.length);
    return xor(chunk, pad);
};

},{"buffer-xor":"3bOZL","safe-buffer":"i3ToV","../incr32":"jyfI0"}],"jyfI0":[function(require,module,exports) {
function incr32(iv) {
    var len = iv.length;
    var item;
    while(len--){
        item = iv.readUInt8(len);
        if (item === 255) iv.writeUInt8(0, len);
        else {
            item++;
            iv.writeUInt8(item, len);
            break;
        }
    }
}
module.exports = incr32;

},{}],"bNLo5":[function(require,module,exports) {
module.exports = JSON.parse("{\"aes-128-ecb\":{\"cipher\":\"AES\",\"key\":128,\"iv\":0,\"mode\":\"ECB\",\"type\":\"block\"},\"aes-192-ecb\":{\"cipher\":\"AES\",\"key\":192,\"iv\":0,\"mode\":\"ECB\",\"type\":\"block\"},\"aes-256-ecb\":{\"cipher\":\"AES\",\"key\":256,\"iv\":0,\"mode\":\"ECB\",\"type\":\"block\"},\"aes-128-cbc\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes-192-cbc\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes-256-cbc\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes128\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes192\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes256\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes-128-cfb\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CFB\",\"type\":\"stream\"},\"aes-192-cfb\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CFB\",\"type\":\"stream\"},\"aes-256-cfb\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CFB\",\"type\":\"stream\"},\"aes-128-cfb8\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CFB8\",\"type\":\"stream\"},\"aes-192-cfb8\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CFB8\",\"type\":\"stream\"},\"aes-256-cfb8\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CFB8\",\"type\":\"stream\"},\"aes-128-cfb1\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CFB1\",\"type\":\"stream\"},\"aes-192-cfb1\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CFB1\",\"type\":\"stream\"},\"aes-256-cfb1\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CFB1\",\"type\":\"stream\"},\"aes-128-ofb\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"OFB\",\"type\":\"stream\"},\"aes-192-ofb\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"OFB\",\"type\":\"stream\"},\"aes-256-ofb\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"OFB\",\"type\":\"stream\"},\"aes-128-ctr\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CTR\",\"type\":\"stream\"},\"aes-192-ctr\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CTR\",\"type\":\"stream\"},\"aes-256-ctr\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CTR\",\"type\":\"stream\"},\"aes-128-gcm\":{\"cipher\":\"AES\",\"key\":128,\"iv\":12,\"mode\":\"GCM\",\"type\":\"auth\"},\"aes-192-gcm\":{\"cipher\":\"AES\",\"key\":192,\"iv\":12,\"mode\":\"GCM\",\"type\":\"auth\"},\"aes-256-gcm\":{\"cipher\":\"AES\",\"key\":256,\"iv\":12,\"mode\":\"GCM\",\"type\":\"auth\"}}");

},{}],"6adYr":[function(require,module,exports) {
var aes = require('./aes');
var Buffer = require('safe-buffer').Buffer;
var Transform = require('cipher-base');
var inherits = require('inherits');
var GHASH = require('./ghash');
var xor = require('buffer-xor');
var incr32 = require('./incr32');
function xorTest(a, b) {
    var out = 0;
    if (a.length !== b.length) out++;
    var len = Math.min(a.length, b.length);
    for(var i = 0; i < len; ++i)out += a[i] ^ b[i];
    return out;
}
function calcIv(self, iv, ck) {
    if (iv.length === 12) {
        self._finID = Buffer.concat([
            iv,
            Buffer.from([
                0,
                0,
                0,
                1
            ])
        ]);
        return Buffer.concat([
            iv,
            Buffer.from([
                0,
                0,
                0,
                2
            ])
        ]);
    }
    var ghash = new GHASH(ck);
    var len = iv.length;
    var toPad = len % 16;
    ghash.update(iv);
    if (toPad) {
        toPad = 16 - toPad;
        ghash.update(Buffer.alloc(toPad, 0));
    }
    ghash.update(Buffer.alloc(8, 0));
    var ivBits = len * 8;
    var tail = Buffer.alloc(8);
    tail.writeUIntBE(ivBits, 0, 8);
    ghash.update(tail);
    self._finID = ghash.state;
    var out = Buffer.from(self._finID);
    incr32(out);
    return out;
}
function StreamCipher(mode, key, iv, decrypt) {
    Transform.call(this);
    var h = Buffer.alloc(4, 0);
    this._cipher = new aes.AES(key);
    var ck = this._cipher.encryptBlock(h);
    this._ghash = new GHASH(ck);
    iv = calcIv(this, iv, ck);
    this._prev = Buffer.from(iv);
    this._cache = Buffer.allocUnsafe(0);
    this._secCache = Buffer.allocUnsafe(0);
    this._decrypt = decrypt;
    this._alen = 0;
    this._len = 0;
    this._mode = mode;
    this._authTag = null;
    this._called = false;
}
inherits(StreamCipher, Transform);
StreamCipher.prototype._update = function(chunk) {
    if (!this._called && this._alen) {
        var rump = 16 - this._alen % 16;
        if (rump < 16) {
            rump = Buffer.alloc(rump, 0);
            this._ghash.update(rump);
        }
    }
    this._called = true;
    var out = this._mode.encrypt(this, chunk);
    if (this._decrypt) this._ghash.update(chunk);
    else this._ghash.update(out);
    this._len += chunk.length;
    return out;
};
StreamCipher.prototype._final = function() {
    if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data');
    var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID));
    if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data');
    this._authTag = tag;
    this._cipher.scrub();
};
StreamCipher.prototype.getAuthTag = function getAuthTag() {
    if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state');
    return this._authTag;
};
StreamCipher.prototype.setAuthTag = function setAuthTag(tag) {
    if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state');
    this._authTag = tag;
};
StreamCipher.prototype.setAAD = function setAAD(buf) {
    if (this._called) throw new Error('Attempting to set AAD in unsupported state');
    this._ghash.update(buf);
    this._alen += buf.length;
};
module.exports = StreamCipher;

},{"./aes":"81yU8","safe-buffer":"i3ToV","cipher-base":"btswB","inherits":"9Y2vC","./ghash":"9K9Ih","buffer-xor":"3bOZL","./incr32":"jyfI0"}],"81yU8":[function(require,module,exports) {
// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec
// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/
var Buffer = require('safe-buffer').Buffer;
function asUInt32Array(buf) {
    if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf);
    var len = buf.length / 4 | 0;
    var out = new Array(len);
    for(var i = 0; i < len; i++)out[i] = buf.readUInt32BE(i * 4);
    return out;
}
function scrubVec(v) {
    for(var i = 0; i < v.length; v++)v[i] = 0;
}
function cryptBlock(M, keySchedule, SUB_MIX, SBOX, nRounds) {
    var SUB_MIX0 = SUB_MIX[0];
    var SUB_MIX1 = SUB_MIX[1];
    var SUB_MIX2 = SUB_MIX[2];
    var SUB_MIX3 = SUB_MIX[3];
    var s0 = M[0] ^ keySchedule[0];
    var s1 = M[1] ^ keySchedule[1];
    var s2 = M[2] ^ keySchedule[2];
    var s3 = M[3] ^ keySchedule[3];
    var t0, t1, t2, t3;
    var ksRow = 4;
    for(var round = 1; round < nRounds; round++){
        t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[s1 >>> 16 & 255] ^ SUB_MIX2[s2 >>> 8 & 255] ^ SUB_MIX3[s3 & 255] ^ keySchedule[ksRow++];
        t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[s2 >>> 16 & 255] ^ SUB_MIX2[s3 >>> 8 & 255] ^ SUB_MIX3[s0 & 255] ^ keySchedule[ksRow++];
        t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[s3 >>> 16 & 255] ^ SUB_MIX2[s0 >>> 8 & 255] ^ SUB_MIX3[s1 & 255] ^ keySchedule[ksRow++];
        t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[s0 >>> 16 & 255] ^ SUB_MIX2[s1 >>> 8 & 255] ^ SUB_MIX3[s2 & 255] ^ keySchedule[ksRow++];
        s0 = t0;
        s1 = t1;
        s2 = t2;
        s3 = t3;
    }
    t0 = (SBOX[s0 >>> 24] << 24 | SBOX[s1 >>> 16 & 255] << 16 | SBOX[s2 >>> 8 & 255] << 8 | SBOX[s3 & 255]) ^ keySchedule[ksRow++];
    t1 = (SBOX[s1 >>> 24] << 24 | SBOX[s2 >>> 16 & 255] << 16 | SBOX[s3 >>> 8 & 255] << 8 | SBOX[s0 & 255]) ^ keySchedule[ksRow++];
    t2 = (SBOX[s2 >>> 24] << 24 | SBOX[s3 >>> 16 & 255] << 16 | SBOX[s0 >>> 8 & 255] << 8 | SBOX[s1 & 255]) ^ keySchedule[ksRow++];
    t3 = (SBOX[s3 >>> 24] << 24 | SBOX[s0 >>> 16 & 255] << 16 | SBOX[s1 >>> 8 & 255] << 8 | SBOX[s2 & 255]) ^ keySchedule[ksRow++];
    t0 = t0 >>> 0;
    t1 = t1 >>> 0;
    t2 = t2 >>> 0;
    t3 = t3 >>> 0;
    return [
        t0,
        t1,
        t2,
        t3
    ];
}
// AES constants
var RCON = [
    0,
    1,
    2,
    4,
    8,
    16,
    32,
    64,
    128,
    27,
    54
];
var G = function() {
    // Compute double table
    var d = new Array(256);
    for(var j = 0; j < 256; j++)if (j < 128) d[j] = j << 1;
    else d[j] = j << 1 ^ 283;
    var SBOX = [];
    var INV_SBOX = [];
    var SUB_MIX = [
        [],
        [],
        [],
        []
    ];
    var INV_SUB_MIX = [
        [],
        [],
        [],
        []
    ];
    // Walk GF(2^8)
    var x = 0;
    var xi = 0;
    for(var i = 0; i < 256; ++i){
        // Compute sbox
        var sx = xi ^ xi << 1 ^ xi << 2 ^ xi << 3 ^ xi << 4;
        sx = sx >>> 8 ^ sx & 255 ^ 99;
        SBOX[x] = sx;
        INV_SBOX[sx] = x;
        // Compute multiplication
        var x2 = d[x];
        var x4 = d[x2];
        var x8 = d[x4];
        // Compute sub bytes, mix columns tables
        var t = d[sx] * 257 ^ sx * 16843008;
        SUB_MIX[0][x] = t << 24 | t >>> 8;
        SUB_MIX[1][x] = t << 16 | t >>> 16;
        SUB_MIX[2][x] = t << 8 | t >>> 24;
        SUB_MIX[3][x] = t;
        // Compute inv sub bytes, inv mix columns tables
        t = x8 * 16843009 ^ x4 * 65537 ^ x2 * 257 ^ x * 16843008;
        INV_SUB_MIX[0][sx] = t << 24 | t >>> 8;
        INV_SUB_MIX[1][sx] = t << 16 | t >>> 16;
        INV_SUB_MIX[2][sx] = t << 8 | t >>> 24;
        INV_SUB_MIX[3][sx] = t;
        if (x === 0) x = xi = 1;
        else {
            x = x2 ^ d[d[d[x8 ^ x2]]];
            xi ^= d[d[xi]];
        }
    }
    return {
        SBOX: SBOX,
        INV_SBOX: INV_SBOX,
        SUB_MIX: SUB_MIX,
        INV_SUB_MIX: INV_SUB_MIX
    };
}();
function AES(key) {
    this._key = asUInt32Array(key);
    this._reset();
}
AES.blockSize = 16;
AES.keySize = 32;
AES.prototype.blockSize = AES.blockSize;
AES.prototype.keySize = AES.keySize;
AES.prototype._reset = function() {
    var keyWords = this._key;
    var keySize = keyWords.length;
    var nRounds = keySize + 6;
    var ksRows = (nRounds + 1) * 4;
    var keySchedule = [];
    for(var k = 0; k < keySize; k++)keySchedule[k] = keyWords[k];
    for(k = keySize; k < ksRows; k++){
        var t = keySchedule[k - 1];
        if (k % keySize === 0) {
            t = t << 8 | t >>> 24;
            t = G.SBOX[t >>> 24] << 24 | G.SBOX[t >>> 16 & 255] << 16 | G.SBOX[t >>> 8 & 255] << 8 | G.SBOX[t & 255];
            t ^= RCON[k / keySize | 0] << 24;
        } else if (keySize > 6 && k % keySize === 4) t = G.SBOX[t >>> 24] << 24 | G.SBOX[t >>> 16 & 255] << 16 | G.SBOX[t >>> 8 & 255] << 8 | G.SBOX[t & 255];
        keySchedule[k] = keySchedule[k - keySize] ^ t;
    }
    var invKeySchedule = [];
    for(var ik = 0; ik < ksRows; ik++){
        var ksR = ksRows - ik;
        var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)];
        if (ik < 4 || ksR <= 4) invKeySchedule[ik] = tt;
        else invKeySchedule[ik] = G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[tt >>> 16 & 255]] ^ G.INV_SUB_MIX[2][G.SBOX[tt >>> 8 & 255]] ^ G.INV_SUB_MIX[3][G.SBOX[tt & 255]];
    }
    this._nRounds = nRounds;
    this._keySchedule = keySchedule;
    this._invKeySchedule = invKeySchedule;
};
AES.prototype.encryptBlockRaw = function(M) {
    M = asUInt32Array(M);
    return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds);
};
AES.prototype.encryptBlock = function(M) {
    var out = this.encryptBlockRaw(M);
    var buf = Buffer.allocUnsafe(16);
    buf.writeUInt32BE(out[0], 0);
    buf.writeUInt32BE(out[1], 4);
    buf.writeUInt32BE(out[2], 8);
    buf.writeUInt32BE(out[3], 12);
    return buf;
};
AES.prototype.decryptBlock = function(M) {
    M = asUInt32Array(M);
    // swap
    var m1 = M[1];
    M[1] = M[3];
    M[3] = m1;
    var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds);
    var buf = Buffer.allocUnsafe(16);
    buf.writeUInt32BE(out[0], 0);
    buf.writeUInt32BE(out[3], 4);
    buf.writeUInt32BE(out[2], 8);
    buf.writeUInt32BE(out[1], 12);
    return buf;
};
AES.prototype.scrub = function() {
    scrubVec(this._keySchedule);
    scrubVec(this._invKeySchedule);
    scrubVec(this._key);
};
module.exports.AES = AES;

},{"safe-buffer":"i3ToV"}],"9K9Ih":[function(require,module,exports) {
var Buffer = require('safe-buffer').Buffer;
var ZEROES = Buffer.alloc(16, 0);
function toArray(buf) {
    return [
        buf.readUInt32BE(0),
        buf.readUInt32BE(4),
        buf.readUInt32BE(8),
        buf.readUInt32BE(12)
    ];
}
function fromArray(out) {
    var buf = Buffer.allocUnsafe(16);
    buf.writeUInt32BE(out[0] >>> 0, 0);
    buf.writeUInt32BE(out[1] >>> 0, 4);
    buf.writeUInt32BE(out[2] >>> 0, 8);
    buf.writeUInt32BE(out[3] >>> 0, 12);
    return buf;
}
function GHASH(key) {
    this.h = key;
    this.state = Buffer.alloc(16, 0);
    this.cache = Buffer.allocUnsafe(0);
}
// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
GHASH.prototype.ghash = function(block) {
    var i = -1;
    while((++i) < block.length)this.state[i] ^= block[i];
    this._multiply();
};
GHASH.prototype._multiply = function() {
    var Vi = toArray(this.h);
    var Zi = [
        0,
        0,
        0,
        0
    ];
    var j, xi, lsbVi;
    var i = -1;
    while((++i) < 128){
        xi = (this.state[~~(i / 8)] & 1 << 7 - i % 8) !== 0;
        if (xi) {
            // Z_i+1 = Z_i ^ V_i
            Zi[0] ^= Vi[0];
            Zi[1] ^= Vi[1];
            Zi[2] ^= Vi[2];
            Zi[3] ^= Vi[3];
        }
        // Store the value of LSB(V_i)
        lsbVi = (Vi[3] & 1) !== 0;
        // V_i+1 = V_i >> 1
        for(j = 3; j > 0; j--)Vi[j] = Vi[j] >>> 1 | (Vi[j - 1] & 1) << 31;
        Vi[0] = Vi[0] >>> 1;
        // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
        if (lsbVi) Vi[0] = Vi[0] ^ -520093696;
    }
    this.state = fromArray(Zi);
};
GHASH.prototype.update = function(buf) {
    this.cache = Buffer.concat([
        this.cache,
        buf
    ]);
    var chunk;
    while(this.cache.length >= 16){
        chunk = this.cache.slice(0, 16);
        this.cache = this.cache.slice(16);
        this.ghash(chunk);
    }
};
GHASH.prototype.final = function(abl, bl) {
    if (this.cache.length) this.ghash(Buffer.concat([
        this.cache,
        ZEROES
    ], 16));
    this.ghash(fromArray([
        0,
        abl,
        0,
        bl
    ]));
    return this.state;
};
module.exports = GHASH;

},{"safe-buffer":"i3ToV"}],"4n2fX":[function(require,module,exports) {
var aes = require('./aes');
var Buffer = require('safe-buffer').Buffer;
var Transform = require('cipher-base');
var inherits = require('inherits');
function StreamCipher(mode, key, iv, decrypt) {
    Transform.call(this);
    this._cipher = new aes.AES(key);
    this._prev = Buffer.from(iv);
    this._cache = Buffer.allocUnsafe(0);
    this._secCache = Buffer.allocUnsafe(0);
    this._decrypt = decrypt;
    this._mode = mode;
}
inherits(StreamCipher, Transform);
StreamCipher.prototype._update = function(chunk) {
    return this._mode.encrypt(this, chunk, this._decrypt);
};
StreamCipher.prototype._final = function() {
    this._cipher.scrub();
};
module.exports = StreamCipher;

},{"./aes":"81yU8","safe-buffer":"i3ToV","cipher-base":"btswB","inherits":"9Y2vC"}],"40fSI":[function(require,module,exports) {
var Buffer = require('safe-buffer').Buffer;
var MD5 = require('md5.js');
/* eslint-disable camelcase */ function EVP_BytesToKey(password, salt, keyBits, ivLen) {
    if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary');
    if (salt) {
        if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary');
        if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length');
    }
    var keyLen = keyBits / 8;
    var key = Buffer.alloc(keyLen);
    var iv = Buffer.alloc(ivLen || 0);
    var tmp = Buffer.alloc(0);
    while(keyLen > 0 || ivLen > 0){
        var hash = new MD5();
        hash.update(tmp);
        hash.update(password);
        if (salt) hash.update(salt);
        tmp = hash.digest();
        var used = 0;
        if (keyLen > 0) {
            var keyStart = key.length - keyLen;
            used = Math.min(keyLen, tmp.length);
            tmp.copy(key, keyStart, 0, used);
            keyLen -= used;
        }
        if (used < tmp.length && ivLen > 0) {
            var ivStart = iv.length - ivLen;
            var length = Math.min(ivLen, tmp.length - used);
            tmp.copy(iv, ivStart, used, used + length);
            ivLen -= length;
        }
    }
    tmp.fill(0);
    return {
        key: key,
        iv: iv
    };
}
module.exports = EVP_BytesToKey;

},{"safe-buffer":"i3ToV","md5.js":"2KF08"}],"feZ74":[function(require,module,exports) {
var AuthCipher = require('./authCipher');
var Buffer = require('safe-buffer').Buffer;
var MODES = require('./modes');
var StreamCipher = require('./streamCipher');
var Transform = require('cipher-base');
var aes = require('./aes');
var ebtk = require('evp_bytestokey');
var inherits = require('inherits');
function Decipher(mode, key, iv) {
    Transform.call(this);
    this._cache = new Splitter();
    this._last = void 0;
    this._cipher = new aes.AES(key);
    this._prev = Buffer.from(iv);
    this._mode = mode;
    this._autopadding = true;
}
inherits(Decipher, Transform);
Decipher.prototype._update = function(data) {
    this._cache.add(data);
    var chunk;
    var thing;
    var out = [];
    while(chunk = this._cache.get(this._autopadding)){
        thing = this._mode.decrypt(this, chunk);
        out.push(thing);
    }
    return Buffer.concat(out);
};
Decipher.prototype._final = function() {
    var chunk = this._cache.flush();
    if (this._autopadding) return unpad(this._mode.decrypt(this, chunk));
    else if (chunk) throw new Error('data not multiple of block length');
};
Decipher.prototype.setAutoPadding = function(setTo) {
    this._autopadding = !!setTo;
    return this;
};
function Splitter() {
    this.cache = Buffer.allocUnsafe(0);
}
Splitter.prototype.add = function(data) {
    this.cache = Buffer.concat([
        this.cache,
        data
    ]);
};
Splitter.prototype.get = function(autoPadding) {
    var out;
    if (autoPadding) {
        if (this.cache.length > 16) {
            out = this.cache.slice(0, 16);
            this.cache = this.cache.slice(16);
            return out;
        }
    } else if (this.cache.length >= 16) {
        out = this.cache.slice(0, 16);
        this.cache = this.cache.slice(16);
        return out;
    }
    return null;
};
Splitter.prototype.flush = function() {
    if (this.cache.length) return this.cache;
};
function unpad(last) {
    var padded = last[15];
    if (padded < 1 || padded > 16) throw new Error('unable to decrypt data');
    var i = -1;
    while((++i) < padded){
        if (last[i + (16 - padded)] !== padded) throw new Error('unable to decrypt data');
    }
    if (padded === 16) return;
    return last.slice(0, 16 - padded);
}
function createDecipheriv(suite, password, iv) {
    var config = MODES[suite.toLowerCase()];
    if (!config) throw new TypeError('invalid suite type');
    if (typeof iv === 'string') iv = Buffer.from(iv);
    if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length);
    if (typeof password === 'string') password = Buffer.from(password);
    if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length);
    if (config.type === 'stream') return new StreamCipher(config.module, password, iv, true);
    else if (config.type === 'auth') return new AuthCipher(config.module, password, iv, true);
    return new Decipher(config.module, password, iv);
}
function createDecipher(suite, password) {
    var config = MODES[suite.toLowerCase()];
    if (!config) throw new TypeError('invalid suite type');
    var keys = ebtk(password, false, config.key, config.iv);
    return createDecipheriv(suite, keys.key, keys.iv);
}
exports.createDecipher = createDecipher;
exports.createDecipheriv = createDecipheriv;

},{"./authCipher":"6adYr","safe-buffer":"i3ToV","./modes":"h8Zil","./streamCipher":"4n2fX","cipher-base":"btswB","./aes":"81yU8","evp_bytestokey":"40fSI","inherits":"9Y2vC"}],"gjp7q":[function(require,module,exports) {
exports['des-ecb'] = {
    key: 8,
    iv: 0
};
exports['des-cbc'] = exports.des = {
    key: 8,
    iv: 8
};
exports['des-ede3-cbc'] = exports.des3 = {
    key: 24,
    iv: 8
};
exports['des-ede3'] = {
    key: 24,
    iv: 0
};
exports['des-ede-cbc'] = {
    key: 16,
    iv: 8
};
exports['des-ede'] = {
    key: 16,
    iv: 0
};

},{}],"7tOnW":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
var generatePrime = require('./lib/generatePrime');
var primes = require('./lib/primes.json');
var DH = require('./lib/dh');
function getDiffieHellman(mod) {
    var prime = new Buffer(primes[mod].prime, 'hex');
    var gen = new Buffer(primes[mod].gen, 'hex');
    return new DH(prime, gen);
}
var ENCODINGS = {
    'binary': true,
    'hex': true,
    'base64': true
};
function createDiffieHellman(prime, enc, generator, genc) {
    if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) return createDiffieHellman(prime, 'binary', enc, generator);
    enc = enc || 'binary';
    genc = genc || 'binary';
    generator = generator || new Buffer([
        2
    ]);
    if (!Buffer.isBuffer(generator)) generator = new Buffer(generator, genc);
    if (typeof prime === 'number') return new DH(generatePrime(prime, generator), generator, true);
    if (!Buffer.isBuffer(prime)) prime = new Buffer(prime, enc);
    return new DH(prime, generator, true);
}
exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman;
exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman;

},{"buffer":"hX7zZ","./lib/generatePrime":"czUg2","./lib/primes.json":"aNYyi","./lib/dh":"3QSKN"}],"czUg2":[function(require,module,exports) {
var randomBytes = require('randombytes');
module.exports = findPrime;
findPrime.simpleSieve = simpleSieve;
findPrime.fermatTest = fermatTest;
var BN = require('bn.js');
var TWENTYFOUR = new BN(24);
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var ONE = new BN(1);
var TWO = new BN(2);
var FIVE = new BN(5);
var SIXTEEN = new BN(16);
var EIGHT = new BN(8);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var ELEVEN = new BN(11);
var FOUR = new BN(4);
var TWELVE = new BN(12);
var primes = null;
function _getPrimes() {
    if (primes !== null) return primes;
    var limit = 1048576;
    var res = [];
    res[0] = 2;
    for(var i = 1, k = 3; k < limit; k += 2){
        var sqrt = Math.ceil(Math.sqrt(k));
        for(var j = 0; j < i && res[j] <= sqrt; j++)if (k % res[j] === 0) break;
        if (i !== j && res[j] <= sqrt) continue;
        res[i++] = k;
    }
    primes = res;
    return res;
}
function simpleSieve(p) {
    var primes1 = _getPrimes();
    for(var i = 0; i < primes1.length; i++)if (p.modn(primes1[i]) === 0) {
        if (p.cmpn(primes1[i]) === 0) return true;
        else return false;
    }
    return true;
}
function fermatTest(p) {
    var red = BN.mont(p);
    return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
}
function findPrime(bits, gen) {
    if (bits < 16) {
        // this is what openssl does
        if (gen === 2 || gen === 5) return new BN([
            140,
            123
        ]);
        else return new BN([
            140,
            39
        ]);
    }
    gen = new BN(gen);
    var num, n2;
    while(true){
        num = new BN(randomBytes(Math.ceil(bits / 8)));
        while(num.bitLength() > bits)num.ishrn(1);
        if (num.isEven()) num.iadd(ONE);
        if (!num.testn(1)) num.iadd(TWO);
        if (!gen.cmp(TWO)) while(num.mod(TWENTYFOUR).cmp(ELEVEN))num.iadd(FOUR);
        else if (!gen.cmp(FIVE)) while(num.mod(TEN).cmp(THREE))num.iadd(FOUR);
        n2 = num.shrn(1);
        if (simpleSieve(n2) && simpleSieve(num) && fermatTest(n2) && fermatTest(num) && millerRabin.test(n2) && millerRabin.test(num)) return num;
    }
}

},{"randombytes":"1rFGB","bn.js":"etj54","miller-rabin":"dcUqV"}],"etj54":[function(require,module,exports) {
(function(module, exports) {
    // Utils
    function assert(val, msg) {
        if (!val) throw new Error(msg || 'Assertion failed');
    }
    // Could use `inherits` module, but don't want to move from single file
    // architecture yet.
    function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
    }
    // BN
    function BN(number, base, endian) {
        if (BN.isBN(number)) return number;
        this.negative = 0;
        this.words = null;
        this.length = 0;
        // Reduction context
        this.red = null;
        if (number !== null) {
            if (base === 'le' || base === 'be') {
                endian = base;
                base = 10;
            }
            this._init(number || 0, base || 10, endian || 'be');
        }
    }
    if (typeof module === 'object') module.exports = BN;
    else exports.BN = BN;
    BN.BN = BN;
    BN.wordSize = 26;
    var Buffer;
    try {
        if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') Buffer = window.Buffer;
        else Buffer = require('buffer').Buffer;
    } catch (e) {
    }
    BN.isBN = function isBN(num) {
        if (num instanceof BN) return true;
        return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
    };
    BN.max = function max(left, right) {
        if (left.cmp(right) > 0) return left;
        return right;
    };
    BN.min = function min(left, right) {
        if (left.cmp(right) < 0) return left;
        return right;
    };
    BN.prototype._init = function init(number, base, endian) {
        if (typeof number === 'number') return this._initNumber(number, base, endian);
        if (typeof number === 'object') return this._initArray(number, base, endian);
        if (base === 'hex') base = 16;
        assert(base === (base | 0) && base >= 2 && base <= 36);
        number = number.toString().replace(/\s+/g, '');
        var start = 0;
        if (number[0] === '-') {
            start++;
            this.negative = 1;
        }
        if (start < number.length) {
            if (base === 16) this._parseHex(number, start, endian);
            else {
                this._parseBase(number, base, start);
                if (endian === 'le') this._initArray(this.toArray(), base, endian);
            }
        }
    };
    BN.prototype._initNumber = function _initNumber(number, base, endian) {
        if (number < 0) {
            this.negative = 1;
            number = -number;
        }
        if (number < 67108864) {
            this.words = [
                number & 67108863
            ];
            this.length = 1;
        } else if (number < 4503599627370496) {
            this.words = [
                number & 67108863,
                number / 67108864 & 67108863
            ];
            this.length = 2;
        } else {
            assert(number < 9007199254740992); // 2 ^ 53 (unsafe)
            this.words = [
                number & 67108863,
                number / 67108864 & 67108863,
                1
            ];
            this.length = 3;
        }
        if (endian !== 'le') return;
        // Reverse the bytes
        this._initArray(this.toArray(), base, endian);
    };
    BN.prototype._initArray = function _initArray(number, base, endian) {
        // Perhaps a Uint8Array
        assert(typeof number.length === 'number');
        if (number.length <= 0) {
            this.words = [
                0
            ];
            this.length = 1;
            return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)this.words[i] = 0;
        var j, w;
        var off = 0;
        if (endian === 'be') for(i = number.length - 1, j = 0; i >= 0; i -= 3){
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        else if (endian === 'le') for(i = 0, j = 0; i < number.length; i += 3){
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        return this.strip();
    };
    function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        // 'A' - 'F'
        if (c >= 65 && c <= 70) return c - 55;
        else if (c >= 97 && c <= 102) return c - 87;
        else return c - 48 & 15;
    }
    function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) r |= parseHex4Bits(string, index - 1) << 4;
        return r;
    }
    BN.prototype._parseHex = function _parseHex(number, start, endian) {
        // Create possibly bigger array to ensure that it fits the number
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)this.words[i] = 0;
        // 24-bits chunks
        var off = 0;
        var j = 0;
        var w;
        if (endian === 'be') for(i = number.length - 1; i >= start; i -= 2){
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
                off -= 18;
                j += 1;
                this.words[j] |= w >>> 26;
            } else off += 8;
        }
        else {
            var parseLength = number.length - start;
            for(i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2){
                w = parseHexByte(number, start, i) << off;
                this.words[j] |= w & 67108863;
                if (off >= 18) {
                    off -= 18;
                    j += 1;
                    this.words[j] |= w >>> 26;
                } else off += 8;
            }
        }
        this.strip();
    };
    function parseBase(str, start, end, mul) {
        var r = 0;
        var len = Math.min(str.length, end);
        for(var i = start; i < len; i++){
            var c = str.charCodeAt(i) - 48;
            r *= mul;
            // 'a'
            if (c >= 49) r += c - 49 + 10;
            else if (c >= 17) r += c - 17 + 10;
            else r += c;
        }
        return r;
    }
    BN.prototype._parseBase = function _parseBase(number, base, start) {
        // Initialize as zero
        this.words = [
            0
        ];
        this.length = 1;
        // Find length of limb in base
        for(var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base)limbLen++;
        limbLen--;
        limbPow = limbPow / base | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for(var i = start; i < end; i += limbLen){
            word = parseBase(number, i, i + limbLen, base);
            this.imuln(limbPow);
            if (this.words[0] + word < 67108864) this.words[0] += word;
            else this._iaddn(word);
        }
        if (mod !== 0) {
            var pow = 1;
            word = parseBase(number, i, number.length, base);
            for(i = 0; i < mod; i++)pow *= base;
            this.imuln(pow);
            if (this.words[0] + word < 67108864) this.words[0] += word;
            else this._iaddn(word);
        }
        this.strip();
    };
    BN.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)dest.words[i] = this.words[i];
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
    };
    BN.prototype.clone = function clone() {
        var r = new BN(null);
        this.copy(r);
        return r;
    };
    BN.prototype._expand = function _expand(size) {
        while(this.length < size)this.words[this.length++] = 0;
        return this;
    };
    // Remove leading `0` from `this`
    BN.prototype.strip = function strip() {
        while(this.length > 1 && this.words[this.length - 1] === 0)this.length--;
        return this._normSign();
    };
    BN.prototype._normSign = function _normSign() {
        // -0 = 0
        if (this.length === 1 && this.words[0] === 0) this.negative = 0;
        return this;
    };
    BN.prototype.inspect = function inspect() {
        return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
    };
    /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */ var zeros = [
        '',
        '0',
        '00',
        '000',
        '0000',
        '00000',
        '000000',
        '0000000',
        '00000000',
        '000000000',
        '0000000000',
        '00000000000',
        '000000000000',
        '0000000000000',
        '00000000000000',
        '000000000000000',
        '0000000000000000',
        '00000000000000000',
        '000000000000000000',
        '0000000000000000000',
        '00000000000000000000',
        '000000000000000000000',
        '0000000000000000000000',
        '00000000000000000000000',
        '000000000000000000000000',
        '0000000000000000000000000'
    ];
    var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
    ];
    var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        10000000,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64000000,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        24300000,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
    ];
    BN.prototype.toString = function toString(base, padding) {
        base = base || 10;
        padding = padding | 0 || 1;
        var out;
        if (base === 16 || base === 'hex') {
            out = '';
            var off = 0;
            var carry = 0;
            for(var i = 0; i < this.length; i++){
                var w = this.words[i];
                var word = ((w << off | carry) & 16777215).toString(16);
                carry = w >>> 24 - off & 16777215;
                if (carry !== 0 || i !== this.length - 1) out = zeros[6 - word.length] + word + out;
                else out = word + out;
                off += 2;
                if (off >= 26) {
                    off -= 26;
                    i--;
                }
            }
            if (carry !== 0) out = carry.toString(16) + out;
            while(out.length % padding !== 0)out = '0' + out;
            if (this.negative !== 0) out = '-' + out;
            return out;
        }
        if (base === (base | 0) && base >= 2 && base <= 36) {
            // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
            var groupSize = groupSizes[base];
            // var groupBase = Math.pow(base, groupSize);
            var groupBase = groupBases[base];
            out = '';
            var c = this.clone();
            c.negative = 0;
            while(!c.isZero()){
                var r = c.modn(groupBase).toString(base);
                c = c.idivn(groupBase);
                if (!c.isZero()) out = zeros[groupSize - r.length] + r + out;
                else out = r + out;
            }
            if (this.isZero()) out = '0' + out;
            while(out.length % padding !== 0)out = '0' + out;
            if (this.negative !== 0) out = '-' + out;
            return out;
        }
        assert(false, 'Base should be between 2 and 36');
    };
    BN.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) ret += this.words[1] * 67108864;
        else if (this.length === 3 && this.words[2] === 1) // NOTE: at this stage it is known that the top bit is set
        ret += 4503599627370496 + this.words[1] * 67108864;
        else if (this.length > 2) assert(false, 'Number can only safely store up to 53 bits');
        return this.negative !== 0 ? -ret : ret;
    };
    BN.prototype.toJSON = function toJSON() {
        return this.toString(16);
    };
    BN.prototype.toBuffer = function toBuffer(endian, length) {
        assert(typeof Buffer !== 'undefined');
        return this.toArrayLike(Buffer, endian, length);
    };
    BN.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
    };
    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert(byteLength <= reqLength, 'byte array longer than desired length');
        assert(reqLength > 0, 'Requested array length <= 0');
        this.strip();
        var littleEndian = endian === 'le';
        var res = new ArrayType(reqLength);
        var b, i;
        var q = this.clone();
        if (!littleEndian) {
            // Assume big-endian
            for(i = 0; i < reqLength - byteLength; i++)res[i] = 0;
            for(i = 0; !q.isZero(); i++){
                b = q.andln(255);
                q.iushrn(8);
                res[reqLength - i - 1] = b;
            }
        } else {
            for(i = 0; !q.isZero(); i++){
                b = q.andln(255);
                q.iushrn(8);
                res[i] = b;
            }
            for(; i < reqLength; i++)res[i] = 0;
        }
        return res;
    };
    if (Math.clz32) BN.prototype._countBits = function _countBits(w) {
        return 32 - Math.clz32(w);
    };
    else BN.prototype._countBits = function _countBits1(w) {
        var t = w;
        var r = 0;
        if (t >= 4096) {
            r += 13;
            t >>>= 13;
        }
        if (t >= 64) {
            r += 7;
            t >>>= 7;
        }
        if (t >= 8) {
            r += 4;
            t >>>= 4;
        }
        if (t >= 2) {
            r += 2;
            t >>>= 2;
        }
        return r + t;
    };
    BN.prototype._zeroBits = function _zeroBits(w) {
        // Short-cut
        if (w === 0) return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
            r += 13;
            t >>>= 13;
        }
        if ((t & 127) === 0) {
            r += 7;
            t >>>= 7;
        }
        if ((t & 15) === 0) {
            r += 4;
            t >>>= 4;
        }
        if ((t & 3) === 0) {
            r += 2;
            t >>>= 2;
        }
        if ((t & 1) === 0) r++;
        return r;
    };
    // Return number of used bits in a BN
    BN.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
    };
    function toBitArray(num) {
        var w = new Array(num.bitLength());
        for(var bit = 0; bit < w.length; bit++){
            var off = bit / 26 | 0;
            var wbit = bit % 26;
            w[bit] = (num.words[off] & 1 << wbit) >>> wbit;
        }
        return w;
    }
    // Number of trailing zero bits
    BN.prototype.zeroBits = function zeroBits() {
        if (this.isZero()) return 0;
        var r = 0;
        for(var i = 0; i < this.length; i++){
            var b = this._zeroBits(this.words[i]);
            r += b;
            if (b !== 26) break;
        }
        return r;
    };
    BN.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
    };
    BN.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) return this.abs().inotn(width).iaddn(1);
        return this.clone();
    };
    BN.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) return this.notn(width).iaddn(1).ineg();
        return this.clone();
    };
    BN.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
    };
    // Return negative clone of `this`
    BN.prototype.neg = function neg() {
        return this.clone().ineg();
    };
    BN.prototype.ineg = function ineg() {
        if (!this.isZero()) this.negative ^= 1;
        return this;
    };
    // Or `num` with `this` in-place
    BN.prototype.iuor = function iuor(num) {
        while(this.length < num.length)this.words[this.length++] = 0;
        for(var i = 0; i < num.length; i++)this.words[i] = this.words[i] | num.words[i];
        return this.strip();
    };
    BN.prototype.ior = function ior(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuor(num);
    };
    // Or `num` with `this`
    BN.prototype.or = function or(num) {
        if (this.length > num.length) return this.clone().ior(num);
        return num.clone().ior(this);
    };
    BN.prototype.uor = function uor(num) {
        if (this.length > num.length) return this.clone().iuor(num);
        return num.clone().iuor(this);
    };
    // And `num` with `this` in-place
    BN.prototype.iuand = function iuand(num) {
        // b = min-length(num, this)
        var b;
        if (this.length > num.length) b = num;
        else b = this;
        for(var i = 0; i < b.length; i++)this.words[i] = this.words[i] & num.words[i];
        this.length = b.length;
        return this.strip();
    };
    BN.prototype.iand = function iand(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuand(num);
    };
    // And `num` with `this`
    BN.prototype.and = function and(num) {
        if (this.length > num.length) return this.clone().iand(num);
        return num.clone().iand(this);
    };
    BN.prototype.uand = function uand(num) {
        if (this.length > num.length) return this.clone().iuand(num);
        return num.clone().iuand(this);
    };
    // Xor `num` with `this` in-place
    BN.prototype.iuxor = function iuxor(num) {
        // a.length > b.length
        var a;
        var b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        for(var i = 0; i < b.length; i++)this.words[i] = a.words[i] ^ b.words[i];
        if (this !== a) for(; i < a.length; i++)this.words[i] = a.words[i];
        this.length = a.length;
        return this.strip();
    };
    BN.prototype.ixor = function ixor(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuxor(num);
    };
    // Xor `num` with `this`
    BN.prototype.xor = function xor(num) {
        if (this.length > num.length) return this.clone().ixor(num);
        return num.clone().ixor(this);
    };
    BN.prototype.uxor = function uxor(num) {
        if (this.length > num.length) return this.clone().iuxor(num);
        return num.clone().iuxor(this);
    };
    // Not ``this`` with ``width`` bitwidth
    BN.prototype.inotn = function inotn(width) {
        assert(typeof width === 'number' && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        // Extend the buffer with leading zeroes
        this._expand(bytesNeeded);
        if (bitsLeft > 0) bytesNeeded--;
        // Handle complete words
        for(var i = 0; i < bytesNeeded; i++)this.words[i] = ~this.words[i] & 67108863;
        // Handle the residue
        if (bitsLeft > 0) this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        // And remove leading zeroes
        return this.strip();
    };
    BN.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
    };
    // Set `bit` of `this`
    BN.prototype.setn = function setn(bit, val) {
        assert(typeof bit === 'number' && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) this.words[off] = this.words[off] | 1 << wbit;
        else this.words[off] = this.words[off] & ~(1 << wbit);
        return this.strip();
    };
    // Add `num` to `this` in-place
    BN.prototype.iadd = function iadd(num) {
        var r;
        // negative + positive
        if (this.negative !== 0 && num.negative === 0) {
            this.negative = 0;
            r = this.isub(num);
            this.negative ^= 1;
            return this._normSign();
        // positive + negative
        } else if (this.negative === 0 && num.negative !== 0) {
            num.negative = 0;
            r = this.isub(num);
            num.negative = 1;
            return r._normSign();
        }
        // a.length > b.length
        var a, b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
            this.words[i] = r & 67108863;
            carry = r >>> 26;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            this.words[i] = r & 67108863;
            carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
            this.words[this.length] = carry;
            this.length++;
        // Copy the rest of the words
        } else if (a !== this) for(; i < a.length; i++)this.words[i] = a.words[i];
        return this;
    };
    // Add `num` to `this`
    BN.prototype.add = function add(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
            num.negative = 0;
            res = this.sub(num);
            num.negative ^= 1;
            return res;
        } else if (num.negative === 0 && this.negative !== 0) {
            this.negative = 0;
            res = num.sub(this);
            this.negative = 1;
            return res;
        }
        if (this.length > num.length) return this.clone().iadd(num);
        return num.clone().iadd(this);
    };
    // Subtract `num` from `this` in-place
    BN.prototype.isub = function isub(num) {
        // this - (-num) = this + num
        if (num.negative !== 0) {
            num.negative = 0;
            var r = this.iadd(num);
            num.negative = 1;
            return r._normSign();
        // -this - num = -(this + num)
        } else if (this.negative !== 0) {
            this.negative = 0;
            this.iadd(num);
            this.negative = 1;
            return this._normSign();
        }
        // At this point both numbers are positive
        var cmp = this.cmp(num);
        // Optimization - zeroify
        if (cmp === 0) {
            this.negative = 0;
            this.length = 1;
            this.words[0] = 0;
            return this;
        }
        // a > b
        var a, b;
        if (cmp > 0) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 67108863;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 67108863;
        }
        // Copy rest of the words
        if (carry === 0 && i < a.length && a !== this) for(; i < a.length; i++)this.words[i] = a.words[i];
        this.length = Math.max(this.length, i);
        if (a !== this) this.negative = 1;
        return this.strip();
    };
    // Subtract `num` from `this`
    BN.prototype.sub = function sub(num) {
        return this.clone().isub(num);
    };
    function smallMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        var len = self.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        // Peel one iteration (compiler can't do it, because of code complexity)
        var a = self.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for(var k = 1; k < len; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = carry >>> 26;
            var rword = carry & 67108863;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j | 0;
                a = self.words[i] | 0;
                b = num.words[j] | 0;
                r = a * b + rword;
                ncarry += r / 67108864 | 0;
                rword = r & 67108863;
            }
            out.words[k] = rword | 0;
            carry = ncarry | 0;
        }
        if (carry !== 0) out.words[k] = carry | 0;
        else out.length--;
        return out.strip();
    }
    // TODO(indutny): it may be reasonable to omit it for users who don't need
    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
    // multiplication (like elliptic secp256k1).
    var comb10MulTo = function comb10MulTo1(self, num, out) {
        var a = self.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self.negative ^ num.negative;
        out.length = 19;
        /* k = 0 */ lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        /* k = 1 */ lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        /* k = 2 */ lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        /* k = 3 */ lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        /* k = 4 */ lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        /* k = 5 */ lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        /* k = 6 */ lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        /* k = 7 */ lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        /* k = 8 */ lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        /* k = 9 */ lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        /* k = 10 */ lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        /* k = 11 */ lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        /* k = 12 */ lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        /* k = 13 */ lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        /* k = 14 */ lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        /* k = 15 */ lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        /* k = 16 */ lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        /* k = 17 */ lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        /* k = 18 */ lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
            o[19] = c;
            out.length++;
        }
        return out;
    };
    // Polyfill comb
    if (!Math.imul) comb10MulTo = smallMulTo;
    function bigMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        out.length = self.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for(var k = 0; k < out.length - 1; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = hncarry;
            hncarry = 0;
            var rword = carry & 67108863;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j;
                var a = self.words[i] | 0;
                var b = num.words[j] | 0;
                var r = a * b;
                var lo = r & 67108863;
                ncarry = ncarry + (r / 67108864 | 0) | 0;
                lo = lo + rword | 0;
                rword = lo & 67108863;
                ncarry = ncarry + (lo >>> 26) | 0;
                hncarry += ncarry >>> 26;
                ncarry &= 67108863;
            }
            out.words[k] = rword;
            carry = ncarry;
            ncarry = hncarry;
        }
        if (carry !== 0) out.words[k] = carry;
        else out.length--;
        return out.strip();
    }
    function jumboMulTo(self, num, out) {
        var fftm = new FFTM();
        return fftm.mulp(self, num, out);
    }
    BN.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) res = comb10MulTo(this, num, out);
        else if (len < 63) res = smallMulTo(this, num, out);
        else if (len < 1024) res = bigMulTo(this, num, out);
        else res = jumboMulTo(this, num, out);
        return res;
    };
    // Cooley-Tukey algorithm for FFT
    // slightly revisited to rely on looping instead of recursion
    function FFTM(x, y) {
        this.x = x;
        this.y = y;
    }
    FFTM.prototype.makeRBT = function makeRBT(N) {
        var t = new Array(N);
        var l = BN.prototype._countBits(N) - 1;
        for(var i = 0; i < N; i++)t[i] = this.revBin(i, l, N);
        return t;
    };
    // Returns binary-reversed representation of `x`
    FFTM.prototype.revBin = function revBin(x, l, N) {
        if (x === 0 || x === N - 1) return x;
        var rb = 0;
        for(var i = 0; i < l; i++){
            rb |= (x & 1) << l - i - 1;
            x >>= 1;
        }
        return rb;
    };
    // Performs "tweedling" phase, therefore 'emulating'
    // behaviour of the recursive algorithm
    FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
        for(var i = 0; i < N; i++){
            rtws[i] = rws[rbt[i]];
            itws[i] = iws[rbt[i]];
        }
    };
    FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N);
        for(var s = 1; s < N; s <<= 1){
            var l = s << 1;
            var rtwdf = Math.cos(2 * Math.PI / l);
            var itwdf = Math.sin(2 * Math.PI / l);
            for(var p = 0; p < N; p += l){
                var rtwdf_ = rtwdf;
                var itwdf_ = itwdf;
                for(var j = 0; j < s; j++){
                    var re = rtws[p + j];
                    var ie = itws[p + j];
                    var ro = rtws[p + j + s];
                    var io = itws[p + j + s];
                    var rx = rtwdf_ * ro - itwdf_ * io;
                    io = rtwdf_ * io + itwdf_ * ro;
                    ro = rx;
                    rtws[p + j] = re + ro;
                    itws[p + j] = ie + io;
                    rtws[p + j + s] = re - ro;
                    itws[p + j + s] = ie - io;
                    /* jshint maxdepth : false */ if (j !== l) {
                        rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                        itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                        rtwdf_ = rx;
                    }
                }
            }
        }
    };
    FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N = Math.max(m, n) | 1;
        var odd = N & 1;
        var i = 0;
        for(N = N / 2 | 0; N; N = N >>> 1)i++;
        return 1 << i + 1 + odd;
    };
    FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
        if (N <= 1) return;
        for(var i = 0; i < N / 2; i++){
            var t = rws[i];
            rws[i] = rws[N - i - 1];
            rws[N - i - 1] = t;
            t = iws[i];
            iws[i] = -iws[N - i - 1];
            iws[N - i - 1] = -t;
        }
    };
    FFTM.prototype.normalize13b = function normalize13b(ws, N) {
        var carry = 0;
        for(var i = 0; i < N / 2; i++){
            var w = Math.round(ws[2 * i + 1] / N) * 8192 + Math.round(ws[2 * i] / N) + carry;
            ws[i] = w & 67108863;
            if (w < 67108864) carry = 0;
            else carry = w / 67108864 | 0;
        }
        return ws;
    };
    FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
        var carry = 0;
        for(var i = 0; i < len; i++){
            carry = carry + (ws[i] | 0);
            rws[2 * i] = carry & 8191;
            carry = carry >>> 13;
            rws[2 * i + 1] = carry & 8191;
            carry = carry >>> 13;
        }
        // Pad with zeroes
        for(i = 2 * len; i < N; ++i)rws[i] = 0;
        assert(carry === 0);
        assert((carry & -8192) === 0);
    };
    FFTM.prototype.stub = function stub(N) {
        var ph = new Array(N);
        for(var i = 0; i < N; i++)ph[i] = 0;
        return ph;
    };
    FFTM.prototype.mulp = function mulp(x, y, out) {
        var N = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N);
        var _ = this.stub(N);
        var rws = new Array(N);
        var rwst = new Array(N);
        var iwst = new Array(N);
        var nrws = new Array(N);
        var nrwst = new Array(N);
        var niwst = new Array(N);
        var rmws = out.words;
        rmws.length = N;
        this.convert13b(x.words, x.length, rws, N);
        this.convert13b(y.words, y.length, nrws, N);
        this.transform(rws, _, rwst, iwst, N, rbt);
        this.transform(nrws, _, nrwst, niwst, N, rbt);
        for(var i = 0; i < N; i++){
            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
            iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
            rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N);
        this.transform(rwst, iwst, rmws, _, N, rbt);
        this.conjugate(rmws, _, N);
        this.normalize13b(rmws, N);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out.strip();
    };
    // Multiply `this` by `num`
    BN.prototype.mul = function mul(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
    };
    // Multiply employing FFT
    BN.prototype.mulf = function mulf(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
    };
    // In-place Multiplication
    BN.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
    };
    BN.prototype.imuln = function imuln(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        // Carry
        var carry = 0;
        for(var i = 0; i < this.length; i++){
            var w = (this.words[i] | 0) * num;
            var lo = (w & 67108863) + (carry & 67108863);
            carry >>= 26;
            carry += w / 67108864 | 0;
            // NOTE: lo is 27bit maximum
            carry += lo >>> 26;
            this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return this;
    };
    BN.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
    };
    // `this` * `this`
    BN.prototype.sqr = function sqr() {
        return this.mul(this);
    };
    // `this` * `this` in-place
    BN.prototype.isqr = function isqr() {
        return this.imul(this.clone());
    };
    // Math.pow(`this`, `num`)
    BN.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0) return new BN(1);
        // Skip leading zeroes
        var res = this;
        for(var i = 0; i < w.length; i++, res = res.sqr()){
            if (w[i] !== 0) break;
        }
        if ((++i) < w.length) for(var q = res.sqr(); i < w.length; i++, q = q.sqr()){
            if (w[i] === 0) continue;
            res = res.mul(q);
        }
        return res;
    };
    // Shift-left in-place
    BN.prototype.iushln = function iushln(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
            var carry = 0;
            for(i = 0; i < this.length; i++){
                var newCarry = this.words[i] & carryMask;
                var c = (this.words[i] | 0) - newCarry << r;
                this.words[i] = c | carry;
                carry = newCarry >>> 26 - r;
            }
            if (carry) {
                this.words[i] = carry;
                this.length++;
            }
        }
        if (s !== 0) {
            for(i = this.length - 1; i >= 0; i--)this.words[i + s] = this.words[i];
            for(i = 0; i < s; i++)this.words[i] = 0;
            this.length += s;
        }
        return this.strip();
    };
    BN.prototype.ishln = function ishln(bits) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushln(bits);
    };
    // Shift-right in-place
    // NOTE: `hint` is a lowest bit before trailing zeroes
    // NOTE: if `extended` is present - it will be filled with destroyed bits
    BN.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert(typeof bits === 'number' && bits >= 0);
        var h;
        if (hint) h = (hint - hint % 26) / 26;
        else h = 0;
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        // Extended mode, copy masked part
        if (maskedWords) {
            for(var i = 0; i < s; i++)maskedWords.words[i] = this.words[i];
            maskedWords.length = s;
        }
        if (s === 0) ;
        else if (this.length > s) {
            this.length -= s;
            for(i = 0; i < this.length; i++)this.words[i] = this.words[i + s];
        } else {
            this.words[0] = 0;
            this.length = 1;
        }
        var carry = 0;
        for(i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--){
            var word = this.words[i] | 0;
            this.words[i] = carry << 26 - r | word >>> r;
            carry = word & mask;
        }
        // Push carried bits as a mask
        if (maskedWords && carry !== 0) maskedWords.words[maskedWords.length++] = carry;
        if (this.length === 0) {
            this.words[0] = 0;
            this.length = 1;
        }
        return this.strip();
    };
    BN.prototype.ishrn = function ishrn(bits, hint, extended) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushrn(bits, hint, extended);
    };
    // Shift-left
    BN.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
    };
    BN.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
    };
    // Shift-right
    BN.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
    };
    BN.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
    };
    // Test if n bit is set
    BN.prototype.testn = function testn(bit) {
        assert(typeof bit === 'number' && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) return false;
        // Check bit and return
        var w = this.words[s];
        return !!(w & q);
    };
    // Return only lowers bits of number (in-place)
    BN.prototype.imaskn = function imaskn(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert(this.negative === 0, 'imaskn works only with positive numbers');
        if (this.length <= s) return this;
        if (r !== 0) s++;
        this.length = Math.min(s, this.length);
        if (r !== 0) {
            var mask = 67108863 ^ 67108863 >>> r << r;
            this.words[this.length - 1] &= mask;
        }
        return this.strip();
    };
    // Return only lowers bits of number
    BN.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
    };
    // Add plain number `num` to `this`
    BN.prototype.iaddn = function iaddn(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        if (num < 0) return this.isubn(-num);
        // Possible sign change
        if (this.negative !== 0) {
            if (this.length === 1 && (this.words[0] | 0) < num) {
                this.words[0] = num - (this.words[0] | 0);
                this.negative = 0;
                return this;
            }
            this.negative = 0;
            this.isubn(num);
            this.negative = 1;
            return this;
        }
        // Add without checks
        return this._iaddn(num);
    };
    BN.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        // Carry
        for(var i = 0; i < this.length && this.words[i] >= 67108864; i++){
            this.words[i] -= 67108864;
            if (i === this.length - 1) this.words[i + 1] = 1;
            else this.words[i + 1]++;
        }
        this.length = Math.max(this.length, i + 1);
        return this;
    };
    // Subtract plain number `num` from `this`
    BN.prototype.isubn = function isubn(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        if (num < 0) return this.iaddn(-num);
        if (this.negative !== 0) {
            this.negative = 0;
            this.iaddn(num);
            this.negative = 1;
            return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
            this.words[0] = -this.words[0];
            this.negative = 1;
        } else // Carry
        for(var i = 0; i < this.length && this.words[i] < 0; i++){
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
        }
        return this.strip();
    };
    BN.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
    };
    BN.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
    };
    BN.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
    };
    BN.prototype.abs = function abs() {
        return this.clone().iabs();
    };
    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul1, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for(i = 0; i < num.length; i++){
            w = (this.words[i + shift] | 0) + carry;
            var right = (num.words[i] | 0) * mul1;
            w -= right & 67108863;
            carry = (w >> 26) - (right / 67108864 | 0);
            this.words[i + shift] = w & 67108863;
        }
        for(; i < this.length - shift; i++){
            w = (this.words[i + shift] | 0) + carry;
            carry = w >> 26;
            this.words[i + shift] = w & 67108863;
        }
        if (carry === 0) return this.strip();
        // Subtraction overflow
        assert(carry === -1);
        carry = 0;
        for(i = 0; i < this.length; i++){
            w = -(this.words[i] | 0) + carry;
            carry = w >> 26;
            this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this.strip();
    };
    BN.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        // Normalize
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
            b = b.ushln(shift);
            a.iushln(shift);
            bhi = b.words[b.length - 1] | 0;
        }
        // Initialize quotient
        var m = a.length - b.length;
        var q;
        if (mode !== 'mod') {
            q = new BN(null);
            q.length = m + 1;
            q.words = new Array(q.length);
            for(var i = 0; i < q.length; i++)q.words[i] = 0;
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
            a = diff;
            if (q) q.words[m] = 1;
        }
        for(var j = m - 1; j >= 0; j--){
            var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
            // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
            // (0x7ffffff)
            qj = Math.min(qj / bhi | 0, 67108863);
            a._ishlnsubmul(b, qj, j);
            while(a.negative !== 0){
                qj--;
                a.negative = 0;
                a._ishlnsubmul(b, 1, j);
                if (!a.isZero()) a.negative ^= 1;
            }
            if (q) q.words[j] = qj;
        }
        if (q) q.strip();
        a.strip();
        // Denormalize
        if (mode !== 'div' && shift !== 0) a.iushrn(shift);
        return {
            div: q || null,
            mod: a
        };
    };
    // NOTE: 1) `mode` can be set to `mod` to request mod only,
    //       to `div` to request div only, or be absent to
    //       request both div & mod
    //       2) `positive` is true if unsigned mod is requested
    BN.prototype.divmod = function divmod(num, mode, positive) {
        assert(!num.isZero());
        if (this.isZero()) return {
            div: new BN(0),
            mod: new BN(0)
        };
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
            res = this.neg().divmod(num, mode);
            if (mode !== 'mod') div = res.div.neg();
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) mod.iadd(num);
            }
            return {
                div: div,
                mod: mod
            };
        }
        if (this.negative === 0 && num.negative !== 0) {
            res = this.divmod(num.neg(), mode);
            if (mode !== 'mod') div = res.div.neg();
            return {
                div: div,
                mod: res.mod
            };
        }
        if ((this.negative & num.negative) !== 0) {
            res = this.neg().divmod(num.neg(), mode);
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) mod.isub(num);
            }
            return {
                div: res.div,
                mod: mod
            };
        }
        // Both numbers are positive at this point
        // Strip both numbers to approximate shift value
        if (num.length > this.length || this.cmp(num) < 0) return {
            div: new BN(0),
            mod: this
        };
        // Very short reduction
        if (num.length === 1) {
            if (mode === 'div') return {
                div: this.divn(num.words[0]),
                mod: null
            };
            if (mode === 'mod') return {
                div: null,
                mod: new BN(this.modn(num.words[0]))
            };
            return {
                div: this.divn(num.words[0]),
                mod: new BN(this.modn(num.words[0]))
            };
        }
        return this._wordDiv(num, mode);
    };
    // Find `this` / `num`
    BN.prototype.div = function div(num) {
        return this.divmod(num, 'div', false).div;
    };
    // Find `this` % `num`
    BN.prototype.mod = function mod(num) {
        return this.divmod(num, 'mod', false).mod;
    };
    BN.prototype.umod = function umod(num) {
        return this.divmod(num, 'mod', true).mod;
    };
    // Find Round(`this` / `num`)
    BN.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        // Fast case - exact division
        if (dm.mod.isZero()) return dm.div;
        var mod1 = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod1.cmp(half);
        // Round down
        if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;
        // Round up
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
    };
    BN.prototype.modn = function modn(num) {
        assert(num <= 67108863);
        var p = 67108864 % num;
        var acc = 0;
        for(var i = this.length - 1; i >= 0; i--)acc = (p * acc + (this.words[i] | 0)) % num;
        return acc;
    };
    // In-place division by number
    BN.prototype.idivn = function idivn(num) {
        assert(num <= 67108863);
        var carry = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var w = (this.words[i] | 0) + carry * 67108864;
            this.words[i] = w / num | 0;
            carry = w % num;
        }
        return this.strip();
    };
    BN.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
    };
    BN.prototype.egcd = function egcd(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) x = x.umod(p);
        else x = x.clone();
        // A * x + B * y = x
        var A = new BN(1);
        var B = new BN(0);
        // C * x + D * y = y
        var C = new BN(0);
        var D = new BN(1);
        var g = 0;
        while(x.isEven() && y.isEven()){
            x.iushrn(1);
            y.iushrn(1);
            ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while(!x.isZero()){
            for(var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                x.iushrn(i);
                while((i--) > 0){
                    if (A.isOdd() || B.isOdd()) {
                        A.iadd(yp);
                        B.isub(xp);
                    }
                    A.iushrn(1);
                    B.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                y.iushrn(j);
                while((j--) > 0){
                    if (C.isOdd() || D.isOdd()) {
                        C.iadd(yp);
                        D.isub(xp);
                    }
                    C.iushrn(1);
                    D.iushrn(1);
                }
            }
            if (x.cmp(y) >= 0) {
                x.isub(y);
                A.isub(C);
                B.isub(D);
            } else {
                y.isub(x);
                C.isub(A);
                D.isub(B);
            }
        }
        return {
            a: C,
            b: D,
            gcd: y.iushln(g)
        };
    };
    // This is reduced incarnation of the binary EEA
    // above, designated to invert members of the
    // _prime_ fields F(p) at a maximal speed
    BN.prototype._invmp = function _invmp(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) a = a.umod(p);
        else a = a.clone();
        var x1 = new BN(1);
        var x2 = new BN(0);
        var delta = b.clone();
        while(a.cmpn(1) > 0 && b.cmpn(1) > 0){
            for(var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                a.iushrn(i);
                while((i--) > 0){
                    if (x1.isOdd()) x1.iadd(delta);
                    x1.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                b.iushrn(j);
                while((j--) > 0){
                    if (x2.isOdd()) x2.iadd(delta);
                    x2.iushrn(1);
                }
            }
            if (a.cmp(b) >= 0) {
                a.isub(b);
                x1.isub(x2);
            } else {
                b.isub(a);
                x2.isub(x1);
            }
        }
        var res;
        if (a.cmpn(1) === 0) res = x1;
        else res = x2;
        if (res.cmpn(0) < 0) res.iadd(p);
        return res;
    };
    BN.prototype.gcd = function gcd(num) {
        if (this.isZero()) return num.abs();
        if (num.isZero()) return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        // Remove common factor of two
        for(var shift = 0; a.isEven() && b.isEven(); shift++){
            a.iushrn(1);
            b.iushrn(1);
        }
        do {
            while(a.isEven())a.iushrn(1);
            while(b.isEven())b.iushrn(1);
            var r = a.cmp(b);
            if (r < 0) {
                // Swap `a` and `b` to make `a` always bigger than `b`
                var t = a;
                a = b;
                b = t;
            } else if (r === 0 || b.cmpn(1) === 0) break;
            a.isub(b);
        }while (true)
        return b.iushln(shift);
    };
    // Invert number in the field F(num)
    BN.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
    };
    BN.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
    };
    BN.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
    };
    // And first word and num
    BN.prototype.andln = function andln(num) {
        return this.words[0] & num;
    };
    // Increment at the bit position in-line
    BN.prototype.bincn = function bincn(bit) {
        assert(typeof bit === 'number');
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) {
            this._expand(s + 1);
            this.words[s] |= q;
            return this;
        }
        // Add bit and propagate, if needed
        var carry = q;
        for(var i = s; carry !== 0 && i < this.length; i++){
            var w = this.words[i] | 0;
            w += carry;
            carry = w >>> 26;
            w &= 67108863;
            this.words[i] = w;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return this;
    };
    BN.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
    };
    BN.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative) return -1;
        if (this.negative === 0 && negative) return 1;
        this.strip();
        var res;
        if (this.length > 1) res = 1;
        else {
            if (negative) num = -num;
            assert(num <= 67108863, 'Number is too big');
            var w = this.words[0] | 0;
            res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Compare two numbers and return:
    // 1 - if `this` > `num`
    // 0 - if `this` == `num`
    // -1 - if `this` < `num`
    BN.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0) return -1;
        if (this.negative === 0 && num.negative !== 0) return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Unsigned comparison
    BN.prototype.ucmp = function ucmp(num) {
        // At this point both numbers have the same sign
        if (this.length > num.length) return 1;
        if (this.length < num.length) return -1;
        var res = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var a = this.words[i] | 0;
            var b = num.words[i] | 0;
            if (a === b) continue;
            if (a < b) res = -1;
            else if (a > b) res = 1;
            break;
        }
        return res;
    };
    BN.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
    };
    BN.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
    };
    BN.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
    };
    BN.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
    };
    BN.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
    };
    BN.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
    };
    BN.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
    };
    BN.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
    };
    BN.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
    };
    BN.prototype.eq = function eq(num) {
        return this.cmp(num) === 0;
    };
    //
    // A reduce context, could be using montgomery or something better, depending
    // on the `m` itself.
    //
    BN.red = function red(num) {
        return new Red(num);
    };
    BN.prototype.toRed = function toRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        assert(this.negative === 0, 'red works only with positives');
        return ctx.convertTo(this)._forceRed(ctx);
    };
    BN.prototype.fromRed = function fromRed() {
        assert(this.red, 'fromRed works only with numbers in reduction context');
        return this.red.convertFrom(this);
    };
    BN.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
    };
    BN.prototype.forceRed = function forceRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        return this._forceRed(ctx);
    };
    BN.prototype.redAdd = function redAdd(num) {
        assert(this.red, 'redAdd works only with red numbers');
        return this.red.add(this, num);
    };
    BN.prototype.redIAdd = function redIAdd(num) {
        assert(this.red, 'redIAdd works only with red numbers');
        return this.red.iadd(this, num);
    };
    BN.prototype.redSub = function redSub(num) {
        assert(this.red, 'redSub works only with red numbers');
        return this.red.sub(this, num);
    };
    BN.prototype.redISub = function redISub(num) {
        assert(this.red, 'redISub works only with red numbers');
        return this.red.isub(this, num);
    };
    BN.prototype.redShl = function redShl(num) {
        assert(this.red, 'redShl works only with red numbers');
        return this.red.shl(this, num);
    };
    BN.prototype.redMul = function redMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.mul(this, num);
    };
    BN.prototype.redIMul = function redIMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.imul(this, num);
    };
    BN.prototype.redSqr = function redSqr() {
        assert(this.red, 'redSqr works only with red numbers');
        this.red._verify1(this);
        return this.red.sqr(this);
    };
    BN.prototype.redISqr = function redISqr() {
        assert(this.red, 'redISqr works only with red numbers');
        this.red._verify1(this);
        return this.red.isqr(this);
    };
    // Square root over p
    BN.prototype.redSqrt = function redSqrt() {
        assert(this.red, 'redSqrt works only with red numbers');
        this.red._verify1(this);
        return this.red.sqrt(this);
    };
    BN.prototype.redInvm = function redInvm() {
        assert(this.red, 'redInvm works only with red numbers');
        this.red._verify1(this);
        return this.red.invm(this);
    };
    // Return negative clone of `this` % `red modulo`
    BN.prototype.redNeg = function redNeg() {
        assert(this.red, 'redNeg works only with red numbers');
        this.red._verify1(this);
        return this.red.neg(this);
    };
    BN.prototype.redPow = function redPow(num) {
        assert(this.red && !num.red, 'redPow(normalNum)');
        this.red._verify1(this);
        return this.red.pow(this, num);
    };
    // Prime numbers with efficient reduction
    var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
    };
    // Pseudo-Mersenne prime
    function MPrime(name, p) {
        // P = 2 ^ N - K
        this.name = name;
        this.p = new BN(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
    }
    MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
    };
    MPrime.prototype.ireduce = function ireduce(num) {
        // Assumes that `num` is less than `P^2`
        // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
        var r = num;
        var rlen;
        do {
            this.split(r, this.tmp);
            r = this.imulK(r);
            r = r.iadd(this.tmp);
            rlen = r.bitLength();
        }while (rlen > this.n)
        var cmp1 = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp1 === 0) {
            r.words[0] = 0;
            r.length = 1;
        } else if (cmp1 > 0) r.isub(this.p);
        else if (r.strip !== undefined) // r is BN v4 instance
        r.strip();
        else // r is BN v5 instance
        r._strip();
        return r;
    };
    MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
    };
    MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
    };
    function K256() {
        MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
    }
    inherits(K256, MPrime);
    K256.prototype.split = function split1(input, output) {
        // 256 = 9 * 26 + 22
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for(var i = 0; i < outLen; i++)output.words[i] = input.words[i];
        output.length = outLen;
        if (input.length <= 9) {
            input.words[0] = 0;
            input.length = 1;
            return;
        }
        // Shift by 9 limbs
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for(i = 10; i < input.length; i++){
            var next = input.words[i] | 0;
            input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
            prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) input.length -= 10;
        else input.length -= 9;
    };
    K256.prototype.imulK = function imulK1(num) {
        // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
        var lo = 0;
        for(var i = 0; i < num.length; i++){
            var w = num.words[i] | 0;
            lo += w * 977;
            num.words[i] = lo & 67108863;
            lo = w * 64 + (lo / 67108864 | 0);
        }
        // Fast length reduction
        if (num.words[num.length - 1] === 0) {
            num.length--;
            if (num.words[num.length - 1] === 0) num.length--;
        }
        return num;
    };
    function P224() {
        MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
    }
    inherits(P224, MPrime);
    function P192() {
        MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
    }
    inherits(P192, MPrime);
    function P25519() {
        // 2 ^ 255 - 19
        MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
    }
    inherits(P25519, MPrime);
    P25519.prototype.imulK = function imulK2(num) {
        // K = 0x13
        var carry = 0;
        for(var i = 0; i < num.length; i++){
            var hi = (num.words[i] | 0) * 19 + carry;
            var lo = hi & 67108863;
            hi >>>= 26;
            num.words[i] = lo;
            carry = hi;
        }
        if (carry !== 0) num.words[num.length++] = carry;
        return num;
    };
    // Exported mostly for testing purposes, use plain name instead
    BN._prime = function prime(name) {
        // Cached version of prime
        if (primes[name]) return primes[name];
        var prime;
        if (name === 'k256') prime = new K256();
        else if (name === 'p224') prime = new P224();
        else if (name === 'p192') prime = new P192();
        else if (name === 'p25519') prime = new P25519();
        else throw new Error('Unknown prime ' + name);
        primes[name] = prime;
        return prime;
    };
    //
    // Base reduction engine
    //
    function Red(m) {
        if (typeof m === 'string') {
            var prime1 = BN._prime(m);
            this.m = prime1.p;
            this.prime = prime1;
        } else {
            assert(m.gtn(1), 'modulus must be greater than 1');
            this.m = m;
            this.prime = null;
        }
    }
    Red.prototype._verify1 = function _verify1(a) {
        assert(a.negative === 0, 'red works only with positives');
        assert(a.red, 'red works only with red numbers');
    };
    Red.prototype._verify2 = function _verify2(a, b) {
        assert((a.negative | b.negative) === 0, 'red works only with positives');
        assert(a.red && a.red === b.red, 'red works only with red numbers');
    };
    Red.prototype.imod = function imod(a) {
        if (this.prime) return this.prime.ireduce(a)._forceRed(this);
        return a.umod(this.m)._forceRed(this);
    };
    Red.prototype.neg = function neg1(a) {
        if (a.isZero()) return a.clone();
        return this.m.sub(a)._forceRed(this);
    };
    Red.prototype.add = function add1(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) res.isub(this.m);
        return res._forceRed(this);
    };
    Red.prototype.iadd = function iadd1(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) res.isub(this.m);
        return res;
    };
    Red.prototype.sub = function sub1(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) res.iadd(this.m);
        return res._forceRed(this);
    };
    Red.prototype.isub = function isub1(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) res.iadd(this.m);
        return res;
    };
    Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
    };
    Red.prototype.imul = function imul1(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
    };
    Red.prototype.mul = function mul1(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
    };
    Red.prototype.isqr = function isqr1(a) {
        return this.imul(a, a.clone());
    };
    Red.prototype.sqr = function sqr1(a) {
        return this.mul(a, a);
    };
    Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero()) return a.clone();
        var mod3 = this.m.andln(3);
        assert(mod3 % 2 === 1);
        // Fast case
        if (mod3 === 3) {
            var pow1 = this.m.add(new BN(1)).iushrn(2);
            return this.pow(a, pow1);
        }
        // Tonelli-Shanks algorithm (Totally unoptimized and slow)
        //
        // Find Q and S, that Q * 2 ^ S = (P - 1)
        var q = this.m.subn(1);
        var s = 0;
        while(!q.isZero() && q.andln(1) === 0){
            s++;
            q.iushrn(1);
        }
        assert(!q.isZero());
        var one = new BN(1).toRed(this);
        var nOne = one.redNeg();
        // Find quadratic non-residue
        // NOTE: Max is such because of generalized Riemann hypothesis.
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN(2 * z * z).toRed(this);
        while(this.pow(z, lpow).cmp(nOne) !== 0)z.redIAdd(nOne);
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while(t.cmp(one) !== 0){
            var tmp = t;
            for(var i = 0; tmp.cmp(one) !== 0; i++)tmp = tmp.redSqr();
            assert(i < m);
            var b = this.pow(c, new BN(1).iushln(m - i - 1));
            r = r.redMul(b);
            c = b.redSqr();
            t = t.redMul(c);
            m = i;
        }
        return r;
    };
    Red.prototype.invm = function invm1(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
            inv.negative = 0;
            return this.imod(inv).redNeg();
        } else return this.imod(inv);
    };
    Red.prototype.pow = function pow2(a, num) {
        if (num.isZero()) return new BN(1).toRed(this);
        if (num.cmpn(1) === 0) return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN(1).toRed(this);
        wnd[1] = a;
        for(var i = 2; i < wnd.length; i++)wnd[i] = this.mul(wnd[i - 1], a);
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) start = 26;
        for(i = num.length - 1; i >= 0; i--){
            var word = num.words[i];
            for(var j = start - 1; j >= 0; j--){
                var bit = word >> j & 1;
                if (res !== wnd[0]) res = this.sqr(res);
                if (bit === 0 && current === 0) {
                    currentLen = 0;
                    continue;
                }
                current <<= 1;
                current |= bit;
                currentLen++;
                if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;
                res = this.mul(res, wnd[current]);
                currentLen = 0;
                current = 0;
            }
            start = 26;
        }
        return res;
    };
    Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
    };
    Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
    };
    //
    // Montgomery method engine
    //
    BN.mont = function mont(num) {
        return new Mont(num);
    };
    function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) this.shift += 26 - this.shift % 26;
        this.r = new BN(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
    }
    inherits(Mont, Red);
    Mont.prototype.convertTo = function convertTo1(num) {
        return this.imod(num.ushln(this.shift));
    };
    Mont.prototype.convertFrom = function convertFrom1(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
    };
    Mont.prototype.imul = function imul2(a, b) {
        if (a.isZero() || b.isZero()) {
            a.words[0] = 0;
            a.length = 1;
            return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) res = u.isub(this.m);
        else if (u.cmpn(0) < 0) res = u.iadd(this.m);
        return res._forceRed(this);
    };
    Mont.prototype.mul = function mul2(a, b) {
        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) res = u.isub(this.m);
        else if (u.cmpn(0) < 0) res = u.iadd(this.m);
        return res._forceRed(this);
    };
    Mont.prototype.invm = function invm2(a) {
        // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
    };
})(typeof module === 'undefined' || module, this);

},{"buffer":"4LM6B"}],"dcUqV":[function(require,module,exports) {
var bn = require('bn.js');
var brorand = require('brorand');
function MillerRabin(rand) {
    this.rand = rand || new brorand.Rand();
}
module.exports = MillerRabin;
MillerRabin.create = function create(rand) {
    return new MillerRabin(rand);
};
MillerRabin.prototype._randbelow = function _randbelow(n) {
    var len = n.bitLength();
    var min_bytes = Math.ceil(len / 8);
    // Generage random bytes until a number less than n is found.
    // This ensures that 0..n-1 have an equal probability of being selected.
    do var a = new bn(this.rand.generate(min_bytes));
    while (a.cmp(n) >= 0)
    return a;
};
MillerRabin.prototype._randrange = function _randrange(start, stop) {
    // Generate a random number greater than or equal to start and less than stop.
    var size = stop.sub(start);
    return start.add(this._randbelow(size));
};
MillerRabin.prototype.test = function test(n, k, cb) {
    var len = n.bitLength();
    var red = bn.mont(n);
    var rone = new bn(1).toRed(red);
    if (!k) k = Math.max(1, len / 48 | 0);
    // Find d and s, (n - 1) = (2 ^ s) * d;
    var n1 = n.subn(1);
    for(var s = 0; !n1.testn(s); s++);
    var d = n.shrn(s);
    var rn1 = n1.toRed(red);
    var prime = true;
    for(; k > 0; k--){
        var a = this._randrange(new bn(2), n1);
        if (cb) cb(a);
        var x = a.toRed(red).redPow(d);
        if (x.cmp(rone) === 0 || x.cmp(rn1) === 0) continue;
        for(var i = 1; i < s; i++){
            x = x.redSqr();
            if (x.cmp(rone) === 0) return false;
            if (x.cmp(rn1) === 0) break;
        }
        if (i === s) return false;
    }
    return prime;
};
MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
    var len = n.bitLength();
    var red = bn.mont(n);
    var rone = new bn(1).toRed(red);
    if (!k) k = Math.max(1, len / 48 | 0);
    // Find d and s, (n - 1) = (2 ^ s) * d;
    var n1 = n.subn(1);
    for(var s = 0; !n1.testn(s); s++);
    var d = n.shrn(s);
    var rn1 = n1.toRed(red);
    for(; k > 0; k--){
        var a = this._randrange(new bn(2), n1);
        var g = n.gcd(a);
        if (g.cmpn(1) !== 0) return g;
        var x = a.toRed(red).redPow(d);
        if (x.cmp(rone) === 0 || x.cmp(rn1) === 0) continue;
        for(var i = 1; i < s; i++){
            x = x.redSqr();
            if (x.cmp(rone) === 0) return x.fromRed().subn(1).gcd(n);
            if (x.cmp(rn1) === 0) break;
        }
        if (i === s) {
            x = x.redSqr();
            return x.fromRed().subn(1).gcd(n);
        }
    }
    return false;
};

},{"bn.js":"1X6pT","brorand":"auxXf"}],"1X6pT":[function(require,module,exports) {
(function(module, exports) {
    // Utils
    function assert(val, msg) {
        if (!val) throw new Error(msg || 'Assertion failed');
    }
    // Could use `inherits` module, but don't want to move from single file
    // architecture yet.
    function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
    }
    // BN
    function BN(number, base, endian) {
        if (BN.isBN(number)) return number;
        this.negative = 0;
        this.words = null;
        this.length = 0;
        // Reduction context
        this.red = null;
        if (number !== null) {
            if (base === 'le' || base === 'be') {
                endian = base;
                base = 10;
            }
            this._init(number || 0, base || 10, endian || 'be');
        }
    }
    if (typeof module === 'object') module.exports = BN;
    else exports.BN = BN;
    BN.BN = BN;
    BN.wordSize = 26;
    var Buffer;
    try {
        if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') Buffer = window.Buffer;
        else Buffer = require('buffer').Buffer;
    } catch (e) {
    }
    BN.isBN = function isBN(num) {
        if (num instanceof BN) return true;
        return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
    };
    BN.max = function max(left, right) {
        if (left.cmp(right) > 0) return left;
        return right;
    };
    BN.min = function min(left, right) {
        if (left.cmp(right) < 0) return left;
        return right;
    };
    BN.prototype._init = function init(number, base, endian) {
        if (typeof number === 'number') return this._initNumber(number, base, endian);
        if (typeof number === 'object') return this._initArray(number, base, endian);
        if (base === 'hex') base = 16;
        assert(base === (base | 0) && base >= 2 && base <= 36);
        number = number.toString().replace(/\s+/g, '');
        var start = 0;
        if (number[0] === '-') {
            start++;
            this.negative = 1;
        }
        if (start < number.length) {
            if (base === 16) this._parseHex(number, start, endian);
            else {
                this._parseBase(number, base, start);
                if (endian === 'le') this._initArray(this.toArray(), base, endian);
            }
        }
    };
    BN.prototype._initNumber = function _initNumber(number, base, endian) {
        if (number < 0) {
            this.negative = 1;
            number = -number;
        }
        if (number < 67108864) {
            this.words = [
                number & 67108863
            ];
            this.length = 1;
        } else if (number < 4503599627370496) {
            this.words = [
                number & 67108863,
                number / 67108864 & 67108863
            ];
            this.length = 2;
        } else {
            assert(number < 9007199254740992); // 2 ^ 53 (unsafe)
            this.words = [
                number & 67108863,
                number / 67108864 & 67108863,
                1
            ];
            this.length = 3;
        }
        if (endian !== 'le') return;
        // Reverse the bytes
        this._initArray(this.toArray(), base, endian);
    };
    BN.prototype._initArray = function _initArray(number, base, endian) {
        // Perhaps a Uint8Array
        assert(typeof number.length === 'number');
        if (number.length <= 0) {
            this.words = [
                0
            ];
            this.length = 1;
            return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)this.words[i] = 0;
        var j, w;
        var off = 0;
        if (endian === 'be') for(i = number.length - 1, j = 0; i >= 0; i -= 3){
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        else if (endian === 'le') for(i = 0, j = 0; i < number.length; i += 3){
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        return this.strip();
    };
    function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        // 'A' - 'F'
        if (c >= 65 && c <= 70) return c - 55;
        else if (c >= 97 && c <= 102) return c - 87;
        else return c - 48 & 15;
    }
    function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) r |= parseHex4Bits(string, index - 1) << 4;
        return r;
    }
    BN.prototype._parseHex = function _parseHex(number, start, endian) {
        // Create possibly bigger array to ensure that it fits the number
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)this.words[i] = 0;
        // 24-bits chunks
        var off = 0;
        var j = 0;
        var w;
        if (endian === 'be') for(i = number.length - 1; i >= start; i -= 2){
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
                off -= 18;
                j += 1;
                this.words[j] |= w >>> 26;
            } else off += 8;
        }
        else {
            var parseLength = number.length - start;
            for(i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2){
                w = parseHexByte(number, start, i) << off;
                this.words[j] |= w & 67108863;
                if (off >= 18) {
                    off -= 18;
                    j += 1;
                    this.words[j] |= w >>> 26;
                } else off += 8;
            }
        }
        this.strip();
    };
    function parseBase(str, start, end, mul) {
        var r = 0;
        var len = Math.min(str.length, end);
        for(var i = start; i < len; i++){
            var c = str.charCodeAt(i) - 48;
            r *= mul;
            // 'a'
            if (c >= 49) r += c - 49 + 10;
            else if (c >= 17) r += c - 17 + 10;
            else r += c;
        }
        return r;
    }
    BN.prototype._parseBase = function _parseBase(number, base, start) {
        // Initialize as zero
        this.words = [
            0
        ];
        this.length = 1;
        // Find length of limb in base
        for(var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base)limbLen++;
        limbLen--;
        limbPow = limbPow / base | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for(var i = start; i < end; i += limbLen){
            word = parseBase(number, i, i + limbLen, base);
            this.imuln(limbPow);
            if (this.words[0] + word < 67108864) this.words[0] += word;
            else this._iaddn(word);
        }
        if (mod !== 0) {
            var pow = 1;
            word = parseBase(number, i, number.length, base);
            for(i = 0; i < mod; i++)pow *= base;
            this.imuln(pow);
            if (this.words[0] + word < 67108864) this.words[0] += word;
            else this._iaddn(word);
        }
        this.strip();
    };
    BN.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)dest.words[i] = this.words[i];
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
    };
    BN.prototype.clone = function clone() {
        var r = new BN(null);
        this.copy(r);
        return r;
    };
    BN.prototype._expand = function _expand(size) {
        while(this.length < size)this.words[this.length++] = 0;
        return this;
    };
    // Remove leading `0` from `this`
    BN.prototype.strip = function strip() {
        while(this.length > 1 && this.words[this.length - 1] === 0)this.length--;
        return this._normSign();
    };
    BN.prototype._normSign = function _normSign() {
        // -0 = 0
        if (this.length === 1 && this.words[0] === 0) this.negative = 0;
        return this;
    };
    BN.prototype.inspect = function inspect() {
        return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
    };
    /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */ var zeros = [
        '',
        '0',
        '00',
        '000',
        '0000',
        '00000',
        '000000',
        '0000000',
        '00000000',
        '000000000',
        '0000000000',
        '00000000000',
        '000000000000',
        '0000000000000',
        '00000000000000',
        '000000000000000',
        '0000000000000000',
        '00000000000000000',
        '000000000000000000',
        '0000000000000000000',
        '00000000000000000000',
        '000000000000000000000',
        '0000000000000000000000',
        '00000000000000000000000',
        '000000000000000000000000',
        '0000000000000000000000000'
    ];
    var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
    ];
    var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        10000000,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64000000,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        24300000,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
    ];
    BN.prototype.toString = function toString(base, padding) {
        base = base || 10;
        padding = padding | 0 || 1;
        var out;
        if (base === 16 || base === 'hex') {
            out = '';
            var off = 0;
            var carry = 0;
            for(var i = 0; i < this.length; i++){
                var w = this.words[i];
                var word = ((w << off | carry) & 16777215).toString(16);
                carry = w >>> 24 - off & 16777215;
                if (carry !== 0 || i !== this.length - 1) out = zeros[6 - word.length] + word + out;
                else out = word + out;
                off += 2;
                if (off >= 26) {
                    off -= 26;
                    i--;
                }
            }
            if (carry !== 0) out = carry.toString(16) + out;
            while(out.length % padding !== 0)out = '0' + out;
            if (this.negative !== 0) out = '-' + out;
            return out;
        }
        if (base === (base | 0) && base >= 2 && base <= 36) {
            // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
            var groupSize = groupSizes[base];
            // var groupBase = Math.pow(base, groupSize);
            var groupBase = groupBases[base];
            out = '';
            var c = this.clone();
            c.negative = 0;
            while(!c.isZero()){
                var r = c.modn(groupBase).toString(base);
                c = c.idivn(groupBase);
                if (!c.isZero()) out = zeros[groupSize - r.length] + r + out;
                else out = r + out;
            }
            if (this.isZero()) out = '0' + out;
            while(out.length % padding !== 0)out = '0' + out;
            if (this.negative !== 0) out = '-' + out;
            return out;
        }
        assert(false, 'Base should be between 2 and 36');
    };
    BN.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) ret += this.words[1] * 67108864;
        else if (this.length === 3 && this.words[2] === 1) // NOTE: at this stage it is known that the top bit is set
        ret += 4503599627370496 + this.words[1] * 67108864;
        else if (this.length > 2) assert(false, 'Number can only safely store up to 53 bits');
        return this.negative !== 0 ? -ret : ret;
    };
    BN.prototype.toJSON = function toJSON() {
        return this.toString(16);
    };
    BN.prototype.toBuffer = function toBuffer(endian, length) {
        assert(typeof Buffer !== 'undefined');
        return this.toArrayLike(Buffer, endian, length);
    };
    BN.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
    };
    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert(byteLength <= reqLength, 'byte array longer than desired length');
        assert(reqLength > 0, 'Requested array length <= 0');
        this.strip();
        var littleEndian = endian === 'le';
        var res = new ArrayType(reqLength);
        var b, i;
        var q = this.clone();
        if (!littleEndian) {
            // Assume big-endian
            for(i = 0; i < reqLength - byteLength; i++)res[i] = 0;
            for(i = 0; !q.isZero(); i++){
                b = q.andln(255);
                q.iushrn(8);
                res[reqLength - i - 1] = b;
            }
        } else {
            for(i = 0; !q.isZero(); i++){
                b = q.andln(255);
                q.iushrn(8);
                res[i] = b;
            }
            for(; i < reqLength; i++)res[i] = 0;
        }
        return res;
    };
    if (Math.clz32) BN.prototype._countBits = function _countBits(w) {
        return 32 - Math.clz32(w);
    };
    else BN.prototype._countBits = function _countBits1(w) {
        var t = w;
        var r = 0;
        if (t >= 4096) {
            r += 13;
            t >>>= 13;
        }
        if (t >= 64) {
            r += 7;
            t >>>= 7;
        }
        if (t >= 8) {
            r += 4;
            t >>>= 4;
        }
        if (t >= 2) {
            r += 2;
            t >>>= 2;
        }
        return r + t;
    };
    BN.prototype._zeroBits = function _zeroBits(w) {
        // Short-cut
        if (w === 0) return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
            r += 13;
            t >>>= 13;
        }
        if ((t & 127) === 0) {
            r += 7;
            t >>>= 7;
        }
        if ((t & 15) === 0) {
            r += 4;
            t >>>= 4;
        }
        if ((t & 3) === 0) {
            r += 2;
            t >>>= 2;
        }
        if ((t & 1) === 0) r++;
        return r;
    };
    // Return number of used bits in a BN
    BN.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
    };
    function toBitArray(num) {
        var w = new Array(num.bitLength());
        for(var bit = 0; bit < w.length; bit++){
            var off = bit / 26 | 0;
            var wbit = bit % 26;
            w[bit] = (num.words[off] & 1 << wbit) >>> wbit;
        }
        return w;
    }
    // Number of trailing zero bits
    BN.prototype.zeroBits = function zeroBits() {
        if (this.isZero()) return 0;
        var r = 0;
        for(var i = 0; i < this.length; i++){
            var b = this._zeroBits(this.words[i]);
            r += b;
            if (b !== 26) break;
        }
        return r;
    };
    BN.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
    };
    BN.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) return this.abs().inotn(width).iaddn(1);
        return this.clone();
    };
    BN.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) return this.notn(width).iaddn(1).ineg();
        return this.clone();
    };
    BN.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
    };
    // Return negative clone of `this`
    BN.prototype.neg = function neg() {
        return this.clone().ineg();
    };
    BN.prototype.ineg = function ineg() {
        if (!this.isZero()) this.negative ^= 1;
        return this;
    };
    // Or `num` with `this` in-place
    BN.prototype.iuor = function iuor(num) {
        while(this.length < num.length)this.words[this.length++] = 0;
        for(var i = 0; i < num.length; i++)this.words[i] = this.words[i] | num.words[i];
        return this.strip();
    };
    BN.prototype.ior = function ior(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuor(num);
    };
    // Or `num` with `this`
    BN.prototype.or = function or(num) {
        if (this.length > num.length) return this.clone().ior(num);
        return num.clone().ior(this);
    };
    BN.prototype.uor = function uor(num) {
        if (this.length > num.length) return this.clone().iuor(num);
        return num.clone().iuor(this);
    };
    // And `num` with `this` in-place
    BN.prototype.iuand = function iuand(num) {
        // b = min-length(num, this)
        var b;
        if (this.length > num.length) b = num;
        else b = this;
        for(var i = 0; i < b.length; i++)this.words[i] = this.words[i] & num.words[i];
        this.length = b.length;
        return this.strip();
    };
    BN.prototype.iand = function iand(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuand(num);
    };
    // And `num` with `this`
    BN.prototype.and = function and(num) {
        if (this.length > num.length) return this.clone().iand(num);
        return num.clone().iand(this);
    };
    BN.prototype.uand = function uand(num) {
        if (this.length > num.length) return this.clone().iuand(num);
        return num.clone().iuand(this);
    };
    // Xor `num` with `this` in-place
    BN.prototype.iuxor = function iuxor(num) {
        // a.length > b.length
        var a;
        var b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        for(var i = 0; i < b.length; i++)this.words[i] = a.words[i] ^ b.words[i];
        if (this !== a) for(; i < a.length; i++)this.words[i] = a.words[i];
        this.length = a.length;
        return this.strip();
    };
    BN.prototype.ixor = function ixor(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuxor(num);
    };
    // Xor `num` with `this`
    BN.prototype.xor = function xor(num) {
        if (this.length > num.length) return this.clone().ixor(num);
        return num.clone().ixor(this);
    };
    BN.prototype.uxor = function uxor(num) {
        if (this.length > num.length) return this.clone().iuxor(num);
        return num.clone().iuxor(this);
    };
    // Not ``this`` with ``width`` bitwidth
    BN.prototype.inotn = function inotn(width) {
        assert(typeof width === 'number' && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        // Extend the buffer with leading zeroes
        this._expand(bytesNeeded);
        if (bitsLeft > 0) bytesNeeded--;
        // Handle complete words
        for(var i = 0; i < bytesNeeded; i++)this.words[i] = ~this.words[i] & 67108863;
        // Handle the residue
        if (bitsLeft > 0) this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        // And remove leading zeroes
        return this.strip();
    };
    BN.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
    };
    // Set `bit` of `this`
    BN.prototype.setn = function setn(bit, val) {
        assert(typeof bit === 'number' && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) this.words[off] = this.words[off] | 1 << wbit;
        else this.words[off] = this.words[off] & ~(1 << wbit);
        return this.strip();
    };
    // Add `num` to `this` in-place
    BN.prototype.iadd = function iadd(num) {
        var r;
        // negative + positive
        if (this.negative !== 0 && num.negative === 0) {
            this.negative = 0;
            r = this.isub(num);
            this.negative ^= 1;
            return this._normSign();
        // positive + negative
        } else if (this.negative === 0 && num.negative !== 0) {
            num.negative = 0;
            r = this.isub(num);
            num.negative = 1;
            return r._normSign();
        }
        // a.length > b.length
        var a, b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
            this.words[i] = r & 67108863;
            carry = r >>> 26;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            this.words[i] = r & 67108863;
            carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
            this.words[this.length] = carry;
            this.length++;
        // Copy the rest of the words
        } else if (a !== this) for(; i < a.length; i++)this.words[i] = a.words[i];
        return this;
    };
    // Add `num` to `this`
    BN.prototype.add = function add(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
            num.negative = 0;
            res = this.sub(num);
            num.negative ^= 1;
            return res;
        } else if (num.negative === 0 && this.negative !== 0) {
            this.negative = 0;
            res = num.sub(this);
            this.negative = 1;
            return res;
        }
        if (this.length > num.length) return this.clone().iadd(num);
        return num.clone().iadd(this);
    };
    // Subtract `num` from `this` in-place
    BN.prototype.isub = function isub(num) {
        // this - (-num) = this + num
        if (num.negative !== 0) {
            num.negative = 0;
            var r = this.iadd(num);
            num.negative = 1;
            return r._normSign();
        // -this - num = -(this + num)
        } else if (this.negative !== 0) {
            this.negative = 0;
            this.iadd(num);
            this.negative = 1;
            return this._normSign();
        }
        // At this point both numbers are positive
        var cmp = this.cmp(num);
        // Optimization - zeroify
        if (cmp === 0) {
            this.negative = 0;
            this.length = 1;
            this.words[0] = 0;
            return this;
        }
        // a > b
        var a, b;
        if (cmp > 0) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 67108863;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 67108863;
        }
        // Copy rest of the words
        if (carry === 0 && i < a.length && a !== this) for(; i < a.length; i++)this.words[i] = a.words[i];
        this.length = Math.max(this.length, i);
        if (a !== this) this.negative = 1;
        return this.strip();
    };
    // Subtract `num` from `this`
    BN.prototype.sub = function sub(num) {
        return this.clone().isub(num);
    };
    function smallMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        var len = self.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        // Peel one iteration (compiler can't do it, because of code complexity)
        var a = self.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for(var k = 1; k < len; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = carry >>> 26;
            var rword = carry & 67108863;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j | 0;
                a = self.words[i] | 0;
                b = num.words[j] | 0;
                r = a * b + rword;
                ncarry += r / 67108864 | 0;
                rword = r & 67108863;
            }
            out.words[k] = rword | 0;
            carry = ncarry | 0;
        }
        if (carry !== 0) out.words[k] = carry | 0;
        else out.length--;
        return out.strip();
    }
    // TODO(indutny): it may be reasonable to omit it for users who don't need
    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
    // multiplication (like elliptic secp256k1).
    var comb10MulTo = function comb10MulTo1(self, num, out) {
        var a = self.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self.negative ^ num.negative;
        out.length = 19;
        /* k = 0 */ lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        /* k = 1 */ lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        /* k = 2 */ lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        /* k = 3 */ lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        /* k = 4 */ lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        /* k = 5 */ lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        /* k = 6 */ lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        /* k = 7 */ lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        /* k = 8 */ lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        /* k = 9 */ lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        /* k = 10 */ lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        /* k = 11 */ lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        /* k = 12 */ lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        /* k = 13 */ lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        /* k = 14 */ lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        /* k = 15 */ lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        /* k = 16 */ lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        /* k = 17 */ lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        /* k = 18 */ lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
            o[19] = c;
            out.length++;
        }
        return out;
    };
    // Polyfill comb
    if (!Math.imul) comb10MulTo = smallMulTo;
    function bigMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        out.length = self.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for(var k = 0; k < out.length - 1; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = hncarry;
            hncarry = 0;
            var rword = carry & 67108863;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j;
                var a = self.words[i] | 0;
                var b = num.words[j] | 0;
                var r = a * b;
                var lo = r & 67108863;
                ncarry = ncarry + (r / 67108864 | 0) | 0;
                lo = lo + rword | 0;
                rword = lo & 67108863;
                ncarry = ncarry + (lo >>> 26) | 0;
                hncarry += ncarry >>> 26;
                ncarry &= 67108863;
            }
            out.words[k] = rword;
            carry = ncarry;
            ncarry = hncarry;
        }
        if (carry !== 0) out.words[k] = carry;
        else out.length--;
        return out.strip();
    }
    function jumboMulTo(self, num, out) {
        var fftm = new FFTM();
        return fftm.mulp(self, num, out);
    }
    BN.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) res = comb10MulTo(this, num, out);
        else if (len < 63) res = smallMulTo(this, num, out);
        else if (len < 1024) res = bigMulTo(this, num, out);
        else res = jumboMulTo(this, num, out);
        return res;
    };
    // Cooley-Tukey algorithm for FFT
    // slightly revisited to rely on looping instead of recursion
    function FFTM(x, y) {
        this.x = x;
        this.y = y;
    }
    FFTM.prototype.makeRBT = function makeRBT(N) {
        var t = new Array(N);
        var l = BN.prototype._countBits(N) - 1;
        for(var i = 0; i < N; i++)t[i] = this.revBin(i, l, N);
        return t;
    };
    // Returns binary-reversed representation of `x`
    FFTM.prototype.revBin = function revBin(x, l, N) {
        if (x === 0 || x === N - 1) return x;
        var rb = 0;
        for(var i = 0; i < l; i++){
            rb |= (x & 1) << l - i - 1;
            x >>= 1;
        }
        return rb;
    };
    // Performs "tweedling" phase, therefore 'emulating'
    // behaviour of the recursive algorithm
    FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
        for(var i = 0; i < N; i++){
            rtws[i] = rws[rbt[i]];
            itws[i] = iws[rbt[i]];
        }
    };
    FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N);
        for(var s = 1; s < N; s <<= 1){
            var l = s << 1;
            var rtwdf = Math.cos(2 * Math.PI / l);
            var itwdf = Math.sin(2 * Math.PI / l);
            for(var p = 0; p < N; p += l){
                var rtwdf_ = rtwdf;
                var itwdf_ = itwdf;
                for(var j = 0; j < s; j++){
                    var re = rtws[p + j];
                    var ie = itws[p + j];
                    var ro = rtws[p + j + s];
                    var io = itws[p + j + s];
                    var rx = rtwdf_ * ro - itwdf_ * io;
                    io = rtwdf_ * io + itwdf_ * ro;
                    ro = rx;
                    rtws[p + j] = re + ro;
                    itws[p + j] = ie + io;
                    rtws[p + j + s] = re - ro;
                    itws[p + j + s] = ie - io;
                    /* jshint maxdepth : false */ if (j !== l) {
                        rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                        itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                        rtwdf_ = rx;
                    }
                }
            }
        }
    };
    FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N = Math.max(m, n) | 1;
        var odd = N & 1;
        var i = 0;
        for(N = N / 2 | 0; N; N = N >>> 1)i++;
        return 1 << i + 1 + odd;
    };
    FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
        if (N <= 1) return;
        for(var i = 0; i < N / 2; i++){
            var t = rws[i];
            rws[i] = rws[N - i - 1];
            rws[N - i - 1] = t;
            t = iws[i];
            iws[i] = -iws[N - i - 1];
            iws[N - i - 1] = -t;
        }
    };
    FFTM.prototype.normalize13b = function normalize13b(ws, N) {
        var carry = 0;
        for(var i = 0; i < N / 2; i++){
            var w = Math.round(ws[2 * i + 1] / N) * 8192 + Math.round(ws[2 * i] / N) + carry;
            ws[i] = w & 67108863;
            if (w < 67108864) carry = 0;
            else carry = w / 67108864 | 0;
        }
        return ws;
    };
    FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
        var carry = 0;
        for(var i = 0; i < len; i++){
            carry = carry + (ws[i] | 0);
            rws[2 * i] = carry & 8191;
            carry = carry >>> 13;
            rws[2 * i + 1] = carry & 8191;
            carry = carry >>> 13;
        }
        // Pad with zeroes
        for(i = 2 * len; i < N; ++i)rws[i] = 0;
        assert(carry === 0);
        assert((carry & -8192) === 0);
    };
    FFTM.prototype.stub = function stub(N) {
        var ph = new Array(N);
        for(var i = 0; i < N; i++)ph[i] = 0;
        return ph;
    };
    FFTM.prototype.mulp = function mulp(x, y, out) {
        var N = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N);
        var _ = this.stub(N);
        var rws = new Array(N);
        var rwst = new Array(N);
        var iwst = new Array(N);
        var nrws = new Array(N);
        var nrwst = new Array(N);
        var niwst = new Array(N);
        var rmws = out.words;
        rmws.length = N;
        this.convert13b(x.words, x.length, rws, N);
        this.convert13b(y.words, y.length, nrws, N);
        this.transform(rws, _, rwst, iwst, N, rbt);
        this.transform(nrws, _, nrwst, niwst, N, rbt);
        for(var i = 0; i < N; i++){
            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
            iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
            rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N);
        this.transform(rwst, iwst, rmws, _, N, rbt);
        this.conjugate(rmws, _, N);
        this.normalize13b(rmws, N);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out.strip();
    };
    // Multiply `this` by `num`
    BN.prototype.mul = function mul(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
    };
    // Multiply employing FFT
    BN.prototype.mulf = function mulf(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
    };
    // In-place Multiplication
    BN.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
    };
    BN.prototype.imuln = function imuln(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        // Carry
        var carry = 0;
        for(var i = 0; i < this.length; i++){
            var w = (this.words[i] | 0) * num;
            var lo = (w & 67108863) + (carry & 67108863);
            carry >>= 26;
            carry += w / 67108864 | 0;
            // NOTE: lo is 27bit maximum
            carry += lo >>> 26;
            this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return this;
    };
    BN.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
    };
    // `this` * `this`
    BN.prototype.sqr = function sqr() {
        return this.mul(this);
    };
    // `this` * `this` in-place
    BN.prototype.isqr = function isqr() {
        return this.imul(this.clone());
    };
    // Math.pow(`this`, `num`)
    BN.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0) return new BN(1);
        // Skip leading zeroes
        var res = this;
        for(var i = 0; i < w.length; i++, res = res.sqr()){
            if (w[i] !== 0) break;
        }
        if ((++i) < w.length) for(var q = res.sqr(); i < w.length; i++, q = q.sqr()){
            if (w[i] === 0) continue;
            res = res.mul(q);
        }
        return res;
    };
    // Shift-left in-place
    BN.prototype.iushln = function iushln(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
            var carry = 0;
            for(i = 0; i < this.length; i++){
                var newCarry = this.words[i] & carryMask;
                var c = (this.words[i] | 0) - newCarry << r;
                this.words[i] = c | carry;
                carry = newCarry >>> 26 - r;
            }
            if (carry) {
                this.words[i] = carry;
                this.length++;
            }
        }
        if (s !== 0) {
            for(i = this.length - 1; i >= 0; i--)this.words[i + s] = this.words[i];
            for(i = 0; i < s; i++)this.words[i] = 0;
            this.length += s;
        }
        return this.strip();
    };
    BN.prototype.ishln = function ishln(bits) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushln(bits);
    };
    // Shift-right in-place
    // NOTE: `hint` is a lowest bit before trailing zeroes
    // NOTE: if `extended` is present - it will be filled with destroyed bits
    BN.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert(typeof bits === 'number' && bits >= 0);
        var h;
        if (hint) h = (hint - hint % 26) / 26;
        else h = 0;
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        // Extended mode, copy masked part
        if (maskedWords) {
            for(var i = 0; i < s; i++)maskedWords.words[i] = this.words[i];
            maskedWords.length = s;
        }
        if (s === 0) ;
        else if (this.length > s) {
            this.length -= s;
            for(i = 0; i < this.length; i++)this.words[i] = this.words[i + s];
        } else {
            this.words[0] = 0;
            this.length = 1;
        }
        var carry = 0;
        for(i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--){
            var word = this.words[i] | 0;
            this.words[i] = carry << 26 - r | word >>> r;
            carry = word & mask;
        }
        // Push carried bits as a mask
        if (maskedWords && carry !== 0) maskedWords.words[maskedWords.length++] = carry;
        if (this.length === 0) {
            this.words[0] = 0;
            this.length = 1;
        }
        return this.strip();
    };
    BN.prototype.ishrn = function ishrn(bits, hint, extended) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushrn(bits, hint, extended);
    };
    // Shift-left
    BN.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
    };
    BN.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
    };
    // Shift-right
    BN.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
    };
    BN.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
    };
    // Test if n bit is set
    BN.prototype.testn = function testn(bit) {
        assert(typeof bit === 'number' && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) return false;
        // Check bit and return
        var w = this.words[s];
        return !!(w & q);
    };
    // Return only lowers bits of number (in-place)
    BN.prototype.imaskn = function imaskn(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert(this.negative === 0, 'imaskn works only with positive numbers');
        if (this.length <= s) return this;
        if (r !== 0) s++;
        this.length = Math.min(s, this.length);
        if (r !== 0) {
            var mask = 67108863 ^ 67108863 >>> r << r;
            this.words[this.length - 1] &= mask;
        }
        return this.strip();
    };
    // Return only lowers bits of number
    BN.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
    };
    // Add plain number `num` to `this`
    BN.prototype.iaddn = function iaddn(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        if (num < 0) return this.isubn(-num);
        // Possible sign change
        if (this.negative !== 0) {
            if (this.length === 1 && (this.words[0] | 0) < num) {
                this.words[0] = num - (this.words[0] | 0);
                this.negative = 0;
                return this;
            }
            this.negative = 0;
            this.isubn(num);
            this.negative = 1;
            return this;
        }
        // Add without checks
        return this._iaddn(num);
    };
    BN.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        // Carry
        for(var i = 0; i < this.length && this.words[i] >= 67108864; i++){
            this.words[i] -= 67108864;
            if (i === this.length - 1) this.words[i + 1] = 1;
            else this.words[i + 1]++;
        }
        this.length = Math.max(this.length, i + 1);
        return this;
    };
    // Subtract plain number `num` from `this`
    BN.prototype.isubn = function isubn(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        if (num < 0) return this.iaddn(-num);
        if (this.negative !== 0) {
            this.negative = 0;
            this.iaddn(num);
            this.negative = 1;
            return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
            this.words[0] = -this.words[0];
            this.negative = 1;
        } else // Carry
        for(var i = 0; i < this.length && this.words[i] < 0; i++){
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
        }
        return this.strip();
    };
    BN.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
    };
    BN.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
    };
    BN.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
    };
    BN.prototype.abs = function abs() {
        return this.clone().iabs();
    };
    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul1, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for(i = 0; i < num.length; i++){
            w = (this.words[i + shift] | 0) + carry;
            var right = (num.words[i] | 0) * mul1;
            w -= right & 67108863;
            carry = (w >> 26) - (right / 67108864 | 0);
            this.words[i + shift] = w & 67108863;
        }
        for(; i < this.length - shift; i++){
            w = (this.words[i + shift] | 0) + carry;
            carry = w >> 26;
            this.words[i + shift] = w & 67108863;
        }
        if (carry === 0) return this.strip();
        // Subtraction overflow
        assert(carry === -1);
        carry = 0;
        for(i = 0; i < this.length; i++){
            w = -(this.words[i] | 0) + carry;
            carry = w >> 26;
            this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this.strip();
    };
    BN.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        // Normalize
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
            b = b.ushln(shift);
            a.iushln(shift);
            bhi = b.words[b.length - 1] | 0;
        }
        // Initialize quotient
        var m = a.length - b.length;
        var q;
        if (mode !== 'mod') {
            q = new BN(null);
            q.length = m + 1;
            q.words = new Array(q.length);
            for(var i = 0; i < q.length; i++)q.words[i] = 0;
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
            a = diff;
            if (q) q.words[m] = 1;
        }
        for(var j = m - 1; j >= 0; j--){
            var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
            // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
            // (0x7ffffff)
            qj = Math.min(qj / bhi | 0, 67108863);
            a._ishlnsubmul(b, qj, j);
            while(a.negative !== 0){
                qj--;
                a.negative = 0;
                a._ishlnsubmul(b, 1, j);
                if (!a.isZero()) a.negative ^= 1;
            }
            if (q) q.words[j] = qj;
        }
        if (q) q.strip();
        a.strip();
        // Denormalize
        if (mode !== 'div' && shift !== 0) a.iushrn(shift);
        return {
            div: q || null,
            mod: a
        };
    };
    // NOTE: 1) `mode` can be set to `mod` to request mod only,
    //       to `div` to request div only, or be absent to
    //       request both div & mod
    //       2) `positive` is true if unsigned mod is requested
    BN.prototype.divmod = function divmod(num, mode, positive) {
        assert(!num.isZero());
        if (this.isZero()) return {
            div: new BN(0),
            mod: new BN(0)
        };
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
            res = this.neg().divmod(num, mode);
            if (mode !== 'mod') div = res.div.neg();
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) mod.iadd(num);
            }
            return {
                div: div,
                mod: mod
            };
        }
        if (this.negative === 0 && num.negative !== 0) {
            res = this.divmod(num.neg(), mode);
            if (mode !== 'mod') div = res.div.neg();
            return {
                div: div,
                mod: res.mod
            };
        }
        if ((this.negative & num.negative) !== 0) {
            res = this.neg().divmod(num.neg(), mode);
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) mod.isub(num);
            }
            return {
                div: res.div,
                mod: mod
            };
        }
        // Both numbers are positive at this point
        // Strip both numbers to approximate shift value
        if (num.length > this.length || this.cmp(num) < 0) return {
            div: new BN(0),
            mod: this
        };
        // Very short reduction
        if (num.length === 1) {
            if (mode === 'div') return {
                div: this.divn(num.words[0]),
                mod: null
            };
            if (mode === 'mod') return {
                div: null,
                mod: new BN(this.modn(num.words[0]))
            };
            return {
                div: this.divn(num.words[0]),
                mod: new BN(this.modn(num.words[0]))
            };
        }
        return this._wordDiv(num, mode);
    };
    // Find `this` / `num`
    BN.prototype.div = function div(num) {
        return this.divmod(num, 'div', false).div;
    };
    // Find `this` % `num`
    BN.prototype.mod = function mod(num) {
        return this.divmod(num, 'mod', false).mod;
    };
    BN.prototype.umod = function umod(num) {
        return this.divmod(num, 'mod', true).mod;
    };
    // Find Round(`this` / `num`)
    BN.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        // Fast case - exact division
        if (dm.mod.isZero()) return dm.div;
        var mod1 = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod1.cmp(half);
        // Round down
        if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;
        // Round up
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
    };
    BN.prototype.modn = function modn(num) {
        assert(num <= 67108863);
        var p = 67108864 % num;
        var acc = 0;
        for(var i = this.length - 1; i >= 0; i--)acc = (p * acc + (this.words[i] | 0)) % num;
        return acc;
    };
    // In-place division by number
    BN.prototype.idivn = function idivn(num) {
        assert(num <= 67108863);
        var carry = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var w = (this.words[i] | 0) + carry * 67108864;
            this.words[i] = w / num | 0;
            carry = w % num;
        }
        return this.strip();
    };
    BN.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
    };
    BN.prototype.egcd = function egcd(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) x = x.umod(p);
        else x = x.clone();
        // A * x + B * y = x
        var A = new BN(1);
        var B = new BN(0);
        // C * x + D * y = y
        var C = new BN(0);
        var D = new BN(1);
        var g = 0;
        while(x.isEven() && y.isEven()){
            x.iushrn(1);
            y.iushrn(1);
            ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while(!x.isZero()){
            for(var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                x.iushrn(i);
                while((i--) > 0){
                    if (A.isOdd() || B.isOdd()) {
                        A.iadd(yp);
                        B.isub(xp);
                    }
                    A.iushrn(1);
                    B.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                y.iushrn(j);
                while((j--) > 0){
                    if (C.isOdd() || D.isOdd()) {
                        C.iadd(yp);
                        D.isub(xp);
                    }
                    C.iushrn(1);
                    D.iushrn(1);
                }
            }
            if (x.cmp(y) >= 0) {
                x.isub(y);
                A.isub(C);
                B.isub(D);
            } else {
                y.isub(x);
                C.isub(A);
                D.isub(B);
            }
        }
        return {
            a: C,
            b: D,
            gcd: y.iushln(g)
        };
    };
    // This is reduced incarnation of the binary EEA
    // above, designated to invert members of the
    // _prime_ fields F(p) at a maximal speed
    BN.prototype._invmp = function _invmp(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) a = a.umod(p);
        else a = a.clone();
        var x1 = new BN(1);
        var x2 = new BN(0);
        var delta = b.clone();
        while(a.cmpn(1) > 0 && b.cmpn(1) > 0){
            for(var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                a.iushrn(i);
                while((i--) > 0){
                    if (x1.isOdd()) x1.iadd(delta);
                    x1.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                b.iushrn(j);
                while((j--) > 0){
                    if (x2.isOdd()) x2.iadd(delta);
                    x2.iushrn(1);
                }
            }
            if (a.cmp(b) >= 0) {
                a.isub(b);
                x1.isub(x2);
            } else {
                b.isub(a);
                x2.isub(x1);
            }
        }
        var res;
        if (a.cmpn(1) === 0) res = x1;
        else res = x2;
        if (res.cmpn(0) < 0) res.iadd(p);
        return res;
    };
    BN.prototype.gcd = function gcd(num) {
        if (this.isZero()) return num.abs();
        if (num.isZero()) return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        // Remove common factor of two
        for(var shift = 0; a.isEven() && b.isEven(); shift++){
            a.iushrn(1);
            b.iushrn(1);
        }
        do {
            while(a.isEven())a.iushrn(1);
            while(b.isEven())b.iushrn(1);
            var r = a.cmp(b);
            if (r < 0) {
                // Swap `a` and `b` to make `a` always bigger than `b`
                var t = a;
                a = b;
                b = t;
            } else if (r === 0 || b.cmpn(1) === 0) break;
            a.isub(b);
        }while (true)
        return b.iushln(shift);
    };
    // Invert number in the field F(num)
    BN.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
    };
    BN.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
    };
    BN.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
    };
    // And first word and num
    BN.prototype.andln = function andln(num) {
        return this.words[0] & num;
    };
    // Increment at the bit position in-line
    BN.prototype.bincn = function bincn(bit) {
        assert(typeof bit === 'number');
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) {
            this._expand(s + 1);
            this.words[s] |= q;
            return this;
        }
        // Add bit and propagate, if needed
        var carry = q;
        for(var i = s; carry !== 0 && i < this.length; i++){
            var w = this.words[i] | 0;
            w += carry;
            carry = w >>> 26;
            w &= 67108863;
            this.words[i] = w;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return this;
    };
    BN.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
    };
    BN.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative) return -1;
        if (this.negative === 0 && negative) return 1;
        this.strip();
        var res;
        if (this.length > 1) res = 1;
        else {
            if (negative) num = -num;
            assert(num <= 67108863, 'Number is too big');
            var w = this.words[0] | 0;
            res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Compare two numbers and return:
    // 1 - if `this` > `num`
    // 0 - if `this` == `num`
    // -1 - if `this` < `num`
    BN.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0) return -1;
        if (this.negative === 0 && num.negative !== 0) return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Unsigned comparison
    BN.prototype.ucmp = function ucmp(num) {
        // At this point both numbers have the same sign
        if (this.length > num.length) return 1;
        if (this.length < num.length) return -1;
        var res = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var a = this.words[i] | 0;
            var b = num.words[i] | 0;
            if (a === b) continue;
            if (a < b) res = -1;
            else if (a > b) res = 1;
            break;
        }
        return res;
    };
    BN.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
    };
    BN.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
    };
    BN.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
    };
    BN.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
    };
    BN.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
    };
    BN.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
    };
    BN.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
    };
    BN.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
    };
    BN.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
    };
    BN.prototype.eq = function eq(num) {
        return this.cmp(num) === 0;
    };
    //
    // A reduce context, could be using montgomery or something better, depending
    // on the `m` itself.
    //
    BN.red = function red(num) {
        return new Red(num);
    };
    BN.prototype.toRed = function toRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        assert(this.negative === 0, 'red works only with positives');
        return ctx.convertTo(this)._forceRed(ctx);
    };
    BN.prototype.fromRed = function fromRed() {
        assert(this.red, 'fromRed works only with numbers in reduction context');
        return this.red.convertFrom(this);
    };
    BN.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
    };
    BN.prototype.forceRed = function forceRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        return this._forceRed(ctx);
    };
    BN.prototype.redAdd = function redAdd(num) {
        assert(this.red, 'redAdd works only with red numbers');
        return this.red.add(this, num);
    };
    BN.prototype.redIAdd = function redIAdd(num) {
        assert(this.red, 'redIAdd works only with red numbers');
        return this.red.iadd(this, num);
    };
    BN.prototype.redSub = function redSub(num) {
        assert(this.red, 'redSub works only with red numbers');
        return this.red.sub(this, num);
    };
    BN.prototype.redISub = function redISub(num) {
        assert(this.red, 'redISub works only with red numbers');
        return this.red.isub(this, num);
    };
    BN.prototype.redShl = function redShl(num) {
        assert(this.red, 'redShl works only with red numbers');
        return this.red.shl(this, num);
    };
    BN.prototype.redMul = function redMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.mul(this, num);
    };
    BN.prototype.redIMul = function redIMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.imul(this, num);
    };
    BN.prototype.redSqr = function redSqr() {
        assert(this.red, 'redSqr works only with red numbers');
        this.red._verify1(this);
        return this.red.sqr(this);
    };
    BN.prototype.redISqr = function redISqr() {
        assert(this.red, 'redISqr works only with red numbers');
        this.red._verify1(this);
        return this.red.isqr(this);
    };
    // Square root over p
    BN.prototype.redSqrt = function redSqrt() {
        assert(this.red, 'redSqrt works only with red numbers');
        this.red._verify1(this);
        return this.red.sqrt(this);
    };
    BN.prototype.redInvm = function redInvm() {
        assert(this.red, 'redInvm works only with red numbers');
        this.red._verify1(this);
        return this.red.invm(this);
    };
    // Return negative clone of `this` % `red modulo`
    BN.prototype.redNeg = function redNeg() {
        assert(this.red, 'redNeg works only with red numbers');
        this.red._verify1(this);
        return this.red.neg(this);
    };
    BN.prototype.redPow = function redPow(num) {
        assert(this.red && !num.red, 'redPow(normalNum)');
        this.red._verify1(this);
        return this.red.pow(this, num);
    };
    // Prime numbers with efficient reduction
    var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
    };
    // Pseudo-Mersenne prime
    function MPrime(name, p) {
        // P = 2 ^ N - K
        this.name = name;
        this.p = new BN(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
    }
    MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
    };
    MPrime.prototype.ireduce = function ireduce(num) {
        // Assumes that `num` is less than `P^2`
        // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
        var r = num;
        var rlen;
        do {
            this.split(r, this.tmp);
            r = this.imulK(r);
            r = r.iadd(this.tmp);
            rlen = r.bitLength();
        }while (rlen > this.n)
        var cmp1 = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp1 === 0) {
            r.words[0] = 0;
            r.length = 1;
        } else if (cmp1 > 0) r.isub(this.p);
        else if (r.strip !== undefined) // r is BN v4 instance
        r.strip();
        else // r is BN v5 instance
        r._strip();
        return r;
    };
    MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
    };
    MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
    };
    function K256() {
        MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
    }
    inherits(K256, MPrime);
    K256.prototype.split = function split1(input, output) {
        // 256 = 9 * 26 + 22
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for(var i = 0; i < outLen; i++)output.words[i] = input.words[i];
        output.length = outLen;
        if (input.length <= 9) {
            input.words[0] = 0;
            input.length = 1;
            return;
        }
        // Shift by 9 limbs
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for(i = 10; i < input.length; i++){
            var next = input.words[i] | 0;
            input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
            prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) input.length -= 10;
        else input.length -= 9;
    };
    K256.prototype.imulK = function imulK1(num) {
        // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
        var lo = 0;
        for(var i = 0; i < num.length; i++){
            var w = num.words[i] | 0;
            lo += w * 977;
            num.words[i] = lo & 67108863;
            lo = w * 64 + (lo / 67108864 | 0);
        }
        // Fast length reduction
        if (num.words[num.length - 1] === 0) {
            num.length--;
            if (num.words[num.length - 1] === 0) num.length--;
        }
        return num;
    };
    function P224() {
        MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
    }
    inherits(P224, MPrime);
    function P192() {
        MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
    }
    inherits(P192, MPrime);
    function P25519() {
        // 2 ^ 255 - 19
        MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
    }
    inherits(P25519, MPrime);
    P25519.prototype.imulK = function imulK2(num) {
        // K = 0x13
        var carry = 0;
        for(var i = 0; i < num.length; i++){
            var hi = (num.words[i] | 0) * 19 + carry;
            var lo = hi & 67108863;
            hi >>>= 26;
            num.words[i] = lo;
            carry = hi;
        }
        if (carry !== 0) num.words[num.length++] = carry;
        return num;
    };
    // Exported mostly for testing purposes, use plain name instead
    BN._prime = function prime(name) {
        // Cached version of prime
        if (primes[name]) return primes[name];
        var prime;
        if (name === 'k256') prime = new K256();
        else if (name === 'p224') prime = new P224();
        else if (name === 'p192') prime = new P192();
        else if (name === 'p25519') prime = new P25519();
        else throw new Error('Unknown prime ' + name);
        primes[name] = prime;
        return prime;
    };
    //
    // Base reduction engine
    //
    function Red(m) {
        if (typeof m === 'string') {
            var prime1 = BN._prime(m);
            this.m = prime1.p;
            this.prime = prime1;
        } else {
            assert(m.gtn(1), 'modulus must be greater than 1');
            this.m = m;
            this.prime = null;
        }
    }
    Red.prototype._verify1 = function _verify1(a) {
        assert(a.negative === 0, 'red works only with positives');
        assert(a.red, 'red works only with red numbers');
    };
    Red.prototype._verify2 = function _verify2(a, b) {
        assert((a.negative | b.negative) === 0, 'red works only with positives');
        assert(a.red && a.red === b.red, 'red works only with red numbers');
    };
    Red.prototype.imod = function imod(a) {
        if (this.prime) return this.prime.ireduce(a)._forceRed(this);
        return a.umod(this.m)._forceRed(this);
    };
    Red.prototype.neg = function neg1(a) {
        if (a.isZero()) return a.clone();
        return this.m.sub(a)._forceRed(this);
    };
    Red.prototype.add = function add1(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) res.isub(this.m);
        return res._forceRed(this);
    };
    Red.prototype.iadd = function iadd1(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) res.isub(this.m);
        return res;
    };
    Red.prototype.sub = function sub1(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) res.iadd(this.m);
        return res._forceRed(this);
    };
    Red.prototype.isub = function isub1(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) res.iadd(this.m);
        return res;
    };
    Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
    };
    Red.prototype.imul = function imul1(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
    };
    Red.prototype.mul = function mul1(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
    };
    Red.prototype.isqr = function isqr1(a) {
        return this.imul(a, a.clone());
    };
    Red.prototype.sqr = function sqr1(a) {
        return this.mul(a, a);
    };
    Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero()) return a.clone();
        var mod3 = this.m.andln(3);
        assert(mod3 % 2 === 1);
        // Fast case
        if (mod3 === 3) {
            var pow1 = this.m.add(new BN(1)).iushrn(2);
            return this.pow(a, pow1);
        }
        // Tonelli-Shanks algorithm (Totally unoptimized and slow)
        //
        // Find Q and S, that Q * 2 ^ S = (P - 1)
        var q = this.m.subn(1);
        var s = 0;
        while(!q.isZero() && q.andln(1) === 0){
            s++;
            q.iushrn(1);
        }
        assert(!q.isZero());
        var one = new BN(1).toRed(this);
        var nOne = one.redNeg();
        // Find quadratic non-residue
        // NOTE: Max is such because of generalized Riemann hypothesis.
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN(2 * z * z).toRed(this);
        while(this.pow(z, lpow).cmp(nOne) !== 0)z.redIAdd(nOne);
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while(t.cmp(one) !== 0){
            var tmp = t;
            for(var i = 0; tmp.cmp(one) !== 0; i++)tmp = tmp.redSqr();
            assert(i < m);
            var b = this.pow(c, new BN(1).iushln(m - i - 1));
            r = r.redMul(b);
            c = b.redSqr();
            t = t.redMul(c);
            m = i;
        }
        return r;
    };
    Red.prototype.invm = function invm1(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
            inv.negative = 0;
            return this.imod(inv).redNeg();
        } else return this.imod(inv);
    };
    Red.prototype.pow = function pow2(a, num) {
        if (num.isZero()) return new BN(1).toRed(this);
        if (num.cmpn(1) === 0) return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN(1).toRed(this);
        wnd[1] = a;
        for(var i = 2; i < wnd.length; i++)wnd[i] = this.mul(wnd[i - 1], a);
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) start = 26;
        for(i = num.length - 1; i >= 0; i--){
            var word = num.words[i];
            for(var j = start - 1; j >= 0; j--){
                var bit = word >> j & 1;
                if (res !== wnd[0]) res = this.sqr(res);
                if (bit === 0 && current === 0) {
                    currentLen = 0;
                    continue;
                }
                current <<= 1;
                current |= bit;
                currentLen++;
                if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;
                res = this.mul(res, wnd[current]);
                currentLen = 0;
                current = 0;
            }
            start = 26;
        }
        return res;
    };
    Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
    };
    Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
    };
    //
    // Montgomery method engine
    //
    BN.mont = function mont(num) {
        return new Mont(num);
    };
    function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) this.shift += 26 - this.shift % 26;
        this.r = new BN(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
    }
    inherits(Mont, Red);
    Mont.prototype.convertTo = function convertTo1(num) {
        return this.imod(num.ushln(this.shift));
    };
    Mont.prototype.convertFrom = function convertFrom1(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
    };
    Mont.prototype.imul = function imul2(a, b) {
        if (a.isZero() || b.isZero()) {
            a.words[0] = 0;
            a.length = 1;
            return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) res = u.isub(this.m);
        else if (u.cmpn(0) < 0) res = u.iadd(this.m);
        return res._forceRed(this);
    };
    Mont.prototype.mul = function mul2(a, b) {
        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) res = u.isub(this.m);
        else if (u.cmpn(0) < 0) res = u.iadd(this.m);
        return res._forceRed(this);
    };
    Mont.prototype.invm = function invm2(a) {
        // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
    };
})(typeof module === 'undefined' || module, this);

},{"buffer":"4LM6B"}],"auxXf":[function(require,module,exports) {
var r;
module.exports = function rand(len) {
    if (!r) r = new Rand(null);
    return r.generate(len);
};
function Rand(rand1) {
    this.rand = rand1;
}
module.exports.Rand = Rand;
Rand.prototype.generate = function generate(len) {
    return this._rand(len);
};
// Emulate crypto API using randy
Rand.prototype._rand = function _rand(n) {
    if (this.rand.getBytes) return this.rand.getBytes(n);
    var res = new Uint8Array(n);
    for(var i = 0; i < res.length; i++)res[i] = this.rand.getByte();
    return res;
};
if (typeof self === 'object') {
    if (self.crypto && self.crypto.getRandomValues) // Modern browsers
    Rand.prototype._rand = function _rand1(n) {
        var arr = new Uint8Array(n);
        self.crypto.getRandomValues(arr);
        return arr;
    };
    else if (self.msCrypto && self.msCrypto.getRandomValues) // IE
    Rand.prototype._rand = function _rand2(n) {
        var arr = new Uint8Array(n);
        self.msCrypto.getRandomValues(arr);
        return arr;
    };
    else if (typeof window === 'object') // Old junk
    Rand.prototype._rand = function() {
        throw new Error('Not implemented yet');
    };
} else // Node.js or Web worker with no crypto support
try {
    var crypto = require('crypto');
    if (typeof crypto.randomBytes !== 'function') throw new Error('Not supported');
    Rand.prototype._rand = function _rand1(n) {
        return crypto.randomBytes(n);
    };
} catch (e) {
}

},{"crypto":"4LM6B"}],"aNYyi":[function(require,module,exports) {
module.exports = JSON.parse("{\"modp1\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff\"},\"modp2\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff\"},\"modp5\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff\"},\"modp14\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff\"},\"modp15\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff\"},\"modp16\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff\"},\"modp17\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff\"},\"modp18\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff\"}}");

},{}],"3QSKN":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
var BN = require('bn.js');
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var TWENTYFOUR = new BN(24);
var ELEVEN = new BN(11);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var primes = require('./generatePrime');
var randomBytes = require('randombytes');
module.exports = DH;
function setPublicKey(pub, enc) {
    enc = enc || 'utf8';
    if (!Buffer.isBuffer(pub)) pub = new Buffer(pub, enc);
    this._pub = new BN(pub);
    return this;
}
function setPrivateKey(priv, enc) {
    enc = enc || 'utf8';
    if (!Buffer.isBuffer(priv)) priv = new Buffer(priv, enc);
    this._priv = new BN(priv);
    return this;
}
var primeCache = {
};
function checkPrime(prime, generator) {
    var gen = generator.toString('hex');
    var hex = [
        gen,
        prime.toString(16)
    ].join('_');
    if (hex in primeCache) return primeCache[hex];
    var error = 0;
    if (prime.isEven() || !primes.simpleSieve || !primes.fermatTest(prime) || !millerRabin.test(prime)) {
        //not a prime so +1
        error += 1;
        if (gen === '02' || gen === '05') // we'd be able to check the generator
        // it would fail so +8
        error += 8;
        else //we wouldn't be able to test the generator
        // so +4
        error += 4;
        primeCache[hex] = error;
        return error;
    }
    if (!millerRabin.test(prime.shrn(1))) //not a safe prime
    error += 2;
    var rem;
    switch(gen){
        case '02':
            if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) // unsuidable generator
            error += 8;
            break;
        case '05':
            rem = prime.mod(TEN);
            if (rem.cmp(THREE) && rem.cmp(SEVEN)) // prime mod 10 needs to equal 3 or 7
            error += 8;
            break;
        default:
            error += 4;
    }
    primeCache[hex] = error;
    return error;
}
function DH(prime, generator, malleable) {
    this.setGenerator(generator);
    this.__prime = new BN(prime);
    this._prime = BN.mont(this.__prime);
    this._primeLen = prime.length;
    this._pub = undefined;
    this._priv = undefined;
    this._primeCode = undefined;
    if (malleable) {
        this.setPublicKey = setPublicKey;
        this.setPrivateKey = setPrivateKey;
    } else this._primeCode = 8;
}
Object.defineProperty(DH.prototype, 'verifyError', {
    enumerable: true,
    get: function() {
        if (typeof this._primeCode !== 'number') this._primeCode = checkPrime(this.__prime, this.__gen);
        return this._primeCode;
    }
});
DH.prototype.generateKeys = function() {
    if (!this._priv) this._priv = new BN(randomBytes(this._primeLen));
    this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
    return this.getPublicKey();
};
DH.prototype.computeSecret = function(other) {
    other = new BN(other);
    other = other.toRed(this._prime);
    var secret = other.redPow(this._priv).fromRed();
    var out = new Buffer(secret.toArray());
    var prime = this.getPrime();
    if (out.length < prime.length) {
        var front = new Buffer(prime.length - out.length);
        front.fill(0);
        out = Buffer.concat([
            front,
            out
        ]);
    }
    return out;
};
DH.prototype.getPublicKey = function getPublicKey(enc) {
    return formatReturnValue(this._pub, enc);
};
DH.prototype.getPrivateKey = function getPrivateKey(enc) {
    return formatReturnValue(this._priv, enc);
};
DH.prototype.getPrime = function(enc) {
    return formatReturnValue(this.__prime, enc);
};
DH.prototype.getGenerator = function(enc) {
    return formatReturnValue(this._gen, enc);
};
DH.prototype.setGenerator = function(gen, enc) {
    enc = enc || 'utf8';
    if (!Buffer.isBuffer(gen)) gen = new Buffer(gen, enc);
    this.__gen = gen;
    this._gen = new BN(gen);
    return this;
};
function formatReturnValue(bn, enc) {
    var buf = new Buffer(bn.toArray());
    if (!enc) return buf;
    else return buf.toString(enc);
}

},{"buffer":"hX7zZ","bn.js":"etj54","miller-rabin":"dcUqV","./generatePrime":"czUg2","randombytes":"1rFGB"}],"3g6eU":[function(require,module,exports) {
var Buffer = require('safe-buffer').Buffer;
var createHash = require('create-hash');
var stream = require('readable-stream');
var inherits = require('inherits');
var sign = require('./sign');
var verify = require('./verify');
var algorithms = require('./algorithms.json');
Object.keys(algorithms).forEach(function(key) {
    algorithms[key].id = Buffer.from(algorithms[key].id, 'hex');
    algorithms[key.toLowerCase()] = algorithms[key];
});
function Sign(algorithm) {
    stream.Writable.call(this);
    var data = algorithms[algorithm];
    if (!data) throw new Error('Unknown message digest');
    this._hashType = data.hash;
    this._hash = createHash(data.hash);
    this._tag = data.id;
    this._signType = data.sign;
}
inherits(Sign, stream.Writable);
Sign.prototype._write = function _write(data, _, done) {
    this._hash.update(data);
    done();
};
Sign.prototype.update = function update(data, enc) {
    if (typeof data === 'string') data = Buffer.from(data, enc);
    this._hash.update(data);
    return this;
};
Sign.prototype.sign = function signMethod(key, enc) {
    this.end();
    var hash = this._hash.digest();
    var sig = sign(hash, key, this._hashType, this._signType, this._tag);
    return enc ? sig.toString(enc) : sig;
};
function Verify(algorithm) {
    stream.Writable.call(this);
    var data = algorithms[algorithm];
    if (!data) throw new Error('Unknown message digest');
    this._hash = createHash(data.hash);
    this._tag = data.id;
    this._signType = data.sign;
}
inherits(Verify, stream.Writable);
Verify.prototype._write = function _write1(data, _, done) {
    this._hash.update(data);
    done();
};
Verify.prototype.update = function update1(data, enc) {
    if (typeof data === 'string') data = Buffer.from(data, enc);
    this._hash.update(data);
    return this;
};
Verify.prototype.verify = function verifyMethod(key, sig, enc) {
    if (typeof sig === 'string') sig = Buffer.from(sig, enc);
    this.end();
    var hash = this._hash.digest();
    return verify(sig, hash, key, this._signType, this._tag);
};
function createSign(algorithm) {
    return new Sign(algorithm);
}
function createVerify(algorithm) {
    return new Verify(algorithm);
}
module.exports = {
    Sign: createSign,
    Verify: createVerify,
    createSign: createSign,
    createVerify: createVerify
};

},{"safe-buffer":"hLoaD","create-hash":"4iPa5","readable-stream":"eW7wN","inherits":"9Y2vC","./sign":"gpihe","./verify":"LwqZ1","./algorithms.json":"5y2AN"}],"hLoaD":[function(require,module,exports) {
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */ /* eslint-disable node/no-deprecated-api */ var buffer = require('buffer');
var Buffer = buffer.Buffer;
// alternative to using Object.keys for old browsers
function copyProps(src, dst) {
    for(var key in src)dst[key] = src[key];
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) module.exports = buffer;
else {
    // Copy properties from require('buffer')
    copyProps(buffer, exports);
    exports.Buffer = SafeBuffer;
}
function SafeBuffer(arg, encodingOrOffset, length) {
    return Buffer(arg, encodingOrOffset, length);
}
SafeBuffer.prototype = Object.create(Buffer.prototype);
// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer);
SafeBuffer.from = function(arg, encodingOrOffset, length) {
    if (typeof arg === 'number') throw new TypeError('Argument must not be a number');
    return Buffer(arg, encodingOrOffset, length);
};
SafeBuffer.alloc = function(size, fill, encoding) {
    if (typeof size !== 'number') throw new TypeError('Argument must be a number');
    var buf = Buffer(size);
    if (fill !== undefined) {
        if (typeof encoding === 'string') buf.fill(fill, encoding);
        else buf.fill(fill);
    } else buf.fill(0);
    return buf;
};
SafeBuffer.allocUnsafe = function(size) {
    if (typeof size !== 'number') throw new TypeError('Argument must be a number');
    return Buffer(size);
};
SafeBuffer.allocUnsafeSlow = function(size) {
    if (typeof size !== 'number') throw new TypeError('Argument must be a number');
    return buffer.SlowBuffer(size);
};

},{"buffer":"hX7zZ"}],"eW7wN":[function(require,module,exports) {
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');
exports.finished = require('./lib/internal/streams/end-of-stream.js');
exports.pipeline = require('./lib/internal/streams/pipeline.js');

},{"./lib/_stream_readable.js":"8Z9oP","./lib/_stream_writable.js":"fMlWK","./lib/_stream_duplex.js":"8BtL4","./lib/_stream_transform.js":"hTTWP","./lib/_stream_passthrough.js":"d94t6","./lib/internal/streams/end-of-stream.js":"9TXgk","./lib/internal/streams/pipeline.js":"hwdVc"}],"8Z9oP":[function(require,module,exports) {
var global = arguments[3];
var process = require("process");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
module.exports = Readable;
/*<replacement>*/ var Duplex;
/*</replacement>*/ Readable.ReadableState = ReadableState;
/*<replacement>*/ var EE = require('events').EventEmitter;
var EElistenerCount = function EElistenerCount1(emitter, type) {
    return emitter.listeners(type).length;
};
/*</replacement>*/ /*<replacement>*/ var Stream = require('./internal/streams/stream');
/*</replacement>*/ var Buffer = require('buffer').Buffer;
var OurUint8Array = global.Uint8Array || function() {
};
function _uint8ArrayToBuffer(chunk) {
    return Buffer.from(chunk);
}
function _isUint8Array(obj) {
    return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*<replacement>*/ var debugUtil = require('util');
var debug;
if (debugUtil && debugUtil.debuglog) debug = debugUtil.debuglog('stream');
else debug = function debug1() {
};
/*</replacement>*/ var BufferList = require('./internal/streams/buffer_list');
var destroyImpl = require('./internal/streams/destroy');
var _require = require('./internal/streams/state'), getHighWaterMark = _require.getHighWaterMark;
var _require$codes = require('../errors').codes, ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE, ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF, ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED, ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.
var StringDecoder;
var createReadableStreamAsyncIterator;
var from;
require('inherits')(Readable, Stream);
var errorOrDestroy = destroyImpl.errorOrDestroy;
var kProxyEvents = [
    'error',
    'close',
    'destroy',
    'pause',
    'resume'
];
function prependListener(emitter, event, fn) {
    // Sadly this is not cacheable as some libraries bundle their own
    // event emitter implementation with them.
    if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any
    // userland ones.  NEVER DO THIS. This is here only because this code needs
    // to continue to work with older versions of Node.js that do not include
    // the prependListener() method. The goal is to eventually remove this hack.
    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);
    else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);
    else emitter._events[event] = [
        fn,
        emitter._events[event]
    ];
}
function ReadableState(options, stream, isDuplex) {
    Duplex = Duplex || require('./_stream_duplex');
    options = options || {
    }; // Duplex streams are both readable and writable, but share
    // the same options object.
    // However, some cases require setting options to different
    // values for the readable and the writable sides of the duplex stream.
    // These options can be provided separately as readableXXX and writableXXX.
    if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to
    // make all the buffer merging and length checks go away
    this.objectMode = !!options.objectMode;
    if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer
    // Note: 0 is a valid value, means "don't call _read preemptively ever"
    this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the
    // linked list can remove elements from the beginning faster than
    // array.shift()
    this.buffer = new BufferList();
    this.length = 0;
    this.pipes = null;
    this.pipesCount = 0;
    this.flowing = null;
    this.ended = false;
    this.endEmitted = false;
    this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted
    // immediately, or on a later tick.  We set this to true at first, because
    // any actions that shouldn't happen until "later" should generally also
    // not happen before the first read call.
    this.sync = true; // whenever we return null, then we set a flag to say
    // that we're awaiting a 'readable' event emission.
    this.needReadable = false;
    this.emittedReadable = false;
    this.readableListening = false;
    this.resumeScheduled = false;
    this.paused = true; // Should close be emitted on destroy. Defaults to true.
    this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')
    this.autoDestroy = !!options.autoDestroy; // has it been destroyed
    this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string
    // encoding is 'binary' so we have to make this configurable.
    // Everything else in the universe uses 'utf8', though.
    this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s
    this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled
    this.readingMore = false;
    this.decoder = null;
    this.encoding = null;
    if (options.encoding) {
        if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
        this.decoder = new StringDecoder(options.encoding);
        this.encoding = options.encoding;
    }
}
function Readable(options) {
    Duplex = Duplex || require('./_stream_duplex');
    if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside
    // the ReadableState constructor, at least with V8 6.5
    var isDuplex = this instanceof Duplex;
    this._readableState = new ReadableState(options, this, isDuplex); // legacy
    this.readable = true;
    if (options) {
        if (typeof options.read === 'function') this._read = options.read;
        if (typeof options.destroy === 'function') this._destroy = options.destroy;
    }
    Stream.call(this);
}
Object.defineProperty(Readable.prototype, 'destroyed', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        if (this._readableState === undefined) return false;
        return this._readableState.destroyed;
    },
    set: function set(value) {
        // we ignore the value if the stream
        // has not been initialized yet
        if (!this._readableState) return;
         // backward compatibility, the user is explicitly
        // managing destroyed
        this._readableState.destroyed = value;
    }
});
Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function(err, cb) {
    cb(err);
}; // Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function(chunk, encoding) {
    var state = this._readableState;
    var skipChunkCheck;
    if (!state.objectMode) {
        if (typeof chunk === 'string') {
            encoding = encoding || state.defaultEncoding;
            if (encoding !== state.encoding) {
                chunk = Buffer.from(chunk, encoding);
                encoding = '';
            }
            skipChunkCheck = true;
        }
    } else skipChunkCheck = true;
    return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
}; // Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function(chunk) {
    return readableAddChunk(this, chunk, null, true, false);
};
function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
    debug('readableAddChunk', chunk);
    var state = stream._readableState;
    if (chunk === null) {
        state.reading = false;
        onEofChunk(stream, state);
    } else {
        var er;
        if (!skipChunkCheck) er = chunkInvalid(state, chunk);
        if (er) errorOrDestroy(stream, er);
        else if (state.objectMode || chunk && chunk.length > 0) {
            if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) chunk = _uint8ArrayToBuffer(chunk);
            if (addToFront) {
                if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());
                else addChunk(stream, state, chunk, true);
            } else if (state.ended) errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
            else if (state.destroyed) return false;
            else {
                state.reading = false;
                if (state.decoder && !encoding) {
                    chunk = state.decoder.write(chunk);
                    if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);
                    else maybeReadMore(stream, state);
                } else addChunk(stream, state, chunk, false);
            }
        } else if (!addToFront) {
            state.reading = false;
            maybeReadMore(stream, state);
        }
    } // We can push more data if we are below the highWaterMark.
    // Also, if we have no data yet, we can stand some more bytes.
    // This is to work around cases where hwm=0, such as the repl.
    return !state.ended && (state.length < state.highWaterMark || state.length === 0);
}
function addChunk(stream, state, chunk, addToFront) {
    if (state.flowing && state.length === 0 && !state.sync) {
        state.awaitDrain = 0;
        stream.emit('data', chunk);
    } else {
        // update the buffer info.
        state.length += state.objectMode ? 1 : chunk.length;
        if (addToFront) state.buffer.unshift(chunk);
        else state.buffer.push(chunk);
        if (state.needReadable) emitReadable(stream);
    }
    maybeReadMore(stream, state);
}
function chunkInvalid(state, chunk) {
    var er;
    if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) er = new ERR_INVALID_ARG_TYPE('chunk', [
        'string',
        'Buffer',
        'Uint8Array'
    ], chunk);
    return er;
}
Readable.prototype.isPaused = function() {
    return this._readableState.flowing === false;
}; // backwards compatibility.
Readable.prototype.setEncoding = function(enc) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    var decoder = new StringDecoder(enc);
    this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8
    this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:
    var p = this._readableState.buffer.head;
    var content = '';
    while(p !== null){
        content += decoder.write(p.data);
        p = p.next;
    }
    this._readableState.buffer.clear();
    if (content !== '') this._readableState.buffer.push(content);
    this._readableState.length = content.length;
    return this;
}; // Don't raise the hwm > 1GB
var MAX_HWM = 1073741824;
function computeNewHighWaterMark(n) {
    if (n >= MAX_HWM) // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
    n = MAX_HWM;
    else {
        // Get the next highest power of 2 to prevent increasing hwm excessively in
        // tiny amounts
        n--;
        n |= n >>> 1;
        n |= n >>> 2;
        n |= n >>> 4;
        n |= n >>> 8;
        n |= n >>> 16;
        n++;
    }
    return n;
} // This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
    if (n <= 0 || state.length === 0 && state.ended) return 0;
    if (state.objectMode) return 1;
    if (n !== n) {
        // Only flow one buffer at a time
        if (state.flowing && state.length) return state.buffer.head.data.length;
        else return state.length;
    } // If we're asking for more than the current hwm, then raise the hwm.
    if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
    if (n <= state.length) return n; // Don't have enough
    if (!state.ended) {
        state.needReadable = true;
        return 0;
    }
    return state.length;
} // you can override either this method, or the async _read(n) below.
Readable.prototype.read = function(n) {
    debug('read', n);
    n = parseInt(n, 10);
    var state = this._readableState;
    var nOrig = n;
    if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we
    // already have a bunch of data in the buffer, then just trigger
    // the 'readable' event and move on.
    if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
        debug('read: emitReadable', state.length, state.ended);
        if (state.length === 0 && state.ended) endReadable(this);
        else emitReadable(this);
        return null;
    }
    n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.
    if (n === 0 && state.ended) {
        if (state.length === 0) endReadable(this);
        return null;
    } // All the actual chunk generation logic needs to be
    // *below* the call to _read.  The reason is that in certain
    // synthetic stream cases, such as passthrough streams, _read
    // may be a completely synchronous operation which may change
    // the state of the read buffer, providing enough data when
    // before there was *not* enough.
    //
    // So, the steps are:
    // 1. Figure out what the state of things will be after we do
    // a read from the buffer.
    //
    // 2. If that resulting state will trigger a _read, then call _read.
    // Note that this may be asynchronous, or synchronous.  Yes, it is
    // deeply ugly to write APIs this way, but that still doesn't mean
    // that the Readable class should behave improperly, as streams are
    // designed to be sync/async agnostic.
    // Take note if the _read call is sync or async (ie, if the read call
    // has returned yet), so that we know whether or not it's safe to emit
    // 'readable' etc.
    //
    // 3. Actually pull the requested chunks out of the buffer and return.
    // if we need a readable event, then we need to do some reading.
    var doRead = state.needReadable;
    debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some
    if (state.length === 0 || state.length - n < state.highWaterMark) {
        doRead = true;
        debug('length less than watermark', doRead);
    } // however, if we've ended, then there's no point, and if we're already
    // reading, then it's unnecessary.
    if (state.ended || state.reading) {
        doRead = false;
        debug('reading or ended', doRead);
    } else if (doRead) {
        debug('do read');
        state.reading = true;
        state.sync = true; // if the length is currently zero, then we *need* a readable event.
        if (state.length === 0) state.needReadable = true; // call internal read method
        this._read(state.highWaterMark);
        state.sync = false; // If _read pushed data synchronously, then `reading` will be false,
        // and we need to re-evaluate how much data we can return to the user.
        if (!state.reading) n = howMuchToRead(nOrig, state);
    }
    var ret;
    if (n > 0) ret = fromList(n, state);
    else ret = null;
    if (ret === null) {
        state.needReadable = state.length <= state.highWaterMark;
        n = 0;
    } else {
        state.length -= n;
        state.awaitDrain = 0;
    }
    if (state.length === 0) {
        // If we have nothing in the buffer, then we want to know
        // as soon as we *do* get something into the buffer.
        if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.
        if (nOrig !== n && state.ended) endReadable(this);
    }
    if (ret !== null) this.emit('data', ret);
    return ret;
};
function onEofChunk(stream, state) {
    debug('onEofChunk');
    if (state.ended) return;
    if (state.decoder) {
        var chunk = state.decoder.end();
        if (chunk && chunk.length) {
            state.buffer.push(chunk);
            state.length += state.objectMode ? 1 : chunk.length;
        }
    }
    state.ended = true;
    if (state.sync) // if we are sync, wait until next tick to emit the data.
    // Otherwise we risk emitting data in the flow()
    // the readable code triggers during a read() call
    emitReadable(stream);
    else {
        // emit 'readable' now to make sure it gets picked up.
        state.needReadable = false;
        if (!state.emittedReadable) {
            state.emittedReadable = true;
            emitReadable_(stream);
        }
    }
} // Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
    var state = stream._readableState;
    debug('emitReadable', state.needReadable, state.emittedReadable);
    state.needReadable = false;
    if (!state.emittedReadable) {
        debug('emitReadable', state.flowing);
        state.emittedReadable = true;
        process.nextTick(emitReadable_, stream);
    }
}
function emitReadable_(stream) {
    var state = stream._readableState;
    debug('emitReadable_', state.destroyed, state.length, state.ended);
    if (!state.destroyed && (state.length || state.ended)) {
        stream.emit('readable');
        state.emittedReadable = false;
    } // The stream needs another readable event if
    // 1. It is not flowing, as the flow mechanism will take
    //    care of it.
    // 2. It is not ended.
    // 3. It is below the highWaterMark, so we can schedule
    //    another readable later.
    state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
    flow(stream);
} // at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
    if (!state.readingMore) {
        state.readingMore = true;
        process.nextTick(maybeReadMore_, stream, state);
    }
}
function maybeReadMore_(stream, state) {
    // Attempt to read more data if we should.
    //
    // The conditions for reading more data are (one of):
    // - Not enough data buffered (state.length < state.highWaterMark). The loop
    //   is responsible for filling the buffer with enough data if such data
    //   is available. If highWaterMark is 0 and we are not in the flowing mode
    //   we should _not_ attempt to buffer any extra data. We'll get more data
    //   when the stream consumer calls read() instead.
    // - No data in the buffer, and the stream is in flowing mode. In this mode
    //   the loop below is responsible for ensuring read() is called. Failing to
    //   call read here would abort the flow and there's no other mechanism for
    //   continuing the flow if the stream consumer has just subscribed to the
    //   'data' event.
    //
    // In addition to the above conditions to keep reading data, the following
    // conditions prevent the data from being read:
    // - The stream has ended (state.ended).
    // - There is already a pending 'read' operation (state.reading). This is a
    //   case where the the stream has called the implementation defined _read()
    //   method, but they are processing the call asynchronously and have _not_
    //   called push() with new data. In this case we skip performing more
    //   read()s. The execution ends in this method again after the _read() ends
    //   up calling push() with more data.
    while(!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)){
        var len = state.length;
        debug('maybeReadMore read 0');
        stream.read(0);
        if (len === state.length) break;
    }
    state.readingMore = false;
} // abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function(n) {
    errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
};
Readable.prototype.pipe = function(dest, pipeOpts) {
    var src = this;
    var state = this._readableState;
    switch(state.pipesCount){
        case 0:
            state.pipes = dest;
            break;
        case 1:
            state.pipes = [
                state.pipes,
                dest
            ];
            break;
        default:
            state.pipes.push(dest);
            break;
    }
    state.pipesCount += 1;
    debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
    var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
    var endFn = doEnd ? onend : unpipe;
    if (state.endEmitted) process.nextTick(endFn);
    else src.once('end', endFn);
    dest.on('unpipe', onunpipe);
    function onunpipe(readable, unpipeInfo) {
        debug('onunpipe');
        if (readable === src) {
            if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
                unpipeInfo.hasUnpiped = true;
                cleanup();
            }
        }
    }
    function onend() {
        debug('onend');
        dest.end();
    } // when the dest drains, it reduces the awaitDrain counter
    // on the source.  This would be more elegant with a .once()
    // handler in flow(), but adding and removing repeatedly is
    // too slow.
    var ondrain = pipeOnDrain(src);
    dest.on('drain', ondrain);
    var cleanedUp = false;
    function cleanup() {
        debug('cleanup'); // cleanup event handlers once the pipe is broken
        dest.removeListener('close', onclose);
        dest.removeListener('finish', onfinish);
        dest.removeListener('drain', ondrain);
        dest.removeListener('error', onerror);
        dest.removeListener('unpipe', onunpipe);
        src.removeListener('end', onend);
        src.removeListener('end', unpipe);
        src.removeListener('data', ondata);
        cleanedUp = true; // if the reader is waiting for a drain event from this
        // specific writer, then it would cause it to never start
        // flowing again.
        // So, if this is awaiting a drain, then we just call it now.
        // If we don't know, then assume that we are waiting for one.
        if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
    }
    src.on('data', ondata);
    function ondata(chunk) {
        debug('ondata');
        var ret = dest.write(chunk);
        debug('dest.write', ret);
        if (ret === false) {
            // If the user unpiped during `dest.write()`, it is possible
            // to get stuck in a permanently paused state if that write
            // also returned false.
            // => Check whether `dest` is still a piping destination.
            if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
                debug('false write response, pause', state.awaitDrain);
                state.awaitDrain++;
            }
            src.pause();
        }
    } // if the dest has an error, then stop piping into it.
    // however, don't suppress the throwing behavior for this.
    function onerror(er) {
        debug('onerror', er);
        unpipe();
        dest.removeListener('error', onerror);
        if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);
    } // Make sure our error handler is attached before userland ones.
    prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.
    function onclose() {
        dest.removeListener('finish', onfinish);
        unpipe();
    }
    dest.once('close', onclose);
    function onfinish() {
        debug('onfinish');
        dest.removeListener('close', onclose);
        unpipe();
    }
    dest.once('finish', onfinish);
    function unpipe() {
        debug('unpipe');
        src.unpipe(dest);
    } // tell the dest that it's being piped to
    dest.emit('pipe', src); // start the flow if it hasn't been started already.
    if (!state.flowing) {
        debug('pipe resume');
        src.resume();
    }
    return dest;
};
function pipeOnDrain(src) {
    return function pipeOnDrainFunctionResult() {
        var state = src._readableState;
        debug('pipeOnDrain', state.awaitDrain);
        if (state.awaitDrain) state.awaitDrain--;
        if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
            state.flowing = true;
            flow(src);
        }
    };
}
Readable.prototype.unpipe = function(dest) {
    var state = this._readableState;
    var unpipeInfo = {
        hasUnpiped: false
    }; // if we're not piping anywhere, then do nothing.
    if (state.pipesCount === 0) return this; // just one destination.  most common case.
    if (state.pipesCount === 1) {
        // passed in one, but it's not the right one.
        if (dest && dest !== state.pipes) return this;
        if (!dest) dest = state.pipes; // got a match.
        state.pipes = null;
        state.pipesCount = 0;
        state.flowing = false;
        if (dest) dest.emit('unpipe', this, unpipeInfo);
        return this;
    } // slow case. multiple pipe destinations.
    if (!dest) {
        // remove all.
        var dests = state.pipes;
        var len = state.pipesCount;
        state.pipes = null;
        state.pipesCount = 0;
        state.flowing = false;
        for(var i = 0; i < len; i++)dests[i].emit('unpipe', this, {
            hasUnpiped: false
        });
        return this;
    } // try to find the right one.
    var index = indexOf(state.pipes, dest);
    if (index === -1) return this;
    state.pipes.splice(index, 1);
    state.pipesCount -= 1;
    if (state.pipesCount === 1) state.pipes = state.pipes[0];
    dest.emit('unpipe', this, unpipeInfo);
    return this;
}; // set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function(ev, fn) {
    var res = Stream.prototype.on.call(this, ev, fn);
    var state = this._readableState;
    if (ev === 'data') {
        // update readableListening so that resume() may be a no-op
        // a few lines down. This is needed to support once('readable').
        state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused
        if (state.flowing !== false) this.resume();
    } else if (ev === 'readable') {
        if (!state.endEmitted && !state.readableListening) {
            state.readableListening = state.needReadable = true;
            state.flowing = false;
            state.emittedReadable = false;
            debug('on readable', state.length, state.reading);
            if (state.length) emitReadable(this);
            else if (!state.reading) process.nextTick(nReadingNextTick, this);
        }
    }
    return res;
};
Readable.prototype.addListener = Readable.prototype.on;
Readable.prototype.removeListener = function(ev, fn) {
    var res = Stream.prototype.removeListener.call(this, ev, fn);
    if (ev === 'readable') // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
    return res;
};
Readable.prototype.removeAllListeners = function(ev) {
    var res = Stream.prototype.removeAllListeners.apply(this, arguments);
    if (ev === 'readable' || ev === undefined) // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
    return res;
};
function updateReadableListening(self) {
    var state = self._readableState;
    state.readableListening = self.listenerCount('readable') > 0;
    if (state.resumeScheduled && !state.paused) // flowing needs to be set to true now, otherwise
    // the upcoming resume will not flow.
    state.flowing = true; // crude way to check if we should resume
    else if (self.listenerCount('data') > 0) self.resume();
}
function nReadingNextTick(self) {
    debug('readable nexttick read 0');
    self.read(0);
} // pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function() {
    var state = this._readableState;
    if (!state.flowing) {
        debug('resume'); // we flow only if there is no one listening
        // for readable, but we still have to call
        // resume()
        state.flowing = !state.readableListening;
        resume(this, state);
    }
    state.paused = false;
    return this;
};
function resume(stream, state) {
    if (!state.resumeScheduled) {
        state.resumeScheduled = true;
        process.nextTick(resume_, stream, state);
    }
}
function resume_(stream, state) {
    debug('resume', state.reading);
    if (!state.reading) stream.read(0);
    state.resumeScheduled = false;
    stream.emit('resume');
    flow(stream);
    if (state.flowing && !state.reading) stream.read(0);
}
Readable.prototype.pause = function() {
    debug('call pause flowing=%j', this._readableState.flowing);
    if (this._readableState.flowing !== false) {
        debug('pause');
        this._readableState.flowing = false;
        this.emit('pause');
    }
    this._readableState.paused = true;
    return this;
};
function flow(stream) {
    var state = stream._readableState;
    debug('flow', state.flowing);
    while(state.flowing && stream.read() !== null);
} // wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function(stream) {
    var _this = this;
    var state = this._readableState;
    var paused = false;
    stream.on('end', function() {
        debug('wrapped end');
        if (state.decoder && !state.ended) {
            var chunk = state.decoder.end();
            if (chunk && chunk.length) _this.push(chunk);
        }
        _this.push(null);
    });
    stream.on('data', function(chunk) {
        debug('wrapped data');
        if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode
        if (state.objectMode && (chunk === null || chunk === undefined)) return;
        else if (!state.objectMode && (!chunk || !chunk.length)) return;
        var ret = _this.push(chunk);
        if (!ret) {
            paused = true;
            stream.pause();
        }
    }); // proxy all the other methods.
    // important when wrapping filters and duplexes.
    for(var i in stream)if (this[i] === undefined && typeof stream[i] === 'function') this[i] = (function methodWrap(method) {
        return function methodWrapReturnFunction() {
            return stream[method].apply(stream, arguments);
        };
    })(i);
     // proxy certain important events.
    for(var n = 0; n < kProxyEvents.length; n++)stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
     // when we try to consume some more bytes, simply unpause the
    // underlying stream.
    this._read = function(n1) {
        debug('wrapped _read', n1);
        if (paused) {
            paused = false;
            stream.resume();
        }
    };
    return this;
};
if (typeof Symbol === 'function') Readable.prototype[Symbol.asyncIterator] = function() {
    if (createReadableStreamAsyncIterator === undefined) createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');
    return createReadableStreamAsyncIterator(this);
};
Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._readableState.highWaterMark;
    }
});
Object.defineProperty(Readable.prototype, 'readableBuffer', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._readableState && this._readableState.buffer;
    }
});
Object.defineProperty(Readable.prototype, 'readableFlowing', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._readableState.flowing;
    },
    set: function set(state) {
        if (this._readableState) this._readableState.flowing = state;
    }
}); // exposed for testing purposes only.
Readable._fromList = fromList;
Object.defineProperty(Readable.prototype, 'readableLength', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._readableState.length;
    }
}); // Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
    // nothing buffered
    if (state.length === 0) return null;
    var ret;
    if (state.objectMode) ret = state.buffer.shift();
    else if (!n || n >= state.length) {
        // read it all, truncate the list
        if (state.decoder) ret = state.buffer.join('');
        else if (state.buffer.length === 1) ret = state.buffer.first();
        else ret = state.buffer.concat(state.length);
        state.buffer.clear();
    } else // read part of list
    ret = state.buffer.consume(n, state.decoder);
    return ret;
}
function endReadable(stream) {
    var state = stream._readableState;
    debug('endReadable', state.endEmitted);
    if (!state.endEmitted) {
        state.ended = true;
        process.nextTick(endReadableNT, state, stream);
    }
}
function endReadableNT(state, stream) {
    debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.
    if (!state.endEmitted && state.length === 0) {
        state.endEmitted = true;
        stream.readable = false;
        stream.emit('end');
        if (state.autoDestroy) {
            // In case of duplex streams we need a way to detect
            // if the writable side is ready for autoDestroy as well
            var wState = stream._writableState;
            if (!wState || wState.autoDestroy && wState.finished) stream.destroy();
        }
    }
}
if (typeof Symbol === 'function') Readable.from = function(iterable, opts) {
    if (from === undefined) from = require('./internal/streams/from');
    return from(Readable, iterable, opts);
};
function indexOf(xs, x) {
    for(var i = 0, l = xs.length; i < l; i++){
        if (xs[i] === x) return i;
    }
    return -1;
}

},{"process":"5svFz","events":"gm7Nh","./internal/streams/stream":"7KK5D","buffer":"hX7zZ","util":"4LM6B","./internal/streams/buffer_list":"bxwI2","./internal/streams/destroy":"g1gtC","./internal/streams/state":"2YZPJ","../errors":"4J2TF","inherits":"9Y2vC","./_stream_duplex":"8BtL4","string_decoder/":"bjdCH","./internal/streams/async_iterator":"gbzlj","./internal/streams/from":"7v6S7"}],"7KK5D":[function(require,module,exports) {
module.exports = require('events').EventEmitter;

},{"events":"gm7Nh"}],"bxwI2":[function(require,module,exports) {
'use strict';
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _objectSpread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {
        };
        if (i % 2) ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
        });
        else if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        else ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _defineProperty(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
var _require = require('buffer'), Buffer = _require.Buffer;
var _require2 = require('util'), inspect = _require2.inspect;
var custom = inspect && inspect.custom || 'inspect';
function copyBuffer(src, target, offset) {
    Buffer.prototype.copy.call(src, target, offset);
}
module.exports = /*#__PURE__*/ (function() {
    function BufferList() {
        _classCallCheck(this, BufferList);
        this.head = null;
        this.tail = null;
        this.length = 0;
    }
    _createClass(BufferList, [
        {
            key: "push",
            value: function push(v) {
                var entry = {
                    data: v,
                    next: null
                };
                if (this.length > 0) this.tail.next = entry;
                else this.head = entry;
                this.tail = entry;
                ++this.length;
            }
        },
        {
            key: "unshift",
            value: function unshift(v) {
                var entry = {
                    data: v,
                    next: this.head
                };
                if (this.length === 0) this.tail = entry;
                this.head = entry;
                ++this.length;
            }
        },
        {
            key: "shift",
            value: function shift() {
                if (this.length === 0) return;
                var ret = this.head.data;
                if (this.length === 1) this.head = this.tail = null;
                else this.head = this.head.next;
                --this.length;
                return ret;
            }
        },
        {
            key: "clear",
            value: function clear() {
                this.head = this.tail = null;
                this.length = 0;
            }
        },
        {
            key: "join",
            value: function join(s) {
                if (this.length === 0) return '';
                var p = this.head;
                var ret = '' + p.data;
                while(p = p.next)ret += s + p.data;
                return ret;
            }
        },
        {
            key: "concat",
            value: function concat(n) {
                if (this.length === 0) return Buffer.alloc(0);
                var ret = Buffer.allocUnsafe(n >>> 0);
                var p = this.head;
                var i = 0;
                while(p){
                    copyBuffer(p.data, ret, i);
                    i += p.data.length;
                    p = p.next;
                }
                return ret;
            } // Consumes a specified amount of bytes or characters from the buffered data.
        },
        {
            key: "consume",
            value: function consume(n, hasStrings) {
                var ret;
                if (n < this.head.data.length) {
                    // `slice` is the same for buffers and strings.
                    ret = this.head.data.slice(0, n);
                    this.head.data = this.head.data.slice(n);
                } else if (n === this.head.data.length) // First chunk is a perfect match.
                ret = this.shift();
                else // Result spans more than one buffer.
                ret = hasStrings ? this._getString(n) : this._getBuffer(n);
                return ret;
            }
        },
        {
            key: "first",
            value: function first() {
                return this.head.data;
            } // Consumes a specified amount of characters from the buffered data.
        },
        {
            key: "_getString",
            value: function _getString(n) {
                var p = this.head;
                var c = 1;
                var ret = p.data;
                n -= ret.length;
                while(p = p.next){
                    var str = p.data;
                    var nb = n > str.length ? str.length : n;
                    if (nb === str.length) ret += str;
                    else ret += str.slice(0, n);
                    n -= nb;
                    if (n === 0) {
                        if (nb === str.length) {
                            ++c;
                            if (p.next) this.head = p.next;
                            else this.head = this.tail = null;
                        } else {
                            this.head = p;
                            p.data = str.slice(nb);
                        }
                        break;
                    }
                    ++c;
                }
                this.length -= c;
                return ret;
            } // Consumes a specified amount of bytes from the buffered data.
        },
        {
            key: "_getBuffer",
            value: function _getBuffer(n) {
                var ret = Buffer.allocUnsafe(n);
                var p = this.head;
                var c = 1;
                p.data.copy(ret);
                n -= p.data.length;
                while(p = p.next){
                    var buf = p.data;
                    var nb = n > buf.length ? buf.length : n;
                    buf.copy(ret, ret.length - n, 0, nb);
                    n -= nb;
                    if (n === 0) {
                        if (nb === buf.length) {
                            ++c;
                            if (p.next) this.head = p.next;
                            else this.head = this.tail = null;
                        } else {
                            this.head = p;
                            p.data = buf.slice(nb);
                        }
                        break;
                    }
                    ++c;
                }
                this.length -= c;
                return ret;
            } // Make sure the linked list only shows the minimal necessary information.
        },
        {
            key: custom,
            value: function value(_, options) {
                return inspect(this, _objectSpread({
                }, options, {
                    // Only inspect one level.
                    depth: 0,
                    // It should not recurse.
                    customInspect: false
                }));
            }
        }
    ]);
    return BufferList;
})();

},{"buffer":"hX7zZ","util":"4LM6B"}],"g1gtC":[function(require,module,exports) {
var process = require("process");
'use strict'; // undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
    var _this = this;
    var readableDestroyed = this._readableState && this._readableState.destroyed;
    var writableDestroyed = this._writableState && this._writableState.destroyed;
    if (readableDestroyed || writableDestroyed) {
        if (cb) cb(err);
        else if (err) {
            if (!this._writableState) process.nextTick(emitErrorNT, this, err);
            else if (!this._writableState.errorEmitted) {
                this._writableState.errorEmitted = true;
                process.nextTick(emitErrorNT, this, err);
            }
        }
        return this;
    } // we set destroyed to true before firing error callbacks in order
    // to make it re-entrance safe in case destroy() is called within callbacks
    if (this._readableState) this._readableState.destroyed = true;
     // if this is a duplex stream mark the writable part as destroyed as well
    if (this._writableState) this._writableState.destroyed = true;
    this._destroy(err || null, function(err1) {
        if (!cb && err1) {
            if (!_this._writableState) process.nextTick(emitErrorAndCloseNT, _this, err1);
            else if (!_this._writableState.errorEmitted) {
                _this._writableState.errorEmitted = true;
                process.nextTick(emitErrorAndCloseNT, _this, err1);
            } else process.nextTick(emitCloseNT, _this);
        } else if (cb) {
            process.nextTick(emitCloseNT, _this);
            cb(err1);
        } else process.nextTick(emitCloseNT, _this);
    });
    return this;
}
function emitErrorAndCloseNT(self, err) {
    emitErrorNT(self, err);
    emitCloseNT(self);
}
function emitCloseNT(self) {
    if (self._writableState && !self._writableState.emitClose) return;
    if (self._readableState && !self._readableState.emitClose) return;
    self.emit('close');
}
function undestroy() {
    if (this._readableState) {
        this._readableState.destroyed = false;
        this._readableState.reading = false;
        this._readableState.ended = false;
        this._readableState.endEmitted = false;
    }
    if (this._writableState) {
        this._writableState.destroyed = false;
        this._writableState.ended = false;
        this._writableState.ending = false;
        this._writableState.finalCalled = false;
        this._writableState.prefinished = false;
        this._writableState.finished = false;
        this._writableState.errorEmitted = false;
    }
}
function emitErrorNT(self, err) {
    self.emit('error', err);
}
function errorOrDestroy(stream, err) {
    // We have tests that rely on errors being emitted
    // in the same tick, so changing this is semver major.
    // For now when you opt-in to autoDestroy we allow
    // the error to be emitted nextTick. In a future
    // semver major update we should change the default to this.
    var rState = stream._readableState;
    var wState = stream._writableState;
    if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);
    else stream.emit('error', err);
}
module.exports = {
    destroy: destroy,
    undestroy: undestroy,
    errorOrDestroy: errorOrDestroy
};

},{"process":"5svFz"}],"2YZPJ":[function(require,module,exports) {
'use strict';
var ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;
function highWaterMarkFrom(options, isDuplex, duplexKey) {
    return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
}
function getHighWaterMark(state, options, duplexKey, isDuplex) {
    var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);
    if (hwm != null) {
        if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
            var name = isDuplex ? duplexKey : 'highWaterMark';
            throw new ERR_INVALID_OPT_VALUE(name, hwm);
        }
        return Math.floor(hwm);
    } // Default value
    return state.objectMode ? 16 : 16384;
}
module.exports = {
    getHighWaterMark: getHighWaterMark
};

},{"../../../errors":"4J2TF"}],"4J2TF":[function(require,module,exports) {
'use strict';
function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
}
var codes = {
};
function createErrorType(code, message, Base) {
    if (!Base) Base = Error;
    function getMessage(arg1, arg2, arg3) {
        if (typeof message === 'string') return message;
        else return message(arg1, arg2, arg3);
    }
    var NodeError1 = /*#__PURE__*/ function(_Base) {
        _inheritsLoose(NodeError2, _Base);
        function NodeError2(arg1, arg2, arg3) {
            return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
        }
        return NodeError2;
    }(Base);
    NodeError1.prototype.name = Base.name;
    NodeError1.prototype.code = code;
    codes[code] = NodeError1;
} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js
function oneOf(expected, thing) {
    if (Array.isArray(expected)) {
        var len = expected.length;
        expected = expected.map(function(i) {
            return String(i);
        });
        if (len > 2) return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(', '), ", or ") + expected[len - 1];
        else if (len === 2) return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
        else return "of ".concat(thing, " ").concat(expected[0]);
    } else return "of ".concat(thing, " ").concat(String(expected));
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith
function startsWith(str, search, pos) {
    return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith
function endsWith(str, search, this_len) {
    if (this_len === undefined || this_len > str.length) this_len = str.length;
    return str.substring(this_len - search.length, this_len) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes
function includes(str, search, start) {
    if (typeof start !== 'number') start = 0;
    if (start + search.length > str.length) return false;
    else return str.indexOf(search, start) !== -1;
}
createErrorType('ERR_INVALID_OPT_VALUE', function(name, value) {
    return 'The value "' + value + '" is invalid for option "' + name + '"';
}, TypeError);
createErrorType('ERR_INVALID_ARG_TYPE', function(name, expected, actual) {
    // determiner: 'must be' or 'must not be'
    var determiner;
    if (typeof expected === 'string' && startsWith(expected, 'not ')) {
        determiner = 'must not be';
        expected = expected.replace(/^not /, '');
    } else determiner = 'must be';
    var msg;
    if (endsWith(name, ' argument')) // For cases like 'first argument'
    msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
    else {
        var type = includes(name, '.') ? 'property' : 'argument';
        msg = "The \"".concat(name, "\" ").concat(type, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
    }
    msg += ". Received type ".concat(typeof actual);
    return msg;
}, TypeError);
createErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');
createErrorType('ERR_METHOD_NOT_IMPLEMENTED', function(name) {
    return 'The ' + name + ' method is not implemented';
});
createErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');
createErrorType('ERR_STREAM_DESTROYED', function(name) {
    return 'Cannot call ' + name + ' after a stream was destroyed';
});
createErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');
createErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');
createErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');
createErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);
createErrorType('ERR_UNKNOWN_ENCODING', function(arg) {
    return 'Unknown encoding: ' + arg;
}, TypeError);
createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');
module.exports.codes = codes;

},{}],"8BtL4":[function(require,module,exports) {
var process = require("process");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.
'use strict';
/*<replacement>*/ var objectKeys = Object.keys || function(obj) {
    var keys = [];
    for(var key in obj)keys.push(key);
    return keys;
};
/*</replacement>*/ module.exports = Duplex;
var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');
require('inherits')(Duplex, Readable);
// Allow the keys array to be GC'ed.
var keys = objectKeys(Writable.prototype);
for(var v = 0; v < keys.length; v++){
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
}
function Duplex(options) {
    if (!(this instanceof Duplex)) return new Duplex(options);
    Readable.call(this, options);
    Writable.call(this, options);
    this.allowHalfOpen = true;
    if (options) {
        if (options.readable === false) this.readable = false;
        if (options.writable === false) this.writable = false;
        if (options.allowHalfOpen === false) {
            this.allowHalfOpen = false;
            this.once('end', onend);
        }
    }
}
Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._writableState.highWaterMark;
    }
});
Object.defineProperty(Duplex.prototype, 'writableBuffer', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._writableState && this._writableState.getBuffer();
    }
});
Object.defineProperty(Duplex.prototype, 'writableLength', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._writableState.length;
    }
}); // the no-half-open enforcer
function onend() {
    // If the writable side ended, then we're ok.
    if (this._writableState.ended) return; // no more data can be written.
    // But allow more writes to happen in this tick.
    process.nextTick(onEndNT, this);
}
function onEndNT(self) {
    self.end();
}
Object.defineProperty(Duplex.prototype, 'destroyed', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        if (this._readableState === undefined || this._writableState === undefined) return false;
        return this._readableState.destroyed && this._writableState.destroyed;
    },
    set: function set(value) {
        // we ignore the value if the stream
        // has not been initialized yet
        if (this._readableState === undefined || this._writableState === undefined) return;
         // backward compatibility, the user is explicitly
        // managing destroyed
        this._readableState.destroyed = value;
        this._writableState.destroyed = value;
    }
});

},{"process":"5svFz","./_stream_readable":"8Z9oP","./_stream_writable":"fMlWK","inherits":"9Y2vC"}],"fMlWK":[function(require,module,exports) {
var global = arguments[3];
var process = require("process");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.
'use strict';
module.exports = Writable;
/* <replacement> */ function WriteReq(chunk, encoding, cb) {
    this.chunk = chunk;
    this.encoding = encoding;
    this.callback = cb;
    this.next = null;
} // It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
    var _this = this;
    this.next = null;
    this.entry = null;
    this.finish = function() {
        onCorkedFinish(_this, state);
    };
}
/* </replacement> */ /*<replacement>*/ var Duplex;
/*</replacement>*/ Writable.WritableState = WritableState;
/*<replacement>*/ var internalUtil = {
    deprecate: require('util-deprecate')
};
/*</replacement>*/ /*<replacement>*/ var Stream = require('./internal/streams/stream');
/*</replacement>*/ var Buffer = require('buffer').Buffer;
var OurUint8Array = global.Uint8Array || function() {
};
function _uint8ArrayToBuffer(chunk) {
    return Buffer.from(chunk);
}
function _isUint8Array(obj) {
    return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
var destroyImpl = require('./internal/streams/destroy');
var _require = require('./internal/streams/state'), getHighWaterMark = _require.getHighWaterMark;
var _require$codes = require('../errors').codes, ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE, ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED, ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK, ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE, ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED, ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES, ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END, ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;
var errorOrDestroy = destroyImpl.errorOrDestroy;
require('inherits')(Writable, Stream);
function nop() {
}
function WritableState(options, stream, isDuplex) {
    Duplex = Duplex || require('./_stream_duplex');
    options = options || {
    }; // Duplex streams are both readable and writable, but share
    // the same options object.
    // However, some cases require setting options to different
    // values for the readable and the writable sides of the duplex stream,
    // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.
    if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream
    // contains buffers or objects.
    this.objectMode = !!options.objectMode;
    if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false
    // Note: 0 is a valid value, means that we always return false if
    // the entire buffer is not flushed immediately on write()
    this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called
    this.finalCalled = false; // drain event flag.
    this.needDrain = false; // at the start of calling end()
    this.ending = false; // when end() has been called, and returned
    this.ended = false; // when 'finish' is emitted
    this.finished = false; // has it been destroyed
    this.destroyed = false; // should we decode strings into buffers before passing to _write?
    // this is here so that some node-core streams can optimize string
    // handling at a lower level.
    var noDecode = options.decodeStrings === false;
    this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string
    // encoding is 'binary' so we have to make this configurable.
    // Everything else in the universe uses 'utf8', though.
    this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement
    // of how much we're waiting to get pushed to some underlying
    // socket or file.
    this.length = 0; // a flag to see when we're in the middle of a write.
    this.writing = false; // when true all writes will be buffered until .uncork() call
    this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,
    // or on a later tick.  We set this to true at first, because any
    // actions that shouldn't happen until "later" should generally also
    // not happen before the first write call.
    this.sync = true; // a flag to know if we're processing previously buffered items, which
    // may call the _write() callback in the same tick, so that we don't
    // end up in an overlapped onwrite situation.
    this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)
    this.onwrite = function(er) {
        onwrite(stream, er);
    }; // the callback that the user supplies to write(chunk,encoding,cb)
    this.writecb = null; // the amount that is being written when _write is called.
    this.writelen = 0;
    this.bufferedRequest = null;
    this.lastBufferedRequest = null; // number of pending user-supplied write callbacks
    // this must be 0 before 'finish' can be emitted
    this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs
    // This is relevant for synchronous Transform streams
    this.prefinished = false; // True if the error was already emitted and should not be thrown again
    this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.
    this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')
    this.autoDestroy = !!options.autoDestroy; // count buffered requests
    this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always
    // one allocated and free to use, and we maintain at most two
    this.corkedRequestsFree = new CorkedRequest(this);
}
WritableState.prototype.getBuffer = function getBuffer() {
    var current = this.bufferedRequest;
    var out = [];
    while(current){
        out.push(current);
        current = current.next;
    }
    return out;
};
(function() {
    try {
        Object.defineProperty(WritableState.prototype, 'buffer', {
            get: internalUtil.deprecate(function writableStateBufferGetter() {
                return this.getBuffer();
            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", 'DEP0003')
        });
    } catch (_) {
    }
})(); // Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
    realHasInstance = Function.prototype[Symbol.hasInstance];
    Object.defineProperty(Writable, Symbol.hasInstance, {
        value: function value(object) {
            if (realHasInstance.call(this, object)) return true;
            if (this !== Writable) return false;
            return object && object._writableState instanceof WritableState;
        }
    });
} else realHasInstance = function realHasInstance1(object) {
    return object instanceof this;
};
function Writable(options) {
    Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.
    // `realHasInstance` is necessary because using plain `instanceof`
    // would return false, as no `_writableState` property is attached.
    // Trying to use the custom `instanceof` for Writable here will also break the
    // Node.js LazyTransform implementation, which has a non-trivial getter for
    // `_writableState` that would lead to infinite recursion.
    // Checking for a Stream.Duplex instance is faster here instead of inside
    // the WritableState constructor, at least with V8 6.5
    var isDuplex = this instanceof Duplex;
    if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
    this._writableState = new WritableState(options, this, isDuplex); // legacy.
    this.writable = true;
    if (options) {
        if (typeof options.write === 'function') this._write = options.write;
        if (typeof options.writev === 'function') this._writev = options.writev;
        if (typeof options.destroy === 'function') this._destroy = options.destroy;
        if (typeof options.final === 'function') this._final = options.final;
    }
    Stream.call(this);
} // Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function() {
    errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
};
function writeAfterEnd(stream, cb) {
    var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb
    errorOrDestroy(stream, er);
    process.nextTick(cb, er);
} // Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
    var er;
    if (chunk === null) er = new ERR_STREAM_NULL_VALUES();
    else if (typeof chunk !== 'string' && !state.objectMode) er = new ERR_INVALID_ARG_TYPE('chunk', [
        'string',
        'Buffer'
    ], chunk);
    if (er) {
        errorOrDestroy(stream, er);
        process.nextTick(cb, er);
        return false;
    }
    return true;
}
Writable.prototype.write = function(chunk, encoding, cb) {
    var state = this._writableState;
    var ret = false;
    var isBuf = !state.objectMode && _isUint8Array(chunk);
    if (isBuf && !Buffer.isBuffer(chunk)) chunk = _uint8ArrayToBuffer(chunk);
    if (typeof encoding === 'function') {
        cb = encoding;
        encoding = null;
    }
    if (isBuf) encoding = 'buffer';
    else if (!encoding) encoding = state.defaultEncoding;
    if (typeof cb !== 'function') cb = nop;
    if (state.ending) writeAfterEnd(this, cb);
    else if (isBuf || validChunk(this, state, chunk, cb)) {
        state.pendingcb++;
        ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
    }
    return ret;
};
Writable.prototype.cork = function() {
    this._writableState.corked++;
};
Writable.prototype.uncork = function() {
    var state = this._writableState;
    if (state.corked) {
        state.corked--;
        if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
    }
};
Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
    // node::ParseEncoding() requires lower case.
    if (typeof encoding === 'string') encoding = encoding.toLowerCase();
    if (!([
        'hex',
        'utf8',
        'utf-8',
        'ascii',
        'binary',
        'base64',
        'ucs2',
        'ucs-2',
        'utf16le',
        'utf-16le',
        'raw'
    ].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);
    this._writableState.defaultEncoding = encoding;
    return this;
};
Object.defineProperty(Writable.prototype, 'writableBuffer', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._writableState && this._writableState.getBuffer();
    }
});
function decodeChunk(state, chunk, encoding) {
    if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') chunk = Buffer.from(chunk, encoding);
    return chunk;
}
Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._writableState.highWaterMark;
    }
}); // if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
    if (!isBuf) {
        var newChunk = decodeChunk(state, chunk, encoding);
        if (chunk !== newChunk) {
            isBuf = true;
            encoding = 'buffer';
            chunk = newChunk;
        }
    }
    var len = state.objectMode ? 1 : chunk.length;
    state.length += len;
    var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.
    if (!ret) state.needDrain = true;
    if (state.writing || state.corked) {
        var last = state.lastBufferedRequest;
        state.lastBufferedRequest = {
            chunk: chunk,
            encoding: encoding,
            isBuf: isBuf,
            callback: cb,
            next: null
        };
        if (last) last.next = state.lastBufferedRequest;
        else state.bufferedRequest = state.lastBufferedRequest;
        state.bufferedRequestCount += 1;
    } else doWrite(stream, state, false, len, chunk, encoding, cb);
    return ret;
}
function doWrite(stream, state, writev, len, chunk, encoding, cb) {
    state.writelen = len;
    state.writecb = cb;
    state.writing = true;
    state.sync = true;
    if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));
    else if (writev) stream._writev(chunk, state.onwrite);
    else stream._write(chunk, encoding, state.onwrite);
    state.sync = false;
}
function onwriteError(stream, state, sync, er, cb) {
    --state.pendingcb;
    if (sync) {
        // defer the callback if we are being called synchronously
        // to avoid piling up things on the stack
        process.nextTick(cb, er); // this can emit finish, and it will always happen
        // after error
        process.nextTick(finishMaybe, stream, state);
        stream._writableState.errorEmitted = true;
        errorOrDestroy(stream, er);
    } else {
        // the caller expect this to happen before if
        // it is async
        cb(er);
        stream._writableState.errorEmitted = true;
        errorOrDestroy(stream, er); // this can emit finish, but finish must
        // always follow error
        finishMaybe(stream, state);
    }
}
function onwriteStateUpdate(state) {
    state.writing = false;
    state.writecb = null;
    state.length -= state.writelen;
    state.writelen = 0;
}
function onwrite(stream, er) {
    var state = stream._writableState;
    var sync = state.sync;
    var cb = state.writecb;
    if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();
    onwriteStateUpdate(state);
    if (er) onwriteError(stream, state, sync, er, cb);
    else {
        // Check if we're actually ready to finish, but don't emit yet
        var finished = needFinish(state) || stream.destroyed;
        if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(stream, state);
        if (sync) process.nextTick(afterWrite, stream, state, finished, cb);
        else afterWrite(stream, state, finished, cb);
    }
}
function afterWrite(stream, state, finished, cb) {
    if (!finished) onwriteDrain(stream, state);
    state.pendingcb--;
    cb();
    finishMaybe(stream, state);
} // Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
    if (state.length === 0 && state.needDrain) {
        state.needDrain = false;
        stream.emit('drain');
    }
} // if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
    state.bufferProcessing = true;
    var entry = state.bufferedRequest;
    if (stream._writev && entry && entry.next) {
        // Fast case, write everything using _writev()
        var l = state.bufferedRequestCount;
        var buffer = new Array(l);
        var holder = state.corkedRequestsFree;
        holder.entry = entry;
        var count = 0;
        var allBuffers = true;
        while(entry){
            buffer[count] = entry;
            if (!entry.isBuf) allBuffers = false;
            entry = entry.next;
            count += 1;
        }
        buffer.allBuffers = allBuffers;
        doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time
        // as the hot path ends with doWrite
        state.pendingcb++;
        state.lastBufferedRequest = null;
        if (holder.next) {
            state.corkedRequestsFree = holder.next;
            holder.next = null;
        } else state.corkedRequestsFree = new CorkedRequest(state);
        state.bufferedRequestCount = 0;
    } else {
        // Slow case, write chunks one-by-one
        while(entry){
            var chunk = entry.chunk;
            var encoding = entry.encoding;
            var cb = entry.callback;
            var len = state.objectMode ? 1 : chunk.length;
            doWrite(stream, state, false, len, chunk, encoding, cb);
            entry = entry.next;
            state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then
            // it means that we need to wait until it does.
            // also, that means that the chunk and cb are currently
            // being processed, so move the buffer counter past them.
            if (state.writing) break;
        }
        if (entry === null) state.lastBufferedRequest = null;
    }
    state.bufferedRequest = entry;
    state.bufferProcessing = false;
}
Writable.prototype._write = function(chunk, encoding, cb) {
    cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
};
Writable.prototype._writev = null;
Writable.prototype.end = function(chunk, encoding, cb) {
    var state = this._writableState;
    if (typeof chunk === 'function') {
        cb = chunk;
        chunk = null;
        encoding = null;
    } else if (typeof encoding === 'function') {
        cb = encoding;
        encoding = null;
    }
    if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks
    if (state.corked) {
        state.corked = 1;
        this.uncork();
    } // ignore unnecessary end() calls.
    if (!state.ending) endWritable(this, state, cb);
    return this;
};
Object.defineProperty(Writable.prototype, 'writableLength', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._writableState.length;
    }
});
function needFinish(state) {
    return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
    stream._final(function(err) {
        state.pendingcb--;
        if (err) errorOrDestroy(stream, err);
        state.prefinished = true;
        stream.emit('prefinish');
        finishMaybe(stream, state);
    });
}
function prefinish(stream, state) {
    if (!state.prefinished && !state.finalCalled) {
        if (typeof stream._final === 'function' && !state.destroyed) {
            state.pendingcb++;
            state.finalCalled = true;
            process.nextTick(callFinal, stream, state);
        } else {
            state.prefinished = true;
            stream.emit('prefinish');
        }
    }
}
function finishMaybe(stream, state) {
    var need = needFinish(state);
    if (need) {
        prefinish(stream, state);
        if (state.pendingcb === 0) {
            state.finished = true;
            stream.emit('finish');
            if (state.autoDestroy) {
                // In case of duplex streams we need a way to detect
                // if the readable side is ready for autoDestroy as well
                var rState = stream._readableState;
                if (!rState || rState.autoDestroy && rState.endEmitted) stream.destroy();
            }
        }
    }
    return need;
}
function endWritable(stream, state, cb) {
    state.ending = true;
    finishMaybe(stream, state);
    if (cb) {
        if (state.finished) process.nextTick(cb);
        else stream.once('finish', cb);
    }
    state.ended = true;
    stream.writable = false;
}
function onCorkedFinish(corkReq, state, err) {
    var entry = corkReq.entry;
    corkReq.entry = null;
    while(entry){
        var cb = entry.callback;
        state.pendingcb--;
        cb(err);
        entry = entry.next;
    } // reuse the free corkReq.
    state.corkedRequestsFree.next = corkReq;
}
Object.defineProperty(Writable.prototype, 'destroyed', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        if (this._writableState === undefined) return false;
        return this._writableState.destroyed;
    },
    set: function set(value) {
        // we ignore the value if the stream
        // has not been initialized yet
        if (!this._writableState) return;
         // backward compatibility, the user is explicitly
        // managing destroyed
        this._writableState.destroyed = value;
    }
});
Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function(err, cb) {
    cb(err);
};

},{"process":"5svFz","util-deprecate":"4BOnC","./internal/streams/stream":"7KK5D","buffer":"hX7zZ","./internal/streams/destroy":"g1gtC","./internal/streams/state":"2YZPJ","../errors":"4J2TF","inherits":"9Y2vC","./_stream_duplex":"8BtL4"}],"gbzlj":[function(require,module,exports) {
var process = require("process");
'use strict';
var _Object$setPrototypeO;
function _defineProperty(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
var finished = require('./end-of-stream');
var kLastResolve = Symbol('lastResolve');
var kLastReject = Symbol('lastReject');
var kError = Symbol('error');
var kEnded = Symbol('ended');
var kLastPromise = Symbol('lastPromise');
var kHandlePromise = Symbol('handlePromise');
var kStream = Symbol('stream');
function createIterResult(value, done) {
    return {
        value: value,
        done: done
    };
}
function readAndResolve(iter) {
    var resolve = iter[kLastResolve];
    if (resolve !== null) {
        var data = iter[kStream].read(); // we defer if data is null
        // we can be expecting either 'end' or
        // 'error'
        if (data !== null) {
            iter[kLastPromise] = null;
            iter[kLastResolve] = null;
            iter[kLastReject] = null;
            resolve(createIterResult(data, false));
        }
    }
}
function onReadable(iter) {
    // we wait for the next tick, because it might
    // emit an error with process.nextTick
    process.nextTick(readAndResolve, iter);
}
function wrapForNext(lastPromise, iter) {
    return function(resolve, reject) {
        lastPromise.then(function() {
            if (iter[kEnded]) {
                resolve(createIterResult(undefined, true));
                return;
            }
            iter[kHandlePromise](resolve, reject);
        }, reject);
    };
}
var AsyncIteratorPrototype = Object.getPrototypeOf(function() {
});
var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
    get stream () {
        return this[kStream];
    },
    next: function next() {
        var _this = this;
        // if we have detected an error in the meanwhile
        // reject straight away
        var error = this[kError];
        if (error !== null) return Promise.reject(error);
        if (this[kEnded]) return Promise.resolve(createIterResult(undefined, true));
        if (this[kStream].destroyed) // We need to defer via nextTick because if .destroy(err) is
        // called, the error will be emitted via nextTick, and
        // we cannot guarantee that there is no error lingering around
        // waiting to be emitted.
        return new Promise(function(resolve, reject) {
            process.nextTick(function() {
                if (_this[kError]) reject(_this[kError]);
                else resolve(createIterResult(undefined, true));
            });
        });
         // if we have multiple next() calls
        // we will wait for the previous Promise to finish
        // this logic is optimized to support for await loops,
        // where next() is only called once at a time
        var lastPromise = this[kLastPromise];
        var promise;
        if (lastPromise) promise = new Promise(wrapForNext(lastPromise, this));
        else {
            // fast path needed to support multiple this.push()
            // without triggering the next() queue
            var data = this[kStream].read();
            if (data !== null) return Promise.resolve(createIterResult(data, false));
            promise = new Promise(this[kHandlePromise]);
        }
        this[kLastPromise] = promise;
        return promise;
    }
}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function() {
    return this;
}), _defineProperty(_Object$setPrototypeO, "return", function _return() {
    var _this2 = this;
    // destroy(err, cb) is a private API
    // we can guarantee we have that here, because we control the
    // Readable class this is attached to
    return new Promise(function(resolve, reject) {
        _this2[kStream].destroy(null, function(err) {
            if (err) {
                reject(err);
                return;
            }
            resolve(createIterResult(undefined, true));
        });
    });
}), _Object$setPrototypeO), AsyncIteratorPrototype);
var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator1(stream) {
    var _Object$create;
    var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {
    }, _defineProperty(_Object$create, kStream, {
        value: stream,
        writable: true
    }), _defineProperty(_Object$create, kLastResolve, {
        value: null,
        writable: true
    }), _defineProperty(_Object$create, kLastReject, {
        value: null,
        writable: true
    }), _defineProperty(_Object$create, kError, {
        value: null,
        writable: true
    }), _defineProperty(_Object$create, kEnded, {
        value: stream._readableState.endEmitted,
        writable: true
    }), _defineProperty(_Object$create, kHandlePromise, {
        value: function value(resolve, reject) {
            var data = iterator[kStream].read();
            if (data) {
                iterator[kLastPromise] = null;
                iterator[kLastResolve] = null;
                iterator[kLastReject] = null;
                resolve(createIterResult(data, false));
            } else {
                iterator[kLastResolve] = resolve;
                iterator[kLastReject] = reject;
            }
        },
        writable: true
    }), _Object$create));
    iterator[kLastPromise] = null;
    finished(stream, function(err) {
        if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {
            var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise
            // returned by next() and store the error
            if (reject !== null) {
                iterator[kLastPromise] = null;
                iterator[kLastResolve] = null;
                iterator[kLastReject] = null;
                reject(err);
            }
            iterator[kError] = err;
            return;
        }
        var resolve = iterator[kLastResolve];
        if (resolve !== null) {
            iterator[kLastPromise] = null;
            iterator[kLastResolve] = null;
            iterator[kLastReject] = null;
            resolve(createIterResult(undefined, true));
        }
        iterator[kEnded] = true;
    });
    stream.on('readable', onReadable.bind(null, iterator));
    return iterator;
};
module.exports = createReadableStreamAsyncIterator;

},{"process":"5svFz","./end-of-stream":"9TXgk"}],"9TXgk":[function(require,module,exports) {
// Ported from https://github.com/mafintosh/end-of-stream with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';
var ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;
function once(callback) {
    var called = false;
    return function() {
        if (called) return;
        called = true;
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        callback.apply(this, args);
    };
}
function noop() {
}
function isRequest(stream) {
    return stream.setHeader && typeof stream.abort === 'function';
}
function eos(stream, opts, callback) {
    if (typeof opts === 'function') return eos(stream, null, opts);
    if (!opts) opts = {
    };
    callback = once(callback || noop);
    var readable = opts.readable || opts.readable !== false && stream.readable;
    var writable = opts.writable || opts.writable !== false && stream.writable;
    var onlegacyfinish = function onlegacyfinish1() {
        if (!stream.writable) onfinish();
    };
    var writableEnded = stream._writableState && stream._writableState.finished;
    var onfinish = function onfinish1() {
        writable = false;
        writableEnded = true;
        if (!readable) callback.call(stream);
    };
    var readableEnded = stream._readableState && stream._readableState.endEmitted;
    var onend = function onend1() {
        readable = false;
        readableEnded = true;
        if (!writable) callback.call(stream);
    };
    var onerror = function onerror1(err) {
        callback.call(stream, err);
    };
    var onclose = function onclose1() {
        var err;
        if (readable && !readableEnded) {
            if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
            return callback.call(stream, err);
        }
        if (writable && !writableEnded) {
            if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
            return callback.call(stream, err);
        }
    };
    var onrequest = function onrequest1() {
        stream.req.on('finish', onfinish);
    };
    if (isRequest(stream)) {
        stream.on('complete', onfinish);
        stream.on('abort', onclose);
        if (stream.req) onrequest();
        else stream.on('request', onrequest);
    } else if (writable && !stream._writableState) {
        // legacy streams
        stream.on('end', onlegacyfinish);
        stream.on('close', onlegacyfinish);
    }
    stream.on('end', onend);
    stream.on('finish', onfinish);
    if (opts.error !== false) stream.on('error', onerror);
    stream.on('close', onclose);
    return function() {
        stream.removeListener('complete', onfinish);
        stream.removeListener('abort', onclose);
        stream.removeListener('request', onrequest);
        if (stream.req) stream.req.removeListener('finish', onfinish);
        stream.removeListener('end', onlegacyfinish);
        stream.removeListener('close', onlegacyfinish);
        stream.removeListener('finish', onfinish);
        stream.removeListener('end', onend);
        stream.removeListener('error', onerror);
        stream.removeListener('close', onclose);
    };
}
module.exports = eos;

},{"../../../errors":"4J2TF"}],"7v6S7":[function(require,module,exports) {
module.exports = function() {
    throw new Error('Readable.from is not available in the browser');
};

},{}],"hTTWP":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.
'use strict';
module.exports = Transform;
var _require$codes = require('../errors').codes, ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED, ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK, ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING, ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;
var Duplex = require('./_stream_duplex');
require('inherits')(Transform, Duplex);
function afterTransform(er, data) {
    var ts = this._transformState;
    ts.transforming = false;
    var cb = ts.writecb;
    if (cb === null) return this.emit('error', new ERR_MULTIPLE_CALLBACK());
    ts.writechunk = null;
    ts.writecb = null;
    if (data != null) this.push(data);
    cb(er);
    var rs = this._readableState;
    rs.reading = false;
    if (rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
}
function Transform(options) {
    if (!(this instanceof Transform)) return new Transform(options);
    Duplex.call(this, options);
    this._transformState = {
        afterTransform: afterTransform.bind(this),
        needTransform: false,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: null
    }; // start out asking for a readable event once data is transformed.
    this._readableState.needReadable = true; // we have implemented the _read method, and done the other things
    // that Readable wants before the first _read call, so unset the
    // sync guard flag.
    this._readableState.sync = false;
    if (options) {
        if (typeof options.transform === 'function') this._transform = options.transform;
        if (typeof options.flush === 'function') this._flush = options.flush;
    } // When the writable side finishes, then flush out anything remaining.
    this.on('prefinish', prefinish);
}
function prefinish() {
    var _this = this;
    if (typeof this._flush === 'function' && !this._readableState.destroyed) this._flush(function(er, data) {
        done(_this, er, data);
    });
    else done(this, null, null);
}
Transform.prototype.push = function(chunk, encoding) {
    this._transformState.needTransform = false;
    return Duplex.prototype.push.call(this, chunk, encoding);
}; // This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function(chunk, encoding, cb) {
    cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
};
Transform.prototype._write = function(chunk, encoding, cb) {
    var ts = this._transformState;
    ts.writecb = cb;
    ts.writechunk = chunk;
    ts.writeencoding = encoding;
    if (!ts.transforming) {
        var rs = this._readableState;
        if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
    }
}; // Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function(n) {
    var ts = this._transformState;
    if (ts.writechunk !== null && !ts.transforming) {
        ts.transforming = true;
        this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
    } else // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
};
Transform.prototype._destroy = function(err, cb) {
    Duplex.prototype._destroy.call(this, err, function(err2) {
        cb(err2);
    });
};
function done(stream, er, data) {
    if (er) return stream.emit('error', er);
    if (data != null) stream.push(data); // TODO(BridgeAR): Write a test for these two error cases
    // if there's nothing in the write buffer, then that means
    // that nothing more will ever be provided
    if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();
    if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
    return stream.push(null);
}

},{"../errors":"4J2TF","./_stream_duplex":"8BtL4","inherits":"9Y2vC"}],"d94t6":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.
'use strict';
module.exports = PassThrough;
var Transform = require('./_stream_transform');
require('inherits')(PassThrough, Transform);
function PassThrough(options) {
    if (!(this instanceof PassThrough)) return new PassThrough(options);
    Transform.call(this, options);
}
PassThrough.prototype._transform = function(chunk, encoding, cb) {
    cb(null, chunk);
};

},{"./_stream_transform":"hTTWP","inherits":"9Y2vC"}],"hwdVc":[function(require,module,exports) {
// Ported from https://github.com/mafintosh/pump with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';
var eos;
function once(callback) {
    var called = false;
    return function() {
        if (called) return;
        called = true;
        callback.apply(void 0, arguments);
    };
}
var _require$codes = require('../../../errors').codes, ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS, ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;
function noop(err) {
    // Rethrow the error if it exists to avoid swallowing it
    if (err) throw err;
}
function isRequest(stream) {
    return stream.setHeader && typeof stream.abort === 'function';
}
function destroyer(stream, reading, writing, callback) {
    callback = once(callback);
    var closed = false;
    stream.on('close', function() {
        closed = true;
    });
    if (eos === undefined) eos = require('./end-of-stream');
    eos(stream, {
        readable: reading,
        writable: writing
    }, function(err) {
        if (err) return callback(err);
        closed = true;
        callback();
    });
    var destroyed = false;
    return function(err) {
        if (closed) return;
        if (destroyed) return;
        destroyed = true; // request.destroy just do .end - .abort is what we want
        if (isRequest(stream)) return stream.abort();
        if (typeof stream.destroy === 'function') return stream.destroy();
        callback(err || new ERR_STREAM_DESTROYED('pipe'));
    };
}
function call(fn) {
    fn();
}
function pipe(from, to) {
    return from.pipe(to);
}
function popCallback(streams) {
    if (!streams.length) return noop;
    if (typeof streams[streams.length - 1] !== 'function') return noop;
    return streams.pop();
}
function pipeline() {
    for(var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++)streams[_key] = arguments[_key];
    var callback = popCallback(streams);
    if (Array.isArray(streams[0])) streams = streams[0];
    if (streams.length < 2) throw new ERR_MISSING_ARGS('streams');
    var error;
    var destroys = streams.map(function(stream, i) {
        var reading = i < streams.length - 1;
        var writing = i > 0;
        return destroyer(stream, reading, writing, function(err) {
            if (!error) error = err;
            if (err) destroys.forEach(call);
            if (reading) return;
            destroys.forEach(call);
            callback(error);
        });
    });
    return streams.reduce(pipe);
}
module.exports = pipeline;

},{"../../../errors":"4J2TF","./end-of-stream":"9TXgk"}],"gpihe":[function(require,module,exports) {
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var Buffer = require('safe-buffer').Buffer;
var createHmac = require('create-hmac');
var crt = require('browserify-rsa');
var EC = require('elliptic').ec;
var BN = require('bn.js');
var parseKeys = require('parse-asn1');
var curves = require('./curves.json');
function sign(hash, key, hashType, signType, tag) {
    var priv = parseKeys(key);
    if (priv.curve) {
        // rsa keys can be interpreted as ecdsa ones in openssl
        if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type');
        return ecSign(hash, priv);
    } else if (priv.type === 'dsa') {
        if (signType !== 'dsa') throw new Error('wrong private key type');
        return dsaSign(hash, priv, hashType);
    } else {
        if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type');
    }
    hash = Buffer.concat([
        tag,
        hash
    ]);
    var len = priv.modulus.byteLength();
    var pad = [
        0,
        1
    ];
    while(hash.length + pad.length + 1 < len)pad.push(255);
    pad.push(0);
    var i = -1;
    while((++i) < hash.length)pad.push(hash[i]);
    var out = crt(pad, priv);
    return out;
}
function ecSign(hash, priv) {
    var curveId = curves[priv.curve.join('.')];
    if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'));
    var curve = new EC(curveId);
    var key = curve.keyFromPrivate(priv.privateKey);
    var out = key.sign(hash);
    return Buffer.from(out.toDER());
}
function dsaSign(hash, priv, algo) {
    var x = priv.params.priv_key;
    var p = priv.params.p;
    var q = priv.params.q;
    var g = priv.params.g;
    var r = new BN(0);
    var k;
    var H = bits2int(hash, q).mod(q);
    var s = false;
    var kv = getKey(x, q, hash, algo);
    while(s === false){
        k = makeKey(q, kv, algo);
        r = makeR(g, k, p, q);
        s = k.invm(q).imul(H.add(x.mul(r))).mod(q);
        if (s.cmpn(0) === 0) {
            s = false;
            r = new BN(0);
        }
    }
    return toDER(r, s);
}
function toDER(r, s) {
    r = r.toArray();
    s = s.toArray();
    // Pad values
    if (r[0] & 128) r = [
        0
    ].concat(r);
    if (s[0] & 128) s = [
        0
    ].concat(s);
    var total = r.length + s.length + 4;
    var res = [
        48,
        total,
        2,
        r.length
    ];
    res = res.concat(r, [
        2,
        s.length
    ], s);
    return Buffer.from(res);
}
function getKey(x, q, hash, algo) {
    x = Buffer.from(x.toArray());
    if (x.length < q.byteLength()) {
        var zeros = Buffer.alloc(q.byteLength() - x.length);
        x = Buffer.concat([
            zeros,
            x
        ]);
    }
    var hlen = hash.length;
    var hbits = bits2octets(hash, q);
    var v = Buffer.alloc(hlen);
    v.fill(1);
    var k = Buffer.alloc(hlen);
    k = createHmac(algo, k).update(v).update(Buffer.from([
        0
    ])).update(x).update(hbits).digest();
    v = createHmac(algo, k).update(v).digest();
    k = createHmac(algo, k).update(v).update(Buffer.from([
        1
    ])).update(x).update(hbits).digest();
    v = createHmac(algo, k).update(v).digest();
    return {
        k: k,
        v: v
    };
}
function bits2int(obits, q) {
    var bits = new BN(obits);
    var shift = (obits.length << 3) - q.bitLength();
    if (shift > 0) bits.ishrn(shift);
    return bits;
}
function bits2octets(bits, q) {
    bits = bits2int(bits, q);
    bits = bits.mod(q);
    var out = Buffer.from(bits.toArray());
    if (out.length < q.byteLength()) {
        var zeros = Buffer.alloc(q.byteLength() - out.length);
        out = Buffer.concat([
            zeros,
            out
        ]);
    }
    return out;
}
function makeKey(q, kv, algo) {
    var t;
    var k;
    do {
        t = Buffer.alloc(0);
        while(t.length * 8 < q.bitLength()){
            kv.v = createHmac(algo, kv.k).update(kv.v).digest();
            t = Buffer.concat([
                t,
                kv.v
            ]);
        }
        k = bits2int(t, q);
        kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer.from([
            0
        ])).digest();
        kv.v = createHmac(algo, kv.k).update(kv.v).digest();
    }while (k.cmp(q) !== -1)
    return k;
}
function makeR(g, k, p, q) {
    return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q);
}
module.exports = sign;
module.exports.getKey = getKey;
module.exports.makeKey = makeKey;

},{"safe-buffer":"hLoaD","create-hmac":"fMPri","browserify-rsa":"3VRND","elliptic":"8H3cJ","bn.js":"l01N4","parse-asn1":"auGzq","./curves.json":"5bUlQ"}],"3VRND":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
var BN = require('bn.js');
var randomBytes = require('randombytes');
function blind(priv) {
    var r = getr(priv);
    var blinder = r.toRed(BN.mont(priv.modulus)).redPow(new BN(priv.publicExponent)).fromRed();
    return {
        blinder: blinder,
        unblinder: r.invm(priv.modulus)
    };
}
function getr(priv) {
    var len = priv.modulus.byteLength();
    var r;
    do r = new BN(randomBytes(len));
    while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2))
    return r;
}
function crt(msg, priv) {
    var blinds = blind(priv);
    var len = priv.modulus.byteLength();
    var blinded = new BN(msg).mul(blinds.blinder).umod(priv.modulus);
    var c1 = blinded.toRed(BN.mont(priv.prime1));
    var c2 = blinded.toRed(BN.mont(priv.prime2));
    var qinv = priv.coefficient;
    var p = priv.prime1;
    var q = priv.prime2;
    var m1 = c1.redPow(priv.exponent1).fromRed();
    var m2 = c2.redPow(priv.exponent2).fromRed();
    var h = m1.isub(m2).imul(qinv).umod(p).imul(q);
    return m2.iadd(h).imul(blinds.unblinder).umod(priv.modulus).toArrayLike(Buffer, 'be', len);
}
crt.getr = getr;
module.exports = crt;

},{"buffer":"hX7zZ","bn.js":"l01N4","randombytes":"1rFGB"}],"l01N4":[function(require,module,exports) {
(function(module, exports) {
    // Utils
    function assert(val, msg) {
        if (!val) throw new Error(msg || 'Assertion failed');
    }
    // Could use `inherits` module, but don't want to move from single file
    // architecture yet.
    function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
    }
    // BN
    function BN(number, base, endian) {
        if (BN.isBN(number)) return number;
        this.negative = 0;
        this.words = null;
        this.length = 0;
        // Reduction context
        this.red = null;
        if (number !== null) {
            if (base === 'le' || base === 'be') {
                endian = base;
                base = 10;
            }
            this._init(number || 0, base || 10, endian || 'be');
        }
    }
    if (typeof module === 'object') module.exports = BN;
    else exports.BN = BN;
    BN.BN = BN;
    BN.wordSize = 26;
    var Buffer;
    try {
        if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') Buffer = window.Buffer;
        else Buffer = require('buffer').Buffer;
    } catch (e) {
    }
    BN.isBN = function isBN(num) {
        if (num instanceof BN) return true;
        return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
    };
    BN.max = function max(left, right) {
        if (left.cmp(right) > 0) return left;
        return right;
    };
    BN.min = function min(left, right) {
        if (left.cmp(right) < 0) return left;
        return right;
    };
    BN.prototype._init = function init(number, base, endian) {
        if (typeof number === 'number') return this._initNumber(number, base, endian);
        if (typeof number === 'object') return this._initArray(number, base, endian);
        if (base === 'hex') base = 16;
        assert(base === (base | 0) && base >= 2 && base <= 36);
        number = number.toString().replace(/\s+/g, '');
        var start = 0;
        if (number[0] === '-') {
            start++;
            this.negative = 1;
        }
        if (start < number.length) {
            if (base === 16) this._parseHex(number, start, endian);
            else {
                this._parseBase(number, base, start);
                if (endian === 'le') this._initArray(this.toArray(), base, endian);
            }
        }
    };
    BN.prototype._initNumber = function _initNumber(number, base, endian) {
        if (number < 0) {
            this.negative = 1;
            number = -number;
        }
        if (number < 67108864) {
            this.words = [
                number & 67108863
            ];
            this.length = 1;
        } else if (number < 4503599627370496) {
            this.words = [
                number & 67108863,
                number / 67108864 & 67108863
            ];
            this.length = 2;
        } else {
            assert(number < 9007199254740992); // 2 ^ 53 (unsafe)
            this.words = [
                number & 67108863,
                number / 67108864 & 67108863,
                1
            ];
            this.length = 3;
        }
        if (endian !== 'le') return;
        // Reverse the bytes
        this._initArray(this.toArray(), base, endian);
    };
    BN.prototype._initArray = function _initArray(number, base, endian) {
        // Perhaps a Uint8Array
        assert(typeof number.length === 'number');
        if (number.length <= 0) {
            this.words = [
                0
            ];
            this.length = 1;
            return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)this.words[i] = 0;
        var j, w;
        var off = 0;
        if (endian === 'be') for(i = number.length - 1, j = 0; i >= 0; i -= 3){
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        else if (endian === 'le') for(i = 0, j = 0; i < number.length; i += 3){
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        return this._strip();
    };
    function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        // '0' - '9'
        if (c >= 48 && c <= 57) return c - 48;
        else if (c >= 65 && c <= 70) return c - 55;
        else if (c >= 97 && c <= 102) return c - 87;
        else assert(false, 'Invalid character in ' + string);
    }
    function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) r |= parseHex4Bits(string, index - 1) << 4;
        return r;
    }
    BN.prototype._parseHex = function _parseHex(number, start, endian) {
        // Create possibly bigger array to ensure that it fits the number
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)this.words[i] = 0;
        // 24-bits chunks
        var off = 0;
        var j = 0;
        var w;
        if (endian === 'be') for(i = number.length - 1; i >= start; i -= 2){
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
                off -= 18;
                j += 1;
                this.words[j] |= w >>> 26;
            } else off += 8;
        }
        else {
            var parseLength = number.length - start;
            for(i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2){
                w = parseHexByte(number, start, i) << off;
                this.words[j] |= w & 67108863;
                if (off >= 18) {
                    off -= 18;
                    j += 1;
                    this.words[j] |= w >>> 26;
                } else off += 8;
            }
        }
        this._strip();
    };
    function parseBase(str, start, end, mul) {
        var r = 0;
        var b = 0;
        var len = Math.min(str.length, end);
        for(var i = start; i < len; i++){
            var c = str.charCodeAt(i) - 48;
            r *= mul;
            // 'a'
            if (c >= 49) b = c - 49 + 10;
            else if (c >= 17) b = c - 17 + 10;
            else b = c;
            assert(c >= 0 && b < mul, 'Invalid character');
            r += b;
        }
        return r;
    }
    BN.prototype._parseBase = function _parseBase(number, base, start) {
        // Initialize as zero
        this.words = [
            0
        ];
        this.length = 1;
        // Find length of limb in base
        for(var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base)limbLen++;
        limbLen--;
        limbPow = limbPow / base | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for(var i = start; i < end; i += limbLen){
            word = parseBase(number, i, i + limbLen, base);
            this.imuln(limbPow);
            if (this.words[0] + word < 67108864) this.words[0] += word;
            else this._iaddn(word);
        }
        if (mod !== 0) {
            var pow = 1;
            word = parseBase(number, i, number.length, base);
            for(i = 0; i < mod; i++)pow *= base;
            this.imuln(pow);
            if (this.words[0] + word < 67108864) this.words[0] += word;
            else this._iaddn(word);
        }
        this._strip();
    };
    BN.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)dest.words[i] = this.words[i];
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
    };
    function move(dest, src) {
        dest.words = src.words;
        dest.length = src.length;
        dest.negative = src.negative;
        dest.red = src.red;
    }
    BN.prototype._move = function _move(dest) {
        move(dest, this);
    };
    BN.prototype.clone = function clone() {
        var r = new BN(null);
        this.copy(r);
        return r;
    };
    BN.prototype._expand = function _expand(size) {
        while(this.length < size)this.words[this.length++] = 0;
        return this;
    };
    // Remove leading `0` from `this`
    BN.prototype._strip = function strip() {
        while(this.length > 1 && this.words[this.length - 1] === 0)this.length--;
        return this._normSign();
    };
    BN.prototype._normSign = function _normSign() {
        // -0 = 0
        if (this.length === 1 && this.words[0] === 0) this.negative = 0;
        return this;
    };
    // Check Symbol.for because not everywhere where Symbol defined
    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility
    if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') try {
        BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;
    } catch (e) {
        BN.prototype.inspect = inspect;
    }
    else BN.prototype.inspect = inspect;
    function inspect() {
        return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
    }
    /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */ var zeros = [
        '',
        '0',
        '00',
        '000',
        '0000',
        '00000',
        '000000',
        '0000000',
        '00000000',
        '000000000',
        '0000000000',
        '00000000000',
        '000000000000',
        '0000000000000',
        '00000000000000',
        '000000000000000',
        '0000000000000000',
        '00000000000000000',
        '000000000000000000',
        '0000000000000000000',
        '00000000000000000000',
        '000000000000000000000',
        '0000000000000000000000',
        '00000000000000000000000',
        '000000000000000000000000',
        '0000000000000000000000000'
    ];
    var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
    ];
    var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        10000000,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64000000,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        24300000,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
    ];
    BN.prototype.toString = function toString(base, padding) {
        base = base || 10;
        padding = padding | 0 || 1;
        var out;
        if (base === 16 || base === 'hex') {
            out = '';
            var off = 0;
            var carry = 0;
            for(var i = 0; i < this.length; i++){
                var w = this.words[i];
                var word = ((w << off | carry) & 16777215).toString(16);
                carry = w >>> 24 - off & 16777215;
                if (carry !== 0 || i !== this.length - 1) out = zeros[6 - word.length] + word + out;
                else out = word + out;
                off += 2;
                if (off >= 26) {
                    off -= 26;
                    i--;
                }
            }
            if (carry !== 0) out = carry.toString(16) + out;
            while(out.length % padding !== 0)out = '0' + out;
            if (this.negative !== 0) out = '-' + out;
            return out;
        }
        if (base === (base | 0) && base >= 2 && base <= 36) {
            // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
            var groupSize = groupSizes[base];
            // var groupBase = Math.pow(base, groupSize);
            var groupBase = groupBases[base];
            out = '';
            var c = this.clone();
            c.negative = 0;
            while(!c.isZero()){
                var r = c.modrn(groupBase).toString(base);
                c = c.idivn(groupBase);
                if (!c.isZero()) out = zeros[groupSize - r.length] + r + out;
                else out = r + out;
            }
            if (this.isZero()) out = '0' + out;
            while(out.length % padding !== 0)out = '0' + out;
            if (this.negative !== 0) out = '-' + out;
            return out;
        }
        assert(false, 'Base should be between 2 and 36');
    };
    BN.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) ret += this.words[1] * 67108864;
        else if (this.length === 3 && this.words[2] === 1) // NOTE: at this stage it is known that the top bit is set
        ret += 4503599627370496 + this.words[1] * 67108864;
        else if (this.length > 2) assert(false, 'Number can only safely store up to 53 bits');
        return this.negative !== 0 ? -ret : ret;
    };
    BN.prototype.toJSON = function toJSON() {
        return this.toString(16, 2);
    };
    if (Buffer) BN.prototype.toBuffer = function toBuffer(endian, length) {
        return this.toArrayLike(Buffer, endian, length);
    };
    BN.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
    };
    var allocate = function allocate1(ArrayType, size) {
        if (ArrayType.allocUnsafe) return ArrayType.allocUnsafe(size);
        return new ArrayType(size);
    };
    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        this._strip();
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert(byteLength <= reqLength, 'byte array longer than desired length');
        assert(reqLength > 0, 'Requested array length <= 0');
        var res = allocate(ArrayType, reqLength);
        var postfix = endian === 'le' ? 'LE' : 'BE';
        this['_toArrayLike' + postfix](res, byteLength);
        return res;
    };
    BN.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {
        var position = 0;
        var carry = 0;
        for(var i = 0, shift = 0; i < this.length; i++){
            var word = this.words[i] << shift | carry;
            res[position++] = word & 255;
            if (position < res.length) res[position++] = word >> 8 & 255;
            if (position < res.length) res[position++] = word >> 16 & 255;
            if (shift === 6) {
                if (position < res.length) res[position++] = word >> 24 & 255;
                carry = 0;
                shift = 0;
            } else {
                carry = word >>> 24;
                shift += 2;
            }
        }
        if (position < res.length) {
            res[position++] = carry;
            while(position < res.length)res[position++] = 0;
        }
    };
    BN.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {
        var position = res.length - 1;
        var carry = 0;
        for(var i = 0, shift = 0; i < this.length; i++){
            var word = this.words[i] << shift | carry;
            res[position--] = word & 255;
            if (position >= 0) res[position--] = word >> 8 & 255;
            if (position >= 0) res[position--] = word >> 16 & 255;
            if (shift === 6) {
                if (position >= 0) res[position--] = word >> 24 & 255;
                carry = 0;
                shift = 0;
            } else {
                carry = word >>> 24;
                shift += 2;
            }
        }
        if (position >= 0) {
            res[position--] = carry;
            while(position >= 0)res[position--] = 0;
        }
    };
    if (Math.clz32) BN.prototype._countBits = function _countBits(w) {
        return 32 - Math.clz32(w);
    };
    else BN.prototype._countBits = function _countBits1(w) {
        var t = w;
        var r = 0;
        if (t >= 4096) {
            r += 13;
            t >>>= 13;
        }
        if (t >= 64) {
            r += 7;
            t >>>= 7;
        }
        if (t >= 8) {
            r += 4;
            t >>>= 4;
        }
        if (t >= 2) {
            r += 2;
            t >>>= 2;
        }
        return r + t;
    };
    BN.prototype._zeroBits = function _zeroBits(w) {
        // Short-cut
        if (w === 0) return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
            r += 13;
            t >>>= 13;
        }
        if ((t & 127) === 0) {
            r += 7;
            t >>>= 7;
        }
        if ((t & 15) === 0) {
            r += 4;
            t >>>= 4;
        }
        if ((t & 3) === 0) {
            r += 2;
            t >>>= 2;
        }
        if ((t & 1) === 0) r++;
        return r;
    };
    // Return number of used bits in a BN
    BN.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
    };
    function toBitArray(num) {
        var w = new Array(num.bitLength());
        for(var bit = 0; bit < w.length; bit++){
            var off = bit / 26 | 0;
            var wbit = bit % 26;
            w[bit] = num.words[off] >>> wbit & 1;
        }
        return w;
    }
    // Number of trailing zero bits
    BN.prototype.zeroBits = function zeroBits() {
        if (this.isZero()) return 0;
        var r = 0;
        for(var i = 0; i < this.length; i++){
            var b = this._zeroBits(this.words[i]);
            r += b;
            if (b !== 26) break;
        }
        return r;
    };
    BN.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
    };
    BN.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) return this.abs().inotn(width).iaddn(1);
        return this.clone();
    };
    BN.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) return this.notn(width).iaddn(1).ineg();
        return this.clone();
    };
    BN.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
    };
    // Return negative clone of `this`
    BN.prototype.neg = function neg() {
        return this.clone().ineg();
    };
    BN.prototype.ineg = function ineg() {
        if (!this.isZero()) this.negative ^= 1;
        return this;
    };
    // Or `num` with `this` in-place
    BN.prototype.iuor = function iuor(num) {
        while(this.length < num.length)this.words[this.length++] = 0;
        for(var i = 0; i < num.length; i++)this.words[i] = this.words[i] | num.words[i];
        return this._strip();
    };
    BN.prototype.ior = function ior(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuor(num);
    };
    // Or `num` with `this`
    BN.prototype.or = function or(num) {
        if (this.length > num.length) return this.clone().ior(num);
        return num.clone().ior(this);
    };
    BN.prototype.uor = function uor(num) {
        if (this.length > num.length) return this.clone().iuor(num);
        return num.clone().iuor(this);
    };
    // And `num` with `this` in-place
    BN.prototype.iuand = function iuand(num) {
        // b = min-length(num, this)
        var b;
        if (this.length > num.length) b = num;
        else b = this;
        for(var i = 0; i < b.length; i++)this.words[i] = this.words[i] & num.words[i];
        this.length = b.length;
        return this._strip();
    };
    BN.prototype.iand = function iand(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuand(num);
    };
    // And `num` with `this`
    BN.prototype.and = function and(num) {
        if (this.length > num.length) return this.clone().iand(num);
        return num.clone().iand(this);
    };
    BN.prototype.uand = function uand(num) {
        if (this.length > num.length) return this.clone().iuand(num);
        return num.clone().iuand(this);
    };
    // Xor `num` with `this` in-place
    BN.prototype.iuxor = function iuxor(num) {
        // a.length > b.length
        var a;
        var b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        for(var i = 0; i < b.length; i++)this.words[i] = a.words[i] ^ b.words[i];
        if (this !== a) for(; i < a.length; i++)this.words[i] = a.words[i];
        this.length = a.length;
        return this._strip();
    };
    BN.prototype.ixor = function ixor(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuxor(num);
    };
    // Xor `num` with `this`
    BN.prototype.xor = function xor(num) {
        if (this.length > num.length) return this.clone().ixor(num);
        return num.clone().ixor(this);
    };
    BN.prototype.uxor = function uxor(num) {
        if (this.length > num.length) return this.clone().iuxor(num);
        return num.clone().iuxor(this);
    };
    // Not ``this`` with ``width`` bitwidth
    BN.prototype.inotn = function inotn(width) {
        assert(typeof width === 'number' && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        // Extend the buffer with leading zeroes
        this._expand(bytesNeeded);
        if (bitsLeft > 0) bytesNeeded--;
        // Handle complete words
        for(var i = 0; i < bytesNeeded; i++)this.words[i] = ~this.words[i] & 67108863;
        // Handle the residue
        if (bitsLeft > 0) this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        // And remove leading zeroes
        return this._strip();
    };
    BN.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
    };
    // Set `bit` of `this`
    BN.prototype.setn = function setn(bit, val) {
        assert(typeof bit === 'number' && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) this.words[off] = this.words[off] | 1 << wbit;
        else this.words[off] = this.words[off] & ~(1 << wbit);
        return this._strip();
    };
    // Add `num` to `this` in-place
    BN.prototype.iadd = function iadd(num) {
        var r;
        // negative + positive
        if (this.negative !== 0 && num.negative === 0) {
            this.negative = 0;
            r = this.isub(num);
            this.negative ^= 1;
            return this._normSign();
        // positive + negative
        } else if (this.negative === 0 && num.negative !== 0) {
            num.negative = 0;
            r = this.isub(num);
            num.negative = 1;
            return r._normSign();
        }
        // a.length > b.length
        var a, b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
            this.words[i] = r & 67108863;
            carry = r >>> 26;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            this.words[i] = r & 67108863;
            carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
            this.words[this.length] = carry;
            this.length++;
        // Copy the rest of the words
        } else if (a !== this) for(; i < a.length; i++)this.words[i] = a.words[i];
        return this;
    };
    // Add `num` to `this`
    BN.prototype.add = function add(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
            num.negative = 0;
            res = this.sub(num);
            num.negative ^= 1;
            return res;
        } else if (num.negative === 0 && this.negative !== 0) {
            this.negative = 0;
            res = num.sub(this);
            this.negative = 1;
            return res;
        }
        if (this.length > num.length) return this.clone().iadd(num);
        return num.clone().iadd(this);
    };
    // Subtract `num` from `this` in-place
    BN.prototype.isub = function isub(num) {
        // this - (-num) = this + num
        if (num.negative !== 0) {
            num.negative = 0;
            var r = this.iadd(num);
            num.negative = 1;
            return r._normSign();
        // -this - num = -(this + num)
        } else if (this.negative !== 0) {
            this.negative = 0;
            this.iadd(num);
            this.negative = 1;
            return this._normSign();
        }
        // At this point both numbers are positive
        var cmp = this.cmp(num);
        // Optimization - zeroify
        if (cmp === 0) {
            this.negative = 0;
            this.length = 1;
            this.words[0] = 0;
            return this;
        }
        // a > b
        var a, b;
        if (cmp > 0) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 67108863;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 67108863;
        }
        // Copy rest of the words
        if (carry === 0 && i < a.length && a !== this) for(; i < a.length; i++)this.words[i] = a.words[i];
        this.length = Math.max(this.length, i);
        if (a !== this) this.negative = 1;
        return this._strip();
    };
    // Subtract `num` from `this`
    BN.prototype.sub = function sub(num) {
        return this.clone().isub(num);
    };
    function smallMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        var len = self.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        // Peel one iteration (compiler can't do it, because of code complexity)
        var a = self.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for(var k = 1; k < len; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = carry >>> 26;
            var rword = carry & 67108863;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j | 0;
                a = self.words[i] | 0;
                b = num.words[j] | 0;
                r = a * b + rword;
                ncarry += r / 67108864 | 0;
                rword = r & 67108863;
            }
            out.words[k] = rword | 0;
            carry = ncarry | 0;
        }
        if (carry !== 0) out.words[k] = carry | 0;
        else out.length--;
        return out._strip();
    }
    // TODO(indutny): it may be reasonable to omit it for users who don't need
    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
    // multiplication (like elliptic secp256k1).
    var comb10MulTo = function comb10MulTo1(self, num, out) {
        var a = self.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self.negative ^ num.negative;
        out.length = 19;
        /* k = 0 */ lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        /* k = 1 */ lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        /* k = 2 */ lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        /* k = 3 */ lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        /* k = 4 */ lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        /* k = 5 */ lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        /* k = 6 */ lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        /* k = 7 */ lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        /* k = 8 */ lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        /* k = 9 */ lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        /* k = 10 */ lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        /* k = 11 */ lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        /* k = 12 */ lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        /* k = 13 */ lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        /* k = 14 */ lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        /* k = 15 */ lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        /* k = 16 */ lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        /* k = 17 */ lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        /* k = 18 */ lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
            o[19] = c;
            out.length++;
        }
        return out;
    };
    // Polyfill comb
    if (!Math.imul) comb10MulTo = smallMulTo;
    function bigMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        out.length = self.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for(var k = 0; k < out.length - 1; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = hncarry;
            hncarry = 0;
            var rword = carry & 67108863;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j;
                var a = self.words[i] | 0;
                var b = num.words[j] | 0;
                var r = a * b;
                var lo = r & 67108863;
                ncarry = ncarry + (r / 67108864 | 0) | 0;
                lo = lo + rword | 0;
                rword = lo & 67108863;
                ncarry = ncarry + (lo >>> 26) | 0;
                hncarry += ncarry >>> 26;
                ncarry &= 67108863;
            }
            out.words[k] = rword;
            carry = ncarry;
            ncarry = hncarry;
        }
        if (carry !== 0) out.words[k] = carry;
        else out.length--;
        return out._strip();
    }
    function jumboMulTo(self, num, out) {
        // Temporary disable, see https://github.com/indutny/bn.js/issues/211
        // var fftm = new FFTM();
        // return fftm.mulp(self, num, out);
        return bigMulTo(self, num, out);
    }
    BN.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) res = comb10MulTo(this, num, out);
        else if (len < 63) res = smallMulTo(this, num, out);
        else if (len < 1024) res = bigMulTo(this, num, out);
        else res = jumboMulTo(this, num, out);
        return res;
    };
    // Cooley-Tukey algorithm for FFT
    // slightly revisited to rely on looping instead of recursion
    function FFTM(x, y) {
        this.x = x;
        this.y = y;
    }
    FFTM.prototype.makeRBT = function makeRBT(N) {
        var t = new Array(N);
        var l = BN.prototype._countBits(N) - 1;
        for(var i = 0; i < N; i++)t[i] = this.revBin(i, l, N);
        return t;
    };
    // Returns binary-reversed representation of `x`
    FFTM.prototype.revBin = function revBin(x, l, N) {
        if (x === 0 || x === N - 1) return x;
        var rb = 0;
        for(var i = 0; i < l; i++){
            rb |= (x & 1) << l - i - 1;
            x >>= 1;
        }
        return rb;
    };
    // Performs "tweedling" phase, therefore 'emulating'
    // behaviour of the recursive algorithm
    FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
        for(var i = 0; i < N; i++){
            rtws[i] = rws[rbt[i]];
            itws[i] = iws[rbt[i]];
        }
    };
    FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N);
        for(var s = 1; s < N; s <<= 1){
            var l = s << 1;
            var rtwdf = Math.cos(2 * Math.PI / l);
            var itwdf = Math.sin(2 * Math.PI / l);
            for(var p = 0; p < N; p += l){
                var rtwdf_ = rtwdf;
                var itwdf_ = itwdf;
                for(var j = 0; j < s; j++){
                    var re = rtws[p + j];
                    var ie = itws[p + j];
                    var ro = rtws[p + j + s];
                    var io = itws[p + j + s];
                    var rx = rtwdf_ * ro - itwdf_ * io;
                    io = rtwdf_ * io + itwdf_ * ro;
                    ro = rx;
                    rtws[p + j] = re + ro;
                    itws[p + j] = ie + io;
                    rtws[p + j + s] = re - ro;
                    itws[p + j + s] = ie - io;
                    /* jshint maxdepth : false */ if (j !== l) {
                        rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                        itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                        rtwdf_ = rx;
                    }
                }
            }
        }
    };
    FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N = Math.max(m, n) | 1;
        var odd = N & 1;
        var i = 0;
        for(N = N / 2 | 0; N; N = N >>> 1)i++;
        return 1 << i + 1 + odd;
    };
    FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
        if (N <= 1) return;
        for(var i = 0; i < N / 2; i++){
            var t = rws[i];
            rws[i] = rws[N - i - 1];
            rws[N - i - 1] = t;
            t = iws[i];
            iws[i] = -iws[N - i - 1];
            iws[N - i - 1] = -t;
        }
    };
    FFTM.prototype.normalize13b = function normalize13b(ws, N) {
        var carry = 0;
        for(var i = 0; i < N / 2; i++){
            var w = Math.round(ws[2 * i + 1] / N) * 8192 + Math.round(ws[2 * i] / N) + carry;
            ws[i] = w & 67108863;
            if (w < 67108864) carry = 0;
            else carry = w / 67108864 | 0;
        }
        return ws;
    };
    FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
        var carry = 0;
        for(var i = 0; i < len; i++){
            carry = carry + (ws[i] | 0);
            rws[2 * i] = carry & 8191;
            carry = carry >>> 13;
            rws[2 * i + 1] = carry & 8191;
            carry = carry >>> 13;
        }
        // Pad with zeroes
        for(i = 2 * len; i < N; ++i)rws[i] = 0;
        assert(carry === 0);
        assert((carry & -8192) === 0);
    };
    FFTM.prototype.stub = function stub(N) {
        var ph = new Array(N);
        for(var i = 0; i < N; i++)ph[i] = 0;
        return ph;
    };
    FFTM.prototype.mulp = function mulp(x, y, out) {
        var N = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N);
        var _ = this.stub(N);
        var rws = new Array(N);
        var rwst = new Array(N);
        var iwst = new Array(N);
        var nrws = new Array(N);
        var nrwst = new Array(N);
        var niwst = new Array(N);
        var rmws = out.words;
        rmws.length = N;
        this.convert13b(x.words, x.length, rws, N);
        this.convert13b(y.words, y.length, nrws, N);
        this.transform(rws, _, rwst, iwst, N, rbt);
        this.transform(nrws, _, nrwst, niwst, N, rbt);
        for(var i = 0; i < N; i++){
            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
            iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
            rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N);
        this.transform(rwst, iwst, rmws, _, N, rbt);
        this.conjugate(rmws, _, N);
        this.normalize13b(rmws, N);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out._strip();
    };
    // Multiply `this` by `num`
    BN.prototype.mul = function mul(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
    };
    // Multiply employing FFT
    BN.prototype.mulf = function mulf(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
    };
    // In-place Multiplication
    BN.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
    };
    BN.prototype.imuln = function imuln(num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;
        assert(typeof num === 'number');
        assert(num < 67108864);
        // Carry
        var carry = 0;
        for(var i = 0; i < this.length; i++){
            var w = (this.words[i] | 0) * num;
            var lo = (w & 67108863) + (carry & 67108863);
            carry >>= 26;
            carry += w / 67108864 | 0;
            // NOTE: lo is 27bit maximum
            carry += lo >>> 26;
            this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return isNegNum ? this.ineg() : this;
    };
    BN.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
    };
    // `this` * `this`
    BN.prototype.sqr = function sqr() {
        return this.mul(this);
    };
    // `this` * `this` in-place
    BN.prototype.isqr = function isqr() {
        return this.imul(this.clone());
    };
    // Math.pow(`this`, `num`)
    BN.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0) return new BN(1);
        // Skip leading zeroes
        var res = this;
        for(var i = 0; i < w.length; i++, res = res.sqr()){
            if (w[i] !== 0) break;
        }
        if ((++i) < w.length) for(var q = res.sqr(); i < w.length; i++, q = q.sqr()){
            if (w[i] === 0) continue;
            res = res.mul(q);
        }
        return res;
    };
    // Shift-left in-place
    BN.prototype.iushln = function iushln(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
            var carry = 0;
            for(i = 0; i < this.length; i++){
                var newCarry = this.words[i] & carryMask;
                var c = (this.words[i] | 0) - newCarry << r;
                this.words[i] = c | carry;
                carry = newCarry >>> 26 - r;
            }
            if (carry) {
                this.words[i] = carry;
                this.length++;
            }
        }
        if (s !== 0) {
            for(i = this.length - 1; i >= 0; i--)this.words[i + s] = this.words[i];
            for(i = 0; i < s; i++)this.words[i] = 0;
            this.length += s;
        }
        return this._strip();
    };
    BN.prototype.ishln = function ishln(bits) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushln(bits);
    };
    // Shift-right in-place
    // NOTE: `hint` is a lowest bit before trailing zeroes
    // NOTE: if `extended` is present - it will be filled with destroyed bits
    BN.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert(typeof bits === 'number' && bits >= 0);
        var h;
        if (hint) h = (hint - hint % 26) / 26;
        else h = 0;
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        // Extended mode, copy masked part
        if (maskedWords) {
            for(var i = 0; i < s; i++)maskedWords.words[i] = this.words[i];
            maskedWords.length = s;
        }
        if (s === 0) ;
        else if (this.length > s) {
            this.length -= s;
            for(i = 0; i < this.length; i++)this.words[i] = this.words[i + s];
        } else {
            this.words[0] = 0;
            this.length = 1;
        }
        var carry = 0;
        for(i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--){
            var word = this.words[i] | 0;
            this.words[i] = carry << 26 - r | word >>> r;
            carry = word & mask;
        }
        // Push carried bits as a mask
        if (maskedWords && carry !== 0) maskedWords.words[maskedWords.length++] = carry;
        if (this.length === 0) {
            this.words[0] = 0;
            this.length = 1;
        }
        return this._strip();
    };
    BN.prototype.ishrn = function ishrn(bits, hint, extended) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushrn(bits, hint, extended);
    };
    // Shift-left
    BN.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
    };
    BN.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
    };
    // Shift-right
    BN.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
    };
    BN.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
    };
    // Test if n bit is set
    BN.prototype.testn = function testn(bit) {
        assert(typeof bit === 'number' && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) return false;
        // Check bit and return
        var w = this.words[s];
        return !!(w & q);
    };
    // Return only lowers bits of number (in-place)
    BN.prototype.imaskn = function imaskn(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert(this.negative === 0, 'imaskn works only with positive numbers');
        if (this.length <= s) return this;
        if (r !== 0) s++;
        this.length = Math.min(s, this.length);
        if (r !== 0) {
            var mask = 67108863 ^ 67108863 >>> r << r;
            this.words[this.length - 1] &= mask;
        }
        return this._strip();
    };
    // Return only lowers bits of number
    BN.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
    };
    // Add plain number `num` to `this`
    BN.prototype.iaddn = function iaddn(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        if (num < 0) return this.isubn(-num);
        // Possible sign change
        if (this.negative !== 0) {
            if (this.length === 1 && (this.words[0] | 0) <= num) {
                this.words[0] = num - (this.words[0] | 0);
                this.negative = 0;
                return this;
            }
            this.negative = 0;
            this.isubn(num);
            this.negative = 1;
            return this;
        }
        // Add without checks
        return this._iaddn(num);
    };
    BN.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        // Carry
        for(var i = 0; i < this.length && this.words[i] >= 67108864; i++){
            this.words[i] -= 67108864;
            if (i === this.length - 1) this.words[i + 1] = 1;
            else this.words[i + 1]++;
        }
        this.length = Math.max(this.length, i + 1);
        return this;
    };
    // Subtract plain number `num` from `this`
    BN.prototype.isubn = function isubn(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        if (num < 0) return this.iaddn(-num);
        if (this.negative !== 0) {
            this.negative = 0;
            this.iaddn(num);
            this.negative = 1;
            return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
            this.words[0] = -this.words[0];
            this.negative = 1;
        } else // Carry
        for(var i = 0; i < this.length && this.words[i] < 0; i++){
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
        }
        return this._strip();
    };
    BN.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
    };
    BN.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
    };
    BN.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
    };
    BN.prototype.abs = function abs() {
        return this.clone().iabs();
    };
    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul1, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for(i = 0; i < num.length; i++){
            w = (this.words[i + shift] | 0) + carry;
            var right = (num.words[i] | 0) * mul1;
            w -= right & 67108863;
            carry = (w >> 26) - (right / 67108864 | 0);
            this.words[i + shift] = w & 67108863;
        }
        for(; i < this.length - shift; i++){
            w = (this.words[i + shift] | 0) + carry;
            carry = w >> 26;
            this.words[i + shift] = w & 67108863;
        }
        if (carry === 0) return this._strip();
        // Subtraction overflow
        assert(carry === -1);
        carry = 0;
        for(i = 0; i < this.length; i++){
            w = -(this.words[i] | 0) + carry;
            carry = w >> 26;
            this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this._strip();
    };
    BN.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        // Normalize
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
            b = b.ushln(shift);
            a.iushln(shift);
            bhi = b.words[b.length - 1] | 0;
        }
        // Initialize quotient
        var m = a.length - b.length;
        var q;
        if (mode !== 'mod') {
            q = new BN(null);
            q.length = m + 1;
            q.words = new Array(q.length);
            for(var i = 0; i < q.length; i++)q.words[i] = 0;
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
            a = diff;
            if (q) q.words[m] = 1;
        }
        for(var j = m - 1; j >= 0; j--){
            var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
            // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
            // (0x7ffffff)
            qj = Math.min(qj / bhi | 0, 67108863);
            a._ishlnsubmul(b, qj, j);
            while(a.negative !== 0){
                qj--;
                a.negative = 0;
                a._ishlnsubmul(b, 1, j);
                if (!a.isZero()) a.negative ^= 1;
            }
            if (q) q.words[j] = qj;
        }
        if (q) q._strip();
        a._strip();
        // Denormalize
        if (mode !== 'div' && shift !== 0) a.iushrn(shift);
        return {
            div: q || null,
            mod: a
        };
    };
    // NOTE: 1) `mode` can be set to `mod` to request mod only,
    //       to `div` to request div only, or be absent to
    //       request both div & mod
    //       2) `positive` is true if unsigned mod is requested
    BN.prototype.divmod = function divmod(num, mode, positive) {
        assert(!num.isZero());
        if (this.isZero()) return {
            div: new BN(0),
            mod: new BN(0)
        };
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
            res = this.neg().divmod(num, mode);
            if (mode !== 'mod') div = res.div.neg();
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) mod.iadd(num);
            }
            return {
                div: div,
                mod: mod
            };
        }
        if (this.negative === 0 && num.negative !== 0) {
            res = this.divmod(num.neg(), mode);
            if (mode !== 'mod') div = res.div.neg();
            return {
                div: div,
                mod: res.mod
            };
        }
        if ((this.negative & num.negative) !== 0) {
            res = this.neg().divmod(num.neg(), mode);
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) mod.isub(num);
            }
            return {
                div: res.div,
                mod: mod
            };
        }
        // Both numbers are positive at this point
        // Strip both numbers to approximate shift value
        if (num.length > this.length || this.cmp(num) < 0) return {
            div: new BN(0),
            mod: this
        };
        // Very short reduction
        if (num.length === 1) {
            if (mode === 'div') return {
                div: this.divn(num.words[0]),
                mod: null
            };
            if (mode === 'mod') return {
                div: null,
                mod: new BN(this.modrn(num.words[0]))
            };
            return {
                div: this.divn(num.words[0]),
                mod: new BN(this.modrn(num.words[0]))
            };
        }
        return this._wordDiv(num, mode);
    };
    // Find `this` / `num`
    BN.prototype.div = function div(num) {
        return this.divmod(num, 'div', false).div;
    };
    // Find `this` % `num`
    BN.prototype.mod = function mod(num) {
        return this.divmod(num, 'mod', false).mod;
    };
    BN.prototype.umod = function umod(num) {
        return this.divmod(num, 'mod', true).mod;
    };
    // Find Round(`this` / `num`)
    BN.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        // Fast case - exact division
        if (dm.mod.isZero()) return dm.div;
        var mod1 = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod1.cmp(half);
        // Round down
        if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;
        // Round up
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
    };
    BN.prototype.modrn = function modrn(num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;
        assert(num <= 67108863);
        var p = 67108864 % num;
        var acc = 0;
        for(var i = this.length - 1; i >= 0; i--)acc = (p * acc + (this.words[i] | 0)) % num;
        return isNegNum ? -acc : acc;
    };
    // WARNING: DEPRECATED
    BN.prototype.modn = function modn(num) {
        return this.modrn(num);
    };
    // In-place division by number
    BN.prototype.idivn = function idivn(num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;
        assert(num <= 67108863);
        var carry = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var w = (this.words[i] | 0) + carry * 67108864;
            this.words[i] = w / num | 0;
            carry = w % num;
        }
        this._strip();
        return isNegNum ? this.ineg() : this;
    };
    BN.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
    };
    BN.prototype.egcd = function egcd(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) x = x.umod(p);
        else x = x.clone();
        // A * x + B * y = x
        var A = new BN(1);
        var B = new BN(0);
        // C * x + D * y = y
        var C = new BN(0);
        var D = new BN(1);
        var g = 0;
        while(x.isEven() && y.isEven()){
            x.iushrn(1);
            y.iushrn(1);
            ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while(!x.isZero()){
            for(var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                x.iushrn(i);
                while((i--) > 0){
                    if (A.isOdd() || B.isOdd()) {
                        A.iadd(yp);
                        B.isub(xp);
                    }
                    A.iushrn(1);
                    B.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                y.iushrn(j);
                while((j--) > 0){
                    if (C.isOdd() || D.isOdd()) {
                        C.iadd(yp);
                        D.isub(xp);
                    }
                    C.iushrn(1);
                    D.iushrn(1);
                }
            }
            if (x.cmp(y) >= 0) {
                x.isub(y);
                A.isub(C);
                B.isub(D);
            } else {
                y.isub(x);
                C.isub(A);
                D.isub(B);
            }
        }
        return {
            a: C,
            b: D,
            gcd: y.iushln(g)
        };
    };
    // This is reduced incarnation of the binary EEA
    // above, designated to invert members of the
    // _prime_ fields F(p) at a maximal speed
    BN.prototype._invmp = function _invmp(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) a = a.umod(p);
        else a = a.clone();
        var x1 = new BN(1);
        var x2 = new BN(0);
        var delta = b.clone();
        while(a.cmpn(1) > 0 && b.cmpn(1) > 0){
            for(var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                a.iushrn(i);
                while((i--) > 0){
                    if (x1.isOdd()) x1.iadd(delta);
                    x1.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                b.iushrn(j);
                while((j--) > 0){
                    if (x2.isOdd()) x2.iadd(delta);
                    x2.iushrn(1);
                }
            }
            if (a.cmp(b) >= 0) {
                a.isub(b);
                x1.isub(x2);
            } else {
                b.isub(a);
                x2.isub(x1);
            }
        }
        var res;
        if (a.cmpn(1) === 0) res = x1;
        else res = x2;
        if (res.cmpn(0) < 0) res.iadd(p);
        return res;
    };
    BN.prototype.gcd = function gcd(num) {
        if (this.isZero()) return num.abs();
        if (num.isZero()) return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        // Remove common factor of two
        for(var shift = 0; a.isEven() && b.isEven(); shift++){
            a.iushrn(1);
            b.iushrn(1);
        }
        do {
            while(a.isEven())a.iushrn(1);
            while(b.isEven())b.iushrn(1);
            var r = a.cmp(b);
            if (r < 0) {
                // Swap `a` and `b` to make `a` always bigger than `b`
                var t = a;
                a = b;
                b = t;
            } else if (r === 0 || b.cmpn(1) === 0) break;
            a.isub(b);
        }while (true)
        return b.iushln(shift);
    };
    // Invert number in the field F(num)
    BN.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
    };
    BN.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
    };
    BN.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
    };
    // And first word and num
    BN.prototype.andln = function andln(num) {
        return this.words[0] & num;
    };
    // Increment at the bit position in-line
    BN.prototype.bincn = function bincn(bit) {
        assert(typeof bit === 'number');
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) {
            this._expand(s + 1);
            this.words[s] |= q;
            return this;
        }
        // Add bit and propagate, if needed
        var carry = q;
        for(var i = s; carry !== 0 && i < this.length; i++){
            var w = this.words[i] | 0;
            w += carry;
            carry = w >>> 26;
            w &= 67108863;
            this.words[i] = w;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return this;
    };
    BN.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
    };
    BN.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative) return -1;
        if (this.negative === 0 && negative) return 1;
        this._strip();
        var res;
        if (this.length > 1) res = 1;
        else {
            if (negative) num = -num;
            assert(num <= 67108863, 'Number is too big');
            var w = this.words[0] | 0;
            res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Compare two numbers and return:
    // 1 - if `this` > `num`
    // 0 - if `this` == `num`
    // -1 - if `this` < `num`
    BN.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0) return -1;
        if (this.negative === 0 && num.negative !== 0) return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Unsigned comparison
    BN.prototype.ucmp = function ucmp(num) {
        // At this point both numbers have the same sign
        if (this.length > num.length) return 1;
        if (this.length < num.length) return -1;
        var res = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var a = this.words[i] | 0;
            var b = num.words[i] | 0;
            if (a === b) continue;
            if (a < b) res = -1;
            else if (a > b) res = 1;
            break;
        }
        return res;
    };
    BN.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
    };
    BN.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
    };
    BN.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
    };
    BN.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
    };
    BN.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
    };
    BN.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
    };
    BN.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
    };
    BN.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
    };
    BN.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
    };
    BN.prototype.eq = function eq(num) {
        return this.cmp(num) === 0;
    };
    //
    // A reduce context, could be using montgomery or something better, depending
    // on the `m` itself.
    //
    BN.red = function red(num) {
        return new Red(num);
    };
    BN.prototype.toRed = function toRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        assert(this.negative === 0, 'red works only with positives');
        return ctx.convertTo(this)._forceRed(ctx);
    };
    BN.prototype.fromRed = function fromRed() {
        assert(this.red, 'fromRed works only with numbers in reduction context');
        return this.red.convertFrom(this);
    };
    BN.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
    };
    BN.prototype.forceRed = function forceRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        return this._forceRed(ctx);
    };
    BN.prototype.redAdd = function redAdd(num) {
        assert(this.red, 'redAdd works only with red numbers');
        return this.red.add(this, num);
    };
    BN.prototype.redIAdd = function redIAdd(num) {
        assert(this.red, 'redIAdd works only with red numbers');
        return this.red.iadd(this, num);
    };
    BN.prototype.redSub = function redSub(num) {
        assert(this.red, 'redSub works only with red numbers');
        return this.red.sub(this, num);
    };
    BN.prototype.redISub = function redISub(num) {
        assert(this.red, 'redISub works only with red numbers');
        return this.red.isub(this, num);
    };
    BN.prototype.redShl = function redShl(num) {
        assert(this.red, 'redShl works only with red numbers');
        return this.red.shl(this, num);
    };
    BN.prototype.redMul = function redMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.mul(this, num);
    };
    BN.prototype.redIMul = function redIMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.imul(this, num);
    };
    BN.prototype.redSqr = function redSqr() {
        assert(this.red, 'redSqr works only with red numbers');
        this.red._verify1(this);
        return this.red.sqr(this);
    };
    BN.prototype.redISqr = function redISqr() {
        assert(this.red, 'redISqr works only with red numbers');
        this.red._verify1(this);
        return this.red.isqr(this);
    };
    // Square root over p
    BN.prototype.redSqrt = function redSqrt() {
        assert(this.red, 'redSqrt works only with red numbers');
        this.red._verify1(this);
        return this.red.sqrt(this);
    };
    BN.prototype.redInvm = function redInvm() {
        assert(this.red, 'redInvm works only with red numbers');
        this.red._verify1(this);
        return this.red.invm(this);
    };
    // Return negative clone of `this` % `red modulo`
    BN.prototype.redNeg = function redNeg() {
        assert(this.red, 'redNeg works only with red numbers');
        this.red._verify1(this);
        return this.red.neg(this);
    };
    BN.prototype.redPow = function redPow(num) {
        assert(this.red && !num.red, 'redPow(normalNum)');
        this.red._verify1(this);
        return this.red.pow(this, num);
    };
    // Prime numbers with efficient reduction
    var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
    };
    // Pseudo-Mersenne prime
    function MPrime(name, p) {
        // P = 2 ^ N - K
        this.name = name;
        this.p = new BN(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
    }
    MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
    };
    MPrime.prototype.ireduce = function ireduce(num) {
        // Assumes that `num` is less than `P^2`
        // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
        var r = num;
        var rlen;
        do {
            this.split(r, this.tmp);
            r = this.imulK(r);
            r = r.iadd(this.tmp);
            rlen = r.bitLength();
        }while (rlen > this.n)
        var cmp1 = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp1 === 0) {
            r.words[0] = 0;
            r.length = 1;
        } else if (cmp1 > 0) r.isub(this.p);
        else if (r.strip !== undefined) // r is a BN v4 instance
        r.strip();
        else // r is a BN v5 instance
        r._strip();
        return r;
    };
    MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
    };
    MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
    };
    function K256() {
        MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
    }
    inherits(K256, MPrime);
    K256.prototype.split = function split1(input, output) {
        // 256 = 9 * 26 + 22
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for(var i = 0; i < outLen; i++)output.words[i] = input.words[i];
        output.length = outLen;
        if (input.length <= 9) {
            input.words[0] = 0;
            input.length = 1;
            return;
        }
        // Shift by 9 limbs
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for(i = 10; i < input.length; i++){
            var next = input.words[i] | 0;
            input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
            prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) input.length -= 10;
        else input.length -= 9;
    };
    K256.prototype.imulK = function imulK1(num) {
        // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
        var lo = 0;
        for(var i = 0; i < num.length; i++){
            var w = num.words[i] | 0;
            lo += w * 977;
            num.words[i] = lo & 67108863;
            lo = w * 64 + (lo / 67108864 | 0);
        }
        // Fast length reduction
        if (num.words[num.length - 1] === 0) {
            num.length--;
            if (num.words[num.length - 1] === 0) num.length--;
        }
        return num;
    };
    function P224() {
        MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
    }
    inherits(P224, MPrime);
    function P192() {
        MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
    }
    inherits(P192, MPrime);
    function P25519() {
        // 2 ^ 255 - 19
        MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
    }
    inherits(P25519, MPrime);
    P25519.prototype.imulK = function imulK2(num) {
        // K = 0x13
        var carry = 0;
        for(var i = 0; i < num.length; i++){
            var hi = (num.words[i] | 0) * 19 + carry;
            var lo = hi & 67108863;
            hi >>>= 26;
            num.words[i] = lo;
            carry = hi;
        }
        if (carry !== 0) num.words[num.length++] = carry;
        return num;
    };
    // Exported mostly for testing purposes, use plain name instead
    BN._prime = function prime(name) {
        // Cached version of prime
        if (primes[name]) return primes[name];
        var prime;
        if (name === 'k256') prime = new K256();
        else if (name === 'p224') prime = new P224();
        else if (name === 'p192') prime = new P192();
        else if (name === 'p25519') prime = new P25519();
        else throw new Error('Unknown prime ' + name);
        primes[name] = prime;
        return prime;
    };
    //
    // Base reduction engine
    //
    function Red(m) {
        if (typeof m === 'string') {
            var prime1 = BN._prime(m);
            this.m = prime1.p;
            this.prime = prime1;
        } else {
            assert(m.gtn(1), 'modulus must be greater than 1');
            this.m = m;
            this.prime = null;
        }
    }
    Red.prototype._verify1 = function _verify1(a) {
        assert(a.negative === 0, 'red works only with positives');
        assert(a.red, 'red works only with red numbers');
    };
    Red.prototype._verify2 = function _verify2(a, b) {
        assert((a.negative | b.negative) === 0, 'red works only with positives');
        assert(a.red && a.red === b.red, 'red works only with red numbers');
    };
    Red.prototype.imod = function imod(a) {
        if (this.prime) return this.prime.ireduce(a)._forceRed(this);
        move(a, a.umod(this.m)._forceRed(this));
        return a;
    };
    Red.prototype.neg = function neg1(a) {
        if (a.isZero()) return a.clone();
        return this.m.sub(a)._forceRed(this);
    };
    Red.prototype.add = function add1(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) res.isub(this.m);
        return res._forceRed(this);
    };
    Red.prototype.iadd = function iadd1(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) res.isub(this.m);
        return res;
    };
    Red.prototype.sub = function sub1(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) res.iadd(this.m);
        return res._forceRed(this);
    };
    Red.prototype.isub = function isub1(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) res.iadd(this.m);
        return res;
    };
    Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
    };
    Red.prototype.imul = function imul1(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
    };
    Red.prototype.mul = function mul1(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
    };
    Red.prototype.isqr = function isqr1(a) {
        return this.imul(a, a.clone());
    };
    Red.prototype.sqr = function sqr1(a) {
        return this.mul(a, a);
    };
    Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero()) return a.clone();
        var mod3 = this.m.andln(3);
        assert(mod3 % 2 === 1);
        // Fast case
        if (mod3 === 3) {
            var pow1 = this.m.add(new BN(1)).iushrn(2);
            return this.pow(a, pow1);
        }
        // Tonelli-Shanks algorithm (Totally unoptimized and slow)
        //
        // Find Q and S, that Q * 2 ^ S = (P - 1)
        var q = this.m.subn(1);
        var s = 0;
        while(!q.isZero() && q.andln(1) === 0){
            s++;
            q.iushrn(1);
        }
        assert(!q.isZero());
        var one = new BN(1).toRed(this);
        var nOne = one.redNeg();
        // Find quadratic non-residue
        // NOTE: Max is such because of generalized Riemann hypothesis.
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN(2 * z * z).toRed(this);
        while(this.pow(z, lpow).cmp(nOne) !== 0)z.redIAdd(nOne);
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while(t.cmp(one) !== 0){
            var tmp = t;
            for(var i = 0; tmp.cmp(one) !== 0; i++)tmp = tmp.redSqr();
            assert(i < m);
            var b = this.pow(c, new BN(1).iushln(m - i - 1));
            r = r.redMul(b);
            c = b.redSqr();
            t = t.redMul(c);
            m = i;
        }
        return r;
    };
    Red.prototype.invm = function invm1(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
            inv.negative = 0;
            return this.imod(inv).redNeg();
        } else return this.imod(inv);
    };
    Red.prototype.pow = function pow2(a, num) {
        if (num.isZero()) return new BN(1).toRed(this);
        if (num.cmpn(1) === 0) return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN(1).toRed(this);
        wnd[1] = a;
        for(var i = 2; i < wnd.length; i++)wnd[i] = this.mul(wnd[i - 1], a);
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) start = 26;
        for(i = num.length - 1; i >= 0; i--){
            var word = num.words[i];
            for(var j = start - 1; j >= 0; j--){
                var bit = word >> j & 1;
                if (res !== wnd[0]) res = this.sqr(res);
                if (bit === 0 && current === 0) {
                    currentLen = 0;
                    continue;
                }
                current <<= 1;
                current |= bit;
                currentLen++;
                if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;
                res = this.mul(res, wnd[current]);
                currentLen = 0;
                current = 0;
            }
            start = 26;
        }
        return res;
    };
    Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
    };
    Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
    };
    //
    // Montgomery method engine
    //
    BN.mont = function mont(num) {
        return new Mont(num);
    };
    function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) this.shift += 26 - this.shift % 26;
        this.r = new BN(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
    }
    inherits(Mont, Red);
    Mont.prototype.convertTo = function convertTo1(num) {
        return this.imod(num.ushln(this.shift));
    };
    Mont.prototype.convertFrom = function convertFrom1(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
    };
    Mont.prototype.imul = function imul2(a, b) {
        if (a.isZero() || b.isZero()) {
            a.words[0] = 0;
            a.length = 1;
            return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) res = u.isub(this.m);
        else if (u.cmpn(0) < 0) res = u.iadd(this.m);
        return res._forceRed(this);
    };
    Mont.prototype.mul = function mul2(a, b) {
        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) res = u.isub(this.m);
        else if (u.cmpn(0) < 0) res = u.iadd(this.m);
        return res._forceRed(this);
    };
    Mont.prototype.invm = function invm2(a) {
        // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
    };
})(typeof module === 'undefined' || module, this);

},{"buffer":"4LM6B"}],"8H3cJ":[function(require,module,exports) {
'use strict';
var elliptic = exports;
elliptic.version = require('../package.json').version;
elliptic.utils = require('./elliptic/utils');
elliptic.rand = require('brorand');
elliptic.curve = require('./elliptic/curve');
elliptic.curves = require('./elliptic/curves');
// Protocols
elliptic.ec = require('./elliptic/ec');
elliptic.eddsa = require('./elliptic/eddsa');

},{"../package.json":"jDvQo","./elliptic/utils":"3rv6w","brorand":"auxXf","./elliptic/curve":"2UW9u","./elliptic/curves":"55Vo5","./elliptic/ec":"bm5B1","./elliptic/eddsa":"gZdaU"}],"jDvQo":[function(require,module,exports) {
module.exports = JSON.parse("{\"_args\":[[\"elliptic@6.5.4\",\"C:\\\\Users\\\\Lormida\\\\WebstormProjects\\\\In dev\\\\natours\\\\natours\"]],\"_from\":\"elliptic@6.5.4\",\"_id\":\"elliptic@6.5.4\",\"_inBundle\":false,\"_integrity\":\"sha512-iLhC6ULemrljPZb+QutR5TQGB+pdW6KGD5RSegS+8sorOZT+rdQFbsQFJgvN3eRqNALqJer4oQ16YvJHlU8hzQ==\",\"_location\":\"/elliptic\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"elliptic@6.5.4\",\"name\":\"elliptic\",\"escapedName\":\"elliptic\",\"rawSpec\":\"6.5.4\",\"saveSpec\":null,\"fetchSpec\":\"6.5.4\"},\"_requiredBy\":[\"/browserify-sign\",\"/create-ecdh\"],\"_resolved\":\"https://registry.npmjs.org/elliptic/-/elliptic-6.5.4.tgz\",\"_spec\":\"6.5.4\",\"_where\":\"C:\\\\Users\\\\Lormida\\\\WebstormProjects\\\\In dev\\\\natours\\\\natours\",\"author\":{\"name\":\"Fedor Indutny\",\"email\":\"fedor@indutny.com\"},\"bugs\":{\"url\":\"https://github.com/indutny/elliptic/issues\"},\"dependencies\":{\"bn.js\":\"^4.11.9\",\"brorand\":\"^1.1.0\",\"hash.js\":\"^1.0.0\",\"hmac-drbg\":\"^1.0.1\",\"inherits\":\"^2.0.4\",\"minimalistic-assert\":\"^1.0.1\",\"minimalistic-crypto-utils\":\"^1.0.1\"},\"description\":\"EC cryptography\",\"devDependencies\":{\"brfs\":\"^2.0.2\",\"coveralls\":\"^3.1.0\",\"eslint\":\"^7.6.0\",\"grunt\":\"^1.2.1\",\"grunt-browserify\":\"^5.3.0\",\"grunt-cli\":\"^1.3.2\",\"grunt-contrib-connect\":\"^3.0.0\",\"grunt-contrib-copy\":\"^1.0.0\",\"grunt-contrib-uglify\":\"^5.0.0\",\"grunt-mocha-istanbul\":\"^5.0.2\",\"grunt-saucelabs\":\"^9.0.1\",\"istanbul\":\"^0.4.5\",\"mocha\":\"^8.0.1\"},\"files\":[\"lib\"],\"homepage\":\"https://github.com/indutny/elliptic\",\"keywords\":[\"EC\",\"Elliptic\",\"curve\",\"Cryptography\"],\"license\":\"MIT\",\"main\":\"lib/elliptic.js\",\"name\":\"elliptic\",\"repository\":{\"type\":\"git\",\"url\":\"git+ssh://git@github.com/indutny/elliptic.git\"},\"scripts\":{\"lint\":\"eslint lib test\",\"lint:fix\":\"npm run lint -- --fix\",\"test\":\"npm run lint && npm run unit\",\"unit\":\"istanbul test _mocha --reporter=spec test/index.js\",\"version\":\"grunt dist && git add dist/\"},\"version\":\"6.5.4\"}");

},{}],"3rv6w":[function(require,module,exports) {
'use strict';
var utils = exports;
var BN = require('bn.js');
var minAssert = require('minimalistic-assert');
var minUtils = require('minimalistic-crypto-utils');
utils.assert = minAssert;
utils.toArray = minUtils.toArray;
utils.zero2 = minUtils.zero2;
utils.toHex = minUtils.toHex;
utils.encode = minUtils.encode;
// Represent num in a w-NAF form
function getNAF(num, w, bits) {
    var naf = new Array(Math.max(num.bitLength(), bits) + 1);
    naf.fill(0);
    var ws = 1 << w + 1;
    var k = num.clone();
    for(var i = 0; i < naf.length; i++){
        var z;
        var mod = k.andln(ws - 1);
        if (k.isOdd()) {
            if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;
            else z = mod;
            k.isubn(z);
        } else z = 0;
        naf[i] = z;
        k.iushrn(1);
    }
    return naf;
}
utils.getNAF = getNAF;
// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
    var jsf = [
        [],
        [], 
    ];
    k1 = k1.clone();
    k2 = k2.clone();
    var d1 = 0;
    var d2 = 0;
    var m8;
    while(k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0){
        // First phase
        var m14 = k1.andln(3) + d1 & 3;
        var m24 = k2.andln(3) + d2 & 3;
        if (m14 === 3) m14 = -1;
        if (m24 === 3) m24 = -1;
        var u1;
        if ((m14 & 1) === 0) u1 = 0;
        else {
            m8 = k1.andln(7) + d1 & 7;
            if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;
            else u1 = m14;
        }
        jsf[0].push(u1);
        var u2;
        if ((m24 & 1) === 0) u2 = 0;
        else {
            m8 = k2.andln(7) + d2 & 7;
            if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;
            else u2 = m24;
        }
        jsf[1].push(u2);
        // Second phase
        if (2 * d1 === u1 + 1) d1 = 1 - d1;
        if (2 * d2 === u2 + 1) d2 = 1 - d2;
        k1.iushrn(1);
        k2.iushrn(1);
    }
    return jsf;
}
utils.getJSF = getJSF;
function cachedProperty(obj, name, computer) {
    var key = '_' + name;
    obj.prototype[name] = function cachedProperty1() {
        return this[key] !== undefined ? this[key] : this[key] = computer.call(this);
    };
}
utils.cachedProperty = cachedProperty;
function parseBytes(bytes) {
    return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') : bytes;
}
utils.parseBytes = parseBytes;
function intFromLE(bytes) {
    return new BN(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;

},{"bn.js":"8lUpb","minimalistic-assert":"fS90O","minimalistic-crypto-utils":"4XYD1"}],"8lUpb":[function(require,module,exports) {
(function(module, exports) {
    // Utils
    function assert(val, msg) {
        if (!val) throw new Error(msg || 'Assertion failed');
    }
    // Could use `inherits` module, but don't want to move from single file
    // architecture yet.
    function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
    }
    // BN
    function BN(number, base, endian) {
        if (BN.isBN(number)) return number;
        this.negative = 0;
        this.words = null;
        this.length = 0;
        // Reduction context
        this.red = null;
        if (number !== null) {
            if (base === 'le' || base === 'be') {
                endian = base;
                base = 10;
            }
            this._init(number || 0, base || 10, endian || 'be');
        }
    }
    if (typeof module === 'object') module.exports = BN;
    else exports.BN = BN;
    BN.BN = BN;
    BN.wordSize = 26;
    var Buffer;
    try {
        if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') Buffer = window.Buffer;
        else Buffer = require('buffer').Buffer;
    } catch (e) {
    }
    BN.isBN = function isBN(num) {
        if (num instanceof BN) return true;
        return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
    };
    BN.max = function max(left, right) {
        if (left.cmp(right) > 0) return left;
        return right;
    };
    BN.min = function min(left, right) {
        if (left.cmp(right) < 0) return left;
        return right;
    };
    BN.prototype._init = function init(number, base, endian) {
        if (typeof number === 'number') return this._initNumber(number, base, endian);
        if (typeof number === 'object') return this._initArray(number, base, endian);
        if (base === 'hex') base = 16;
        assert(base === (base | 0) && base >= 2 && base <= 36);
        number = number.toString().replace(/\s+/g, '');
        var start = 0;
        if (number[0] === '-') {
            start++;
            this.negative = 1;
        }
        if (start < number.length) {
            if (base === 16) this._parseHex(number, start, endian);
            else {
                this._parseBase(number, base, start);
                if (endian === 'le') this._initArray(this.toArray(), base, endian);
            }
        }
    };
    BN.prototype._initNumber = function _initNumber(number, base, endian) {
        if (number < 0) {
            this.negative = 1;
            number = -number;
        }
        if (number < 67108864) {
            this.words = [
                number & 67108863
            ];
            this.length = 1;
        } else if (number < 4503599627370496) {
            this.words = [
                number & 67108863,
                number / 67108864 & 67108863
            ];
            this.length = 2;
        } else {
            assert(number < 9007199254740992); // 2 ^ 53 (unsafe)
            this.words = [
                number & 67108863,
                number / 67108864 & 67108863,
                1
            ];
            this.length = 3;
        }
        if (endian !== 'le') return;
        // Reverse the bytes
        this._initArray(this.toArray(), base, endian);
    };
    BN.prototype._initArray = function _initArray(number, base, endian) {
        // Perhaps a Uint8Array
        assert(typeof number.length === 'number');
        if (number.length <= 0) {
            this.words = [
                0
            ];
            this.length = 1;
            return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)this.words[i] = 0;
        var j, w;
        var off = 0;
        if (endian === 'be') for(i = number.length - 1, j = 0; i >= 0; i -= 3){
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        else if (endian === 'le') for(i = 0, j = 0; i < number.length; i += 3){
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        return this.strip();
    };
    function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        // 'A' - 'F'
        if (c >= 65 && c <= 70) return c - 55;
        else if (c >= 97 && c <= 102) return c - 87;
        else return c - 48 & 15;
    }
    function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) r |= parseHex4Bits(string, index - 1) << 4;
        return r;
    }
    BN.prototype._parseHex = function _parseHex(number, start, endian) {
        // Create possibly bigger array to ensure that it fits the number
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)this.words[i] = 0;
        // 24-bits chunks
        var off = 0;
        var j = 0;
        var w;
        if (endian === 'be') for(i = number.length - 1; i >= start; i -= 2){
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
                off -= 18;
                j += 1;
                this.words[j] |= w >>> 26;
            } else off += 8;
        }
        else {
            var parseLength = number.length - start;
            for(i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2){
                w = parseHexByte(number, start, i) << off;
                this.words[j] |= w & 67108863;
                if (off >= 18) {
                    off -= 18;
                    j += 1;
                    this.words[j] |= w >>> 26;
                } else off += 8;
            }
        }
        this.strip();
    };
    function parseBase(str, start, end, mul) {
        var r = 0;
        var len = Math.min(str.length, end);
        for(var i = start; i < len; i++){
            var c = str.charCodeAt(i) - 48;
            r *= mul;
            // 'a'
            if (c >= 49) r += c - 49 + 10;
            else if (c >= 17) r += c - 17 + 10;
            else r += c;
        }
        return r;
    }
    BN.prototype._parseBase = function _parseBase(number, base, start) {
        // Initialize as zero
        this.words = [
            0
        ];
        this.length = 1;
        // Find length of limb in base
        for(var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base)limbLen++;
        limbLen--;
        limbPow = limbPow / base | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for(var i = start; i < end; i += limbLen){
            word = parseBase(number, i, i + limbLen, base);
            this.imuln(limbPow);
            if (this.words[0] + word < 67108864) this.words[0] += word;
            else this._iaddn(word);
        }
        if (mod !== 0) {
            var pow = 1;
            word = parseBase(number, i, number.length, base);
            for(i = 0; i < mod; i++)pow *= base;
            this.imuln(pow);
            if (this.words[0] + word < 67108864) this.words[0] += word;
            else this._iaddn(word);
        }
        this.strip();
    };
    BN.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)dest.words[i] = this.words[i];
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
    };
    BN.prototype.clone = function clone() {
        var r = new BN(null);
        this.copy(r);
        return r;
    };
    BN.prototype._expand = function _expand(size) {
        while(this.length < size)this.words[this.length++] = 0;
        return this;
    };
    // Remove leading `0` from `this`
    BN.prototype.strip = function strip() {
        while(this.length > 1 && this.words[this.length - 1] === 0)this.length--;
        return this._normSign();
    };
    BN.prototype._normSign = function _normSign() {
        // -0 = 0
        if (this.length === 1 && this.words[0] === 0) this.negative = 0;
        return this;
    };
    BN.prototype.inspect = function inspect() {
        return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
    };
    /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */ var zeros = [
        '',
        '0',
        '00',
        '000',
        '0000',
        '00000',
        '000000',
        '0000000',
        '00000000',
        '000000000',
        '0000000000',
        '00000000000',
        '000000000000',
        '0000000000000',
        '00000000000000',
        '000000000000000',
        '0000000000000000',
        '00000000000000000',
        '000000000000000000',
        '0000000000000000000',
        '00000000000000000000',
        '000000000000000000000',
        '0000000000000000000000',
        '00000000000000000000000',
        '000000000000000000000000',
        '0000000000000000000000000'
    ];
    var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
    ];
    var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        10000000,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64000000,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        24300000,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
    ];
    BN.prototype.toString = function toString(base, padding) {
        base = base || 10;
        padding = padding | 0 || 1;
        var out;
        if (base === 16 || base === 'hex') {
            out = '';
            var off = 0;
            var carry = 0;
            for(var i = 0; i < this.length; i++){
                var w = this.words[i];
                var word = ((w << off | carry) & 16777215).toString(16);
                carry = w >>> 24 - off & 16777215;
                if (carry !== 0 || i !== this.length - 1) out = zeros[6 - word.length] + word + out;
                else out = word + out;
                off += 2;
                if (off >= 26) {
                    off -= 26;
                    i--;
                }
            }
            if (carry !== 0) out = carry.toString(16) + out;
            while(out.length % padding !== 0)out = '0' + out;
            if (this.negative !== 0) out = '-' + out;
            return out;
        }
        if (base === (base | 0) && base >= 2 && base <= 36) {
            // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
            var groupSize = groupSizes[base];
            // var groupBase = Math.pow(base, groupSize);
            var groupBase = groupBases[base];
            out = '';
            var c = this.clone();
            c.negative = 0;
            while(!c.isZero()){
                var r = c.modn(groupBase).toString(base);
                c = c.idivn(groupBase);
                if (!c.isZero()) out = zeros[groupSize - r.length] + r + out;
                else out = r + out;
            }
            if (this.isZero()) out = '0' + out;
            while(out.length % padding !== 0)out = '0' + out;
            if (this.negative !== 0) out = '-' + out;
            return out;
        }
        assert(false, 'Base should be between 2 and 36');
    };
    BN.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) ret += this.words[1] * 67108864;
        else if (this.length === 3 && this.words[2] === 1) // NOTE: at this stage it is known that the top bit is set
        ret += 4503599627370496 + this.words[1] * 67108864;
        else if (this.length > 2) assert(false, 'Number can only safely store up to 53 bits');
        return this.negative !== 0 ? -ret : ret;
    };
    BN.prototype.toJSON = function toJSON() {
        return this.toString(16);
    };
    BN.prototype.toBuffer = function toBuffer(endian, length) {
        assert(typeof Buffer !== 'undefined');
        return this.toArrayLike(Buffer, endian, length);
    };
    BN.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
    };
    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert(byteLength <= reqLength, 'byte array longer than desired length');
        assert(reqLength > 0, 'Requested array length <= 0');
        this.strip();
        var littleEndian = endian === 'le';
        var res = new ArrayType(reqLength);
        var b, i;
        var q = this.clone();
        if (!littleEndian) {
            // Assume big-endian
            for(i = 0; i < reqLength - byteLength; i++)res[i] = 0;
            for(i = 0; !q.isZero(); i++){
                b = q.andln(255);
                q.iushrn(8);
                res[reqLength - i - 1] = b;
            }
        } else {
            for(i = 0; !q.isZero(); i++){
                b = q.andln(255);
                q.iushrn(8);
                res[i] = b;
            }
            for(; i < reqLength; i++)res[i] = 0;
        }
        return res;
    };
    if (Math.clz32) BN.prototype._countBits = function _countBits(w) {
        return 32 - Math.clz32(w);
    };
    else BN.prototype._countBits = function _countBits1(w) {
        var t = w;
        var r = 0;
        if (t >= 4096) {
            r += 13;
            t >>>= 13;
        }
        if (t >= 64) {
            r += 7;
            t >>>= 7;
        }
        if (t >= 8) {
            r += 4;
            t >>>= 4;
        }
        if (t >= 2) {
            r += 2;
            t >>>= 2;
        }
        return r + t;
    };
    BN.prototype._zeroBits = function _zeroBits(w) {
        // Short-cut
        if (w === 0) return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
            r += 13;
            t >>>= 13;
        }
        if ((t & 127) === 0) {
            r += 7;
            t >>>= 7;
        }
        if ((t & 15) === 0) {
            r += 4;
            t >>>= 4;
        }
        if ((t & 3) === 0) {
            r += 2;
            t >>>= 2;
        }
        if ((t & 1) === 0) r++;
        return r;
    };
    // Return number of used bits in a BN
    BN.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
    };
    function toBitArray(num) {
        var w = new Array(num.bitLength());
        for(var bit = 0; bit < w.length; bit++){
            var off = bit / 26 | 0;
            var wbit = bit % 26;
            w[bit] = (num.words[off] & 1 << wbit) >>> wbit;
        }
        return w;
    }
    // Number of trailing zero bits
    BN.prototype.zeroBits = function zeroBits() {
        if (this.isZero()) return 0;
        var r = 0;
        for(var i = 0; i < this.length; i++){
            var b = this._zeroBits(this.words[i]);
            r += b;
            if (b !== 26) break;
        }
        return r;
    };
    BN.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
    };
    BN.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) return this.abs().inotn(width).iaddn(1);
        return this.clone();
    };
    BN.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) return this.notn(width).iaddn(1).ineg();
        return this.clone();
    };
    BN.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
    };
    // Return negative clone of `this`
    BN.prototype.neg = function neg() {
        return this.clone().ineg();
    };
    BN.prototype.ineg = function ineg() {
        if (!this.isZero()) this.negative ^= 1;
        return this;
    };
    // Or `num` with `this` in-place
    BN.prototype.iuor = function iuor(num) {
        while(this.length < num.length)this.words[this.length++] = 0;
        for(var i = 0; i < num.length; i++)this.words[i] = this.words[i] | num.words[i];
        return this.strip();
    };
    BN.prototype.ior = function ior(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuor(num);
    };
    // Or `num` with `this`
    BN.prototype.or = function or(num) {
        if (this.length > num.length) return this.clone().ior(num);
        return num.clone().ior(this);
    };
    BN.prototype.uor = function uor(num) {
        if (this.length > num.length) return this.clone().iuor(num);
        return num.clone().iuor(this);
    };
    // And `num` with `this` in-place
    BN.prototype.iuand = function iuand(num) {
        // b = min-length(num, this)
        var b;
        if (this.length > num.length) b = num;
        else b = this;
        for(var i = 0; i < b.length; i++)this.words[i] = this.words[i] & num.words[i];
        this.length = b.length;
        return this.strip();
    };
    BN.prototype.iand = function iand(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuand(num);
    };
    // And `num` with `this`
    BN.prototype.and = function and(num) {
        if (this.length > num.length) return this.clone().iand(num);
        return num.clone().iand(this);
    };
    BN.prototype.uand = function uand(num) {
        if (this.length > num.length) return this.clone().iuand(num);
        return num.clone().iuand(this);
    };
    // Xor `num` with `this` in-place
    BN.prototype.iuxor = function iuxor(num) {
        // a.length > b.length
        var a;
        var b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        for(var i = 0; i < b.length; i++)this.words[i] = a.words[i] ^ b.words[i];
        if (this !== a) for(; i < a.length; i++)this.words[i] = a.words[i];
        this.length = a.length;
        return this.strip();
    };
    BN.prototype.ixor = function ixor(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuxor(num);
    };
    // Xor `num` with `this`
    BN.prototype.xor = function xor(num) {
        if (this.length > num.length) return this.clone().ixor(num);
        return num.clone().ixor(this);
    };
    BN.prototype.uxor = function uxor(num) {
        if (this.length > num.length) return this.clone().iuxor(num);
        return num.clone().iuxor(this);
    };
    // Not ``this`` with ``width`` bitwidth
    BN.prototype.inotn = function inotn(width) {
        assert(typeof width === 'number' && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        // Extend the buffer with leading zeroes
        this._expand(bytesNeeded);
        if (bitsLeft > 0) bytesNeeded--;
        // Handle complete words
        for(var i = 0; i < bytesNeeded; i++)this.words[i] = ~this.words[i] & 67108863;
        // Handle the residue
        if (bitsLeft > 0) this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        // And remove leading zeroes
        return this.strip();
    };
    BN.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
    };
    // Set `bit` of `this`
    BN.prototype.setn = function setn(bit, val) {
        assert(typeof bit === 'number' && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) this.words[off] = this.words[off] | 1 << wbit;
        else this.words[off] = this.words[off] & ~(1 << wbit);
        return this.strip();
    };
    // Add `num` to `this` in-place
    BN.prototype.iadd = function iadd(num) {
        var r;
        // negative + positive
        if (this.negative !== 0 && num.negative === 0) {
            this.negative = 0;
            r = this.isub(num);
            this.negative ^= 1;
            return this._normSign();
        // positive + negative
        } else if (this.negative === 0 && num.negative !== 0) {
            num.negative = 0;
            r = this.isub(num);
            num.negative = 1;
            return r._normSign();
        }
        // a.length > b.length
        var a, b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
            this.words[i] = r & 67108863;
            carry = r >>> 26;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            this.words[i] = r & 67108863;
            carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
            this.words[this.length] = carry;
            this.length++;
        // Copy the rest of the words
        } else if (a !== this) for(; i < a.length; i++)this.words[i] = a.words[i];
        return this;
    };
    // Add `num` to `this`
    BN.prototype.add = function add(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
            num.negative = 0;
            res = this.sub(num);
            num.negative ^= 1;
            return res;
        } else if (num.negative === 0 && this.negative !== 0) {
            this.negative = 0;
            res = num.sub(this);
            this.negative = 1;
            return res;
        }
        if (this.length > num.length) return this.clone().iadd(num);
        return num.clone().iadd(this);
    };
    // Subtract `num` from `this` in-place
    BN.prototype.isub = function isub(num) {
        // this - (-num) = this + num
        if (num.negative !== 0) {
            num.negative = 0;
            var r = this.iadd(num);
            num.negative = 1;
            return r._normSign();
        // -this - num = -(this + num)
        } else if (this.negative !== 0) {
            this.negative = 0;
            this.iadd(num);
            this.negative = 1;
            return this._normSign();
        }
        // At this point both numbers are positive
        var cmp = this.cmp(num);
        // Optimization - zeroify
        if (cmp === 0) {
            this.negative = 0;
            this.length = 1;
            this.words[0] = 0;
            return this;
        }
        // a > b
        var a, b;
        if (cmp > 0) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 67108863;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 67108863;
        }
        // Copy rest of the words
        if (carry === 0 && i < a.length && a !== this) for(; i < a.length; i++)this.words[i] = a.words[i];
        this.length = Math.max(this.length, i);
        if (a !== this) this.negative = 1;
        return this.strip();
    };
    // Subtract `num` from `this`
    BN.prototype.sub = function sub(num) {
        return this.clone().isub(num);
    };
    function smallMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        var len = self.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        // Peel one iteration (compiler can't do it, because of code complexity)
        var a = self.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for(var k = 1; k < len; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = carry >>> 26;
            var rword = carry & 67108863;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j | 0;
                a = self.words[i] | 0;
                b = num.words[j] | 0;
                r = a * b + rword;
                ncarry += r / 67108864 | 0;
                rword = r & 67108863;
            }
            out.words[k] = rword | 0;
            carry = ncarry | 0;
        }
        if (carry !== 0) out.words[k] = carry | 0;
        else out.length--;
        return out.strip();
    }
    // TODO(indutny): it may be reasonable to omit it for users who don't need
    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
    // multiplication (like elliptic secp256k1).
    var comb10MulTo = function comb10MulTo1(self, num, out) {
        var a = self.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self.negative ^ num.negative;
        out.length = 19;
        /* k = 0 */ lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        /* k = 1 */ lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        /* k = 2 */ lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        /* k = 3 */ lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        /* k = 4 */ lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        /* k = 5 */ lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        /* k = 6 */ lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        /* k = 7 */ lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        /* k = 8 */ lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        /* k = 9 */ lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        /* k = 10 */ lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        /* k = 11 */ lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        /* k = 12 */ lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        /* k = 13 */ lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        /* k = 14 */ lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        /* k = 15 */ lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        /* k = 16 */ lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        /* k = 17 */ lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        /* k = 18 */ lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
            o[19] = c;
            out.length++;
        }
        return out;
    };
    // Polyfill comb
    if (!Math.imul) comb10MulTo = smallMulTo;
    function bigMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        out.length = self.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for(var k = 0; k < out.length - 1; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = hncarry;
            hncarry = 0;
            var rword = carry & 67108863;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j;
                var a = self.words[i] | 0;
                var b = num.words[j] | 0;
                var r = a * b;
                var lo = r & 67108863;
                ncarry = ncarry + (r / 67108864 | 0) | 0;
                lo = lo + rword | 0;
                rword = lo & 67108863;
                ncarry = ncarry + (lo >>> 26) | 0;
                hncarry += ncarry >>> 26;
                ncarry &= 67108863;
            }
            out.words[k] = rword;
            carry = ncarry;
            ncarry = hncarry;
        }
        if (carry !== 0) out.words[k] = carry;
        else out.length--;
        return out.strip();
    }
    function jumboMulTo(self, num, out) {
        var fftm = new FFTM();
        return fftm.mulp(self, num, out);
    }
    BN.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) res = comb10MulTo(this, num, out);
        else if (len < 63) res = smallMulTo(this, num, out);
        else if (len < 1024) res = bigMulTo(this, num, out);
        else res = jumboMulTo(this, num, out);
        return res;
    };
    // Cooley-Tukey algorithm for FFT
    // slightly revisited to rely on looping instead of recursion
    function FFTM(x, y) {
        this.x = x;
        this.y = y;
    }
    FFTM.prototype.makeRBT = function makeRBT(N) {
        var t = new Array(N);
        var l = BN.prototype._countBits(N) - 1;
        for(var i = 0; i < N; i++)t[i] = this.revBin(i, l, N);
        return t;
    };
    // Returns binary-reversed representation of `x`
    FFTM.prototype.revBin = function revBin(x, l, N) {
        if (x === 0 || x === N - 1) return x;
        var rb = 0;
        for(var i = 0; i < l; i++){
            rb |= (x & 1) << l - i - 1;
            x >>= 1;
        }
        return rb;
    };
    // Performs "tweedling" phase, therefore 'emulating'
    // behaviour of the recursive algorithm
    FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
        for(var i = 0; i < N; i++){
            rtws[i] = rws[rbt[i]];
            itws[i] = iws[rbt[i]];
        }
    };
    FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N);
        for(var s = 1; s < N; s <<= 1){
            var l = s << 1;
            var rtwdf = Math.cos(2 * Math.PI / l);
            var itwdf = Math.sin(2 * Math.PI / l);
            for(var p = 0; p < N; p += l){
                var rtwdf_ = rtwdf;
                var itwdf_ = itwdf;
                for(var j = 0; j < s; j++){
                    var re = rtws[p + j];
                    var ie = itws[p + j];
                    var ro = rtws[p + j + s];
                    var io = itws[p + j + s];
                    var rx = rtwdf_ * ro - itwdf_ * io;
                    io = rtwdf_ * io + itwdf_ * ro;
                    ro = rx;
                    rtws[p + j] = re + ro;
                    itws[p + j] = ie + io;
                    rtws[p + j + s] = re - ro;
                    itws[p + j + s] = ie - io;
                    /* jshint maxdepth : false */ if (j !== l) {
                        rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                        itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                        rtwdf_ = rx;
                    }
                }
            }
        }
    };
    FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N = Math.max(m, n) | 1;
        var odd = N & 1;
        var i = 0;
        for(N = N / 2 | 0; N; N = N >>> 1)i++;
        return 1 << i + 1 + odd;
    };
    FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
        if (N <= 1) return;
        for(var i = 0; i < N / 2; i++){
            var t = rws[i];
            rws[i] = rws[N - i - 1];
            rws[N - i - 1] = t;
            t = iws[i];
            iws[i] = -iws[N - i - 1];
            iws[N - i - 1] = -t;
        }
    };
    FFTM.prototype.normalize13b = function normalize13b(ws, N) {
        var carry = 0;
        for(var i = 0; i < N / 2; i++){
            var w = Math.round(ws[2 * i + 1] / N) * 8192 + Math.round(ws[2 * i] / N) + carry;
            ws[i] = w & 67108863;
            if (w < 67108864) carry = 0;
            else carry = w / 67108864 | 0;
        }
        return ws;
    };
    FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
        var carry = 0;
        for(var i = 0; i < len; i++){
            carry = carry + (ws[i] | 0);
            rws[2 * i] = carry & 8191;
            carry = carry >>> 13;
            rws[2 * i + 1] = carry & 8191;
            carry = carry >>> 13;
        }
        // Pad with zeroes
        for(i = 2 * len; i < N; ++i)rws[i] = 0;
        assert(carry === 0);
        assert((carry & -8192) === 0);
    };
    FFTM.prototype.stub = function stub(N) {
        var ph = new Array(N);
        for(var i = 0; i < N; i++)ph[i] = 0;
        return ph;
    };
    FFTM.prototype.mulp = function mulp(x, y, out) {
        var N = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N);
        var _ = this.stub(N);
        var rws = new Array(N);
        var rwst = new Array(N);
        var iwst = new Array(N);
        var nrws = new Array(N);
        var nrwst = new Array(N);
        var niwst = new Array(N);
        var rmws = out.words;
        rmws.length = N;
        this.convert13b(x.words, x.length, rws, N);
        this.convert13b(y.words, y.length, nrws, N);
        this.transform(rws, _, rwst, iwst, N, rbt);
        this.transform(nrws, _, nrwst, niwst, N, rbt);
        for(var i = 0; i < N; i++){
            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
            iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
            rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N);
        this.transform(rwst, iwst, rmws, _, N, rbt);
        this.conjugate(rmws, _, N);
        this.normalize13b(rmws, N);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out.strip();
    };
    // Multiply `this` by `num`
    BN.prototype.mul = function mul(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
    };
    // Multiply employing FFT
    BN.prototype.mulf = function mulf(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
    };
    // In-place Multiplication
    BN.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
    };
    BN.prototype.imuln = function imuln(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        // Carry
        var carry = 0;
        for(var i = 0; i < this.length; i++){
            var w = (this.words[i] | 0) * num;
            var lo = (w & 67108863) + (carry & 67108863);
            carry >>= 26;
            carry += w / 67108864 | 0;
            // NOTE: lo is 27bit maximum
            carry += lo >>> 26;
            this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return this;
    };
    BN.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
    };
    // `this` * `this`
    BN.prototype.sqr = function sqr() {
        return this.mul(this);
    };
    // `this` * `this` in-place
    BN.prototype.isqr = function isqr() {
        return this.imul(this.clone());
    };
    // Math.pow(`this`, `num`)
    BN.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0) return new BN(1);
        // Skip leading zeroes
        var res = this;
        for(var i = 0; i < w.length; i++, res = res.sqr()){
            if (w[i] !== 0) break;
        }
        if ((++i) < w.length) for(var q = res.sqr(); i < w.length; i++, q = q.sqr()){
            if (w[i] === 0) continue;
            res = res.mul(q);
        }
        return res;
    };
    // Shift-left in-place
    BN.prototype.iushln = function iushln(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
            var carry = 0;
            for(i = 0; i < this.length; i++){
                var newCarry = this.words[i] & carryMask;
                var c = (this.words[i] | 0) - newCarry << r;
                this.words[i] = c | carry;
                carry = newCarry >>> 26 - r;
            }
            if (carry) {
                this.words[i] = carry;
                this.length++;
            }
        }
        if (s !== 0) {
            for(i = this.length - 1; i >= 0; i--)this.words[i + s] = this.words[i];
            for(i = 0; i < s; i++)this.words[i] = 0;
            this.length += s;
        }
        return this.strip();
    };
    BN.prototype.ishln = function ishln(bits) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushln(bits);
    };
    // Shift-right in-place
    // NOTE: `hint` is a lowest bit before trailing zeroes
    // NOTE: if `extended` is present - it will be filled with destroyed bits
    BN.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert(typeof bits === 'number' && bits >= 0);
        var h;
        if (hint) h = (hint - hint % 26) / 26;
        else h = 0;
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        // Extended mode, copy masked part
        if (maskedWords) {
            for(var i = 0; i < s; i++)maskedWords.words[i] = this.words[i];
            maskedWords.length = s;
        }
        if (s === 0) ;
        else if (this.length > s) {
            this.length -= s;
            for(i = 0; i < this.length; i++)this.words[i] = this.words[i + s];
        } else {
            this.words[0] = 0;
            this.length = 1;
        }
        var carry = 0;
        for(i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--){
            var word = this.words[i] | 0;
            this.words[i] = carry << 26 - r | word >>> r;
            carry = word & mask;
        }
        // Push carried bits as a mask
        if (maskedWords && carry !== 0) maskedWords.words[maskedWords.length++] = carry;
        if (this.length === 0) {
            this.words[0] = 0;
            this.length = 1;
        }
        return this.strip();
    };
    BN.prototype.ishrn = function ishrn(bits, hint, extended) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushrn(bits, hint, extended);
    };
    // Shift-left
    BN.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
    };
    BN.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
    };
    // Shift-right
    BN.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
    };
    BN.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
    };
    // Test if n bit is set
    BN.prototype.testn = function testn(bit) {
        assert(typeof bit === 'number' && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) return false;
        // Check bit and return
        var w = this.words[s];
        return !!(w & q);
    };
    // Return only lowers bits of number (in-place)
    BN.prototype.imaskn = function imaskn(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert(this.negative === 0, 'imaskn works only with positive numbers');
        if (this.length <= s) return this;
        if (r !== 0) s++;
        this.length = Math.min(s, this.length);
        if (r !== 0) {
            var mask = 67108863 ^ 67108863 >>> r << r;
            this.words[this.length - 1] &= mask;
        }
        return this.strip();
    };
    // Return only lowers bits of number
    BN.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
    };
    // Add plain number `num` to `this`
    BN.prototype.iaddn = function iaddn(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        if (num < 0) return this.isubn(-num);
        // Possible sign change
        if (this.negative !== 0) {
            if (this.length === 1 && (this.words[0] | 0) < num) {
                this.words[0] = num - (this.words[0] | 0);
                this.negative = 0;
                return this;
            }
            this.negative = 0;
            this.isubn(num);
            this.negative = 1;
            return this;
        }
        // Add without checks
        return this._iaddn(num);
    };
    BN.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        // Carry
        for(var i = 0; i < this.length && this.words[i] >= 67108864; i++){
            this.words[i] -= 67108864;
            if (i === this.length - 1) this.words[i + 1] = 1;
            else this.words[i + 1]++;
        }
        this.length = Math.max(this.length, i + 1);
        return this;
    };
    // Subtract plain number `num` from `this`
    BN.prototype.isubn = function isubn(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        if (num < 0) return this.iaddn(-num);
        if (this.negative !== 0) {
            this.negative = 0;
            this.iaddn(num);
            this.negative = 1;
            return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
            this.words[0] = -this.words[0];
            this.negative = 1;
        } else // Carry
        for(var i = 0; i < this.length && this.words[i] < 0; i++){
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
        }
        return this.strip();
    };
    BN.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
    };
    BN.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
    };
    BN.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
    };
    BN.prototype.abs = function abs() {
        return this.clone().iabs();
    };
    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul1, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for(i = 0; i < num.length; i++){
            w = (this.words[i + shift] | 0) + carry;
            var right = (num.words[i] | 0) * mul1;
            w -= right & 67108863;
            carry = (w >> 26) - (right / 67108864 | 0);
            this.words[i + shift] = w & 67108863;
        }
        for(; i < this.length - shift; i++){
            w = (this.words[i + shift] | 0) + carry;
            carry = w >> 26;
            this.words[i + shift] = w & 67108863;
        }
        if (carry === 0) return this.strip();
        // Subtraction overflow
        assert(carry === -1);
        carry = 0;
        for(i = 0; i < this.length; i++){
            w = -(this.words[i] | 0) + carry;
            carry = w >> 26;
            this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this.strip();
    };
    BN.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        // Normalize
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
            b = b.ushln(shift);
            a.iushln(shift);
            bhi = b.words[b.length - 1] | 0;
        }
        // Initialize quotient
        var m = a.length - b.length;
        var q;
        if (mode !== 'mod') {
            q = new BN(null);
            q.length = m + 1;
            q.words = new Array(q.length);
            for(var i = 0; i < q.length; i++)q.words[i] = 0;
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
            a = diff;
            if (q) q.words[m] = 1;
        }
        for(var j = m - 1; j >= 0; j--){
            var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
            // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
            // (0x7ffffff)
            qj = Math.min(qj / bhi | 0, 67108863);
            a._ishlnsubmul(b, qj, j);
            while(a.negative !== 0){
                qj--;
                a.negative = 0;
                a._ishlnsubmul(b, 1, j);
                if (!a.isZero()) a.negative ^= 1;
            }
            if (q) q.words[j] = qj;
        }
        if (q) q.strip();
        a.strip();
        // Denormalize
        if (mode !== 'div' && shift !== 0) a.iushrn(shift);
        return {
            div: q || null,
            mod: a
        };
    };
    // NOTE: 1) `mode` can be set to `mod` to request mod only,
    //       to `div` to request div only, or be absent to
    //       request both div & mod
    //       2) `positive` is true if unsigned mod is requested
    BN.prototype.divmod = function divmod(num, mode, positive) {
        assert(!num.isZero());
        if (this.isZero()) return {
            div: new BN(0),
            mod: new BN(0)
        };
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
            res = this.neg().divmod(num, mode);
            if (mode !== 'mod') div = res.div.neg();
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) mod.iadd(num);
            }
            return {
                div: div,
                mod: mod
            };
        }
        if (this.negative === 0 && num.negative !== 0) {
            res = this.divmod(num.neg(), mode);
            if (mode !== 'mod') div = res.div.neg();
            return {
                div: div,
                mod: res.mod
            };
        }
        if ((this.negative & num.negative) !== 0) {
            res = this.neg().divmod(num.neg(), mode);
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) mod.isub(num);
            }
            return {
                div: res.div,
                mod: mod
            };
        }
        // Both numbers are positive at this point
        // Strip both numbers to approximate shift value
        if (num.length > this.length || this.cmp(num) < 0) return {
            div: new BN(0),
            mod: this
        };
        // Very short reduction
        if (num.length === 1) {
            if (mode === 'div') return {
                div: this.divn(num.words[0]),
                mod: null
            };
            if (mode === 'mod') return {
                div: null,
                mod: new BN(this.modn(num.words[0]))
            };
            return {
                div: this.divn(num.words[0]),
                mod: new BN(this.modn(num.words[0]))
            };
        }
        return this._wordDiv(num, mode);
    };
    // Find `this` / `num`
    BN.prototype.div = function div(num) {
        return this.divmod(num, 'div', false).div;
    };
    // Find `this` % `num`
    BN.prototype.mod = function mod(num) {
        return this.divmod(num, 'mod', false).mod;
    };
    BN.prototype.umod = function umod(num) {
        return this.divmod(num, 'mod', true).mod;
    };
    // Find Round(`this` / `num`)
    BN.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        // Fast case - exact division
        if (dm.mod.isZero()) return dm.div;
        var mod1 = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod1.cmp(half);
        // Round down
        if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;
        // Round up
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
    };
    BN.prototype.modn = function modn(num) {
        assert(num <= 67108863);
        var p = 67108864 % num;
        var acc = 0;
        for(var i = this.length - 1; i >= 0; i--)acc = (p * acc + (this.words[i] | 0)) % num;
        return acc;
    };
    // In-place division by number
    BN.prototype.idivn = function idivn(num) {
        assert(num <= 67108863);
        var carry = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var w = (this.words[i] | 0) + carry * 67108864;
            this.words[i] = w / num | 0;
            carry = w % num;
        }
        return this.strip();
    };
    BN.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
    };
    BN.prototype.egcd = function egcd(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) x = x.umod(p);
        else x = x.clone();
        // A * x + B * y = x
        var A = new BN(1);
        var B = new BN(0);
        // C * x + D * y = y
        var C = new BN(0);
        var D = new BN(1);
        var g = 0;
        while(x.isEven() && y.isEven()){
            x.iushrn(1);
            y.iushrn(1);
            ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while(!x.isZero()){
            for(var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                x.iushrn(i);
                while((i--) > 0){
                    if (A.isOdd() || B.isOdd()) {
                        A.iadd(yp);
                        B.isub(xp);
                    }
                    A.iushrn(1);
                    B.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                y.iushrn(j);
                while((j--) > 0){
                    if (C.isOdd() || D.isOdd()) {
                        C.iadd(yp);
                        D.isub(xp);
                    }
                    C.iushrn(1);
                    D.iushrn(1);
                }
            }
            if (x.cmp(y) >= 0) {
                x.isub(y);
                A.isub(C);
                B.isub(D);
            } else {
                y.isub(x);
                C.isub(A);
                D.isub(B);
            }
        }
        return {
            a: C,
            b: D,
            gcd: y.iushln(g)
        };
    };
    // This is reduced incarnation of the binary EEA
    // above, designated to invert members of the
    // _prime_ fields F(p) at a maximal speed
    BN.prototype._invmp = function _invmp(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) a = a.umod(p);
        else a = a.clone();
        var x1 = new BN(1);
        var x2 = new BN(0);
        var delta = b.clone();
        while(a.cmpn(1) > 0 && b.cmpn(1) > 0){
            for(var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                a.iushrn(i);
                while((i--) > 0){
                    if (x1.isOdd()) x1.iadd(delta);
                    x1.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                b.iushrn(j);
                while((j--) > 0){
                    if (x2.isOdd()) x2.iadd(delta);
                    x2.iushrn(1);
                }
            }
            if (a.cmp(b) >= 0) {
                a.isub(b);
                x1.isub(x2);
            } else {
                b.isub(a);
                x2.isub(x1);
            }
        }
        var res;
        if (a.cmpn(1) === 0) res = x1;
        else res = x2;
        if (res.cmpn(0) < 0) res.iadd(p);
        return res;
    };
    BN.prototype.gcd = function gcd(num) {
        if (this.isZero()) return num.abs();
        if (num.isZero()) return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        // Remove common factor of two
        for(var shift = 0; a.isEven() && b.isEven(); shift++){
            a.iushrn(1);
            b.iushrn(1);
        }
        do {
            while(a.isEven())a.iushrn(1);
            while(b.isEven())b.iushrn(1);
            var r = a.cmp(b);
            if (r < 0) {
                // Swap `a` and `b` to make `a` always bigger than `b`
                var t = a;
                a = b;
                b = t;
            } else if (r === 0 || b.cmpn(1) === 0) break;
            a.isub(b);
        }while (true)
        return b.iushln(shift);
    };
    // Invert number in the field F(num)
    BN.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
    };
    BN.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
    };
    BN.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
    };
    // And first word and num
    BN.prototype.andln = function andln(num) {
        return this.words[0] & num;
    };
    // Increment at the bit position in-line
    BN.prototype.bincn = function bincn(bit) {
        assert(typeof bit === 'number');
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) {
            this._expand(s + 1);
            this.words[s] |= q;
            return this;
        }
        // Add bit and propagate, if needed
        var carry = q;
        for(var i = s; carry !== 0 && i < this.length; i++){
            var w = this.words[i] | 0;
            w += carry;
            carry = w >>> 26;
            w &= 67108863;
            this.words[i] = w;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return this;
    };
    BN.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
    };
    BN.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative) return -1;
        if (this.negative === 0 && negative) return 1;
        this.strip();
        var res;
        if (this.length > 1) res = 1;
        else {
            if (negative) num = -num;
            assert(num <= 67108863, 'Number is too big');
            var w = this.words[0] | 0;
            res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Compare two numbers and return:
    // 1 - if `this` > `num`
    // 0 - if `this` == `num`
    // -1 - if `this` < `num`
    BN.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0) return -1;
        if (this.negative === 0 && num.negative !== 0) return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Unsigned comparison
    BN.prototype.ucmp = function ucmp(num) {
        // At this point both numbers have the same sign
        if (this.length > num.length) return 1;
        if (this.length < num.length) return -1;
        var res = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var a = this.words[i] | 0;
            var b = num.words[i] | 0;
            if (a === b) continue;
            if (a < b) res = -1;
            else if (a > b) res = 1;
            break;
        }
        return res;
    };
    BN.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
    };
    BN.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
    };
    BN.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
    };
    BN.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
    };
    BN.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
    };
    BN.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
    };
    BN.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
    };
    BN.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
    };
    BN.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
    };
    BN.prototype.eq = function eq(num) {
        return this.cmp(num) === 0;
    };
    //
    // A reduce context, could be using montgomery or something better, depending
    // on the `m` itself.
    //
    BN.red = function red(num) {
        return new Red(num);
    };
    BN.prototype.toRed = function toRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        assert(this.negative === 0, 'red works only with positives');
        return ctx.convertTo(this)._forceRed(ctx);
    };
    BN.prototype.fromRed = function fromRed() {
        assert(this.red, 'fromRed works only with numbers in reduction context');
        return this.red.convertFrom(this);
    };
    BN.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
    };
    BN.prototype.forceRed = function forceRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        return this._forceRed(ctx);
    };
    BN.prototype.redAdd = function redAdd(num) {
        assert(this.red, 'redAdd works only with red numbers');
        return this.red.add(this, num);
    };
    BN.prototype.redIAdd = function redIAdd(num) {
        assert(this.red, 'redIAdd works only with red numbers');
        return this.red.iadd(this, num);
    };
    BN.prototype.redSub = function redSub(num) {
        assert(this.red, 'redSub works only with red numbers');
        return this.red.sub(this, num);
    };
    BN.prototype.redISub = function redISub(num) {
        assert(this.red, 'redISub works only with red numbers');
        return this.red.isub(this, num);
    };
    BN.prototype.redShl = function redShl(num) {
        assert(this.red, 'redShl works only with red numbers');
        return this.red.shl(this, num);
    };
    BN.prototype.redMul = function redMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.mul(this, num);
    };
    BN.prototype.redIMul = function redIMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.imul(this, num);
    };
    BN.prototype.redSqr = function redSqr() {
        assert(this.red, 'redSqr works only with red numbers');
        this.red._verify1(this);
        return this.red.sqr(this);
    };
    BN.prototype.redISqr = function redISqr() {
        assert(this.red, 'redISqr works only with red numbers');
        this.red._verify1(this);
        return this.red.isqr(this);
    };
    // Square root over p
    BN.prototype.redSqrt = function redSqrt() {
        assert(this.red, 'redSqrt works only with red numbers');
        this.red._verify1(this);
        return this.red.sqrt(this);
    };
    BN.prototype.redInvm = function redInvm() {
        assert(this.red, 'redInvm works only with red numbers');
        this.red._verify1(this);
        return this.red.invm(this);
    };
    // Return negative clone of `this` % `red modulo`
    BN.prototype.redNeg = function redNeg() {
        assert(this.red, 'redNeg works only with red numbers');
        this.red._verify1(this);
        return this.red.neg(this);
    };
    BN.prototype.redPow = function redPow(num) {
        assert(this.red && !num.red, 'redPow(normalNum)');
        this.red._verify1(this);
        return this.red.pow(this, num);
    };
    // Prime numbers with efficient reduction
    var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
    };
    // Pseudo-Mersenne prime
    function MPrime(name, p) {
        // P = 2 ^ N - K
        this.name = name;
        this.p = new BN(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
    }
    MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
    };
    MPrime.prototype.ireduce = function ireduce(num) {
        // Assumes that `num` is less than `P^2`
        // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
        var r = num;
        var rlen;
        do {
            this.split(r, this.tmp);
            r = this.imulK(r);
            r = r.iadd(this.tmp);
            rlen = r.bitLength();
        }while (rlen > this.n)
        var cmp1 = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp1 === 0) {
            r.words[0] = 0;
            r.length = 1;
        } else if (cmp1 > 0) r.isub(this.p);
        else if (r.strip !== undefined) // r is BN v4 instance
        r.strip();
        else // r is BN v5 instance
        r._strip();
        return r;
    };
    MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
    };
    MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
    };
    function K256() {
        MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
    }
    inherits(K256, MPrime);
    K256.prototype.split = function split1(input, output) {
        // 256 = 9 * 26 + 22
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for(var i = 0; i < outLen; i++)output.words[i] = input.words[i];
        output.length = outLen;
        if (input.length <= 9) {
            input.words[0] = 0;
            input.length = 1;
            return;
        }
        // Shift by 9 limbs
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for(i = 10; i < input.length; i++){
            var next = input.words[i] | 0;
            input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
            prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) input.length -= 10;
        else input.length -= 9;
    };
    K256.prototype.imulK = function imulK1(num) {
        // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
        var lo = 0;
        for(var i = 0; i < num.length; i++){
            var w = num.words[i] | 0;
            lo += w * 977;
            num.words[i] = lo & 67108863;
            lo = w * 64 + (lo / 67108864 | 0);
        }
        // Fast length reduction
        if (num.words[num.length - 1] === 0) {
            num.length--;
            if (num.words[num.length - 1] === 0) num.length--;
        }
        return num;
    };
    function P224() {
        MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
    }
    inherits(P224, MPrime);
    function P192() {
        MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
    }
    inherits(P192, MPrime);
    function P25519() {
        // 2 ^ 255 - 19
        MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
    }
    inherits(P25519, MPrime);
    P25519.prototype.imulK = function imulK2(num) {
        // K = 0x13
        var carry = 0;
        for(var i = 0; i < num.length; i++){
            var hi = (num.words[i] | 0) * 19 + carry;
            var lo = hi & 67108863;
            hi >>>= 26;
            num.words[i] = lo;
            carry = hi;
        }
        if (carry !== 0) num.words[num.length++] = carry;
        return num;
    };
    // Exported mostly for testing purposes, use plain name instead
    BN._prime = function prime(name) {
        // Cached version of prime
        if (primes[name]) return primes[name];
        var prime;
        if (name === 'k256') prime = new K256();
        else if (name === 'p224') prime = new P224();
        else if (name === 'p192') prime = new P192();
        else if (name === 'p25519') prime = new P25519();
        else throw new Error('Unknown prime ' + name);
        primes[name] = prime;
        return prime;
    };
    //
    // Base reduction engine
    //
    function Red(m) {
        if (typeof m === 'string') {
            var prime1 = BN._prime(m);
            this.m = prime1.p;
            this.prime = prime1;
        } else {
            assert(m.gtn(1), 'modulus must be greater than 1');
            this.m = m;
            this.prime = null;
        }
    }
    Red.prototype._verify1 = function _verify1(a) {
        assert(a.negative === 0, 'red works only with positives');
        assert(a.red, 'red works only with red numbers');
    };
    Red.prototype._verify2 = function _verify2(a, b) {
        assert((a.negative | b.negative) === 0, 'red works only with positives');
        assert(a.red && a.red === b.red, 'red works only with red numbers');
    };
    Red.prototype.imod = function imod(a) {
        if (this.prime) return this.prime.ireduce(a)._forceRed(this);
        return a.umod(this.m)._forceRed(this);
    };
    Red.prototype.neg = function neg1(a) {
        if (a.isZero()) return a.clone();
        return this.m.sub(a)._forceRed(this);
    };
    Red.prototype.add = function add1(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) res.isub(this.m);
        return res._forceRed(this);
    };
    Red.prototype.iadd = function iadd1(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) res.isub(this.m);
        return res;
    };
    Red.prototype.sub = function sub1(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) res.iadd(this.m);
        return res._forceRed(this);
    };
    Red.prototype.isub = function isub1(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) res.iadd(this.m);
        return res;
    };
    Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
    };
    Red.prototype.imul = function imul1(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
    };
    Red.prototype.mul = function mul1(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
    };
    Red.prototype.isqr = function isqr1(a) {
        return this.imul(a, a.clone());
    };
    Red.prototype.sqr = function sqr1(a) {
        return this.mul(a, a);
    };
    Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero()) return a.clone();
        var mod3 = this.m.andln(3);
        assert(mod3 % 2 === 1);
        // Fast case
        if (mod3 === 3) {
            var pow1 = this.m.add(new BN(1)).iushrn(2);
            return this.pow(a, pow1);
        }
        // Tonelli-Shanks algorithm (Totally unoptimized and slow)
        //
        // Find Q and S, that Q * 2 ^ S = (P - 1)
        var q = this.m.subn(1);
        var s = 0;
        while(!q.isZero() && q.andln(1) === 0){
            s++;
            q.iushrn(1);
        }
        assert(!q.isZero());
        var one = new BN(1).toRed(this);
        var nOne = one.redNeg();
        // Find quadratic non-residue
        // NOTE: Max is such because of generalized Riemann hypothesis.
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN(2 * z * z).toRed(this);
        while(this.pow(z, lpow).cmp(nOne) !== 0)z.redIAdd(nOne);
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while(t.cmp(one) !== 0){
            var tmp = t;
            for(var i = 0; tmp.cmp(one) !== 0; i++)tmp = tmp.redSqr();
            assert(i < m);
            var b = this.pow(c, new BN(1).iushln(m - i - 1));
            r = r.redMul(b);
            c = b.redSqr();
            t = t.redMul(c);
            m = i;
        }
        return r;
    };
    Red.prototype.invm = function invm1(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
            inv.negative = 0;
            return this.imod(inv).redNeg();
        } else return this.imod(inv);
    };
    Red.prototype.pow = function pow2(a, num) {
        if (num.isZero()) return new BN(1).toRed(this);
        if (num.cmpn(1) === 0) return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN(1).toRed(this);
        wnd[1] = a;
        for(var i = 2; i < wnd.length; i++)wnd[i] = this.mul(wnd[i - 1], a);
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) start = 26;
        for(i = num.length - 1; i >= 0; i--){
            var word = num.words[i];
            for(var j = start - 1; j >= 0; j--){
                var bit = word >> j & 1;
                if (res !== wnd[0]) res = this.sqr(res);
                if (bit === 0 && current === 0) {
                    currentLen = 0;
                    continue;
                }
                current <<= 1;
                current |= bit;
                currentLen++;
                if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;
                res = this.mul(res, wnd[current]);
                currentLen = 0;
                current = 0;
            }
            start = 26;
        }
        return res;
    };
    Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
    };
    Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
    };
    //
    // Montgomery method engine
    //
    BN.mont = function mont(num) {
        return new Mont(num);
    };
    function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) this.shift += 26 - this.shift % 26;
        this.r = new BN(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
    }
    inherits(Mont, Red);
    Mont.prototype.convertTo = function convertTo1(num) {
        return this.imod(num.ushln(this.shift));
    };
    Mont.prototype.convertFrom = function convertFrom1(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
    };
    Mont.prototype.imul = function imul2(a, b) {
        if (a.isZero() || b.isZero()) {
            a.words[0] = 0;
            a.length = 1;
            return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) res = u.isub(this.m);
        else if (u.cmpn(0) < 0) res = u.iadd(this.m);
        return res._forceRed(this);
    };
    Mont.prototype.mul = function mul2(a, b) {
        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) res = u.isub(this.m);
        else if (u.cmpn(0) < 0) res = u.iadd(this.m);
        return res._forceRed(this);
    };
    Mont.prototype.invm = function invm2(a) {
        // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
    };
})(typeof module === 'undefined' || module, this);

},{"buffer":"4LM6B"}],"4XYD1":[function(require,module,exports) {
'use strict';
var utils = exports;
function toArray(msg, enc) {
    if (Array.isArray(msg)) return msg.slice();
    if (!msg) return [];
    var res = [];
    if (typeof msg !== 'string') {
        for(var i = 0; i < msg.length; i++)res[i] = msg[i] | 0;
        return res;
    }
    if (enc === 'hex') {
        msg = msg.replace(/[^a-z0-9]+/ig, '');
        if (msg.length % 2 !== 0) msg = '0' + msg;
        for(var i = 0; i < msg.length; i += 2)res.push(parseInt(msg[i] + msg[i + 1], 16));
    } else for(var i = 0; i < msg.length; i++){
        var c = msg.charCodeAt(i);
        var hi = c >> 8;
        var lo = c & 255;
        if (hi) res.push(hi, lo);
        else res.push(lo);
    }
    return res;
}
utils.toArray = toArray;
function zero2(word) {
    if (word.length === 1) return '0' + word;
    else return word;
}
utils.zero2 = zero2;
function toHex(msg) {
    var res = '';
    for(var i = 0; i < msg.length; i++)res += zero2(msg[i].toString(16));
    return res;
}
utils.toHex = toHex;
utils.encode = function encode(arr, enc) {
    if (enc === 'hex') return toHex(arr);
    else return arr;
};

},{}],"2UW9u":[function(require,module,exports) {
'use strict';
var curve = exports;
curve.base = require('./base');
curve.short = require('./short');
curve.mont = require('./mont');
curve.edwards = require('./edwards');

},{"./base":"h8oNl","./short":"8ikNm","./mont":"j29N4","./edwards":"3GR9X"}],"h8oNl":[function(require,module,exports) {
'use strict';
var BN = require('bn.js');
var utils = require('../utils');
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;
function BaseCurve(type, conf) {
    this.type = type;
    this.p = new BN(conf.p, 16);
    // Use Montgomery, when there is no fast reduction for the prime
    this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);
    // Useful for many curves
    this.zero = new BN(0).toRed(this.red);
    this.one = new BN(1).toRed(this.red);
    this.two = new BN(2).toRed(this.red);
    // Curve configuration, optional
    this.n = conf.n && new BN(conf.n, 16);
    this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);
    // Temporary arrays
    this._wnafT1 = new Array(4);
    this._wnafT2 = new Array(4);
    this._wnafT3 = new Array(4);
    this._wnafT4 = new Array(4);
    this._bitLength = this.n ? this.n.bitLength() : 0;
    // Generalized Greg Maxwell's trick
    var adjustCount = this.n && this.p.div(this.n);
    if (!adjustCount || adjustCount.cmpn(100) > 0) this.redN = null;
    else {
        this._maxwellTrick = true;
        this.redN = this.n.toRed(this.red);
    }
}
module.exports = BaseCurve;
BaseCurve.prototype.point = function point() {
    throw new Error('Not implemented');
};
BaseCurve.prototype.validate = function validate() {
    throw new Error('Not implemented');
};
BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
    assert(p.precomputed);
    var doubles = p._getDoubles();
    var naf = getNAF(k, 1, this._bitLength);
    var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);
    I /= 3;
    // Translate into more windowed form
    var repr = [];
    var j;
    var nafW;
    for(j = 0; j < naf.length; j += doubles.step){
        nafW = 0;
        for(var l = j + doubles.step - 1; l >= j; l--)nafW = (nafW << 1) + naf[l];
        repr.push(nafW);
    }
    var a = this.jpoint(null, null, null);
    var b = this.jpoint(null, null, null);
    for(var i = I; i > 0; i--){
        for(j = 0; j < repr.length; j++){
            nafW = repr[j];
            if (nafW === i) b = b.mixedAdd(doubles.points[j]);
            else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());
        }
        a = a.add(b);
    }
    return a.toP();
};
BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
    var w = 4;
    // Precompute window
    var nafPoints = p._getNAFPoints(w);
    w = nafPoints.wnd;
    var wnd = nafPoints.points;
    // Get NAF form
    var naf = getNAF(k, w, this._bitLength);
    // Add `this`*(N+1) for every w-NAF index
    var acc = this.jpoint(null, null, null);
    for(var i = naf.length - 1; i >= 0; i--){
        // Count zeroes
        for(var l = 0; i >= 0 && naf[i] === 0; i--)l++;
        if (i >= 0) l++;
        acc = acc.dblp(l);
        if (i < 0) break;
        var z = naf[i];
        assert(z !== 0);
        if (p.type === 'affine') {
            // J +- P
            if (z > 0) acc = acc.mixedAdd(wnd[z - 1 >> 1]);
            else acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());
        } else // J +- J
        if (z > 0) acc = acc.add(wnd[z - 1 >> 1]);
        else acc = acc.add(wnd[-z - 1 >> 1].neg());
    }
    return p.type === 'affine' ? acc.toP() : acc;
};
BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {
    var wndWidth = this._wnafT1;
    var wnd = this._wnafT2;
    var naf = this._wnafT3;
    // Fill all arrays
    var max = 0;
    var i;
    var j;
    var p;
    for(i = 0; i < len; i++){
        p = points[i];
        var nafPoints = p._getNAFPoints(defW);
        wndWidth[i] = nafPoints.wnd;
        wnd[i] = nafPoints.points;
    }
    // Comb small window NAFs
    for(i = len - 1; i >= 1; i -= 2){
        var a = i - 1;
        var b = i;
        if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
            naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
            naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
            max = Math.max(naf[a].length, max);
            max = Math.max(naf[b].length, max);
            continue;
        }
        var comb = [
            points[a],
            /* 1 */ null,
            /* 3 */ null,
            /* 5 */ points[b]
        ];
        // Try to avoid Projective points, if possible
        if (points[a].y.cmp(points[b].y) === 0) {
            comb[1] = points[a].add(points[b]);
            comb[2] = points[a].toJ().mixedAdd(points[b].neg());
        } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
            comb[1] = points[a].toJ().mixedAdd(points[b]);
            comb[2] = points[a].add(points[b].neg());
        } else {
            comb[1] = points[a].toJ().mixedAdd(points[b]);
            comb[2] = points[a].toJ().mixedAdd(points[b].neg());
        }
        var index = [
            -3,
            /* -1 -1 */ -1,
            /* -1 0 */ -5,
            /* -1 1 */ -7,
            /* 0 -1 */ 0,
            /* 0 0 */ 7,
            /* 0 1 */ 5,
            /* 1 -1 */ 1,
            /* 1 0 */ 3
        ];
        var jsf = getJSF(coeffs[a], coeffs[b]);
        max = Math.max(jsf[0].length, max);
        naf[a] = new Array(max);
        naf[b] = new Array(max);
        for(j = 0; j < max; j++){
            var ja = jsf[0][j] | 0;
            var jb = jsf[1][j] | 0;
            naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
            naf[b][j] = 0;
            wnd[a] = comb;
        }
    }
    var acc = this.jpoint(null, null, null);
    var tmp = this._wnafT4;
    for(i = max; i >= 0; i--){
        var k = 0;
        while(i >= 0){
            var zero = true;
            for(j = 0; j < len; j++){
                tmp[j] = naf[j][i] | 0;
                if (tmp[j] !== 0) zero = false;
            }
            if (!zero) break;
            k++;
            i--;
        }
        if (i >= 0) k++;
        acc = acc.dblp(k);
        if (i < 0) break;
        for(j = 0; j < len; j++){
            var z = tmp[j];
            if (z === 0) continue;
            else if (z > 0) p = wnd[j][z - 1 >> 1];
            else if (z < 0) p = wnd[j][-z - 1 >> 1].neg();
            if (p.type === 'affine') acc = acc.mixedAdd(p);
            else acc = acc.add(p);
        }
    }
    // Zeroify references
    for(i = 0; i < len; i++)wnd[i] = null;
    if (jacobianResult) return acc;
    else return acc.toP();
};
function BasePoint(curve, type) {
    this.curve = curve;
    this.type = type;
    this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;
BasePoint.prototype.eq = function eq() {
    throw new Error('Not implemented');
};
BasePoint.prototype.validate = function validate1() {
    return this.curve.validate(this);
};
BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
    bytes = utils.toArray(bytes, enc);
    var len = this.p.byteLength();
    // uncompressed, hybrid-odd, hybrid-even
    if ((bytes[0] === 4 || bytes[0] === 6 || bytes[0] === 7) && bytes.length - 1 === 2 * len) {
        if (bytes[0] === 6) assert(bytes[bytes.length - 1] % 2 === 0);
        else if (bytes[0] === 7) assert(bytes[bytes.length - 1] % 2 === 1);
        var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));
        return res;
    } else if ((bytes[0] === 2 || bytes[0] === 3) && bytes.length - 1 === len) return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 3);
    throw new Error('Unknown point format');
};
BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
    return this.encode(enc, true);
};
BasePoint.prototype._encode = function _encode(compact) {
    var len = this.curve.p.byteLength();
    var x = this.getX().toArray('be', len);
    if (compact) return [
        this.getY().isEven() ? 2 : 3
    ].concat(x);
    return [
        4
    ].concat(x, this.getY().toArray('be', len));
};
BasePoint.prototype.encode = function encode(enc, compact) {
    return utils.encode(this._encode(compact), enc);
};
BasePoint.prototype.precompute = function precompute(power) {
    if (this.precomputed) return this;
    var precomputed = {
        doubles: null,
        naf: null,
        beta: null
    };
    precomputed.naf = this._getNAFPoints(8);
    precomputed.doubles = this._getDoubles(4, power);
    precomputed.beta = this._getBeta();
    this.precomputed = precomputed;
    return this;
};
BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
    if (!this.precomputed) return false;
    var doubles = this.precomputed.doubles;
    if (!doubles) return false;
    return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};
BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
    if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
    var doubles = [
        this
    ];
    var acc = this;
    for(var i = 0; i < power; i += step){
        for(var j = 0; j < step; j++)acc = acc.dbl();
        doubles.push(acc);
    }
    return {
        step: step,
        points: doubles
    };
};
BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
    if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
    var res = [
        this
    ];
    var max = (1 << wnd) - 1;
    var dbl = max === 1 ? null : this.dbl();
    for(var i = 1; i < max; i++)res[i] = res[i - 1].add(dbl);
    return {
        wnd: wnd,
        points: res
    };
};
BasePoint.prototype._getBeta = function _getBeta() {
    return null;
};
BasePoint.prototype.dblp = function dblp(k) {
    var r = this;
    for(var i = 0; i < k; i++)r = r.dbl();
    return r;
};

},{"bn.js":"8lUpb","../utils":"3rv6w"}],"8ikNm":[function(require,module,exports) {
'use strict';
var utils = require('../utils');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = require('./base');
var assert = utils.assert;
function ShortCurve(conf) {
    Base.call(this, 'short', conf);
    this.a = new BN(conf.a, 16).toRed(this.red);
    this.b = new BN(conf.b, 16).toRed(this.red);
    this.tinv = this.two.redInvm();
    this.zeroA = this.a.fromRed().cmpn(0) === 0;
    this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;
    // If the curve is endomorphic, precalculate beta and lambda
    this.endo = this._getEndomorphism(conf);
    this._endoWnafT1 = new Array(4);
    this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;
ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
    // No efficient endomorphism
    if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return;
    // Compute beta and lambda, that lambda * P = (beta * Px; Py)
    var beta;
    var lambda;
    if (conf.beta) beta = new BN(conf.beta, 16).toRed(this.red);
    else {
        var betas = this._getEndoRoots(this.p);
        // Choose the smallest beta
        beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
        beta = beta.toRed(this.red);
    }
    if (conf.lambda) lambda = new BN(conf.lambda, 16);
    else {
        // Choose the lambda that is matching selected beta
        var lambdas = this._getEndoRoots(this.n);
        if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) lambda = lambdas[0];
        else {
            lambda = lambdas[1];
            assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
        }
    }
    // Get basis vectors, used for balanced length-two representation
    var basis;
    if (conf.basis) basis = conf.basis.map(function(vec) {
        return {
            a: new BN(vec.a, 16),
            b: new BN(vec.b, 16)
        };
    });
    else basis = this._getEndoBasis(lambda);
    return {
        beta: beta,
        lambda: lambda,
        basis: basis
    };
};
ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
    // Find roots of for x^2 + x + 1 in F
    // Root = (-1 +- Sqrt(-3)) / 2
    //
    var red = num === this.p ? this.red : BN.mont(num);
    var tinv = new BN(2).toRed(red).redInvm();
    var ntinv = tinv.redNeg();
    var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);
    var l1 = ntinv.redAdd(s).fromRed();
    var l2 = ntinv.redSub(s).fromRed();
    return [
        l1,
        l2
    ];
};
ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
    // aprxSqrt >= sqrt(this.n)
    var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));
    // 3.74
    // Run EGCD, until r(L + 1) < aprxSqrt
    var u = lambda;
    var v = this.n.clone();
    var x1 = new BN(1);
    var y1 = new BN(0);
    var x2 = new BN(0);
    var y2 = new BN(1);
    // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
    var a0;
    var b0;
    // First vector
    var a1;
    var b1;
    // Second vector
    var a2;
    var b2;
    var prevR;
    var i = 0;
    var r;
    var x;
    while(u.cmpn(0) !== 0){
        var q = v.div(u);
        r = v.sub(q.mul(u));
        x = x2.sub(q.mul(x1));
        var y = y2.sub(q.mul(y1));
        if (!a1 && r.cmp(aprxSqrt) < 0) {
            a0 = prevR.neg();
            b0 = x1;
            a1 = r.neg();
            b1 = x;
        } else if (a1 && (++i) === 2) break;
        prevR = r;
        v = u;
        u = r;
        x2 = x1;
        x1 = x;
        y2 = y1;
        y1 = y;
    }
    a2 = r.neg();
    b2 = x;
    var len1 = a1.sqr().add(b1.sqr());
    var len2 = a2.sqr().add(b2.sqr());
    if (len2.cmp(len1) >= 0) {
        a2 = a0;
        b2 = b0;
    }
    // Normalize signs
    if (a1.negative) {
        a1 = a1.neg();
        b1 = b1.neg();
    }
    if (a2.negative) {
        a2 = a2.neg();
        b2 = b2.neg();
    }
    return [
        {
            a: a1,
            b: b1
        },
        {
            a: a2,
            b: b2
        }, 
    ];
};
ShortCurve.prototype._endoSplit = function _endoSplit(k) {
    var basis = this.endo.basis;
    var v1 = basis[0];
    var v2 = basis[1];
    var c1 = v2.b.mul(k).divRound(this.n);
    var c2 = v1.b.neg().mul(k).divRound(this.n);
    var p1 = c1.mul(v1.a);
    var p2 = c2.mul(v2.a);
    var q1 = c1.mul(v1.b);
    var q2 = c2.mul(v2.b);
    // Calculate answer
    var k1 = k.sub(p1).sub(p2);
    var k2 = q1.add(q2).neg();
    return {
        k1: k1,
        k2: k2
    };
};
ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
    x = new BN(x, 16);
    if (!x.red) x = x.toRed(this.red);
    var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
    var y = y2.redSqrt();
    if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point');
    // XXX Is there any way to tell if the number is odd without converting it
    // to non-red form?
    var isOdd = y.fromRed().isOdd();
    if (odd && !isOdd || !odd && isOdd) y = y.redNeg();
    return this.point(x, y);
};
ShortCurve.prototype.validate = function validate(point) {
    if (point.inf) return true;
    var x = point.x;
    var y = point.y;
    var ax = this.a.redMul(x);
    var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
    return y.redSqr().redISub(rhs).cmpn(0) === 0;
};
ShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {
    var npoints = this._endoWnafT1;
    var ncoeffs = this._endoWnafT2;
    for(var i = 0; i < points.length; i++){
        var split = this._endoSplit(coeffs[i]);
        var p = points[i];
        var beta = p._getBeta();
        if (split.k1.negative) {
            split.k1.ineg();
            p = p.neg(true);
        }
        if (split.k2.negative) {
            split.k2.ineg();
            beta = beta.neg(true);
        }
        npoints[i * 2] = p;
        npoints[i * 2 + 1] = beta;
        ncoeffs[i * 2] = split.k1;
        ncoeffs[i * 2 + 1] = split.k2;
    }
    var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);
    // Clean-up references to points and coefficients
    for(var j = 0; j < i * 2; j++){
        npoints[j] = null;
        ncoeffs[j] = null;
    }
    return res;
};
function Point(curve, x, y, isRed) {
    Base.BasePoint.call(this, curve, 'affine');
    if (x === null && y === null) {
        this.x = null;
        this.y = null;
        this.inf = true;
    } else {
        this.x = new BN(x, 16);
        this.y = new BN(y, 16);
        // Force redgomery representation when loading from JSON
        if (isRed) {
            this.x.forceRed(this.curve.red);
            this.y.forceRed(this.curve.red);
        }
        if (!this.x.red) this.x = this.x.toRed(this.curve.red);
        if (!this.y.red) this.y = this.y.toRed(this.curve.red);
        this.inf = false;
    }
}
inherits(Point, Base.BasePoint);
ShortCurve.prototype.point = function point(x, y, isRed) {
    return new Point(this, x, y, isRed);
};
ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
    return Point.fromJSON(this, obj, red);
};
Point.prototype._getBeta = function _getBeta() {
    if (!this.curve.endo) return;
    var pre = this.precomputed;
    if (pre && pre.beta) return pre.beta;
    var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
    if (pre) {
        var curve = this.curve;
        var endoMul = function(p) {
            return curve.point(p.x.redMul(curve.endo.beta), p.y);
        };
        pre.beta = beta;
        beta.precomputed = {
            beta: null,
            naf: pre.naf && {
                wnd: pre.naf.wnd,
                points: pre.naf.points.map(endoMul)
            },
            doubles: pre.doubles && {
                step: pre.doubles.step,
                points: pre.doubles.points.map(endoMul)
            }
        };
    }
    return beta;
};
Point.prototype.toJSON = function toJSON() {
    if (!this.precomputed) return [
        this.x,
        this.y
    ];
    return [
        this.x,
        this.y,
        this.precomputed && {
            doubles: this.precomputed.doubles && {
                step: this.precomputed.doubles.step,
                points: this.precomputed.doubles.points.slice(1)
            },
            naf: this.precomputed.naf && {
                wnd: this.precomputed.naf.wnd,
                points: this.precomputed.naf.points.slice(1)
            }
        }
    ];
};
Point.fromJSON = function fromJSON(curve, obj, red) {
    if (typeof obj === 'string') obj = JSON.parse(obj);
    var res = curve.point(obj[0], obj[1], red);
    if (!obj[2]) return res;
    function obj2point(obj1) {
        return curve.point(obj1[0], obj1[1], red);
    }
    var pre = obj[2];
    res.precomputed = {
        beta: null,
        doubles: pre.doubles && {
            step: pre.doubles.step,
            points: [
                res
            ].concat(pre.doubles.points.map(obj2point))
        },
        naf: pre.naf && {
            wnd: pre.naf.wnd,
            points: [
                res
            ].concat(pre.naf.points.map(obj2point))
        }
    };
    return res;
};
Point.prototype.inspect = function inspect() {
    if (this.isInfinity()) return '<EC Point Infinity>';
    return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};
Point.prototype.isInfinity = function isInfinity() {
    return this.inf;
};
Point.prototype.add = function add(p) {
    // O + P = P
    if (this.inf) return p;
    // P + O = P
    if (p.inf) return this;
    // P + P = 2P
    if (this.eq(p)) return this.dbl();
    // P + (-P) = O
    if (this.neg().eq(p)) return this.curve.point(null, null);
    // P + Q = O
    if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);
    var c = this.y.redSub(p.y);
    if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());
    var nx = c.redSqr().redISub(this.x).redISub(p.x);
    var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
    return this.curve.point(nx, ny);
};
Point.prototype.dbl = function dbl() {
    if (this.inf) return this;
    // 2P = O
    var ys1 = this.y.redAdd(this.y);
    if (ys1.cmpn(0) === 0) return this.curve.point(null, null);
    var a = this.curve.a;
    var x2 = this.x.redSqr();
    var dyinv = ys1.redInvm();
    var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);
    var nx = c.redSqr().redISub(this.x.redAdd(this.x));
    var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
    return this.curve.point(nx, ny);
};
Point.prototype.getX = function getX() {
    return this.x.fromRed();
};
Point.prototype.getY = function getY() {
    return this.y.fromRed();
};
Point.prototype.mul = function mul(k) {
    k = new BN(k, 16);
    if (this.isInfinity()) return this;
    else if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);
    else if (this.curve.endo) return this.curve._endoWnafMulAdd([
        this
    ], [
        k
    ]);
    else return this.curve._wnafMul(this, k);
};
Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
    var points = [
        this,
        p2
    ];
    var coeffs = [
        k1,
        k2
    ];
    if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs);
    else return this.curve._wnafMulAdd(1, points, coeffs, 2);
};
Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
    var points = [
        this,
        p2
    ];
    var coeffs = [
        k1,
        k2
    ];
    if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs, true);
    else return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};
Point.prototype.eq = function eq(p) {
    return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};
Point.prototype.neg = function neg(_precompute) {
    if (this.inf) return this;
    var res = this.curve.point(this.x, this.y.redNeg());
    if (_precompute && this.precomputed) {
        var pre = this.precomputed;
        var negate = function(p) {
            return p.neg();
        };
        res.precomputed = {
            naf: pre.naf && {
                wnd: pre.naf.wnd,
                points: pre.naf.points.map(negate)
            },
            doubles: pre.doubles && {
                step: pre.doubles.step,
                points: pre.doubles.points.map(negate)
            }
        };
    }
    return res;
};
Point.prototype.toJ = function toJ() {
    if (this.inf) return this.curve.jpoint(null, null, null);
    var res = this.curve.jpoint(this.x, this.y, this.curve.one);
    return res;
};
function JPoint(curve, x, y, z) {
    Base.BasePoint.call(this, curve, 'jacobian');
    if (x === null && y === null && z === null) {
        this.x = this.curve.one;
        this.y = this.curve.one;
        this.z = new BN(0);
    } else {
        this.x = new BN(x, 16);
        this.y = new BN(y, 16);
        this.z = new BN(z, 16);
    }
    if (!this.x.red) this.x = this.x.toRed(this.curve.red);
    if (!this.y.red) this.y = this.y.toRed(this.curve.red);
    if (!this.z.red) this.z = this.z.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);
ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
    return new JPoint(this, x, y, z);
};
JPoint.prototype.toP = function toP() {
    if (this.isInfinity()) return this.curve.point(null, null);
    var zinv = this.z.redInvm();
    var zinv2 = zinv.redSqr();
    var ax = this.x.redMul(zinv2);
    var ay = this.y.redMul(zinv2).redMul(zinv);
    return this.curve.point(ax, ay);
};
JPoint.prototype.neg = function neg1() {
    return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};
JPoint.prototype.add = function add1(p) {
    // O + P = P
    if (this.isInfinity()) return p;
    // P + O = P
    if (p.isInfinity()) return this;
    // 12M + 4S + 7A
    var pz2 = p.z.redSqr();
    var z2 = this.z.redSqr();
    var u1 = this.x.redMul(pz2);
    var u2 = p.x.redMul(z2);
    var s1 = this.y.redMul(pz2.redMul(p.z));
    var s2 = p.y.redMul(z2.redMul(this.z));
    var h = u1.redSub(u2);
    var r = s1.redSub(s2);
    if (h.cmpn(0) === 0) {
        if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);
        else return this.dbl();
    }
    var h2 = h.redSqr();
    var h3 = h2.redMul(h);
    var v = u1.redMul(h2);
    var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
    var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
    var nz = this.z.redMul(p.z).redMul(h);
    return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.mixedAdd = function mixedAdd(p) {
    // O + P = P
    if (this.isInfinity()) return p.toJ();
    // P + O = P
    if (p.isInfinity()) return this;
    // 8M + 3S + 7A
    var z2 = this.z.redSqr();
    var u1 = this.x;
    var u2 = p.x.redMul(z2);
    var s1 = this.y;
    var s2 = p.y.redMul(z2).redMul(this.z);
    var h = u1.redSub(u2);
    var r = s1.redSub(s2);
    if (h.cmpn(0) === 0) {
        if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);
        else return this.dbl();
    }
    var h2 = h.redSqr();
    var h3 = h2.redMul(h);
    var v = u1.redMul(h2);
    var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
    var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
    var nz = this.z.redMul(h);
    return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.dblp = function dblp(pow) {
    if (pow === 0) return this;
    if (this.isInfinity()) return this;
    if (!pow) return this.dbl();
    var i;
    if (this.curve.zeroA || this.curve.threeA) {
        var r = this;
        for(i = 0; i < pow; i++)r = r.dbl();
        return r;
    }
    // 1M + 2S + 1A + N * (4S + 5M + 8A)
    // N = 1 => 6M + 6S + 9A
    var a = this.curve.a;
    var tinv = this.curve.tinv;
    var jx = this.x;
    var jy = this.y;
    var jz = this.z;
    var jz4 = jz.redSqr().redSqr();
    // Reuse results
    var jyd = jy.redAdd(jy);
    for(i = 0; i < pow; i++){
        var jx2 = jx.redSqr();
        var jyd2 = jyd.redSqr();
        var jyd4 = jyd2.redSqr();
        var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
        var t1 = jx.redMul(jyd2);
        var nx = c.redSqr().redISub(t1.redAdd(t1));
        var t2 = t1.redISub(nx);
        var dny = c.redMul(t2);
        dny = dny.redIAdd(dny).redISub(jyd4);
        var nz = jyd.redMul(jz);
        if (i + 1 < pow) jz4 = jz4.redMul(jyd4);
        jx = nx;
        jz = nz;
        jyd = dny;
    }
    return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};
JPoint.prototype.dbl = function dbl1() {
    if (this.isInfinity()) return this;
    if (this.curve.zeroA) return this._zeroDbl();
    else if (this.curve.threeA) return this._threeDbl();
    else return this._dbl();
};
JPoint.prototype._zeroDbl = function _zeroDbl() {
    var nx;
    var ny;
    var nz;
    // Z = 1
    if (this.zOne) {
        // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
        //     #doubling-mdbl-2007-bl
        // 1M + 5S + 14A
        // XX = X1^2
        var xx = this.x.redSqr();
        // YY = Y1^2
        var yy = this.y.redSqr();
        // YYYY = YY^2
        var yyyy = yy.redSqr();
        // S = 2 * ((X1 + YY)^2 - XX - YYYY)
        var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
        s = s.redIAdd(s);
        // M = 3 * XX + a; a = 0
        var m = xx.redAdd(xx).redIAdd(xx);
        // T = M ^ 2 - 2*S
        var t = m.redSqr().redISub(s).redISub(s);
        // 8 * YYYY
        var yyyy8 = yyyy.redIAdd(yyyy);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        // X3 = T
        nx = t;
        // Y3 = M * (S - T) - 8 * YYYY
        ny = m.redMul(s.redISub(t)).redISub(yyyy8);
        // Z3 = 2*Y1
        nz = this.y.redAdd(this.y);
    } else {
        // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
        //     #doubling-dbl-2009-l
        // 2M + 5S + 13A
        // A = X1^2
        var a = this.x.redSqr();
        // B = Y1^2
        var b = this.y.redSqr();
        // C = B^2
        var c = b.redSqr();
        // D = 2 * ((X1 + B)^2 - A - C)
        var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
        d = d.redIAdd(d);
        // E = 3 * A
        var e = a.redAdd(a).redIAdd(a);
        // F = E^2
        var f = e.redSqr();
        // 8 * C
        var c8 = c.redIAdd(c);
        c8 = c8.redIAdd(c8);
        c8 = c8.redIAdd(c8);
        // X3 = F - 2 * D
        nx = f.redISub(d).redISub(d);
        // Y3 = E * (D - X3) - 8 * C
        ny = e.redMul(d.redISub(nx)).redISub(c8);
        // Z3 = 2 * Y1 * Z1
        nz = this.y.redMul(this.z);
        nz = nz.redIAdd(nz);
    }
    return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype._threeDbl = function _threeDbl() {
    var nx;
    var ny;
    var nz;
    // Z = 1
    if (this.zOne) {
        // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
        //     #doubling-mdbl-2007-bl
        // 1M + 5S + 15A
        // XX = X1^2
        var xx = this.x.redSqr();
        // YY = Y1^2
        var yy = this.y.redSqr();
        // YYYY = YY^2
        var yyyy = yy.redSqr();
        // S = 2 * ((X1 + YY)^2 - XX - YYYY)
        var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
        s = s.redIAdd(s);
        // M = 3 * XX + a
        var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
        // T = M^2 - 2 * S
        var t = m.redSqr().redISub(s).redISub(s);
        // X3 = T
        nx = t;
        // Y3 = M * (S - T) - 8 * YYYY
        var yyyy8 = yyyy.redIAdd(yyyy);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        ny = m.redMul(s.redISub(t)).redISub(yyyy8);
        // Z3 = 2 * Y1
        nz = this.y.redAdd(this.y);
    } else {
        // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
        // 3M + 5S
        // delta = Z1^2
        var delta = this.z.redSqr();
        // gamma = Y1^2
        var gamma = this.y.redSqr();
        // beta = X1 * gamma
        var beta = this.x.redMul(gamma);
        // alpha = 3 * (X1 - delta) * (X1 + delta)
        var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
        alpha = alpha.redAdd(alpha).redIAdd(alpha);
        // X3 = alpha^2 - 8 * beta
        var beta4 = beta.redIAdd(beta);
        beta4 = beta4.redIAdd(beta4);
        var beta8 = beta4.redAdd(beta4);
        nx = alpha.redSqr().redISub(beta8);
        // Z3 = (Y1 + Z1)^2 - gamma - delta
        nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
        // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
        var ggamma8 = gamma.redSqr();
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
    }
    return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype._dbl = function _dbl() {
    var a = this.curve.a;
    // 4M + 6S + 10A
    var jx = this.x;
    var jy = this.y;
    var jz = this.z;
    var jz4 = jz.redSqr().redSqr();
    var jx2 = jx.redSqr();
    var jy2 = jy.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
    var jxd4 = jx.redAdd(jx);
    jxd4 = jxd4.redIAdd(jxd4);
    var t1 = jxd4.redMul(jy2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var jyd8 = jy2.redSqr();
    jyd8 = jyd8.redIAdd(jyd8);
    jyd8 = jyd8.redIAdd(jyd8);
    jyd8 = jyd8.redIAdd(jyd8);
    var ny = c.redMul(t2).redISub(jyd8);
    var nz = jy.redAdd(jy).redMul(jz);
    return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.trpl = function trpl() {
    if (!this.curve.zeroA) return this.dbl().add(this);
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
    // 5M + 10S + ...
    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // ZZ = Z1^2
    var zz = this.z.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // M = 3 * XX + a * ZZ2; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // MM = M^2
    var mm = m.redSqr();
    // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
    var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    e = e.redIAdd(e);
    e = e.redAdd(e).redIAdd(e);
    e = e.redISub(mm);
    // EE = E^2
    var ee = e.redSqr();
    // T = 16*YYYY
    var t = yyyy.redIAdd(yyyy);
    t = t.redIAdd(t);
    t = t.redIAdd(t);
    t = t.redIAdd(t);
    // U = (M + E)^2 - MM - EE - T
    var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
    // X3 = 4 * (X1 * EE - 4 * YY * U)
    var yyu4 = yy.redMul(u);
    yyu4 = yyu4.redIAdd(yyu4);
    yyu4 = yyu4.redIAdd(yyu4);
    var nx = this.x.redMul(ee).redISub(yyu4);
    nx = nx.redIAdd(nx);
    nx = nx.redIAdd(nx);
    // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
    var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
    ny = ny.redIAdd(ny);
    ny = ny.redIAdd(ny);
    ny = ny.redIAdd(ny);
    // Z3 = (Z1 + E)^2 - ZZ - EE
    var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);
    return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.mul = function mul1(k, kbase) {
    k = new BN(k, kbase);
    return this.curve._wnafMul(this, k);
};
JPoint.prototype.eq = function eq1(p) {
    if (p.type === 'affine') return this.eq(p.toJ());
    if (this === p) return true;
    // x1 * z2^2 == x2 * z1^2
    var z2 = this.z.redSqr();
    var pz2 = p.z.redSqr();
    if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) return false;
    // y1 * z2^3 == y2 * z1^3
    var z3 = z2.redMul(this.z);
    var pz3 = pz2.redMul(p.z);
    return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};
JPoint.prototype.eqXToP = function eqXToP(x) {
    var zs = this.z.redSqr();
    var rx = x.toRed(this.curve.red).redMul(zs);
    if (this.x.cmp(rx) === 0) return true;
    var xc = x.clone();
    var t = this.curve.redN.redMul(zs);
    for(;;){
        xc.iadd(this.curve.n);
        if (xc.cmp(this.curve.p) >= 0) return false;
        rx.redIAdd(t);
        if (this.x.cmp(rx) === 0) return true;
    }
};
JPoint.prototype.inspect = function inspect1() {
    if (this.isInfinity()) return '<EC JPoint Infinity>';
    return '<EC JPoint x: ' + this.x.toString(16, 2) + ' y: ' + this.y.toString(16, 2) + ' z: ' + this.z.toString(16, 2) + '>';
};
JPoint.prototype.isInfinity = function isInfinity1() {
    // XXX This code assumes that zero is always zero in red
    return this.z.cmpn(0) === 0;
};

},{"../utils":"3rv6w","bn.js":"8lUpb","inherits":"9Y2vC","./base":"h8oNl"}],"j29N4":[function(require,module,exports) {
'use strict';
var BN = require('bn.js');
var inherits = require('inherits');
var Base = require('./base');
var utils = require('../utils');
function MontCurve(conf) {
    Base.call(this, 'mont', conf);
    this.a = new BN(conf.a, 16).toRed(this.red);
    this.b = new BN(conf.b, 16).toRed(this.red);
    this.i4 = new BN(4).toRed(this.red).redInvm();
    this.two = new BN(2).toRed(this.red);
    this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;
MontCurve.prototype.validate = function validate(point) {
    var x = point.normalize().x;
    var x2 = x.redSqr();
    var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
    var y = rhs.redSqrt();
    return y.redSqr().cmp(rhs) === 0;
};
function Point(curve, x, z) {
    Base.BasePoint.call(this, curve, 'projective');
    if (x === null && z === null) {
        this.x = this.curve.one;
        this.z = this.curve.zero;
    } else {
        this.x = new BN(x, 16);
        this.z = new BN(z, 16);
        if (!this.x.red) this.x = this.x.toRed(this.curve.red);
        if (!this.z.red) this.z = this.z.toRed(this.curve.red);
    }
}
inherits(Point, Base.BasePoint);
MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
    return this.point(utils.toArray(bytes, enc), 1);
};
MontCurve.prototype.point = function point(x, z) {
    return new Point(this, x, z);
};
MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
    return Point.fromJSON(this, obj);
};
Point.prototype.precompute = function precompute() {
// No-op
};
Point.prototype._encode = function _encode() {
    return this.getX().toArray('be', this.curve.p.byteLength());
};
Point.fromJSON = function fromJSON(curve, obj) {
    return new Point(curve, obj[0], obj[1] || curve.one);
};
Point.prototype.inspect = function inspect() {
    if (this.isInfinity()) return '<EC Point Infinity>';
    return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};
Point.prototype.isInfinity = function isInfinity() {
    // XXX This code assumes that zero is always zero in red
    return this.z.cmpn(0) === 0;
};
Point.prototype.dbl = function dbl() {
    // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
    // 2M + 2S + 4A
    // A = X1 + Z1
    var a = this.x.redAdd(this.z);
    // AA = A^2
    var aa = a.redSqr();
    // B = X1 - Z1
    var b = this.x.redSub(this.z);
    // BB = B^2
    var bb = b.redSqr();
    // C = AA - BB
    var c = aa.redSub(bb);
    // X3 = AA * BB
    var nx = aa.redMul(bb);
    // Z3 = C * (BB + A24 * C)
    var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
    return this.curve.point(nx, nz);
};
Point.prototype.add = function add() {
    throw new Error('Not supported on Montgomery curve');
};
Point.prototype.diffAdd = function diffAdd(p, diff) {
    // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
    // 4M + 2S + 6A
    // A = X2 + Z2
    var a = this.x.redAdd(this.z);
    // B = X2 - Z2
    var b = this.x.redSub(this.z);
    // C = X3 + Z3
    var c = p.x.redAdd(p.z);
    // D = X3 - Z3
    var d = p.x.redSub(p.z);
    // DA = D * A
    var da = d.redMul(a);
    // CB = C * B
    var cb = c.redMul(b);
    // X5 = Z1 * (DA + CB)^2
    var nx = diff.z.redMul(da.redAdd(cb).redSqr());
    // Z5 = X1 * (DA - CB)^2
    var nz = diff.x.redMul(da.redISub(cb).redSqr());
    return this.curve.point(nx, nz);
};
Point.prototype.mul = function mul(k) {
    var t = k.clone();
    var a = this; // (N / 2) * Q + Q
    var b = this.curve.point(null, null); // (N / 2) * Q
    var c = this; // Q
    for(var bits = []; t.cmpn(0) !== 0; t.iushrn(1))bits.push(t.andln(1));
    for(var i = bits.length - 1; i >= 0; i--)if (bits[i] === 0) {
        // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
        a = a.diffAdd(b, c);
        // N * Q = 2 * ((N / 2) * Q + Q))
        b = b.dbl();
    } else {
        // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
        b = a.diffAdd(b, c);
        // N * Q + Q = 2 * ((N / 2) * Q + Q)
        a = a.dbl();
    }
    return b;
};
Point.prototype.mulAdd = function mulAdd() {
    throw new Error('Not supported on Montgomery curve');
};
Point.prototype.jumlAdd = function jumlAdd() {
    throw new Error('Not supported on Montgomery curve');
};
Point.prototype.eq = function eq(other) {
    return this.getX().cmp(other.getX()) === 0;
};
Point.prototype.normalize = function normalize() {
    this.x = this.x.redMul(this.z.redInvm());
    this.z = this.curve.one;
    return this;
};
Point.prototype.getX = function getX() {
    // Normalize coordinates
    this.normalize();
    return this.x.fromRed();
};

},{"bn.js":"8lUpb","inherits":"9Y2vC","./base":"h8oNl","../utils":"3rv6w"}],"3GR9X":[function(require,module,exports) {
'use strict';
var utils = require('../utils');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = require('./base');
var assert = utils.assert;
function EdwardsCurve(conf) {
    // NOTE: Important as we are creating point in Base.call()
    this.twisted = (conf.a | 0) !== 1;
    this.mOneA = this.twisted && (conf.a | 0) === -1;
    this.extended = this.mOneA;
    Base.call(this, 'edwards', conf);
    this.a = new BN(conf.a, 16).umod(this.red.m);
    this.a = this.a.toRed(this.red);
    this.c = new BN(conf.c, 16).toRed(this.red);
    this.c2 = this.c.redSqr();
    this.d = new BN(conf.d, 16).toRed(this.red);
    this.dd = this.d.redAdd(this.d);
    assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
    this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;
EdwardsCurve.prototype._mulA = function _mulA(num) {
    if (this.mOneA) return num.redNeg();
    else return this.a.redMul(num);
};
EdwardsCurve.prototype._mulC = function _mulC(num) {
    if (this.oneC) return num;
    else return this.c.redMul(num);
};
// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
    return this.point(x, y, z, t);
};
EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
    x = new BN(x, 16);
    if (!x.red) x = x.toRed(this.red);
    var x2 = x.redSqr();
    var rhs = this.c2.redSub(this.a.redMul(x2));
    var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));
    var y2 = rhs.redMul(lhs.redInvm());
    var y = y2.redSqrt();
    if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point');
    var isOdd = y.fromRed().isOdd();
    if (odd && !isOdd || !odd && isOdd) y = y.redNeg();
    return this.point(x, y);
};
EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
    y = new BN(y, 16);
    if (!y.red) y = y.toRed(this.red);
    // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)
    var y2 = y.redSqr();
    var lhs = y2.redSub(this.c2);
    var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);
    var x2 = lhs.redMul(rhs.redInvm());
    if (x2.cmp(this.zero) === 0) {
        if (odd) throw new Error('invalid point');
        else return this.point(this.zero, y);
    }
    var x = x2.redSqrt();
    if (x.redSqr().redSub(x2).cmp(this.zero) !== 0) throw new Error('invalid point');
    if (x.fromRed().isOdd() !== odd) x = x.redNeg();
    return this.point(x, y);
};
EdwardsCurve.prototype.validate = function validate(point) {
    if (point.isInfinity()) return true;
    // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
    point.normalize();
    var x2 = point.x.redSqr();
    var y2 = point.y.redSqr();
    var lhs = x2.redMul(this.a).redAdd(y2);
    var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));
    return lhs.cmp(rhs) === 0;
};
function Point(curve, x, y, z, t) {
    Base.BasePoint.call(this, curve, 'projective');
    if (x === null && y === null && z === null) {
        this.x = this.curve.zero;
        this.y = this.curve.one;
        this.z = this.curve.one;
        this.t = this.curve.zero;
        this.zOne = true;
    } else {
        this.x = new BN(x, 16);
        this.y = new BN(y, 16);
        this.z = z ? new BN(z, 16) : this.curve.one;
        this.t = t && new BN(t, 16);
        if (!this.x.red) this.x = this.x.toRed(this.curve.red);
        if (!this.y.red) this.y = this.y.toRed(this.curve.red);
        if (!this.z.red) this.z = this.z.toRed(this.curve.red);
        if (this.t && !this.t.red) this.t = this.t.toRed(this.curve.red);
        this.zOne = this.z === this.curve.one;
        // Use extended coordinates
        if (this.curve.extended && !this.t) {
            this.t = this.x.redMul(this.y);
            if (!this.zOne) this.t = this.t.redMul(this.z.redInvm());
        }
    }
}
inherits(Point, Base.BasePoint);
EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
    return Point.fromJSON(this, obj);
};
EdwardsCurve.prototype.point = function point(x, y, z, t) {
    return new Point(this, x, y, z, t);
};
Point.fromJSON = function fromJSON(curve, obj) {
    return new Point(curve, obj[0], obj[1], obj[2]);
};
Point.prototype.inspect = function inspect() {
    if (this.isInfinity()) return '<EC Point Infinity>';
    return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};
Point.prototype.isInfinity = function isInfinity() {
    // XXX This code assumes that zero is always zero in red
    return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0);
};
Point.prototype._extDbl = function _extDbl() {
    // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
    //     #doubling-dbl-2008-hwcd
    // 4M + 4S
    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = 2 * Z1^2
    var c = this.z.redSqr();
    c = c.redIAdd(c);
    // D = a * A
    var d = this.curve._mulA(a);
    // E = (X1 + Y1)^2 - A - B
    var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
    // G = D + B
    var g = d.redAdd(b);
    // F = G - C
    var f = g.redSub(c);
    // H = D - B
    var h = d.redSub(b);
    // X3 = E * F
    var nx = e.redMul(f);
    // Y3 = G * H
    var ny = g.redMul(h);
    // T3 = E * H
    var nt = e.redMul(h);
    // Z3 = F * G
    var nz = f.redMul(g);
    return this.curve.point(nx, ny, nz, nt);
};
Point.prototype._projDbl = function _projDbl() {
    // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
    //     #doubling-dbl-2008-bbjlp
    //     #doubling-dbl-2007-bl
    // and others
    // Generally 3M + 4S or 2M + 4S
    // B = (X1 + Y1)^2
    var b = this.x.redAdd(this.y).redSqr();
    // C = X1^2
    var c = this.x.redSqr();
    // D = Y1^2
    var d = this.y.redSqr();
    var nx;
    var ny;
    var nz;
    var e;
    var h;
    var j;
    if (this.curve.twisted) {
        // E = a * C
        e = this.curve._mulA(c);
        // F = E + D
        var f = e.redAdd(d);
        if (this.zOne) {
            // X3 = (B - C - D) * (F - 2)
            nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
            // Y3 = F * (E - D)
            ny = f.redMul(e.redSub(d));
            // Z3 = F^2 - 2 * F
            nz = f.redSqr().redSub(f).redSub(f);
        } else {
            // H = Z1^2
            h = this.z.redSqr();
            // J = F - 2 * H
            j = f.redSub(h).redISub(h);
            // X3 = (B-C-D)*J
            nx = b.redSub(c).redISub(d).redMul(j);
            // Y3 = F * (E - D)
            ny = f.redMul(e.redSub(d));
            // Z3 = F * J
            nz = f.redMul(j);
        }
    } else {
        // E = C + D
        e = c.redAdd(d);
        // H = (c * Z1)^2
        h = this.curve._mulC(this.z).redSqr();
        // J = E - 2 * H
        j = e.redSub(h).redSub(h);
        // X3 = c * (B - E) * J
        nx = this.curve._mulC(b.redISub(e)).redMul(j);
        // Y3 = c * E * (C - D)
        ny = this.curve._mulC(e).redMul(c.redISub(d));
        // Z3 = E * J
        nz = e.redMul(j);
    }
    return this.curve.point(nx, ny, nz);
};
Point.prototype.dbl = function dbl() {
    if (this.isInfinity()) return this;
    // Double in extended coordinates
    if (this.curve.extended) return this._extDbl();
    else return this._projDbl();
};
Point.prototype._extAdd = function _extAdd(p) {
    // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
    //     #addition-add-2008-hwcd-3
    // 8M
    // A = (Y1 - X1) * (Y2 - X2)
    var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
    // B = (Y1 + X1) * (Y2 + X2)
    var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
    // C = T1 * k * T2
    var c = this.t.redMul(this.curve.dd).redMul(p.t);
    // D = Z1 * 2 * Z2
    var d = this.z.redMul(p.z.redAdd(p.z));
    // E = B - A
    var e = b.redSub(a);
    // F = D - C
    var f = d.redSub(c);
    // G = D + C
    var g = d.redAdd(c);
    // H = B + A
    var h = b.redAdd(a);
    // X3 = E * F
    var nx = e.redMul(f);
    // Y3 = G * H
    var ny = g.redMul(h);
    // T3 = E * H
    var nt = e.redMul(h);
    // Z3 = F * G
    var nz = f.redMul(g);
    return this.curve.point(nx, ny, nz, nt);
};
Point.prototype._projAdd = function _projAdd(p) {
    // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
    //     #addition-add-2008-bbjlp
    //     #addition-add-2007-bl
    // 10M + 1S
    // A = Z1 * Z2
    var a = this.z.redMul(p.z);
    // B = A^2
    var b = a.redSqr();
    // C = X1 * X2
    var c = this.x.redMul(p.x);
    // D = Y1 * Y2
    var d = this.y.redMul(p.y);
    // E = d * C * D
    var e = this.curve.d.redMul(c).redMul(d);
    // F = B - E
    var f = b.redSub(e);
    // G = B + E
    var g = b.redAdd(e);
    // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
    var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
    var nx = a.redMul(f).redMul(tmp);
    var ny;
    var nz;
    if (this.curve.twisted) {
        // Y3 = A * G * (D - a * C)
        ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
        // Z3 = F * G
        nz = f.redMul(g);
    } else {
        // Y3 = A * G * (D - C)
        ny = a.redMul(g).redMul(d.redSub(c));
        // Z3 = c * F * G
        nz = this.curve._mulC(f).redMul(g);
    }
    return this.curve.point(nx, ny, nz);
};
Point.prototype.add = function add(p) {
    if (this.isInfinity()) return p;
    if (p.isInfinity()) return this;
    if (this.curve.extended) return this._extAdd(p);
    else return this._projAdd(p);
};
Point.prototype.mul = function mul(k) {
    if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);
    else return this.curve._wnafMul(this, k);
};
Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
    return this.curve._wnafMulAdd(1, [
        this,
        p
    ], [
        k1,
        k2
    ], 2, false);
};
Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
    return this.curve._wnafMulAdd(1, [
        this,
        p
    ], [
        k1,
        k2
    ], 2, true);
};
Point.prototype.normalize = function normalize() {
    if (this.zOne) return this;
    // Normalize coordinates
    var zi = this.z.redInvm();
    this.x = this.x.redMul(zi);
    this.y = this.y.redMul(zi);
    if (this.t) this.t = this.t.redMul(zi);
    this.z = this.curve.one;
    this.zOne = true;
    return this;
};
Point.prototype.neg = function neg() {
    return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
};
Point.prototype.getX = function getX() {
    this.normalize();
    return this.x.fromRed();
};
Point.prototype.getY = function getY() {
    this.normalize();
    return this.y.fromRed();
};
Point.prototype.eq = function eq(other) {
    return this === other || this.getX().cmp(other.getX()) === 0 && this.getY().cmp(other.getY()) === 0;
};
Point.prototype.eqXToP = function eqXToP(x) {
    var rx = x.toRed(this.curve.red).redMul(this.z);
    if (this.x.cmp(rx) === 0) return true;
    var xc = x.clone();
    var t = this.curve.redN.redMul(this.z);
    for(;;){
        xc.iadd(this.curve.n);
        if (xc.cmp(this.curve.p) >= 0) return false;
        rx.redIAdd(t);
        if (this.x.cmp(rx) === 0) return true;
    }
};
// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;

},{"../utils":"3rv6w","bn.js":"8lUpb","inherits":"9Y2vC","./base":"h8oNl"}],"55Vo5":[function(require,module,exports) {
'use strict';
var curves = exports;
var hash = require('hash.js');
var curve = require('./curve');
var utils = require('./utils');
var assert = utils.assert;
function PresetCurve(options) {
    if (options.type === 'short') this.curve = new curve.short(options);
    else if (options.type === 'edwards') this.curve = new curve.edwards(options);
    else this.curve = new curve.mont(options);
    this.g = this.curve.g;
    this.n = this.curve.n;
    this.hash = options.hash;
    assert(this.g.validate(), 'Invalid curve');
    assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;
function defineCurve(name, options) {
    Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        get: function() {
            var curve1 = new PresetCurve(options);
            Object.defineProperty(curves, name, {
                configurable: true,
                enumerable: true,
                value: curve1
            });
            return curve1;
        }
    });
}
defineCurve('p192', {
    type: 'short',
    prime: 'p192',
    p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
    a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
    b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
    n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
    hash: hash.sha256,
    gRed: false,
    g: [
        '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
        '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811', 
    ]
});
defineCurve('p224', {
    type: 'short',
    prime: 'p224',
    p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
    a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
    b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
    n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
    hash: hash.sha256,
    gRed: false,
    g: [
        'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
        'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34', 
    ]
});
defineCurve('p256', {
    type: 'short',
    prime: null,
    p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
    a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
    b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
    n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
    hash: hash.sha256,
    gRed: false,
    g: [
        '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
        '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5', 
    ]
});
defineCurve('p384', {
    type: 'short',
    prime: null,
    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
    a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
    b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
    n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
    hash: hash.sha384,
    gRed: false,
    g: [
        "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
        "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f", 
    ]
});
defineCurve('p521', {
    type: 'short',
    prime: null,
    p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
    a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
    b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
    n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
    hash: hash.sha512,
    gRed: false,
    g: [
        "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
        "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650", 
    ]
});
defineCurve('curve25519', {
    type: 'mont',
    prime: 'p25519',
    p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
    a: '76d06',
    b: '1',
    n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
    hash: hash.sha256,
    gRed: false,
    g: [
        '9', 
    ]
});
defineCurve('ed25519', {
    type: 'edwards',
    prime: 'p25519',
    p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
    a: '-1',
    c: '1',
    // -121665 * (121666^(-1)) (mod P)
    d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
    n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
    hash: hash.sha256,
    gRed: false,
    g: [
        '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',
        // 4/5
        '6666666666666666666666666666666666666666666666666666666666666658', 
    ]
});
var pre;
try {
    pre = require('./precomputed/secp256k1');
} catch (e) {
    pre = undefined;
}
defineCurve('secp256k1', {
    type: 'short',
    prime: 'k256',
    p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
    a: '0',
    b: '7',
    n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
    h: '1',
    hash: hash.sha256,
    // Precomputed endomorphism
    beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
    lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
    basis: [
        {
            a: '3086d221a7d46bcde86c90e49284eb15',
            b: '-e4437ed6010e88286f547fa90abfe4c3'
        },
        {
            a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
            b: '3086d221a7d46bcde86c90e49284eb15'
        }, 
    ],
    gRed: false,
    g: [
        '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
        '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
        pre, 
    ]
});

},{"hash.js":"gVvfM","./curve":"2UW9u","./utils":"3rv6w","./precomputed/secp256k1":"98Yrp"}],"gVvfM":[function(require,module,exports) {
var hash = exports;
hash.utils = require('./hash/utils');
hash.common = require('./hash/common');
hash.sha = require('./hash/sha');
hash.ripemd = require('./hash/ripemd');
hash.hmac = require('./hash/hmac');
// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;

},{"./hash/utils":"h03Vl","./hash/common":"irFed","./hash/sha":"agYMj","./hash/ripemd":"1VwRi","./hash/hmac":"4ixfR"}],"h03Vl":[function(require,module,exports) {
'use strict';
var assert = require('minimalistic-assert');
var inherits = require('inherits');
exports.inherits = inherits;
function isSurrogatePair(msg, i) {
    if ((msg.charCodeAt(i) & 64512) !== 55296) return false;
    if (i < 0 || i + 1 >= msg.length) return false;
    return (msg.charCodeAt(i + 1) & 64512) === 56320;
}
function toArray(msg, enc) {
    if (Array.isArray(msg)) return msg.slice();
    if (!msg) return [];
    var res = [];
    if (typeof msg === 'string') {
        if (!enc) {
            // Inspired by stringToUtf8ByteArray() in closure-library by Google
            // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
            // Apache License 2.0
            // https://github.com/google/closure-library/blob/master/LICENSE
            var p = 0;
            for(var i = 0; i < msg.length; i++){
                var c = msg.charCodeAt(i);
                if (c < 128) res[p++] = c;
                else if (c < 2048) {
                    res[p++] = c >> 6 | 192;
                    res[p++] = c & 63 | 128;
                } else if (isSurrogatePair(msg, i)) {
                    c = 65536 + ((c & 1023) << 10) + (msg.charCodeAt(++i) & 1023);
                    res[p++] = c >> 18 | 240;
                    res[p++] = c >> 12 & 63 | 128;
                    res[p++] = c >> 6 & 63 | 128;
                    res[p++] = c & 63 | 128;
                } else {
                    res[p++] = c >> 12 | 224;
                    res[p++] = c >> 6 & 63 | 128;
                    res[p++] = c & 63 | 128;
                }
            }
        } else if (enc === 'hex') {
            msg = msg.replace(/[^a-z0-9]+/ig, '');
            if (msg.length % 2 !== 0) msg = '0' + msg;
            for(i = 0; i < msg.length; i += 2)res.push(parseInt(msg[i] + msg[i + 1], 16));
        }
    } else for(i = 0; i < msg.length; i++)res[i] = msg[i] | 0;
    return res;
}
exports.toArray = toArray;
function toHex(msg) {
    var res = '';
    for(var i = 0; i < msg.length; i++)res += zero2(msg[i].toString(16));
    return res;
}
exports.toHex = toHex;
function htonl(w) {
    var res = w >>> 24 | w >>> 8 & 65280 | w << 8 & 16711680 | (w & 255) << 24;
    return res >>> 0;
}
exports.htonl = htonl;
function toHex32(msg, endian) {
    var res = '';
    for(var i = 0; i < msg.length; i++){
        var w = msg[i];
        if (endian === 'little') w = htonl(w);
        res += zero8(w.toString(16));
    }
    return res;
}
exports.toHex32 = toHex32;
function zero2(word) {
    if (word.length === 1) return '0' + word;
    else return word;
}
exports.zero2 = zero2;
function zero8(word) {
    if (word.length === 7) return '0' + word;
    else if (word.length === 6) return '00' + word;
    else if (word.length === 5) return '000' + word;
    else if (word.length === 4) return '0000' + word;
    else if (word.length === 3) return '00000' + word;
    else if (word.length === 2) return '000000' + word;
    else if (word.length === 1) return '0000000' + word;
    else return word;
}
exports.zero8 = zero8;
function join32(msg, start, end, endian) {
    var len = end - start;
    assert(len % 4 === 0);
    var res = new Array(len / 4);
    for(var i = 0, k = start; i < res.length; i++, k += 4){
        var w;
        if (endian === 'big') w = msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3];
        else w = msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];
        res[i] = w >>> 0;
    }
    return res;
}
exports.join32 = join32;
function split32(msg, endian) {
    var res = new Array(msg.length * 4);
    for(var i = 0, k = 0; i < msg.length; i++, k += 4){
        var m = msg[i];
        if (endian === 'big') {
            res[k] = m >>> 24;
            res[k + 1] = m >>> 16 & 255;
            res[k + 2] = m >>> 8 & 255;
            res[k + 3] = m & 255;
        } else {
            res[k + 3] = m >>> 24;
            res[k + 2] = m >>> 16 & 255;
            res[k + 1] = m >>> 8 & 255;
            res[k] = m & 255;
        }
    }
    return res;
}
exports.split32 = split32;
function rotr32(w, b) {
    return w >>> b | w << 32 - b;
}
exports.rotr32 = rotr32;
function rotl32(w, b) {
    return w << b | w >>> 32 - b;
}
exports.rotl32 = rotl32;
function sum32(a, b) {
    return a + b >>> 0;
}
exports.sum32 = sum32;
function sum32_3(a, b, c) {
    return a + b + c >>> 0;
}
exports.sum32_3 = sum32_3;
function sum32_4(a, b, c, d) {
    return a + b + c + d >>> 0;
}
exports.sum32_4 = sum32_4;
function sum32_5(a, b, c, d, e) {
    return a + b + c + d + e >>> 0;
}
exports.sum32_5 = sum32_5;
function sum64(buf, pos, ah, al) {
    var bh = buf[pos];
    var bl = buf[pos + 1];
    var lo = al + bl >>> 0;
    var hi = (lo < al ? 1 : 0) + ah + bh;
    buf[pos] = hi >>> 0;
    buf[pos + 1] = lo;
}
exports.sum64 = sum64;
function sum64_hi(ah, al, bh, bl) {
    var lo = al + bl >>> 0;
    var hi = (lo < al ? 1 : 0) + ah + bh;
    return hi >>> 0;
}
exports.sum64_hi = sum64_hi;
function sum64_lo(ah, al, bh, bl) {
    var lo = al + bl;
    return lo >>> 0;
}
exports.sum64_lo = sum64_lo;
function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
    var carry = 0;
    var lo = al;
    lo = lo + bl >>> 0;
    carry += lo < al ? 1 : 0;
    lo = lo + cl >>> 0;
    carry += lo < cl ? 1 : 0;
    lo = lo + dl >>> 0;
    carry += lo < dl ? 1 : 0;
    var hi = ah + bh + ch + dh + carry;
    return hi >>> 0;
}
exports.sum64_4_hi = sum64_4_hi;
function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
    var lo = al + bl + cl + dl;
    return lo >>> 0;
}
exports.sum64_4_lo = sum64_4_lo;
function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
    var carry = 0;
    var lo = al;
    lo = lo + bl >>> 0;
    carry += lo < al ? 1 : 0;
    lo = lo + cl >>> 0;
    carry += lo < cl ? 1 : 0;
    lo = lo + dl >>> 0;
    carry += lo < dl ? 1 : 0;
    lo = lo + el >>> 0;
    carry += lo < el ? 1 : 0;
    var hi = ah + bh + ch + dh + eh + carry;
    return hi >>> 0;
}
exports.sum64_5_hi = sum64_5_hi;
function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
    var lo = al + bl + cl + dl + el;
    return lo >>> 0;
}
exports.sum64_5_lo = sum64_5_lo;
function rotr64_hi(ah, al, num) {
    var r = al << 32 - num | ah >>> num;
    return r >>> 0;
}
exports.rotr64_hi = rotr64_hi;
function rotr64_lo(ah, al, num) {
    var r = ah << 32 - num | al >>> num;
    return r >>> 0;
}
exports.rotr64_lo = rotr64_lo;
function shr64_hi(ah, al, num) {
    return ah >>> num;
}
exports.shr64_hi = shr64_hi;
function shr64_lo(ah, al, num) {
    var r = ah << 32 - num | al >>> num;
    return r >>> 0;
}
exports.shr64_lo = shr64_lo;

},{"minimalistic-assert":"fS90O","inherits":"9Y2vC"}],"irFed":[function(require,module,exports) {
'use strict';
var utils = require('./utils');
var assert = require('minimalistic-assert');
function BlockHash() {
    this.pending = null;
    this.pendingTotal = 0;
    this.blockSize = this.constructor.blockSize;
    this.outSize = this.constructor.outSize;
    this.hmacStrength = this.constructor.hmacStrength;
    this.padLength = this.constructor.padLength / 8;
    this.endian = 'big';
    this._delta8 = this.blockSize / 8;
    this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;
BlockHash.prototype.update = function update(msg, enc) {
    // Convert message to array, pad it, and join into 32bit blocks
    msg = utils.toArray(msg, enc);
    if (!this.pending) this.pending = msg;
    else this.pending = this.pending.concat(msg);
    this.pendingTotal += msg.length;
    // Enough data, try updating
    if (this.pending.length >= this._delta8) {
        msg = this.pending;
        // Process pending data in blocks
        var r = msg.length % this._delta8;
        this.pending = msg.slice(msg.length - r, msg.length);
        if (this.pending.length === 0) this.pending = null;
        msg = utils.join32(msg, 0, msg.length - r, this.endian);
        for(var i = 0; i < msg.length; i += this._delta32)this._update(msg, i, i + this._delta32);
    }
    return this;
};
BlockHash.prototype.digest = function digest(enc) {
    this.update(this._pad());
    assert(this.pending === null);
    return this._digest(enc);
};
BlockHash.prototype._pad = function pad() {
    var len = this.pendingTotal;
    var bytes = this._delta8;
    var k = bytes - (len + this.padLength) % bytes;
    var res = new Array(k + this.padLength);
    res[0] = 128;
    for(var i = 1; i < k; i++)res[i] = 0;
    // Append length
    len <<= 3;
    if (this.endian === 'big') {
        for(var t = 8; t < this.padLength; t++)res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = len >>> 24 & 255;
        res[i++] = len >>> 16 & 255;
        res[i++] = len >>> 8 & 255;
        res[i++] = len & 255;
    } else {
        res[i++] = len & 255;
        res[i++] = len >>> 8 & 255;
        res[i++] = len >>> 16 & 255;
        res[i++] = len >>> 24 & 255;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        for(t = 8; t < this.padLength; t++)res[i++] = 0;
    }
    return res;
};

},{"./utils":"h03Vl","minimalistic-assert":"fS90O"}],"agYMj":[function(require,module,exports) {
'use strict';
exports.sha1 = require('./sha/1');
exports.sha224 = require('./sha/224');
exports.sha256 = require('./sha/256');
exports.sha384 = require('./sha/384');
exports.sha512 = require('./sha/512');

},{"./sha/1":"1fTcc","./sha/224":"h4LoP","./sha/256":"h3ezI","./sha/384":"9J0HS","./sha/512":"21oHs"}],"1fTcc":[function(require,module,exports) {
'use strict';
var utils = require('../utils');
var common = require('../common');
var shaCommon = require('./common');
var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;
var sha1_K = [
    1518500249,
    1859775393,
    2400959708,
    3395469782
];
function SHA1() {
    if (!(this instanceof SHA1)) return new SHA1();
    BlockHash.call(this);
    this.h = [
        1732584193,
        4023233417,
        2562383102,
        271733878,
        3285377520
    ];
    this.W = new Array(80);
}
utils.inherits(SHA1, BlockHash);
module.exports = SHA1;
SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;
SHA1.prototype._update = function _update(msg, start) {
    var W = this.W;
    for(var i = 0; i < 16; i++)W[i] = msg[start + i];
    for(; i < W.length; i++)W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);
    var a = this.h[0];
    var b = this.h[1];
    var c = this.h[2];
    var d = this.h[3];
    var e = this.h[4];
    for(i = 0; i < W.length; i++){
        var s = ~~(i / 20);
        var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
        e = d;
        d = c;
        c = rotl32(b, 30);
        b = a;
        a = t;
    }
    this.h[0] = sum32(this.h[0], a);
    this.h[1] = sum32(this.h[1], b);
    this.h[2] = sum32(this.h[2], c);
    this.h[3] = sum32(this.h[3], d);
    this.h[4] = sum32(this.h[4], e);
};
SHA1.prototype._digest = function digest(enc) {
    if (enc === 'hex') return utils.toHex32(this.h, 'big');
    else return utils.split32(this.h, 'big');
};

},{"../utils":"h03Vl","../common":"irFed","./common":"vugco"}],"vugco":[function(require,module,exports) {
'use strict';
var utils = require('../utils');
var rotr32 = utils.rotr32;
function ft_1(s, x, y, z) {
    if (s === 0) return ch32(x, y, z);
    if (s === 1 || s === 3) return p32(x, y, z);
    if (s === 2) return maj32(x, y, z);
}
exports.ft_1 = ft_1;
function ch32(x, y, z) {
    return x & y ^ ~x & z;
}
exports.ch32 = ch32;
function maj32(x, y, z) {
    return x & y ^ x & z ^ y & z;
}
exports.maj32 = maj32;
function p32(x, y, z) {
    return x ^ y ^ z;
}
exports.p32 = p32;
function s0_256(x) {
    return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
exports.s0_256 = s0_256;
function s1_256(x) {
    return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
exports.s1_256 = s1_256;
function g0_256(x) {
    return rotr32(x, 7) ^ rotr32(x, 18) ^ x >>> 3;
}
exports.g0_256 = g0_256;
function g1_256(x) {
    return rotr32(x, 17) ^ rotr32(x, 19) ^ x >>> 10;
}
exports.g1_256 = g1_256;

},{"../utils":"h03Vl"}],"h4LoP":[function(require,module,exports) {
'use strict';
var utils = require('../utils');
var SHA256 = require('./256');
function SHA224() {
    if (!(this instanceof SHA224)) return new SHA224();
    SHA256.call(this);
    this.h = [
        3238371032,
        914150663,
        812702999,
        4144912697,
        4290775857,
        1750603025,
        1694076839,
        3204075428
    ];
}
utils.inherits(SHA224, SHA256);
module.exports = SHA224;
SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;
SHA224.prototype._digest = function digest(enc) {
    // Just truncate output
    if (enc === 'hex') return utils.toHex32(this.h.slice(0, 7), 'big');
    else return utils.split32(this.h.slice(0, 7), 'big');
};

},{"../utils":"h03Vl","./256":"h3ezI"}],"h3ezI":[function(require,module,exports) {
'use strict';
var utils = require('../utils');
var common = require('../common');
var shaCommon = require('./common');
var assert = require('minimalistic-assert');
var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;
var BlockHash = common.BlockHash;
var sha256_K = [
    1116352408,
    1899447441,
    3049323471,
    3921009573,
    961987163,
    1508970993,
    2453635748,
    2870763221,
    3624381080,
    310598401,
    607225278,
    1426881987,
    1925078388,
    2162078206,
    2614888103,
    3248222580,
    3835390401,
    4022224774,
    264347078,
    604807628,
    770255983,
    1249150122,
    1555081692,
    1996064986,
    2554220882,
    2821834349,
    2952996808,
    3210313671,
    3336571891,
    3584528711,
    113926993,
    338241895,
    666307205,
    773529912,
    1294757372,
    1396182291,
    1695183700,
    1986661051,
    2177026350,
    2456956037,
    2730485921,
    2820302411,
    3259730800,
    3345764771,
    3516065817,
    3600352804,
    4094571909,
    275423344,
    430227734,
    506948616,
    659060556,
    883997877,
    958139571,
    1322822218,
    1537002063,
    1747873779,
    1955562222,
    2024104815,
    2227730452,
    2361852424,
    2428436474,
    2756734187,
    3204031479,
    3329325298
];
function SHA256() {
    if (!(this instanceof SHA256)) return new SHA256();
    BlockHash.call(this);
    this.h = [
        1779033703,
        3144134277,
        1013904242,
        2773480762,
        1359893119,
        2600822924,
        528734635,
        1541459225
    ];
    this.k = sha256_K;
    this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
module.exports = SHA256;
SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;
SHA256.prototype._update = function _update(msg, start) {
    var W = this.W;
    for(var i = 0; i < 16; i++)W[i] = msg[start + i];
    for(; i < W.length; i++)W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);
    var a = this.h[0];
    var b = this.h[1];
    var c = this.h[2];
    var d = this.h[3];
    var e = this.h[4];
    var f = this.h[5];
    var g = this.h[6];
    var h = this.h[7];
    assert(this.k.length === W.length);
    for(i = 0; i < W.length; i++){
        var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
        var T2 = sum32(s0_256(a), maj32(a, b, c));
        h = g;
        g = f;
        f = e;
        e = sum32(d, T1);
        d = c;
        c = b;
        b = a;
        a = sum32(T1, T2);
    }
    this.h[0] = sum32(this.h[0], a);
    this.h[1] = sum32(this.h[1], b);
    this.h[2] = sum32(this.h[2], c);
    this.h[3] = sum32(this.h[3], d);
    this.h[4] = sum32(this.h[4], e);
    this.h[5] = sum32(this.h[5], f);
    this.h[6] = sum32(this.h[6], g);
    this.h[7] = sum32(this.h[7], h);
};
SHA256.prototype._digest = function digest(enc) {
    if (enc === 'hex') return utils.toHex32(this.h, 'big');
    else return utils.split32(this.h, 'big');
};

},{"../utils":"h03Vl","../common":"irFed","./common":"vugco","minimalistic-assert":"fS90O"}],"9J0HS":[function(require,module,exports) {
'use strict';
var utils = require('../utils');
var SHA512 = require('./512');
function SHA384() {
    if (!(this instanceof SHA384)) return new SHA384();
    SHA512.call(this);
    this.h = [
        3418070365,
        3238371032,
        1654270250,
        914150663,
        2438529370,
        812702999,
        355462360,
        4144912697,
        1731405415,
        4290775857,
        2394180231,
        1750603025,
        3675008525,
        1694076839,
        1203062813,
        3204075428
    ];
}
utils.inherits(SHA384, SHA512);
module.exports = SHA384;
SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;
SHA384.prototype._digest = function digest(enc) {
    if (enc === 'hex') return utils.toHex32(this.h.slice(0, 12), 'big');
    else return utils.split32(this.h.slice(0, 12), 'big');
};

},{"../utils":"h03Vl","./512":"21oHs"}],"21oHs":[function(require,module,exports) {
'use strict';
var utils = require('../utils');
var common = require('../common');
var assert = require('minimalistic-assert');
var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;
var BlockHash = common.BlockHash;
var sha512_K = [
    1116352408,
    3609767458,
    1899447441,
    602891725,
    3049323471,
    3964484399,
    3921009573,
    2173295548,
    961987163,
    4081628472,
    1508970993,
    3053834265,
    2453635748,
    2937671579,
    2870763221,
    3664609560,
    3624381080,
    2734883394,
    310598401,
    1164996542,
    607225278,
    1323610764,
    1426881987,
    3590304994,
    1925078388,
    4068182383,
    2162078206,
    991336113,
    2614888103,
    633803317,
    3248222580,
    3479774868,
    3835390401,
    2666613458,
    4022224774,
    944711139,
    264347078,
    2341262773,
    604807628,
    2007800933,
    770255983,
    1495990901,
    1249150122,
    1856431235,
    1555081692,
    3175218132,
    1996064986,
    2198950837,
    2554220882,
    3999719339,
    2821834349,
    766784016,
    2952996808,
    2566594879,
    3210313671,
    3203337956,
    3336571891,
    1034457026,
    3584528711,
    2466948901,
    113926993,
    3758326383,
    338241895,
    168717936,
    666307205,
    1188179964,
    773529912,
    1546045734,
    1294757372,
    1522805485,
    1396182291,
    2643833823,
    1695183700,
    2343527390,
    1986661051,
    1014477480,
    2177026350,
    1206759142,
    2456956037,
    344077627,
    2730485921,
    1290863460,
    2820302411,
    3158454273,
    3259730800,
    3505952657,
    3345764771,
    106217008,
    3516065817,
    3606008344,
    3600352804,
    1432725776,
    4094571909,
    1467031594,
    275423344,
    851169720,
    430227734,
    3100823752,
    506948616,
    1363258195,
    659060556,
    3750685593,
    883997877,
    3785050280,
    958139571,
    3318307427,
    1322822218,
    3812723403,
    1537002063,
    2003034995,
    1747873779,
    3602036899,
    1955562222,
    1575990012,
    2024104815,
    1125592928,
    2227730452,
    2716904306,
    2361852424,
    442776044,
    2428436474,
    593698344,
    2756734187,
    3733110249,
    3204031479,
    2999351573,
    3329325298,
    3815920427,
    3391569614,
    3928383900,
    3515267271,
    566280711,
    3940187606,
    3454069534,
    4118630271,
    4000239992,
    116418474,
    1914138554,
    174292421,
    2731055270,
    289380356,
    3203993006,
    460393269,
    320620315,
    685471733,
    587496836,
    852142971,
    1086792851,
    1017036298,
    365543100,
    1126000580,
    2618297676,
    1288033470,
    3409855158,
    1501505948,
    4234509866,
    1607167915,
    987167468,
    1816402316,
    1246189591
];
function SHA512() {
    if (!(this instanceof SHA512)) return new SHA512();
    BlockHash.call(this);
    this.h = [
        1779033703,
        4089235720,
        3144134277,
        2227873595,
        1013904242,
        4271175723,
        2773480762,
        1595750129,
        1359893119,
        2917565137,
        2600822924,
        725511199,
        528734635,
        4215389547,
        1541459225,
        327033209
    ];
    this.k = sha512_K;
    this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
module.exports = SHA512;
SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;
SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
    var W = this.W;
    // 32 x 32bit words
    for(var i = 0; i < 32; i++)W[i] = msg[start + i];
    for(; i < W.length; i += 2){
        var c0_hi = g1_512_hi(W[i - 4], W[i - 3]); // i - 2
        var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
        var c1_hi = W[i - 14]; // i - 7
        var c1_lo = W[i - 13];
        var c2_hi = g0_512_hi(W[i - 30], W[i - 29]); // i - 15
        var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
        var c3_hi = W[i - 32]; // i - 16
        var c3_lo = W[i - 31];
        W[i] = sum64_4_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);
        W[i + 1] = sum64_4_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);
    }
};
SHA512.prototype._update = function _update(msg, start) {
    this._prepareBlock(msg, start);
    var W = this.W;
    var ah = this.h[0];
    var al = this.h[1];
    var bh = this.h[2];
    var bl = this.h[3];
    var ch = this.h[4];
    var cl = this.h[5];
    var dh = this.h[6];
    var dl = this.h[7];
    var eh = this.h[8];
    var el = this.h[9];
    var fh = this.h[10];
    var fl = this.h[11];
    var gh = this.h[12];
    var gl = this.h[13];
    var hh = this.h[14];
    var hl = this.h[15];
    assert(this.k.length === W.length);
    for(var i = 0; i < W.length; i += 2){
        var c0_hi = hh;
        var c0_lo = hl;
        var c1_hi = s1_512_hi(eh, el);
        var c1_lo = s1_512_lo(eh, el);
        var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
        var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
        var c3_hi = this.k[i];
        var c3_lo = this.k[i + 1];
        var c4_hi = W[i];
        var c4_lo = W[i + 1];
        var T1_hi = sum64_5_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);
        var T1_lo = sum64_5_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);
        c0_hi = s0_512_hi(ah, al);
        c0_lo = s0_512_lo(ah, al);
        c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
        c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);
        var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
        var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);
        hh = gh;
        hl = gl;
        gh = fh;
        gl = fl;
        fh = eh;
        fl = el;
        eh = sum64_hi(dh, dl, T1_hi, T1_lo);
        el = sum64_lo(dl, dl, T1_hi, T1_lo);
        dh = ch;
        dl = cl;
        ch = bh;
        cl = bl;
        bh = ah;
        bl = al;
        ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
        al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
    }
    sum64(this.h, 0, ah, al);
    sum64(this.h, 2, bh, bl);
    sum64(this.h, 4, ch, cl);
    sum64(this.h, 6, dh, dl);
    sum64(this.h, 8, eh, el);
    sum64(this.h, 10, fh, fl);
    sum64(this.h, 12, gh, gl);
    sum64(this.h, 14, hh, hl);
};
SHA512.prototype._digest = function digest(enc) {
    if (enc === 'hex') return utils.toHex32(this.h, 'big');
    else return utils.split32(this.h, 'big');
};
function ch64_hi(xh, xl, yh, yl, zh) {
    var r = xh & yh ^ ~xh & zh;
    if (r < 0) r += 4294967296;
    return r;
}
function ch64_lo(xh, xl, yh, yl, zh, zl) {
    var r = xl & yl ^ ~xl & zl;
    if (r < 0) r += 4294967296;
    return r;
}
function maj64_hi(xh, xl, yh, yl, zh) {
    var r = xh & yh ^ xh & zh ^ yh & zh;
    if (r < 0) r += 4294967296;
    return r;
}
function maj64_lo(xh, xl, yh, yl, zh, zl) {
    var r = xl & yl ^ xl & zl ^ yl & zl;
    if (r < 0) r += 4294967296;
    return r;
}
function s0_512_hi(xh, xl) {
    var c0_hi = rotr64_hi(xh, xl, 28);
    var c1_hi = rotr64_hi(xl, xh, 2); // 34
    var c2_hi = rotr64_hi(xl, xh, 7); // 39
    var r = c0_hi ^ c1_hi ^ c2_hi;
    if (r < 0) r += 4294967296;
    return r;
}
function s0_512_lo(xh, xl) {
    var c0_lo = rotr64_lo(xh, xl, 28);
    var c1_lo = rotr64_lo(xl, xh, 2); // 34
    var c2_lo = rotr64_lo(xl, xh, 7); // 39
    var r = c0_lo ^ c1_lo ^ c2_lo;
    if (r < 0) r += 4294967296;
    return r;
}
function s1_512_hi(xh, xl) {
    var c0_hi = rotr64_hi(xh, xl, 14);
    var c1_hi = rotr64_hi(xh, xl, 18);
    var c2_hi = rotr64_hi(xl, xh, 9); // 41
    var r = c0_hi ^ c1_hi ^ c2_hi;
    if (r < 0) r += 4294967296;
    return r;
}
function s1_512_lo(xh, xl) {
    var c0_lo = rotr64_lo(xh, xl, 14);
    var c1_lo = rotr64_lo(xh, xl, 18);
    var c2_lo = rotr64_lo(xl, xh, 9); // 41
    var r = c0_lo ^ c1_lo ^ c2_lo;
    if (r < 0) r += 4294967296;
    return r;
}
function g0_512_hi(xh, xl) {
    var c0_hi = rotr64_hi(xh, xl, 1);
    var c1_hi = rotr64_hi(xh, xl, 8);
    var c2_hi = shr64_hi(xh, xl, 7);
    var r = c0_hi ^ c1_hi ^ c2_hi;
    if (r < 0) r += 4294967296;
    return r;
}
function g0_512_lo(xh, xl) {
    var c0_lo = rotr64_lo(xh, xl, 1);
    var c1_lo = rotr64_lo(xh, xl, 8);
    var c2_lo = shr64_lo(xh, xl, 7);
    var r = c0_lo ^ c1_lo ^ c2_lo;
    if (r < 0) r += 4294967296;
    return r;
}
function g1_512_hi(xh, xl) {
    var c0_hi = rotr64_hi(xh, xl, 19);
    var c1_hi = rotr64_hi(xl, xh, 29); // 61
    var c2_hi = shr64_hi(xh, xl, 6);
    var r = c0_hi ^ c1_hi ^ c2_hi;
    if (r < 0) r += 4294967296;
    return r;
}
function g1_512_lo(xh, xl) {
    var c0_lo = rotr64_lo(xh, xl, 19);
    var c1_lo = rotr64_lo(xl, xh, 29); // 61
    var c2_lo = shr64_lo(xh, xl, 6);
    var r = c0_lo ^ c1_lo ^ c2_lo;
    if (r < 0) r += 4294967296;
    return r;
}

},{"../utils":"h03Vl","../common":"irFed","minimalistic-assert":"fS90O"}],"1VwRi":[function(require,module,exports) {
'use strict';
var utils = require('./utils');
var common = require('./common');
var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;
function RIPEMD160() {
    if (!(this instanceof RIPEMD160)) return new RIPEMD160();
    BlockHash.call(this);
    this.h = [
        1732584193,
        4023233417,
        2562383102,
        271733878,
        3285377520
    ];
    this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;
RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;
RIPEMD160.prototype._update = function update(msg, start) {
    var A = this.h[0];
    var B = this.h[1];
    var C = this.h[2];
    var D = this.h[3];
    var E = this.h[4];
    var Ah = A;
    var Bh = B;
    var Ch = C;
    var Dh = D;
    var Eh = E;
    for(var j = 0; j < 80; j++){
        var T = sum32(rotl32(sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)), s[j]), E);
        A = E;
        E = D;
        D = rotl32(C, 10);
        C = B;
        B = T;
        T = sum32(rotl32(sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)), sh[j]), Eh);
        Ah = Eh;
        Eh = Dh;
        Dh = rotl32(Ch, 10);
        Ch = Bh;
        Bh = T;
    }
    T = sum32_3(this.h[1], C, Dh);
    this.h[1] = sum32_3(this.h[2], D, Eh);
    this.h[2] = sum32_3(this.h[3], E, Ah);
    this.h[3] = sum32_3(this.h[4], A, Bh);
    this.h[4] = sum32_3(this.h[0], B, Ch);
    this.h[0] = T;
};
RIPEMD160.prototype._digest = function digest(enc) {
    if (enc === 'hex') return utils.toHex32(this.h, 'little');
    else return utils.split32(this.h, 'little');
};
function f(j, x, y, z) {
    if (j <= 15) return x ^ y ^ z;
    else if (j <= 31) return x & y | ~x & z;
    else if (j <= 47) return (x | ~y) ^ z;
    else if (j <= 63) return x & z | y & ~z;
    else return x ^ (y | ~z);
}
function K(j) {
    if (j <= 15) return 0;
    else if (j <= 31) return 1518500249;
    else if (j <= 47) return 1859775393;
    else if (j <= 63) return 2400959708;
    else return 2840853838;
}
function Kh(j) {
    if (j <= 15) return 1352829926;
    else if (j <= 31) return 1548603684;
    else if (j <= 47) return 1836072691;
    else if (j <= 63) return 2053994217;
    else return 0;
}
var r = [
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    7,
    4,
    13,
    1,
    10,
    6,
    15,
    3,
    12,
    0,
    9,
    5,
    2,
    14,
    11,
    8,
    3,
    10,
    14,
    4,
    9,
    15,
    8,
    1,
    2,
    7,
    0,
    6,
    13,
    11,
    5,
    12,
    1,
    9,
    11,
    10,
    0,
    8,
    12,
    4,
    13,
    3,
    7,
    15,
    14,
    5,
    6,
    2,
    4,
    0,
    5,
    9,
    7,
    12,
    2,
    10,
    14,
    1,
    3,
    8,
    11,
    6,
    15,
    13
];
var rh = [
    5,
    14,
    7,
    0,
    9,
    2,
    11,
    4,
    13,
    6,
    15,
    8,
    1,
    10,
    3,
    12,
    6,
    11,
    3,
    7,
    0,
    13,
    5,
    10,
    14,
    15,
    8,
    12,
    4,
    9,
    1,
    2,
    15,
    5,
    1,
    3,
    7,
    14,
    6,
    9,
    11,
    8,
    12,
    2,
    10,
    0,
    4,
    13,
    8,
    6,
    4,
    1,
    3,
    11,
    15,
    0,
    5,
    12,
    2,
    13,
    9,
    7,
    10,
    14,
    12,
    15,
    10,
    4,
    1,
    5,
    8,
    7,
    6,
    2,
    13,
    14,
    0,
    3,
    9,
    11
];
var s = [
    11,
    14,
    15,
    12,
    5,
    8,
    7,
    9,
    11,
    13,
    14,
    15,
    6,
    7,
    9,
    8,
    7,
    6,
    8,
    13,
    11,
    9,
    7,
    15,
    7,
    12,
    15,
    9,
    11,
    7,
    13,
    12,
    11,
    13,
    6,
    7,
    14,
    9,
    13,
    15,
    14,
    8,
    13,
    6,
    5,
    12,
    7,
    5,
    11,
    12,
    14,
    15,
    14,
    15,
    9,
    8,
    9,
    14,
    5,
    6,
    8,
    6,
    5,
    12,
    9,
    15,
    5,
    11,
    6,
    8,
    13,
    12,
    5,
    12,
    13,
    14,
    11,
    8,
    5,
    6
];
var sh = [
    8,
    9,
    9,
    11,
    13,
    15,
    15,
    5,
    7,
    7,
    8,
    11,
    14,
    14,
    12,
    6,
    9,
    13,
    15,
    7,
    12,
    8,
    9,
    11,
    7,
    7,
    12,
    7,
    6,
    15,
    13,
    11,
    9,
    7,
    15,
    11,
    8,
    6,
    6,
    14,
    12,
    13,
    5,
    14,
    13,
    13,
    7,
    5,
    15,
    5,
    8,
    11,
    14,
    14,
    6,
    14,
    6,
    9,
    12,
    9,
    12,
    5,
    15,
    8,
    8,
    5,
    12,
    9,
    12,
    5,
    14,
    6,
    8,
    13,
    6,
    5,
    15,
    13,
    11,
    11
];

},{"./utils":"h03Vl","./common":"irFed"}],"4ixfR":[function(require,module,exports) {
'use strict';
var utils = require('./utils');
var assert = require('minimalistic-assert');
function Hmac(hash, key, enc) {
    if (!(this instanceof Hmac)) return new Hmac(hash, key, enc);
    this.Hash = hash;
    this.blockSize = hash.blockSize / 8;
    this.outSize = hash.outSize / 8;
    this.inner = null;
    this.outer = null;
    this._init(utils.toArray(key, enc));
}
module.exports = Hmac;
Hmac.prototype._init = function init(key) {
    // Shorten key, if needed
    if (key.length > this.blockSize) key = new this.Hash().update(key).digest();
    assert(key.length <= this.blockSize);
    // Add padding to key
    for(var i = key.length; i < this.blockSize; i++)key.push(0);
    for(i = 0; i < key.length; i++)key[i] ^= 54;
    this.inner = new this.Hash().update(key);
    // 0x36 ^ 0x5c = 0x6a
    for(i = 0; i < key.length; i++)key[i] ^= 106;
    this.outer = new this.Hash().update(key);
};
Hmac.prototype.update = function update(msg, enc) {
    this.inner.update(msg, enc);
    return this;
};
Hmac.prototype.digest = function digest(enc) {
    this.outer.update(this.inner.digest());
    return this.outer.digest(enc);
};

},{"./utils":"h03Vl","minimalistic-assert":"fS90O"}],"98Yrp":[function(require,module,exports) {
module.exports = {
    doubles: {
        step: 4,
        points: [
            [
                'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
                'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821', 
            ],
            [
                '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
                '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf', 
            ],
            [
                '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
                'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695', 
            ],
            [
                '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
                '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9', 
            ],
            [
                '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
                '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36', 
            ],
            [
                '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
                '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f', 
            ],
            [
                'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
                '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999', 
            ],
            [
                '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
                'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09', 
            ],
            [
                'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
                '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d', 
            ],
            [
                'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
                'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088', 
            ],
            [
                'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
                '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d', 
            ],
            [
                '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
                '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8', 
            ],
            [
                '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
                '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a', 
            ],
            [
                '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
                '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453', 
            ],
            [
                '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
                '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160', 
            ],
            [
                '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
                '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0', 
            ],
            [
                '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
                '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6', 
            ],
            [
                '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
                '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589', 
            ],
            [
                '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
                'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17', 
            ],
            [
                'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
                '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda', 
            ],
            [
                'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
                '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd', 
            ],
            [
                '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
                '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2', 
            ],
            [
                '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
                '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6', 
            ],
            [
                'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
                '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f', 
            ],
            [
                '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
                'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01', 
            ],
            [
                'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
                '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3', 
            ],
            [
                'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
                'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f', 
            ],
            [
                'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
                '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7', 
            ],
            [
                'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
                'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78', 
            ],
            [
                'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
                '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1', 
            ],
            [
                '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
                'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150', 
            ],
            [
                '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
                '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82', 
            ],
            [
                'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
                '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc', 
            ],
            [
                '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
                'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b', 
            ],
            [
                'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
                '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51', 
            ],
            [
                'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
                '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45', 
            ],
            [
                'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
                'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120', 
            ],
            [
                '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
                '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84', 
            ],
            [
                '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
                '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d', 
            ],
            [
                '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
                'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d', 
            ],
            [
                '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
                '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8', 
            ],
            [
                'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
                '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8', 
            ],
            [
                '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
                '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac', 
            ],
            [
                '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
                'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f', 
            ],
            [
                '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
                '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962', 
            ],
            [
                'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
                '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907', 
            ],
            [
                '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
                'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec', 
            ],
            [
                'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
                'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d', 
            ],
            [
                'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
                '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414', 
            ],
            [
                '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
                'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd', 
            ],
            [
                '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
                'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0', 
            ],
            [
                'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
                '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811', 
            ],
            [
                'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
                '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1', 
            ],
            [
                'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
                '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c', 
            ],
            [
                '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
                'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73', 
            ],
            [
                '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
                '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd', 
            ],
            [
                'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
                'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405', 
            ],
            [
                '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
                'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589', 
            ],
            [
                '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
                '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e', 
            ],
            [
                '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
                '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27', 
            ],
            [
                'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
                'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1', 
            ],
            [
                '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
                '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482', 
            ],
            [
                '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
                '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945', 
            ],
            [
                'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
                '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573', 
            ],
            [
                'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
                'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82', 
            ], 
        ]
    },
    naf: {
        wnd: 7,
        points: [
            [
                'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
                '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672', 
            ],
            [
                '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
                'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6', 
            ],
            [
                '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
                '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da', 
            ],
            [
                'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
                'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37', 
            ],
            [
                '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
                'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b', 
            ],
            [
                'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
                'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81', 
            ],
            [
                'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
                '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58', 
            ],
            [
                'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
                '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77', 
            ],
            [
                '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
                '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a', 
            ],
            [
                '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
                '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c', 
            ],
            [
                '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
                '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67', 
            ],
            [
                '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
                '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402', 
            ],
            [
                'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
                'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55', 
            ],
            [
                'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
                '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482', 
            ],
            [
                '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
                'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82', 
            ],
            [
                '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
                'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396', 
            ],
            [
                '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
                '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49', 
            ],
            [
                '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
                '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf', 
            ],
            [
                '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
                '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a', 
            ],
            [
                '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
                'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7', 
            ],
            [
                'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
                'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933', 
            ],
            [
                '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
                '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a', 
            ],
            [
                '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
                '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6', 
            ],
            [
                'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
                'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37', 
            ],
            [
                '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
                '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e', 
            ],
            [
                'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
                'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6', 
            ],
            [
                'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
                'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476', 
            ],
            [
                '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
                '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40', 
            ],
            [
                '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
                '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61', 
            ],
            [
                '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
                '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683', 
            ],
            [
                'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
                '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5', 
            ],
            [
                '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
                '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b', 
            ],
            [
                'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
                '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417', 
            ],
            [
                '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
                'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868', 
            ],
            [
                '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
                'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a', 
            ],
            [
                'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
                'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6', 
            ],
            [
                '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
                '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996', 
            ],
            [
                '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
                'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e', 
            ],
            [
                'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
                'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d', 
            ],
            [
                '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
                '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2', 
            ],
            [
                '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
                'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e', 
            ],
            [
                '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
                '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437', 
            ],
            [
                '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
                'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311', 
            ],
            [
                'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
                '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4', 
            ],
            [
                '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
                '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575', 
            ],
            [
                '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
                'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d', 
            ],
            [
                '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
                'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d', 
            ],
            [
                'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
                'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629', 
            ],
            [
                'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
                'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06', 
            ],
            [
                '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
                '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374', 
            ],
            [
                '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
                '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee', 
            ],
            [
                'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
                '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1', 
            ],
            [
                'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
                'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b', 
            ],
            [
                '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
                '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661', 
            ],
            [
                '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
                '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6', 
            ],
            [
                'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
                '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e', 
            ],
            [
                '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
                '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d', 
            ],
            [
                'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
                'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc', 
            ],
            [
                '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
                'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4', 
            ],
            [
                '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
                '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c', 
            ],
            [
                'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
                '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b', 
            ],
            [
                'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
                '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913', 
            ],
            [
                '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
                '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154', 
            ],
            [
                '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
                '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865', 
            ],
            [
                '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
                'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc', 
            ],
            [
                '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
                'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224', 
            ],
            [
                '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
                '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e', 
            ],
            [
                '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
                '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6', 
            ],
            [
                '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
                '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511', 
            ],
            [
                '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
                'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b', 
            ],
            [
                'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
                'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2', 
            ],
            [
                '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
                'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c', 
            ],
            [
                'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
                '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3', 
            ],
            [
                'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
                '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d', 
            ],
            [
                'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
                '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700', 
            ],
            [
                'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
                '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4', 
            ],
            [
                '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
                'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196', 
            ],
            [
                '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
                '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4', 
            ],
            [
                '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
                'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257', 
            ],
            [
                'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
                'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13', 
            ],
            [
                'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
                '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096', 
            ],
            [
                'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
                'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38', 
            ],
            [
                'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
                '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f', 
            ],
            [
                '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
                '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448', 
            ],
            [
                'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
                '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a', 
            ],
            [
                'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
                '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4', 
            ],
            [
                '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
                '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437', 
            ],
            [
                '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
                'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7', 
            ],
            [
                'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
                '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d', 
            ],
            [
                'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
                '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a', 
            ],
            [
                'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
                '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54', 
            ],
            [
                '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
                '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77', 
            ],
            [
                'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
                'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517', 
            ],
            [
                '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
                'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10', 
            ],
            [
                'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
                'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125', 
            ],
            [
                'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
                '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e', 
            ],
            [
                '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
                'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1', 
            ],
            [
                'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
                '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2', 
            ],
            [
                'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
                '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423', 
            ],
            [
                'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
                '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8', 
            ],
            [
                '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
                'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758', 
            ],
            [
                '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
                'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375', 
            ],
            [
                'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
                '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d', 
            ],
            [
                '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
                'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec', 
            ],
            [
                '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
                '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0', 
            ],
            [
                '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
                'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c', 
            ],
            [
                'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
                'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4', 
            ],
            [
                '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
                'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f', 
            ],
            [
                '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
                '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649', 
            ],
            [
                '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
                'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826', 
            ],
            [
                '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
                '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5', 
            ],
            [
                'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
                'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87', 
            ],
            [
                '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
                '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b', 
            ],
            [
                'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
                '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc', 
            ],
            [
                '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
                '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c', 
            ],
            [
                'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
                'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f', 
            ],
            [
                'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
                '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a', 
            ],
            [
                'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
                'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46', 
            ],
            [
                '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
                'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f', 
            ],
            [
                '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
                '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03', 
            ],
            [
                '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
                'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08', 
            ],
            [
                '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
                '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8', 
            ],
            [
                '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
                '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373', 
            ],
            [
                '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
                'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3', 
            ],
            [
                '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
                '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8', 
            ],
            [
                '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
                '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1', 
            ],
            [
                '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
                '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9', 
            ], 
        ]
    }
};

},{}],"bm5B1":[function(require,module,exports) {
'use strict';
var BN = require('bn.js');
var HmacDRBG = require('hmac-drbg');
var utils = require('../utils');
var curves = require('../curves');
var rand = require('brorand');
var assert = utils.assert;
var KeyPair = require('./key');
var Signature = require('./signature');
function EC(options) {
    if (!(this instanceof EC)) return new EC(options);
    // Shortcut `elliptic.ec(curve-name)`
    if (typeof options === 'string') {
        assert(Object.prototype.hasOwnProperty.call(curves, options), 'Unknown curve ' + options);
        options = curves[options];
    }
    // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
    if (options instanceof curves.PresetCurve) options = {
        curve: options
    };
    this.curve = options.curve.curve;
    this.n = this.curve.n;
    this.nh = this.n.ushrn(1);
    this.g = this.curve.g;
    // Point on curve
    this.g = options.curve.g;
    this.g.precompute(options.curve.n.bitLength() + 1);
    // Hash for function for DRBG
    this.hash = options.hash || options.curve.hash;
}
module.exports = EC;
EC.prototype.keyPair = function keyPair(options) {
    return new KeyPair(this, options);
};
EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
    return KeyPair.fromPrivate(this, priv, enc);
};
EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
    return KeyPair.fromPublic(this, pub, enc);
};
EC.prototype.genKeyPair = function genKeyPair(options) {
    if (!options) options = {
    };
    // Instantiate Hmac_DRBG
    var drbg = new HmacDRBG({
        hash: this.hash,
        pers: options.pers,
        persEnc: options.persEnc || 'utf8',
        entropy: options.entropy || rand(this.hash.hmacStrength),
        entropyEnc: options.entropy && options.entropyEnc || 'utf8',
        nonce: this.n.toArray()
    });
    var bytes = this.n.byteLength();
    var ns2 = this.n.sub(new BN(2));
    for(;;){
        var priv = new BN(drbg.generate(bytes));
        if (priv.cmp(ns2) > 0) continue;
        priv.iaddn(1);
        return this.keyFromPrivate(priv);
    }
};
EC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {
    var delta = msg.byteLength() * 8 - this.n.bitLength();
    if (delta > 0) msg = msg.ushrn(delta);
    if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);
    else return msg;
};
EC.prototype.sign = function sign(msg, key, enc, options) {
    if (typeof enc === 'object') {
        options = enc;
        enc = null;
    }
    if (!options) options = {
    };
    key = this.keyFromPrivate(key, enc);
    msg = this._truncateToN(new BN(msg, 16));
    // Zero-extend key to provide enough entropy
    var bytes = this.n.byteLength();
    var bkey = key.getPrivate().toArray('be', bytes);
    // Zero-extend nonce to have the same byte size as N
    var nonce = msg.toArray('be', bytes);
    // Instantiate Hmac_DRBG
    var drbg = new HmacDRBG({
        hash: this.hash,
        entropy: bkey,
        nonce: nonce,
        pers: options.pers,
        persEnc: options.persEnc || 'utf8'
    });
    // Number of bytes to generate
    var ns1 = this.n.sub(new BN(1));
    for(var iter = 0;; iter++){
        var k = options.k ? options.k(iter) : new BN(drbg.generate(this.n.byteLength()));
        k = this._truncateToN(k, true);
        if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;
        var kp = this.g.mul(k);
        if (kp.isInfinity()) continue;
        var kpX = kp.getX();
        var r = kpX.umod(this.n);
        if (r.cmpn(0) === 0) continue;
        var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
        s = s.umod(this.n);
        if (s.cmpn(0) === 0) continue;
        var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0);
        // Use complement of `s`, if it is > `n / 2`
        if (options.canonical && s.cmp(this.nh) > 0) {
            s = this.n.sub(s);
            recoveryParam ^= 1;
        }
        return new Signature({
            r: r,
            s: s,
            recoveryParam: recoveryParam
        });
    }
};
EC.prototype.verify = function verify(msg, signature, key, enc) {
    msg = this._truncateToN(new BN(msg, 16));
    key = this.keyFromPublic(key, enc);
    signature = new Signature(signature, 'hex');
    // Perform primitive values validation
    var r = signature.r;
    var s = signature.s;
    if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;
    if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false;
    // Validate signature
    var sinv = s.invm(this.n);
    var u1 = sinv.mul(msg).umod(this.n);
    var u2 = sinv.mul(r).umod(this.n);
    var p;
    if (!this.curve._maxwellTrick) {
        p = this.g.mulAdd(u1, key.getPublic(), u2);
        if (p.isInfinity()) return false;
        return p.getX().umod(this.n).cmp(r) === 0;
    }
    // NOTE: Greg Maxwell's trick, inspired by:
    // https://git.io/vad3K
    p = this.g.jmulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity()) return false;
    // Compare `p.x` of Jacobian point with `r`,
    // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
    // inverse of `p.z^2`
    return p.eqXToP(r);
};
EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
    assert((3 & j) === j, 'The recovery param is more than two bits');
    signature = new Signature(signature, enc);
    var n = this.n;
    var e = new BN(msg);
    var r = signature.r;
    var s = signature.s;
    // A set LSB signifies that the y-coordinate is odd
    var isYOdd = j & 1;
    var isSecondKey = j >> 1;
    if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error('Unable to find sencond key candinate');
    // 1.1. Let x = r + jn.
    if (isSecondKey) r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
    else r = this.curve.pointFromX(r, isYOdd);
    var rInv = signature.r.invm(n);
    var s1 = n.sub(e).mul(rInv).umod(n);
    var s2 = s.mul(rInv).umod(n);
    // 1.6.1 Compute Q = r^-1 (sR -  eG)
    //               Q = r^-1 (sR + -eG)
    return this.g.mulAdd(s1, r, s2);
};
EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
    signature = new Signature(signature, enc);
    if (signature.recoveryParam !== null) return signature.recoveryParam;
    for(var i = 0; i < 4; i++){
        var Qprime;
        try {
            Qprime = this.recoverPubKey(e, signature, i);
        } catch (e1) {
            continue;
        }
        if (Qprime.eq(Q)) return i;
    }
    throw new Error('Unable to find valid recovery factor');
};

},{"bn.js":"8lUpb","hmac-drbg":"f177M","../utils":"3rv6w","../curves":"55Vo5","brorand":"auxXf","./key":"cjLFh","./signature":"kVZmL"}],"f177M":[function(require,module,exports) {
'use strict';
var hash = require('hash.js');
var utils = require('minimalistic-crypto-utils');
var assert = require('minimalistic-assert');
function HmacDRBG(options) {
    if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);
    this.hash = options.hash;
    this.predResist = !!options.predResist;
    this.outLen = this.hash.outSize;
    this.minEntropy = options.minEntropy || this.hash.hmacStrength;
    this._reseed = null;
    this.reseedInterval = null;
    this.K = null;
    this.V = null;
    var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
    var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
    var pers = utils.toArray(options.pers, options.persEnc || 'hex');
    assert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
    this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;
HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
    var seed = entropy.concat(nonce).concat(pers);
    this.K = new Array(this.outLen / 8);
    this.V = new Array(this.outLen / 8);
    for(var i = 0; i < this.V.length; i++){
        this.K[i] = 0;
        this.V[i] = 1;
    }
    this._update(seed);
    this._reseed = 1;
    this.reseedInterval = 281474976710656; // 2^48
};
HmacDRBG.prototype._hmac = function hmac() {
    return new hash.hmac(this.hash, this.K);
};
HmacDRBG.prototype._update = function update(seed) {
    var kmac = this._hmac().update(this.V).update([
        0
    ]);
    if (seed) kmac = kmac.update(seed);
    this.K = kmac.digest();
    this.V = this._hmac().update(this.V).digest();
    if (!seed) return;
    this.K = this._hmac().update(this.V).update([
        1
    ]).update(seed).digest();
    this.V = this._hmac().update(this.V).digest();
};
HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
    // Optional entropy enc
    if (typeof entropyEnc !== 'string') {
        addEnc = add;
        add = entropyEnc;
        entropyEnc = null;
    }
    entropy = utils.toArray(entropy, entropyEnc);
    add = utils.toArray(add, addEnc);
    assert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
    this._update(entropy.concat(add || []));
    this._reseed = 1;
};
HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
    if (this._reseed > this.reseedInterval) throw new Error('Reseed is required');
    // Optional encoding
    if (typeof enc !== 'string') {
        addEnc = add;
        add = enc;
        enc = null;
    }
    // Optional additional data
    if (add) {
        add = utils.toArray(add, addEnc || 'hex');
        this._update(add);
    }
    var temp = [];
    while(temp.length < len){
        this.V = this._hmac().update(this.V).digest();
        temp = temp.concat(this.V);
    }
    var res = temp.slice(0, len);
    this._update(add);
    this._reseed++;
    return utils.encode(res, enc);
};

},{"hash.js":"gVvfM","minimalistic-crypto-utils":"4XYD1","minimalistic-assert":"fS90O"}],"cjLFh":[function(require,module,exports) {
'use strict';
var BN = require('bn.js');
var utils = require('../utils');
var assert = utils.assert;
function KeyPair(ec, options) {
    this.ec = ec;
    this.priv = null;
    this.pub = null;
    // KeyPair(ec, { priv: ..., pub: ... })
    if (options.priv) this._importPrivate(options.priv, options.privEnc);
    if (options.pub) this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;
KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
    if (pub instanceof KeyPair) return pub;
    return new KeyPair(ec, {
        pub: pub,
        pubEnc: enc
    });
};
KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
    if (priv instanceof KeyPair) return priv;
    return new KeyPair(ec, {
        priv: priv,
        privEnc: enc
    });
};
KeyPair.prototype.validate = function validate() {
    var pub = this.getPublic();
    if (pub.isInfinity()) return {
        result: false,
        reason: 'Invalid public key'
    };
    if (!pub.validate()) return {
        result: false,
        reason: 'Public key is not a point'
    };
    if (!pub.mul(this.ec.curve.n).isInfinity()) return {
        result: false,
        reason: 'Public key * N != O'
    };
    return {
        result: true,
        reason: null
    };
};
KeyPair.prototype.getPublic = function getPublic(compact, enc) {
    // compact is optional argument
    if (typeof compact === 'string') {
        enc = compact;
        compact = null;
    }
    if (!this.pub) this.pub = this.ec.g.mul(this.priv);
    if (!enc) return this.pub;
    return this.pub.encode(enc, compact);
};
KeyPair.prototype.getPrivate = function getPrivate(enc) {
    if (enc === 'hex') return this.priv.toString(16, 2);
    else return this.priv;
};
KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
    this.priv = new BN(key, enc || 16);
    // Ensure that the priv won't be bigger than n, otherwise we may fail
    // in fixed multiplication method
    this.priv = this.priv.umod(this.ec.curve.n);
};
KeyPair.prototype._importPublic = function _importPublic(key, enc) {
    if (key.x || key.y) {
        // Montgomery points only have an `x` coordinate.
        // Weierstrass/Edwards points on the other hand have both `x` and
        // `y` coordinates.
        if (this.ec.curve.type === 'mont') assert(key.x, 'Need x coordinate');
        else if (this.ec.curve.type === 'short' || this.ec.curve.type === 'edwards') assert(key.x && key.y, 'Need both x and y coordinate');
        this.pub = this.ec.curve.point(key.x, key.y);
        return;
    }
    this.pub = this.ec.curve.decodePoint(key, enc);
};
// ECDH
KeyPair.prototype.derive = function derive(pub) {
    if (!pub.validate()) assert(pub.validate(), 'public point not validated');
    return pub.mul(this.priv).getX();
};
// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
    return this.ec.sign(msg, this, enc, options);
};
KeyPair.prototype.verify = function verify(msg, signature) {
    return this.ec.verify(msg, signature, this);
};
KeyPair.prototype.inspect = function inspect() {
    return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};

},{"bn.js":"8lUpb","../utils":"3rv6w"}],"kVZmL":[function(require,module,exports) {
'use strict';
var BN = require('bn.js');
var utils = require('../utils');
var assert = utils.assert;
function Signature(options, enc) {
    if (options instanceof Signature) return options;
    if (this._importDER(options, enc)) return;
    assert(options.r && options.s, 'Signature without r or s');
    this.r = new BN(options.r, 16);
    this.s = new BN(options.s, 16);
    if (options.recoveryParam === undefined) this.recoveryParam = null;
    else this.recoveryParam = options.recoveryParam;
}
module.exports = Signature;
function Position() {
    this.place = 0;
}
function getLength(buf, p) {
    var initial = buf[p.place++];
    if (!(initial & 128)) return initial;
    var octetLen = initial & 15;
    // Indefinite length or overflow
    if (octetLen === 0 || octetLen > 4) return false;
    var val = 0;
    for(var i = 0, off = p.place; i < octetLen; i++, off++){
        val <<= 8;
        val |= buf[off];
        val >>>= 0;
    }
    // Leading zeroes
    if (val <= 127) return false;
    p.place = off;
    return val;
}
function rmPadding(buf) {
    var i = 0;
    var len = buf.length - 1;
    while(!buf[i] && !(buf[i + 1] & 128) && i < len)i++;
    if (i === 0) return buf;
    return buf.slice(i);
}
Signature.prototype._importDER = function _importDER(data, enc) {
    data = utils.toArray(data, enc);
    var p = new Position();
    if (data[p.place++] !== 48) return false;
    var len = getLength(data, p);
    if (len === false) return false;
    if (len + p.place !== data.length) return false;
    if (data[p.place++] !== 2) return false;
    var rlen = getLength(data, p);
    if (rlen === false) return false;
    var r = data.slice(p.place, rlen + p.place);
    p.place += rlen;
    if (data[p.place++] !== 2) return false;
    var slen = getLength(data, p);
    if (slen === false) return false;
    if (data.length !== slen + p.place) return false;
    var s = data.slice(p.place, slen + p.place);
    if (r[0] === 0) {
        if (r[1] & 128) r = r.slice(1);
        else // Leading zeroes
        return false;
    }
    if (s[0] === 0) {
        if (s[1] & 128) s = s.slice(1);
        else // Leading zeroes
        return false;
    }
    this.r = new BN(r);
    this.s = new BN(s);
    this.recoveryParam = null;
    return true;
};
function constructLength(arr, len) {
    if (len < 128) {
        arr.push(len);
        return;
    }
    var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
    arr.push(octets | 128);
    while(--octets)arr.push(len >>> (octets << 3) & 255);
    arr.push(len);
}
Signature.prototype.toDER = function toDER(enc) {
    var r = this.r.toArray();
    var s = this.s.toArray();
    // Pad values
    if (r[0] & 128) r = [
        0
    ].concat(r);
    // Pad values
    if (s[0] & 128) s = [
        0
    ].concat(s);
    r = rmPadding(r);
    s = rmPadding(s);
    while(!s[0] && !(s[1] & 128))s = s.slice(1);
    var arr = [
        2
    ];
    constructLength(arr, r.length);
    arr = arr.concat(r);
    arr.push(2);
    constructLength(arr, s.length);
    var backHalf = arr.concat(s);
    var res = [
        48
    ];
    constructLength(res, backHalf.length);
    res = res.concat(backHalf);
    return utils.encode(res, enc);
};

},{"bn.js":"8lUpb","../utils":"3rv6w"}],"gZdaU":[function(require,module,exports) {
'use strict';
var hash = require('hash.js');
var curves = require('../curves');
var utils = require('../utils');
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = require('./key');
var Signature = require('./signature');
function EDDSA(curve) {
    assert(curve === 'ed25519', 'only tested with ed25519 so far');
    if (!(this instanceof EDDSA)) return new EDDSA(curve);
    curve = curves[curve].curve;
    this.curve = curve;
    this.g = curve.g;
    this.g.precompute(curve.n.bitLength() + 1);
    this.pointClass = curve.point().constructor;
    this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
    this.hash = hash.sha512;
}
module.exports = EDDSA;
/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/ EDDSA.prototype.sign = function sign(message, secret) {
    message = parseBytes(message);
    var key = this.keyFromSecret(secret);
    var r = this.hashInt(key.messagePrefix(), message);
    var R = this.g.mul(r);
    var Rencoded = this.encodePoint(R);
    var s_ = this.hashInt(Rencoded, key.pubBytes(), message).mul(key.priv());
    var S = r.add(s_).umod(this.curve.n);
    return this.makeSignature({
        R: R,
        S: S,
        Rencoded: Rencoded
    });
};
/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/ EDDSA.prototype.verify = function verify(message, sig, pub) {
    message = parseBytes(message);
    sig = this.makeSignature(sig);
    var key = this.keyFromPublic(pub);
    var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
    var SG = this.g.mul(sig.S());
    var RplusAh = sig.R().add(key.pub().mul(h));
    return RplusAh.eq(SG);
};
EDDSA.prototype.hashInt = function hashInt() {
    var hash1 = this.hash();
    for(var i = 0; i < arguments.length; i++)hash1.update(arguments[i]);
    return utils.intFromLE(hash1.digest()).umod(this.curve.n);
};
EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
    return KeyPair.fromPublic(this, pub);
};
EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
    return KeyPair.fromSecret(this, secret);
};
EDDSA.prototype.makeSignature = function makeSignature(sig) {
    if (sig instanceof Signature) return sig;
    return new Signature(this, sig);
};
/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/ EDDSA.prototype.encodePoint = function encodePoint(point) {
    var enc = point.getY().toArray('le', this.encodingLength);
    enc[this.encodingLength - 1] |= point.getX().isOdd() ? 128 : 0;
    return enc;
};
EDDSA.prototype.decodePoint = function decodePoint(bytes) {
    bytes = utils.parseBytes(bytes);
    var lastIx = bytes.length - 1;
    var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & -129);
    var xIsOdd = (bytes[lastIx] & 128) !== 0;
    var y = utils.intFromLE(normed);
    return this.curve.pointFromY(y, xIsOdd);
};
EDDSA.prototype.encodeInt = function encodeInt(num) {
    return num.toArray('le', this.encodingLength);
};
EDDSA.prototype.decodeInt = function decodeInt(bytes) {
    return utils.intFromLE(bytes);
};
EDDSA.prototype.isPoint = function isPoint(val) {
    return val instanceof this.pointClass;
};

},{"hash.js":"gVvfM","../curves":"55Vo5","../utils":"3rv6w","./key":"2Hm42","./signature":"kaxiX"}],"2Hm42":[function(require,module,exports) {
'use strict';
var utils = require('../utils');
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;
/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/ function KeyPair(eddsa, params) {
    this.eddsa = eddsa;
    this._secret = parseBytes(params.secret);
    if (eddsa.isPoint(params.pub)) this._pub = params.pub;
    else this._pubBytes = parseBytes(params.pub);
}
KeyPair.fromPublic = function fromPublic(eddsa, pub) {
    if (pub instanceof KeyPair) return pub;
    return new KeyPair(eddsa, {
        pub: pub
    });
};
KeyPair.fromSecret = function fromSecret(eddsa, secret) {
    if (secret instanceof KeyPair) return secret;
    return new KeyPair(eddsa, {
        secret: secret
    });
};
KeyPair.prototype.secret = function secret() {
    return this._secret;
};
cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
    return this.eddsa.encodePoint(this.pub());
});
cachedProperty(KeyPair, 'pub', function pub() {
    if (this._pubBytes) return this.eddsa.decodePoint(this._pubBytes);
    return this.eddsa.g.mul(this.priv());
});
cachedProperty(KeyPair, 'privBytes', function privBytes() {
    var eddsa = this.eddsa;
    var hash = this.hash();
    var lastIx = eddsa.encodingLength - 1;
    var a = hash.slice(0, eddsa.encodingLength);
    a[0] &= 248;
    a[lastIx] &= 127;
    a[lastIx] |= 64;
    return a;
});
cachedProperty(KeyPair, 'priv', function priv() {
    return this.eddsa.decodeInt(this.privBytes());
});
cachedProperty(KeyPair, 'hash', function hash() {
    return this.eddsa.hash().update(this.secret()).digest();
});
cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
    return this.hash().slice(this.eddsa.encodingLength);
});
KeyPair.prototype.sign = function sign(message) {
    assert(this._secret, 'KeyPair can only verify');
    return this.eddsa.sign(message, this);
};
KeyPair.prototype.verify = function verify(message, sig) {
    return this.eddsa.verify(message, sig, this);
};
KeyPair.prototype.getSecret = function getSecret(enc) {
    assert(this._secret, 'KeyPair is public only');
    return utils.encode(this.secret(), enc);
};
KeyPair.prototype.getPublic = function getPublic(enc) {
    return utils.encode(this.pubBytes(), enc);
};
module.exports = KeyPair;

},{"../utils":"3rv6w"}],"kaxiX":[function(require,module,exports) {
'use strict';
var BN = require('bn.js');
var utils = require('../utils');
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;
/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/ function Signature(eddsa, sig) {
    this.eddsa = eddsa;
    if (typeof sig !== 'object') sig = parseBytes(sig);
    if (Array.isArray(sig)) sig = {
        R: sig.slice(0, eddsa.encodingLength),
        S: sig.slice(eddsa.encodingLength)
    };
    assert(sig.R && sig.S, 'Signature without R or S');
    if (eddsa.isPoint(sig.R)) this._R = sig.R;
    if (sig.S instanceof BN) this._S = sig.S;
    this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
    this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}
cachedProperty(Signature, 'S', function S() {
    return this.eddsa.decodeInt(this.Sencoded());
});
cachedProperty(Signature, 'R', function R() {
    return this.eddsa.decodePoint(this.Rencoded());
});
cachedProperty(Signature, 'Rencoded', function Rencoded() {
    return this.eddsa.encodePoint(this.R());
});
cachedProperty(Signature, 'Sencoded', function Sencoded() {
    return this.eddsa.encodeInt(this.S());
});
Signature.prototype.toBytes = function toBytes() {
    return this.Rencoded().concat(this.Sencoded());
};
Signature.prototype.toHex = function toHex() {
    return utils.encode(this.toBytes(), 'hex').toUpperCase();
};
module.exports = Signature;

},{"bn.js":"8lUpb","../utils":"3rv6w"}],"auGzq":[function(require,module,exports) {
var asn1 = require('./asn1');
var aesid = require('./aesid.json');
var fixProc = require('./fixProc');
var ciphers = require('browserify-aes');
var compat = require('pbkdf2');
var Buffer = require('safe-buffer').Buffer;
module.exports = parseKeys;
function parseKeys(buffer) {
    var password;
    if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
        password = buffer.passphrase;
        buffer = buffer.key;
    }
    if (typeof buffer === 'string') buffer = Buffer.from(buffer);
    var stripped = fixProc(buffer, password);
    var type = stripped.tag;
    var data = stripped.data;
    var subtype, ndata;
    switch(type){
        case 'CERTIFICATE':
            ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo;
        // falls through
        case 'PUBLIC KEY':
            if (!ndata) ndata = asn1.PublicKey.decode(data, 'der');
            subtype = ndata.algorithm.algorithm.join('.');
            switch(subtype){
                case '1.2.840.113549.1.1.1':
                    return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der');
                case '1.2.840.10045.2.1':
                    ndata.subjectPrivateKey = ndata.subjectPublicKey;
                    return {
                        type: 'ec',
                        data: ndata
                    };
                case '1.2.840.10040.4.1':
                    ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der');
                    return {
                        type: 'dsa',
                        data: ndata.algorithm.params
                    };
                default:
                    throw new Error('unknown key id ' + subtype);
            }
        // throw new Error('unknown key type ' + type)
        case 'ENCRYPTED PRIVATE KEY':
            data = asn1.EncryptedPrivateKey.decode(data, 'der');
            data = decrypt(data, password);
        // falls through
        case 'PRIVATE KEY':
            ndata = asn1.PrivateKey.decode(data, 'der');
            subtype = ndata.algorithm.algorithm.join('.');
            switch(subtype){
                case '1.2.840.113549.1.1.1':
                    return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der');
                case '1.2.840.10045.2.1':
                    return {
                        curve: ndata.algorithm.curve,
                        privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
                    };
                case '1.2.840.10040.4.1':
                    ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der');
                    return {
                        type: 'dsa',
                        params: ndata.algorithm.params
                    };
                default:
                    throw new Error('unknown key id ' + subtype);
            }
        // throw new Error('unknown key type ' + type)
        case 'RSA PUBLIC KEY':
            return asn1.RSAPublicKey.decode(data, 'der');
        case 'RSA PRIVATE KEY':
            return asn1.RSAPrivateKey.decode(data, 'der');
        case 'DSA PRIVATE KEY':
            return {
                type: 'dsa',
                params: asn1.DSAPrivateKey.decode(data, 'der')
            };
        case 'EC PRIVATE KEY':
            data = asn1.ECPrivateKey.decode(data, 'der');
            return {
                curve: data.parameters.value,
                privateKey: data.privateKey
            };
        default:
            throw new Error('unknown key type ' + type);
    }
}
parseKeys.signature = asn1.signature;
function decrypt(data, password) {
    var salt = data.algorithm.decrypt.kde.kdeparams.salt;
    var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10);
    var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')];
    var iv = data.algorithm.decrypt.cipher.iv;
    var cipherText = data.subjectPrivateKey;
    var keylen = parseInt(algo.split('-')[1], 10) / 8;
    var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1');
    var cipher = ciphers.createDecipheriv(algo, key, iv);
    var out = [];
    out.push(cipher.update(cipherText));
    out.push(cipher.final());
    return Buffer.concat(out);
}

},{"./asn1":"i80qj","./aesid.json":"3iDmZ","./fixProc":"f0FrX","browserify-aes":"bLzB9","pbkdf2":"latLb","safe-buffer":"i3ToV"}],"i80qj":[function(require,module,exports) {
// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
// Fedor, you are amazing.
'use strict';
var asn1 = require('asn1.js');
exports.certificate = require('./certificate');
var RSAPrivateKey = asn1.define('RSAPrivateKey', function() {
    this.seq().obj(this.key('version').int(), this.key('modulus').int(), this.key('publicExponent').int(), this.key('privateExponent').int(), this.key('prime1').int(), this.key('prime2').int(), this.key('exponent1').int(), this.key('exponent2').int(), this.key('coefficient').int());
});
exports.RSAPrivateKey = RSAPrivateKey;
var RSAPublicKey = asn1.define('RSAPublicKey', function() {
    this.seq().obj(this.key('modulus').int(), this.key('publicExponent').int());
});
exports.RSAPublicKey = RSAPublicKey;
var PublicKey = asn1.define('SubjectPublicKeyInfo', function() {
    this.seq().obj(this.key('algorithm').use(AlgorithmIdentifier), this.key('subjectPublicKey').bitstr());
});
exports.PublicKey = PublicKey;
var AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function() {
    this.seq().obj(this.key('algorithm').objid(), this.key('none').null_().optional(), this.key('curve').objid().optional(), this.key('params').seq().obj(this.key('p').int(), this.key('q').int(), this.key('g').int()).optional());
});
var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function() {
    this.seq().obj(this.key('version').int(), this.key('algorithm').use(AlgorithmIdentifier), this.key('subjectPrivateKey').octstr());
});
exports.PrivateKey = PrivateKeyInfo;
var EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function() {
    this.seq().obj(this.key('algorithm').seq().obj(this.key('id').objid(), this.key('decrypt').seq().obj(this.key('kde').seq().obj(this.key('id').objid(), this.key('kdeparams').seq().obj(this.key('salt').octstr(), this.key('iters').int())), this.key('cipher').seq().obj(this.key('algo').objid(), this.key('iv').octstr()))), this.key('subjectPrivateKey').octstr());
});
exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo;
var DSAPrivateKey = asn1.define('DSAPrivateKey', function() {
    this.seq().obj(this.key('version').int(), this.key('p').int(), this.key('q').int(), this.key('g').int(), this.key('pub_key').int(), this.key('priv_key').int());
});
exports.DSAPrivateKey = DSAPrivateKey;
exports.DSAparam = asn1.define('DSAparam', function() {
    this.int();
});
var ECPrivateKey = asn1.define('ECPrivateKey', function() {
    this.seq().obj(this.key('version').int(), this.key('privateKey').octstr(), this.key('parameters').optional().explicit(0).use(ECParameters), this.key('publicKey').optional().explicit(1).bitstr());
});
exports.ECPrivateKey = ECPrivateKey;
var ECParameters = asn1.define('ECParameters', function() {
    this.choice({
        namedCurve: this.objid()
    });
});
exports.signature = asn1.define('signature', function() {
    this.seq().obj(this.key('r').int(), this.key('s').int());
});

},{"asn1.js":"c9fD6","./certificate":"1IBqA"}],"c9fD6":[function(require,module,exports) {
'use strict';
const asn1 = exports;
asn1.bignum = require('bn.js');
asn1.define = require('./asn1/api').define;
asn1.base = require('./asn1/base');
asn1.constants = require('./asn1/constants');
asn1.decoders = require('./asn1/decoders');
asn1.encoders = require('./asn1/encoders');

},{"bn.js":"1uIRW","./asn1/api":"6JHGi","./asn1/base":"9QWUM","./asn1/constants":"fZqFe","./asn1/decoders":"eV6Nt","./asn1/encoders":"co6Ph"}],"1uIRW":[function(require,module,exports) {
(function(module, exports) {
    // Utils
    function assert(val, msg) {
        if (!val) throw new Error(msg || 'Assertion failed');
    }
    // Could use `inherits` module, but don't want to move from single file
    // architecture yet.
    function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
    }
    // BN
    function BN(number, base, endian) {
        if (BN.isBN(number)) return number;
        this.negative = 0;
        this.words = null;
        this.length = 0;
        // Reduction context
        this.red = null;
        if (number !== null) {
            if (base === 'le' || base === 'be') {
                endian = base;
                base = 10;
            }
            this._init(number || 0, base || 10, endian || 'be');
        }
    }
    if (typeof module === 'object') module.exports = BN;
    else exports.BN = BN;
    BN.BN = BN;
    BN.wordSize = 26;
    var Buffer;
    try {
        if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') Buffer = window.Buffer;
        else Buffer = require('buffer').Buffer;
    } catch (e) {
    }
    BN.isBN = function isBN(num) {
        if (num instanceof BN) return true;
        return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
    };
    BN.max = function max(left, right) {
        if (left.cmp(right) > 0) return left;
        return right;
    };
    BN.min = function min(left, right) {
        if (left.cmp(right) < 0) return left;
        return right;
    };
    BN.prototype._init = function init(number, base, endian) {
        if (typeof number === 'number') return this._initNumber(number, base, endian);
        if (typeof number === 'object') return this._initArray(number, base, endian);
        if (base === 'hex') base = 16;
        assert(base === (base | 0) && base >= 2 && base <= 36);
        number = number.toString().replace(/\s+/g, '');
        var start = 0;
        if (number[0] === '-') {
            start++;
            this.negative = 1;
        }
        if (start < number.length) {
            if (base === 16) this._parseHex(number, start, endian);
            else {
                this._parseBase(number, base, start);
                if (endian === 'le') this._initArray(this.toArray(), base, endian);
            }
        }
    };
    BN.prototype._initNumber = function _initNumber(number, base, endian) {
        if (number < 0) {
            this.negative = 1;
            number = -number;
        }
        if (number < 67108864) {
            this.words = [
                number & 67108863
            ];
            this.length = 1;
        } else if (number < 4503599627370496) {
            this.words = [
                number & 67108863,
                number / 67108864 & 67108863
            ];
            this.length = 2;
        } else {
            assert(number < 9007199254740992); // 2 ^ 53 (unsafe)
            this.words = [
                number & 67108863,
                number / 67108864 & 67108863,
                1
            ];
            this.length = 3;
        }
        if (endian !== 'le') return;
        // Reverse the bytes
        this._initArray(this.toArray(), base, endian);
    };
    BN.prototype._initArray = function _initArray(number, base, endian) {
        // Perhaps a Uint8Array
        assert(typeof number.length === 'number');
        if (number.length <= 0) {
            this.words = [
                0
            ];
            this.length = 1;
            return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)this.words[i] = 0;
        var j, w;
        var off = 0;
        if (endian === 'be') for(i = number.length - 1, j = 0; i >= 0; i -= 3){
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        else if (endian === 'le') for(i = 0, j = 0; i < number.length; i += 3){
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        return this.strip();
    };
    function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        // 'A' - 'F'
        if (c >= 65 && c <= 70) return c - 55;
        else if (c >= 97 && c <= 102) return c - 87;
        else return c - 48 & 15;
    }
    function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) r |= parseHex4Bits(string, index - 1) << 4;
        return r;
    }
    BN.prototype._parseHex = function _parseHex(number, start, endian) {
        // Create possibly bigger array to ensure that it fits the number
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)this.words[i] = 0;
        // 24-bits chunks
        var off = 0;
        var j = 0;
        var w;
        if (endian === 'be') for(i = number.length - 1; i >= start; i -= 2){
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
                off -= 18;
                j += 1;
                this.words[j] |= w >>> 26;
            } else off += 8;
        }
        else {
            var parseLength = number.length - start;
            for(i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2){
                w = parseHexByte(number, start, i) << off;
                this.words[j] |= w & 67108863;
                if (off >= 18) {
                    off -= 18;
                    j += 1;
                    this.words[j] |= w >>> 26;
                } else off += 8;
            }
        }
        this.strip();
    };
    function parseBase(str, start, end, mul) {
        var r = 0;
        var len = Math.min(str.length, end);
        for(var i = start; i < len; i++){
            var c = str.charCodeAt(i) - 48;
            r *= mul;
            // 'a'
            if (c >= 49) r += c - 49 + 10;
            else if (c >= 17) r += c - 17 + 10;
            else r += c;
        }
        return r;
    }
    BN.prototype._parseBase = function _parseBase(number, base, start) {
        // Initialize as zero
        this.words = [
            0
        ];
        this.length = 1;
        // Find length of limb in base
        for(var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base)limbLen++;
        limbLen--;
        limbPow = limbPow / base | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for(var i = start; i < end; i += limbLen){
            word = parseBase(number, i, i + limbLen, base);
            this.imuln(limbPow);
            if (this.words[0] + word < 67108864) this.words[0] += word;
            else this._iaddn(word);
        }
        if (mod !== 0) {
            var pow = 1;
            word = parseBase(number, i, number.length, base);
            for(i = 0; i < mod; i++)pow *= base;
            this.imuln(pow);
            if (this.words[0] + word < 67108864) this.words[0] += word;
            else this._iaddn(word);
        }
        this.strip();
    };
    BN.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)dest.words[i] = this.words[i];
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
    };
    BN.prototype.clone = function clone() {
        var r = new BN(null);
        this.copy(r);
        return r;
    };
    BN.prototype._expand = function _expand(size) {
        while(this.length < size)this.words[this.length++] = 0;
        return this;
    };
    // Remove leading `0` from `this`
    BN.prototype.strip = function strip() {
        while(this.length > 1 && this.words[this.length - 1] === 0)this.length--;
        return this._normSign();
    };
    BN.prototype._normSign = function _normSign() {
        // -0 = 0
        if (this.length === 1 && this.words[0] === 0) this.negative = 0;
        return this;
    };
    BN.prototype.inspect = function inspect() {
        return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
    };
    /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */ var zeros = [
        '',
        '0',
        '00',
        '000',
        '0000',
        '00000',
        '000000',
        '0000000',
        '00000000',
        '000000000',
        '0000000000',
        '00000000000',
        '000000000000',
        '0000000000000',
        '00000000000000',
        '000000000000000',
        '0000000000000000',
        '00000000000000000',
        '000000000000000000',
        '0000000000000000000',
        '00000000000000000000',
        '000000000000000000000',
        '0000000000000000000000',
        '00000000000000000000000',
        '000000000000000000000000',
        '0000000000000000000000000'
    ];
    var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
    ];
    var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        10000000,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64000000,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        24300000,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
    ];
    BN.prototype.toString = function toString(base, padding) {
        base = base || 10;
        padding = padding | 0 || 1;
        var out;
        if (base === 16 || base === 'hex') {
            out = '';
            var off = 0;
            var carry = 0;
            for(var i = 0; i < this.length; i++){
                var w = this.words[i];
                var word = ((w << off | carry) & 16777215).toString(16);
                carry = w >>> 24 - off & 16777215;
                if (carry !== 0 || i !== this.length - 1) out = zeros[6 - word.length] + word + out;
                else out = word + out;
                off += 2;
                if (off >= 26) {
                    off -= 26;
                    i--;
                }
            }
            if (carry !== 0) out = carry.toString(16) + out;
            while(out.length % padding !== 0)out = '0' + out;
            if (this.negative !== 0) out = '-' + out;
            return out;
        }
        if (base === (base | 0) && base >= 2 && base <= 36) {
            // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
            var groupSize = groupSizes[base];
            // var groupBase = Math.pow(base, groupSize);
            var groupBase = groupBases[base];
            out = '';
            var c = this.clone();
            c.negative = 0;
            while(!c.isZero()){
                var r = c.modn(groupBase).toString(base);
                c = c.idivn(groupBase);
                if (!c.isZero()) out = zeros[groupSize - r.length] + r + out;
                else out = r + out;
            }
            if (this.isZero()) out = '0' + out;
            while(out.length % padding !== 0)out = '0' + out;
            if (this.negative !== 0) out = '-' + out;
            return out;
        }
        assert(false, 'Base should be between 2 and 36');
    };
    BN.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) ret += this.words[1] * 67108864;
        else if (this.length === 3 && this.words[2] === 1) // NOTE: at this stage it is known that the top bit is set
        ret += 4503599627370496 + this.words[1] * 67108864;
        else if (this.length > 2) assert(false, 'Number can only safely store up to 53 bits');
        return this.negative !== 0 ? -ret : ret;
    };
    BN.prototype.toJSON = function toJSON() {
        return this.toString(16);
    };
    BN.prototype.toBuffer = function toBuffer(endian, length) {
        assert(typeof Buffer !== 'undefined');
        return this.toArrayLike(Buffer, endian, length);
    };
    BN.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
    };
    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert(byteLength <= reqLength, 'byte array longer than desired length');
        assert(reqLength > 0, 'Requested array length <= 0');
        this.strip();
        var littleEndian = endian === 'le';
        var res = new ArrayType(reqLength);
        var b, i;
        var q = this.clone();
        if (!littleEndian) {
            // Assume big-endian
            for(i = 0; i < reqLength - byteLength; i++)res[i] = 0;
            for(i = 0; !q.isZero(); i++){
                b = q.andln(255);
                q.iushrn(8);
                res[reqLength - i - 1] = b;
            }
        } else {
            for(i = 0; !q.isZero(); i++){
                b = q.andln(255);
                q.iushrn(8);
                res[i] = b;
            }
            for(; i < reqLength; i++)res[i] = 0;
        }
        return res;
    };
    if (Math.clz32) BN.prototype._countBits = function _countBits(w) {
        return 32 - Math.clz32(w);
    };
    else BN.prototype._countBits = function _countBits1(w) {
        var t = w;
        var r = 0;
        if (t >= 4096) {
            r += 13;
            t >>>= 13;
        }
        if (t >= 64) {
            r += 7;
            t >>>= 7;
        }
        if (t >= 8) {
            r += 4;
            t >>>= 4;
        }
        if (t >= 2) {
            r += 2;
            t >>>= 2;
        }
        return r + t;
    };
    BN.prototype._zeroBits = function _zeroBits(w) {
        // Short-cut
        if (w === 0) return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
            r += 13;
            t >>>= 13;
        }
        if ((t & 127) === 0) {
            r += 7;
            t >>>= 7;
        }
        if ((t & 15) === 0) {
            r += 4;
            t >>>= 4;
        }
        if ((t & 3) === 0) {
            r += 2;
            t >>>= 2;
        }
        if ((t & 1) === 0) r++;
        return r;
    };
    // Return number of used bits in a BN
    BN.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
    };
    function toBitArray(num) {
        var w = new Array(num.bitLength());
        for(var bit = 0; bit < w.length; bit++){
            var off = bit / 26 | 0;
            var wbit = bit % 26;
            w[bit] = (num.words[off] & 1 << wbit) >>> wbit;
        }
        return w;
    }
    // Number of trailing zero bits
    BN.prototype.zeroBits = function zeroBits() {
        if (this.isZero()) return 0;
        var r = 0;
        for(var i = 0; i < this.length; i++){
            var b = this._zeroBits(this.words[i]);
            r += b;
            if (b !== 26) break;
        }
        return r;
    };
    BN.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
    };
    BN.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) return this.abs().inotn(width).iaddn(1);
        return this.clone();
    };
    BN.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) return this.notn(width).iaddn(1).ineg();
        return this.clone();
    };
    BN.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
    };
    // Return negative clone of `this`
    BN.prototype.neg = function neg() {
        return this.clone().ineg();
    };
    BN.prototype.ineg = function ineg() {
        if (!this.isZero()) this.negative ^= 1;
        return this;
    };
    // Or `num` with `this` in-place
    BN.prototype.iuor = function iuor(num) {
        while(this.length < num.length)this.words[this.length++] = 0;
        for(var i = 0; i < num.length; i++)this.words[i] = this.words[i] | num.words[i];
        return this.strip();
    };
    BN.prototype.ior = function ior(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuor(num);
    };
    // Or `num` with `this`
    BN.prototype.or = function or(num) {
        if (this.length > num.length) return this.clone().ior(num);
        return num.clone().ior(this);
    };
    BN.prototype.uor = function uor(num) {
        if (this.length > num.length) return this.clone().iuor(num);
        return num.clone().iuor(this);
    };
    // And `num` with `this` in-place
    BN.prototype.iuand = function iuand(num) {
        // b = min-length(num, this)
        var b;
        if (this.length > num.length) b = num;
        else b = this;
        for(var i = 0; i < b.length; i++)this.words[i] = this.words[i] & num.words[i];
        this.length = b.length;
        return this.strip();
    };
    BN.prototype.iand = function iand(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuand(num);
    };
    // And `num` with `this`
    BN.prototype.and = function and(num) {
        if (this.length > num.length) return this.clone().iand(num);
        return num.clone().iand(this);
    };
    BN.prototype.uand = function uand(num) {
        if (this.length > num.length) return this.clone().iuand(num);
        return num.clone().iuand(this);
    };
    // Xor `num` with `this` in-place
    BN.prototype.iuxor = function iuxor(num) {
        // a.length > b.length
        var a;
        var b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        for(var i = 0; i < b.length; i++)this.words[i] = a.words[i] ^ b.words[i];
        if (this !== a) for(; i < a.length; i++)this.words[i] = a.words[i];
        this.length = a.length;
        return this.strip();
    };
    BN.prototype.ixor = function ixor(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuxor(num);
    };
    // Xor `num` with `this`
    BN.prototype.xor = function xor(num) {
        if (this.length > num.length) return this.clone().ixor(num);
        return num.clone().ixor(this);
    };
    BN.prototype.uxor = function uxor(num) {
        if (this.length > num.length) return this.clone().iuxor(num);
        return num.clone().iuxor(this);
    };
    // Not ``this`` with ``width`` bitwidth
    BN.prototype.inotn = function inotn(width) {
        assert(typeof width === 'number' && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        // Extend the buffer with leading zeroes
        this._expand(bytesNeeded);
        if (bitsLeft > 0) bytesNeeded--;
        // Handle complete words
        for(var i = 0; i < bytesNeeded; i++)this.words[i] = ~this.words[i] & 67108863;
        // Handle the residue
        if (bitsLeft > 0) this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        // And remove leading zeroes
        return this.strip();
    };
    BN.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
    };
    // Set `bit` of `this`
    BN.prototype.setn = function setn(bit, val) {
        assert(typeof bit === 'number' && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) this.words[off] = this.words[off] | 1 << wbit;
        else this.words[off] = this.words[off] & ~(1 << wbit);
        return this.strip();
    };
    // Add `num` to `this` in-place
    BN.prototype.iadd = function iadd(num) {
        var r;
        // negative + positive
        if (this.negative !== 0 && num.negative === 0) {
            this.negative = 0;
            r = this.isub(num);
            this.negative ^= 1;
            return this._normSign();
        // positive + negative
        } else if (this.negative === 0 && num.negative !== 0) {
            num.negative = 0;
            r = this.isub(num);
            num.negative = 1;
            return r._normSign();
        }
        // a.length > b.length
        var a, b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
            this.words[i] = r & 67108863;
            carry = r >>> 26;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            this.words[i] = r & 67108863;
            carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
            this.words[this.length] = carry;
            this.length++;
        // Copy the rest of the words
        } else if (a !== this) for(; i < a.length; i++)this.words[i] = a.words[i];
        return this;
    };
    // Add `num` to `this`
    BN.prototype.add = function add(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
            num.negative = 0;
            res = this.sub(num);
            num.negative ^= 1;
            return res;
        } else if (num.negative === 0 && this.negative !== 0) {
            this.negative = 0;
            res = num.sub(this);
            this.negative = 1;
            return res;
        }
        if (this.length > num.length) return this.clone().iadd(num);
        return num.clone().iadd(this);
    };
    // Subtract `num` from `this` in-place
    BN.prototype.isub = function isub(num) {
        // this - (-num) = this + num
        if (num.negative !== 0) {
            num.negative = 0;
            var r = this.iadd(num);
            num.negative = 1;
            return r._normSign();
        // -this - num = -(this + num)
        } else if (this.negative !== 0) {
            this.negative = 0;
            this.iadd(num);
            this.negative = 1;
            return this._normSign();
        }
        // At this point both numbers are positive
        var cmp = this.cmp(num);
        // Optimization - zeroify
        if (cmp === 0) {
            this.negative = 0;
            this.length = 1;
            this.words[0] = 0;
            return this;
        }
        // a > b
        var a, b;
        if (cmp > 0) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 67108863;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 67108863;
        }
        // Copy rest of the words
        if (carry === 0 && i < a.length && a !== this) for(; i < a.length; i++)this.words[i] = a.words[i];
        this.length = Math.max(this.length, i);
        if (a !== this) this.negative = 1;
        return this.strip();
    };
    // Subtract `num` from `this`
    BN.prototype.sub = function sub(num) {
        return this.clone().isub(num);
    };
    function smallMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        var len = self.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        // Peel one iteration (compiler can't do it, because of code complexity)
        var a = self.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for(var k = 1; k < len; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = carry >>> 26;
            var rword = carry & 67108863;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j | 0;
                a = self.words[i] | 0;
                b = num.words[j] | 0;
                r = a * b + rword;
                ncarry += r / 67108864 | 0;
                rword = r & 67108863;
            }
            out.words[k] = rword | 0;
            carry = ncarry | 0;
        }
        if (carry !== 0) out.words[k] = carry | 0;
        else out.length--;
        return out.strip();
    }
    // TODO(indutny): it may be reasonable to omit it for users who don't need
    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
    // multiplication (like elliptic secp256k1).
    var comb10MulTo = function comb10MulTo1(self, num, out) {
        var a = self.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self.negative ^ num.negative;
        out.length = 19;
        /* k = 0 */ lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        /* k = 1 */ lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        /* k = 2 */ lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        /* k = 3 */ lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        /* k = 4 */ lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        /* k = 5 */ lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        /* k = 6 */ lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        /* k = 7 */ lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        /* k = 8 */ lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        /* k = 9 */ lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        /* k = 10 */ lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        /* k = 11 */ lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        /* k = 12 */ lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        /* k = 13 */ lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        /* k = 14 */ lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        /* k = 15 */ lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        /* k = 16 */ lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        /* k = 17 */ lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        /* k = 18 */ lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
            o[19] = c;
            out.length++;
        }
        return out;
    };
    // Polyfill comb
    if (!Math.imul) comb10MulTo = smallMulTo;
    function bigMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        out.length = self.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for(var k = 0; k < out.length - 1; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = hncarry;
            hncarry = 0;
            var rword = carry & 67108863;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j;
                var a = self.words[i] | 0;
                var b = num.words[j] | 0;
                var r = a * b;
                var lo = r & 67108863;
                ncarry = ncarry + (r / 67108864 | 0) | 0;
                lo = lo + rword | 0;
                rword = lo & 67108863;
                ncarry = ncarry + (lo >>> 26) | 0;
                hncarry += ncarry >>> 26;
                ncarry &= 67108863;
            }
            out.words[k] = rword;
            carry = ncarry;
            ncarry = hncarry;
        }
        if (carry !== 0) out.words[k] = carry;
        else out.length--;
        return out.strip();
    }
    function jumboMulTo(self, num, out) {
        var fftm = new FFTM();
        return fftm.mulp(self, num, out);
    }
    BN.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) res = comb10MulTo(this, num, out);
        else if (len < 63) res = smallMulTo(this, num, out);
        else if (len < 1024) res = bigMulTo(this, num, out);
        else res = jumboMulTo(this, num, out);
        return res;
    };
    // Cooley-Tukey algorithm for FFT
    // slightly revisited to rely on looping instead of recursion
    function FFTM(x, y) {
        this.x = x;
        this.y = y;
    }
    FFTM.prototype.makeRBT = function makeRBT(N) {
        var t = new Array(N);
        var l = BN.prototype._countBits(N) - 1;
        for(var i = 0; i < N; i++)t[i] = this.revBin(i, l, N);
        return t;
    };
    // Returns binary-reversed representation of `x`
    FFTM.prototype.revBin = function revBin(x, l, N) {
        if (x === 0 || x === N - 1) return x;
        var rb = 0;
        for(var i = 0; i < l; i++){
            rb |= (x & 1) << l - i - 1;
            x >>= 1;
        }
        return rb;
    };
    // Performs "tweedling" phase, therefore 'emulating'
    // behaviour of the recursive algorithm
    FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
        for(var i = 0; i < N; i++){
            rtws[i] = rws[rbt[i]];
            itws[i] = iws[rbt[i]];
        }
    };
    FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N);
        for(var s = 1; s < N; s <<= 1){
            var l = s << 1;
            var rtwdf = Math.cos(2 * Math.PI / l);
            var itwdf = Math.sin(2 * Math.PI / l);
            for(var p = 0; p < N; p += l){
                var rtwdf_ = rtwdf;
                var itwdf_ = itwdf;
                for(var j = 0; j < s; j++){
                    var re = rtws[p + j];
                    var ie = itws[p + j];
                    var ro = rtws[p + j + s];
                    var io = itws[p + j + s];
                    var rx = rtwdf_ * ro - itwdf_ * io;
                    io = rtwdf_ * io + itwdf_ * ro;
                    ro = rx;
                    rtws[p + j] = re + ro;
                    itws[p + j] = ie + io;
                    rtws[p + j + s] = re - ro;
                    itws[p + j + s] = ie - io;
                    /* jshint maxdepth : false */ if (j !== l) {
                        rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                        itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                        rtwdf_ = rx;
                    }
                }
            }
        }
    };
    FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N = Math.max(m, n) | 1;
        var odd = N & 1;
        var i = 0;
        for(N = N / 2 | 0; N; N = N >>> 1)i++;
        return 1 << i + 1 + odd;
    };
    FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
        if (N <= 1) return;
        for(var i = 0; i < N / 2; i++){
            var t = rws[i];
            rws[i] = rws[N - i - 1];
            rws[N - i - 1] = t;
            t = iws[i];
            iws[i] = -iws[N - i - 1];
            iws[N - i - 1] = -t;
        }
    };
    FFTM.prototype.normalize13b = function normalize13b(ws, N) {
        var carry = 0;
        for(var i = 0; i < N / 2; i++){
            var w = Math.round(ws[2 * i + 1] / N) * 8192 + Math.round(ws[2 * i] / N) + carry;
            ws[i] = w & 67108863;
            if (w < 67108864) carry = 0;
            else carry = w / 67108864 | 0;
        }
        return ws;
    };
    FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
        var carry = 0;
        for(var i = 0; i < len; i++){
            carry = carry + (ws[i] | 0);
            rws[2 * i] = carry & 8191;
            carry = carry >>> 13;
            rws[2 * i + 1] = carry & 8191;
            carry = carry >>> 13;
        }
        // Pad with zeroes
        for(i = 2 * len; i < N; ++i)rws[i] = 0;
        assert(carry === 0);
        assert((carry & -8192) === 0);
    };
    FFTM.prototype.stub = function stub(N) {
        var ph = new Array(N);
        for(var i = 0; i < N; i++)ph[i] = 0;
        return ph;
    };
    FFTM.prototype.mulp = function mulp(x, y, out) {
        var N = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N);
        var _ = this.stub(N);
        var rws = new Array(N);
        var rwst = new Array(N);
        var iwst = new Array(N);
        var nrws = new Array(N);
        var nrwst = new Array(N);
        var niwst = new Array(N);
        var rmws = out.words;
        rmws.length = N;
        this.convert13b(x.words, x.length, rws, N);
        this.convert13b(y.words, y.length, nrws, N);
        this.transform(rws, _, rwst, iwst, N, rbt);
        this.transform(nrws, _, nrwst, niwst, N, rbt);
        for(var i = 0; i < N; i++){
            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
            iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
            rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N);
        this.transform(rwst, iwst, rmws, _, N, rbt);
        this.conjugate(rmws, _, N);
        this.normalize13b(rmws, N);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out.strip();
    };
    // Multiply `this` by `num`
    BN.prototype.mul = function mul(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
    };
    // Multiply employing FFT
    BN.prototype.mulf = function mulf(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
    };
    // In-place Multiplication
    BN.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
    };
    BN.prototype.imuln = function imuln(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        // Carry
        var carry = 0;
        for(var i = 0; i < this.length; i++){
            var w = (this.words[i] | 0) * num;
            var lo = (w & 67108863) + (carry & 67108863);
            carry >>= 26;
            carry += w / 67108864 | 0;
            // NOTE: lo is 27bit maximum
            carry += lo >>> 26;
            this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return this;
    };
    BN.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
    };
    // `this` * `this`
    BN.prototype.sqr = function sqr() {
        return this.mul(this);
    };
    // `this` * `this` in-place
    BN.prototype.isqr = function isqr() {
        return this.imul(this.clone());
    };
    // Math.pow(`this`, `num`)
    BN.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0) return new BN(1);
        // Skip leading zeroes
        var res = this;
        for(var i = 0; i < w.length; i++, res = res.sqr()){
            if (w[i] !== 0) break;
        }
        if ((++i) < w.length) for(var q = res.sqr(); i < w.length; i++, q = q.sqr()){
            if (w[i] === 0) continue;
            res = res.mul(q);
        }
        return res;
    };
    // Shift-left in-place
    BN.prototype.iushln = function iushln(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
            var carry = 0;
            for(i = 0; i < this.length; i++){
                var newCarry = this.words[i] & carryMask;
                var c = (this.words[i] | 0) - newCarry << r;
                this.words[i] = c | carry;
                carry = newCarry >>> 26 - r;
            }
            if (carry) {
                this.words[i] = carry;
                this.length++;
            }
        }
        if (s !== 0) {
            for(i = this.length - 1; i >= 0; i--)this.words[i + s] = this.words[i];
            for(i = 0; i < s; i++)this.words[i] = 0;
            this.length += s;
        }
        return this.strip();
    };
    BN.prototype.ishln = function ishln(bits) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushln(bits);
    };
    // Shift-right in-place
    // NOTE: `hint` is a lowest bit before trailing zeroes
    // NOTE: if `extended` is present - it will be filled with destroyed bits
    BN.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert(typeof bits === 'number' && bits >= 0);
        var h;
        if (hint) h = (hint - hint % 26) / 26;
        else h = 0;
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        // Extended mode, copy masked part
        if (maskedWords) {
            for(var i = 0; i < s; i++)maskedWords.words[i] = this.words[i];
            maskedWords.length = s;
        }
        if (s === 0) ;
        else if (this.length > s) {
            this.length -= s;
            for(i = 0; i < this.length; i++)this.words[i] = this.words[i + s];
        } else {
            this.words[0] = 0;
            this.length = 1;
        }
        var carry = 0;
        for(i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--){
            var word = this.words[i] | 0;
            this.words[i] = carry << 26 - r | word >>> r;
            carry = word & mask;
        }
        // Push carried bits as a mask
        if (maskedWords && carry !== 0) maskedWords.words[maskedWords.length++] = carry;
        if (this.length === 0) {
            this.words[0] = 0;
            this.length = 1;
        }
        return this.strip();
    };
    BN.prototype.ishrn = function ishrn(bits, hint, extended) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushrn(bits, hint, extended);
    };
    // Shift-left
    BN.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
    };
    BN.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
    };
    // Shift-right
    BN.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
    };
    BN.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
    };
    // Test if n bit is set
    BN.prototype.testn = function testn(bit) {
        assert(typeof bit === 'number' && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) return false;
        // Check bit and return
        var w = this.words[s];
        return !!(w & q);
    };
    // Return only lowers bits of number (in-place)
    BN.prototype.imaskn = function imaskn(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert(this.negative === 0, 'imaskn works only with positive numbers');
        if (this.length <= s) return this;
        if (r !== 0) s++;
        this.length = Math.min(s, this.length);
        if (r !== 0) {
            var mask = 67108863 ^ 67108863 >>> r << r;
            this.words[this.length - 1] &= mask;
        }
        return this.strip();
    };
    // Return only lowers bits of number
    BN.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
    };
    // Add plain number `num` to `this`
    BN.prototype.iaddn = function iaddn(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        if (num < 0) return this.isubn(-num);
        // Possible sign change
        if (this.negative !== 0) {
            if (this.length === 1 && (this.words[0] | 0) < num) {
                this.words[0] = num - (this.words[0] | 0);
                this.negative = 0;
                return this;
            }
            this.negative = 0;
            this.isubn(num);
            this.negative = 1;
            return this;
        }
        // Add without checks
        return this._iaddn(num);
    };
    BN.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        // Carry
        for(var i = 0; i < this.length && this.words[i] >= 67108864; i++){
            this.words[i] -= 67108864;
            if (i === this.length - 1) this.words[i + 1] = 1;
            else this.words[i + 1]++;
        }
        this.length = Math.max(this.length, i + 1);
        return this;
    };
    // Subtract plain number `num` from `this`
    BN.prototype.isubn = function isubn(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        if (num < 0) return this.iaddn(-num);
        if (this.negative !== 0) {
            this.negative = 0;
            this.iaddn(num);
            this.negative = 1;
            return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
            this.words[0] = -this.words[0];
            this.negative = 1;
        } else // Carry
        for(var i = 0; i < this.length && this.words[i] < 0; i++){
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
        }
        return this.strip();
    };
    BN.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
    };
    BN.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
    };
    BN.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
    };
    BN.prototype.abs = function abs() {
        return this.clone().iabs();
    };
    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul1, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for(i = 0; i < num.length; i++){
            w = (this.words[i + shift] | 0) + carry;
            var right = (num.words[i] | 0) * mul1;
            w -= right & 67108863;
            carry = (w >> 26) - (right / 67108864 | 0);
            this.words[i + shift] = w & 67108863;
        }
        for(; i < this.length - shift; i++){
            w = (this.words[i + shift] | 0) + carry;
            carry = w >> 26;
            this.words[i + shift] = w & 67108863;
        }
        if (carry === 0) return this.strip();
        // Subtraction overflow
        assert(carry === -1);
        carry = 0;
        for(i = 0; i < this.length; i++){
            w = -(this.words[i] | 0) + carry;
            carry = w >> 26;
            this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this.strip();
    };
    BN.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        // Normalize
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
            b = b.ushln(shift);
            a.iushln(shift);
            bhi = b.words[b.length - 1] | 0;
        }
        // Initialize quotient
        var m = a.length - b.length;
        var q;
        if (mode !== 'mod') {
            q = new BN(null);
            q.length = m + 1;
            q.words = new Array(q.length);
            for(var i = 0; i < q.length; i++)q.words[i] = 0;
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
            a = diff;
            if (q) q.words[m] = 1;
        }
        for(var j = m - 1; j >= 0; j--){
            var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
            // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
            // (0x7ffffff)
            qj = Math.min(qj / bhi | 0, 67108863);
            a._ishlnsubmul(b, qj, j);
            while(a.negative !== 0){
                qj--;
                a.negative = 0;
                a._ishlnsubmul(b, 1, j);
                if (!a.isZero()) a.negative ^= 1;
            }
            if (q) q.words[j] = qj;
        }
        if (q) q.strip();
        a.strip();
        // Denormalize
        if (mode !== 'div' && shift !== 0) a.iushrn(shift);
        return {
            div: q || null,
            mod: a
        };
    };
    // NOTE: 1) `mode` can be set to `mod` to request mod only,
    //       to `div` to request div only, or be absent to
    //       request both div & mod
    //       2) `positive` is true if unsigned mod is requested
    BN.prototype.divmod = function divmod(num, mode, positive) {
        assert(!num.isZero());
        if (this.isZero()) return {
            div: new BN(0),
            mod: new BN(0)
        };
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
            res = this.neg().divmod(num, mode);
            if (mode !== 'mod') div = res.div.neg();
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) mod.iadd(num);
            }
            return {
                div: div,
                mod: mod
            };
        }
        if (this.negative === 0 && num.negative !== 0) {
            res = this.divmod(num.neg(), mode);
            if (mode !== 'mod') div = res.div.neg();
            return {
                div: div,
                mod: res.mod
            };
        }
        if ((this.negative & num.negative) !== 0) {
            res = this.neg().divmod(num.neg(), mode);
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) mod.isub(num);
            }
            return {
                div: res.div,
                mod: mod
            };
        }
        // Both numbers are positive at this point
        // Strip both numbers to approximate shift value
        if (num.length > this.length || this.cmp(num) < 0) return {
            div: new BN(0),
            mod: this
        };
        // Very short reduction
        if (num.length === 1) {
            if (mode === 'div') return {
                div: this.divn(num.words[0]),
                mod: null
            };
            if (mode === 'mod') return {
                div: null,
                mod: new BN(this.modn(num.words[0]))
            };
            return {
                div: this.divn(num.words[0]),
                mod: new BN(this.modn(num.words[0]))
            };
        }
        return this._wordDiv(num, mode);
    };
    // Find `this` / `num`
    BN.prototype.div = function div(num) {
        return this.divmod(num, 'div', false).div;
    };
    // Find `this` % `num`
    BN.prototype.mod = function mod(num) {
        return this.divmod(num, 'mod', false).mod;
    };
    BN.prototype.umod = function umod(num) {
        return this.divmod(num, 'mod', true).mod;
    };
    // Find Round(`this` / `num`)
    BN.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        // Fast case - exact division
        if (dm.mod.isZero()) return dm.div;
        var mod1 = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod1.cmp(half);
        // Round down
        if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;
        // Round up
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
    };
    BN.prototype.modn = function modn(num) {
        assert(num <= 67108863);
        var p = 67108864 % num;
        var acc = 0;
        for(var i = this.length - 1; i >= 0; i--)acc = (p * acc + (this.words[i] | 0)) % num;
        return acc;
    };
    // In-place division by number
    BN.prototype.idivn = function idivn(num) {
        assert(num <= 67108863);
        var carry = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var w = (this.words[i] | 0) + carry * 67108864;
            this.words[i] = w / num | 0;
            carry = w % num;
        }
        return this.strip();
    };
    BN.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
    };
    BN.prototype.egcd = function egcd(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) x = x.umod(p);
        else x = x.clone();
        // A * x + B * y = x
        var A = new BN(1);
        var B = new BN(0);
        // C * x + D * y = y
        var C = new BN(0);
        var D = new BN(1);
        var g = 0;
        while(x.isEven() && y.isEven()){
            x.iushrn(1);
            y.iushrn(1);
            ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while(!x.isZero()){
            for(var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                x.iushrn(i);
                while((i--) > 0){
                    if (A.isOdd() || B.isOdd()) {
                        A.iadd(yp);
                        B.isub(xp);
                    }
                    A.iushrn(1);
                    B.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                y.iushrn(j);
                while((j--) > 0){
                    if (C.isOdd() || D.isOdd()) {
                        C.iadd(yp);
                        D.isub(xp);
                    }
                    C.iushrn(1);
                    D.iushrn(1);
                }
            }
            if (x.cmp(y) >= 0) {
                x.isub(y);
                A.isub(C);
                B.isub(D);
            } else {
                y.isub(x);
                C.isub(A);
                D.isub(B);
            }
        }
        return {
            a: C,
            b: D,
            gcd: y.iushln(g)
        };
    };
    // This is reduced incarnation of the binary EEA
    // above, designated to invert members of the
    // _prime_ fields F(p) at a maximal speed
    BN.prototype._invmp = function _invmp(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) a = a.umod(p);
        else a = a.clone();
        var x1 = new BN(1);
        var x2 = new BN(0);
        var delta = b.clone();
        while(a.cmpn(1) > 0 && b.cmpn(1) > 0){
            for(var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                a.iushrn(i);
                while((i--) > 0){
                    if (x1.isOdd()) x1.iadd(delta);
                    x1.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                b.iushrn(j);
                while((j--) > 0){
                    if (x2.isOdd()) x2.iadd(delta);
                    x2.iushrn(1);
                }
            }
            if (a.cmp(b) >= 0) {
                a.isub(b);
                x1.isub(x2);
            } else {
                b.isub(a);
                x2.isub(x1);
            }
        }
        var res;
        if (a.cmpn(1) === 0) res = x1;
        else res = x2;
        if (res.cmpn(0) < 0) res.iadd(p);
        return res;
    };
    BN.prototype.gcd = function gcd(num) {
        if (this.isZero()) return num.abs();
        if (num.isZero()) return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        // Remove common factor of two
        for(var shift = 0; a.isEven() && b.isEven(); shift++){
            a.iushrn(1);
            b.iushrn(1);
        }
        do {
            while(a.isEven())a.iushrn(1);
            while(b.isEven())b.iushrn(1);
            var r = a.cmp(b);
            if (r < 0) {
                // Swap `a` and `b` to make `a` always bigger than `b`
                var t = a;
                a = b;
                b = t;
            } else if (r === 0 || b.cmpn(1) === 0) break;
            a.isub(b);
        }while (true)
        return b.iushln(shift);
    };
    // Invert number in the field F(num)
    BN.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
    };
    BN.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
    };
    BN.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
    };
    // And first word and num
    BN.prototype.andln = function andln(num) {
        return this.words[0] & num;
    };
    // Increment at the bit position in-line
    BN.prototype.bincn = function bincn(bit) {
        assert(typeof bit === 'number');
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) {
            this._expand(s + 1);
            this.words[s] |= q;
            return this;
        }
        // Add bit and propagate, if needed
        var carry = q;
        for(var i = s; carry !== 0 && i < this.length; i++){
            var w = this.words[i] | 0;
            w += carry;
            carry = w >>> 26;
            w &= 67108863;
            this.words[i] = w;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return this;
    };
    BN.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
    };
    BN.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative) return -1;
        if (this.negative === 0 && negative) return 1;
        this.strip();
        var res;
        if (this.length > 1) res = 1;
        else {
            if (negative) num = -num;
            assert(num <= 67108863, 'Number is too big');
            var w = this.words[0] | 0;
            res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Compare two numbers and return:
    // 1 - if `this` > `num`
    // 0 - if `this` == `num`
    // -1 - if `this` < `num`
    BN.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0) return -1;
        if (this.negative === 0 && num.negative !== 0) return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Unsigned comparison
    BN.prototype.ucmp = function ucmp(num) {
        // At this point both numbers have the same sign
        if (this.length > num.length) return 1;
        if (this.length < num.length) return -1;
        var res = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var a = this.words[i] | 0;
            var b = num.words[i] | 0;
            if (a === b) continue;
            if (a < b) res = -1;
            else if (a > b) res = 1;
            break;
        }
        return res;
    };
    BN.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
    };
    BN.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
    };
    BN.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
    };
    BN.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
    };
    BN.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
    };
    BN.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
    };
    BN.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
    };
    BN.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
    };
    BN.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
    };
    BN.prototype.eq = function eq(num) {
        return this.cmp(num) === 0;
    };
    //
    // A reduce context, could be using montgomery or something better, depending
    // on the `m` itself.
    //
    BN.red = function red(num) {
        return new Red(num);
    };
    BN.prototype.toRed = function toRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        assert(this.negative === 0, 'red works only with positives');
        return ctx.convertTo(this)._forceRed(ctx);
    };
    BN.prototype.fromRed = function fromRed() {
        assert(this.red, 'fromRed works only with numbers in reduction context');
        return this.red.convertFrom(this);
    };
    BN.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
    };
    BN.prototype.forceRed = function forceRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        return this._forceRed(ctx);
    };
    BN.prototype.redAdd = function redAdd(num) {
        assert(this.red, 'redAdd works only with red numbers');
        return this.red.add(this, num);
    };
    BN.prototype.redIAdd = function redIAdd(num) {
        assert(this.red, 'redIAdd works only with red numbers');
        return this.red.iadd(this, num);
    };
    BN.prototype.redSub = function redSub(num) {
        assert(this.red, 'redSub works only with red numbers');
        return this.red.sub(this, num);
    };
    BN.prototype.redISub = function redISub(num) {
        assert(this.red, 'redISub works only with red numbers');
        return this.red.isub(this, num);
    };
    BN.prototype.redShl = function redShl(num) {
        assert(this.red, 'redShl works only with red numbers');
        return this.red.shl(this, num);
    };
    BN.prototype.redMul = function redMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.mul(this, num);
    };
    BN.prototype.redIMul = function redIMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.imul(this, num);
    };
    BN.prototype.redSqr = function redSqr() {
        assert(this.red, 'redSqr works only with red numbers');
        this.red._verify1(this);
        return this.red.sqr(this);
    };
    BN.prototype.redISqr = function redISqr() {
        assert(this.red, 'redISqr works only with red numbers');
        this.red._verify1(this);
        return this.red.isqr(this);
    };
    // Square root over p
    BN.prototype.redSqrt = function redSqrt() {
        assert(this.red, 'redSqrt works only with red numbers');
        this.red._verify1(this);
        return this.red.sqrt(this);
    };
    BN.prototype.redInvm = function redInvm() {
        assert(this.red, 'redInvm works only with red numbers');
        this.red._verify1(this);
        return this.red.invm(this);
    };
    // Return negative clone of `this` % `red modulo`
    BN.prototype.redNeg = function redNeg() {
        assert(this.red, 'redNeg works only with red numbers');
        this.red._verify1(this);
        return this.red.neg(this);
    };
    BN.prototype.redPow = function redPow(num) {
        assert(this.red && !num.red, 'redPow(normalNum)');
        this.red._verify1(this);
        return this.red.pow(this, num);
    };
    // Prime numbers with efficient reduction
    var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
    };
    // Pseudo-Mersenne prime
    function MPrime(name, p) {
        // P = 2 ^ N - K
        this.name = name;
        this.p = new BN(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
    }
    MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
    };
    MPrime.prototype.ireduce = function ireduce(num) {
        // Assumes that `num` is less than `P^2`
        // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
        var r = num;
        var rlen;
        do {
            this.split(r, this.tmp);
            r = this.imulK(r);
            r = r.iadd(this.tmp);
            rlen = r.bitLength();
        }while (rlen > this.n)
        var cmp1 = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp1 === 0) {
            r.words[0] = 0;
            r.length = 1;
        } else if (cmp1 > 0) r.isub(this.p);
        else if (r.strip !== undefined) // r is BN v4 instance
        r.strip();
        else // r is BN v5 instance
        r._strip();
        return r;
    };
    MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
    };
    MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
    };
    function K256() {
        MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
    }
    inherits(K256, MPrime);
    K256.prototype.split = function split1(input, output) {
        // 256 = 9 * 26 + 22
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for(var i = 0; i < outLen; i++)output.words[i] = input.words[i];
        output.length = outLen;
        if (input.length <= 9) {
            input.words[0] = 0;
            input.length = 1;
            return;
        }
        // Shift by 9 limbs
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for(i = 10; i < input.length; i++){
            var next = input.words[i] | 0;
            input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
            prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) input.length -= 10;
        else input.length -= 9;
    };
    K256.prototype.imulK = function imulK1(num) {
        // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
        var lo = 0;
        for(var i = 0; i < num.length; i++){
            var w = num.words[i] | 0;
            lo += w * 977;
            num.words[i] = lo & 67108863;
            lo = w * 64 + (lo / 67108864 | 0);
        }
        // Fast length reduction
        if (num.words[num.length - 1] === 0) {
            num.length--;
            if (num.words[num.length - 1] === 0) num.length--;
        }
        return num;
    };
    function P224() {
        MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
    }
    inherits(P224, MPrime);
    function P192() {
        MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
    }
    inherits(P192, MPrime);
    function P25519() {
        // 2 ^ 255 - 19
        MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
    }
    inherits(P25519, MPrime);
    P25519.prototype.imulK = function imulK2(num) {
        // K = 0x13
        var carry = 0;
        for(var i = 0; i < num.length; i++){
            var hi = (num.words[i] | 0) * 19 + carry;
            var lo = hi & 67108863;
            hi >>>= 26;
            num.words[i] = lo;
            carry = hi;
        }
        if (carry !== 0) num.words[num.length++] = carry;
        return num;
    };
    // Exported mostly for testing purposes, use plain name instead
    BN._prime = function prime(name) {
        // Cached version of prime
        if (primes[name]) return primes[name];
        var prime;
        if (name === 'k256') prime = new K256();
        else if (name === 'p224') prime = new P224();
        else if (name === 'p192') prime = new P192();
        else if (name === 'p25519') prime = new P25519();
        else throw new Error('Unknown prime ' + name);
        primes[name] = prime;
        return prime;
    };
    //
    // Base reduction engine
    //
    function Red(m) {
        if (typeof m === 'string') {
            var prime1 = BN._prime(m);
            this.m = prime1.p;
            this.prime = prime1;
        } else {
            assert(m.gtn(1), 'modulus must be greater than 1');
            this.m = m;
            this.prime = null;
        }
    }
    Red.prototype._verify1 = function _verify1(a) {
        assert(a.negative === 0, 'red works only with positives');
        assert(a.red, 'red works only with red numbers');
    };
    Red.prototype._verify2 = function _verify2(a, b) {
        assert((a.negative | b.negative) === 0, 'red works only with positives');
        assert(a.red && a.red === b.red, 'red works only with red numbers');
    };
    Red.prototype.imod = function imod(a) {
        if (this.prime) return this.prime.ireduce(a)._forceRed(this);
        return a.umod(this.m)._forceRed(this);
    };
    Red.prototype.neg = function neg1(a) {
        if (a.isZero()) return a.clone();
        return this.m.sub(a)._forceRed(this);
    };
    Red.prototype.add = function add1(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) res.isub(this.m);
        return res._forceRed(this);
    };
    Red.prototype.iadd = function iadd1(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) res.isub(this.m);
        return res;
    };
    Red.prototype.sub = function sub1(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) res.iadd(this.m);
        return res._forceRed(this);
    };
    Red.prototype.isub = function isub1(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) res.iadd(this.m);
        return res;
    };
    Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
    };
    Red.prototype.imul = function imul1(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
    };
    Red.prototype.mul = function mul1(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
    };
    Red.prototype.isqr = function isqr1(a) {
        return this.imul(a, a.clone());
    };
    Red.prototype.sqr = function sqr1(a) {
        return this.mul(a, a);
    };
    Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero()) return a.clone();
        var mod3 = this.m.andln(3);
        assert(mod3 % 2 === 1);
        // Fast case
        if (mod3 === 3) {
            var pow1 = this.m.add(new BN(1)).iushrn(2);
            return this.pow(a, pow1);
        }
        // Tonelli-Shanks algorithm (Totally unoptimized and slow)
        //
        // Find Q and S, that Q * 2 ^ S = (P - 1)
        var q = this.m.subn(1);
        var s = 0;
        while(!q.isZero() && q.andln(1) === 0){
            s++;
            q.iushrn(1);
        }
        assert(!q.isZero());
        var one = new BN(1).toRed(this);
        var nOne = one.redNeg();
        // Find quadratic non-residue
        // NOTE: Max is such because of generalized Riemann hypothesis.
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN(2 * z * z).toRed(this);
        while(this.pow(z, lpow).cmp(nOne) !== 0)z.redIAdd(nOne);
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while(t.cmp(one) !== 0){
            var tmp = t;
            for(var i = 0; tmp.cmp(one) !== 0; i++)tmp = tmp.redSqr();
            assert(i < m);
            var b = this.pow(c, new BN(1).iushln(m - i - 1));
            r = r.redMul(b);
            c = b.redSqr();
            t = t.redMul(c);
            m = i;
        }
        return r;
    };
    Red.prototype.invm = function invm1(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
            inv.negative = 0;
            return this.imod(inv).redNeg();
        } else return this.imod(inv);
    };
    Red.prototype.pow = function pow2(a, num) {
        if (num.isZero()) return new BN(1).toRed(this);
        if (num.cmpn(1) === 0) return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN(1).toRed(this);
        wnd[1] = a;
        for(var i = 2; i < wnd.length; i++)wnd[i] = this.mul(wnd[i - 1], a);
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) start = 26;
        for(i = num.length - 1; i >= 0; i--){
            var word = num.words[i];
            for(var j = start - 1; j >= 0; j--){
                var bit = word >> j & 1;
                if (res !== wnd[0]) res = this.sqr(res);
                if (bit === 0 && current === 0) {
                    currentLen = 0;
                    continue;
                }
                current <<= 1;
                current |= bit;
                currentLen++;
                if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;
                res = this.mul(res, wnd[current]);
                currentLen = 0;
                current = 0;
            }
            start = 26;
        }
        return res;
    };
    Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
    };
    Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
    };
    //
    // Montgomery method engine
    //
    BN.mont = function mont(num) {
        return new Mont(num);
    };
    function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) this.shift += 26 - this.shift % 26;
        this.r = new BN(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
    }
    inherits(Mont, Red);
    Mont.prototype.convertTo = function convertTo1(num) {
        return this.imod(num.ushln(this.shift));
    };
    Mont.prototype.convertFrom = function convertFrom1(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
    };
    Mont.prototype.imul = function imul2(a, b) {
        if (a.isZero() || b.isZero()) {
            a.words[0] = 0;
            a.length = 1;
            return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) res = u.isub(this.m);
        else if (u.cmpn(0) < 0) res = u.iadd(this.m);
        return res._forceRed(this);
    };
    Mont.prototype.mul = function mul2(a, b) {
        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) res = u.isub(this.m);
        else if (u.cmpn(0) < 0) res = u.iadd(this.m);
        return res._forceRed(this);
    };
    Mont.prototype.invm = function invm2(a) {
        // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
    };
})(typeof module === 'undefined' || module, this);

},{"buffer":"4LM6B"}],"6JHGi":[function(require,module,exports) {
'use strict';
const encoders = require('./encoders');
const decoders = require('./decoders');
const inherits = require('inherits');
const api = exports;
api.define = function define(name, body) {
    return new Entity(name, body);
};
function Entity(name, body) {
    this.name = name;
    this.body = body;
    this.decoders = {
    };
    this.encoders = {
    };
}
Entity.prototype._createNamed = function createNamed(Base) {
    const name = this.name;
    function Generated(entity) {
        this._initNamed(entity, name);
    }
    inherits(Generated, Base);
    Generated.prototype._initNamed = function _initNamed(entity, name1) {
        Base.call(this, entity, name1);
    };
    return new Generated(this);
};
Entity.prototype._getDecoder = function _getDecoder(enc) {
    enc = enc || 'der';
    // Lazily create decoder
    if (!this.decoders.hasOwnProperty(enc)) this.decoders[enc] = this._createNamed(decoders[enc]);
    return this.decoders[enc];
};
Entity.prototype.decode = function decode(data, enc, options) {
    return this._getDecoder(enc).decode(data, options);
};
Entity.prototype._getEncoder = function _getEncoder(enc) {
    enc = enc || 'der';
    // Lazily create encoder
    if (!this.encoders.hasOwnProperty(enc)) this.encoders[enc] = this._createNamed(encoders[enc]);
    return this.encoders[enc];
};
Entity.prototype.encode = function encode(data, enc, /* internal */ reporter) {
    return this._getEncoder(enc).encode(data, reporter);
};

},{"./encoders":"co6Ph","./decoders":"eV6Nt","inherits":"9Y2vC"}],"co6Ph":[function(require,module,exports) {
'use strict';
const encoders = exports;
encoders.der = require('./der');
encoders.pem = require('./pem');

},{"./der":"aLr72","./pem":"5nXuJ"}],"aLr72":[function(require,module,exports) {
'use strict';
const inherits = require('inherits');
const Buffer = require('safer-buffer').Buffer;
const Node1 = require('../base/node');
// Import DER constants
const der = require('../constants/der');
function DEREncoder(entity) {
    this.enc = 'der';
    this.name = entity.name;
    this.entity = entity;
    // Construct base tree
    this.tree = new DERNode();
    this.tree._init(entity.body);
}
module.exports = DEREncoder;
DEREncoder.prototype.encode = function encode(data, reporter) {
    return this.tree._encode(data, reporter).join();
};
// Tree methods
function DERNode(parent) {
    Node1.call(this, 'der', parent);
}
inherits(DERNode, Node1);
DERNode.prototype._encodeComposite = function encodeComposite(tag, primitive, cls, content) {
    const encodedTag = encodeTag(tag, primitive, cls, this.reporter);
    // Short form
    if (content.length < 128) {
        const header = Buffer.alloc(2);
        header[0] = encodedTag;
        header[1] = content.length;
        return this._createEncoderBuffer([
            header,
            content
        ]);
    }
    // Long form
    // Count octets required to store length
    let lenOctets = 1;
    for(let i = content.length; i >= 256; i >>= 8)lenOctets++;
    const header = Buffer.alloc(2 + lenOctets);
    header[0] = encodedTag;
    header[1] = 128 | lenOctets;
    for(let i1 = 1 + lenOctets, j = content.length; j > 0; i1--, j >>= 8)header[i1] = j & 255;
    return this._createEncoderBuffer([
        header,
        content
    ]);
};
DERNode.prototype._encodeStr = function encodeStr(str, tag) {
    if (tag === 'bitstr') return this._createEncoderBuffer([
        str.unused | 0,
        str.data
    ]);
    else if (tag === 'bmpstr') {
        const buf = Buffer.alloc(str.length * 2);
        for(let i = 0; i < str.length; i++)buf.writeUInt16BE(str.charCodeAt(i), i * 2);
        return this._createEncoderBuffer(buf);
    } else if (tag === 'numstr') {
        if (!this._isNumstr(str)) return this.reporter.error("Encoding of string type: numstr supports only digits and space");
        return this._createEncoderBuffer(str);
    } else if (tag === 'printstr') {
        if (!this._isPrintstr(str)) return this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark");
        return this._createEncoderBuffer(str);
    } else if (/str$/.test(tag)) return this._createEncoderBuffer(str);
    else if (tag === 'objDesc') return this._createEncoderBuffer(str);
    else return this.reporter.error('Encoding of string type: ' + tag + ' unsupported');
};
DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
    if (typeof id === 'string') {
        if (!values) return this.reporter.error('string objid given, but no values map found');
        if (!values.hasOwnProperty(id)) return this.reporter.error('objid not found in values map');
        id = values[id].split(/[\s.]+/g);
        for(let i = 0; i < id.length; i++)id[i] |= 0;
    } else if (Array.isArray(id)) {
        id = id.slice();
        for(let i = 0; i < id.length; i++)id[i] |= 0;
    }
    if (!Array.isArray(id)) return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(id));
    if (!relative) {
        if (id[1] >= 40) return this.reporter.error('Second objid identifier OOB');
        id.splice(0, 2, id[0] * 40 + id[1]);
    }
    // Count number of octets
    let size = 0;
    for(let i = 0; i < id.length; i++){
        let ident = id[i];
        for(size++; ident >= 128; ident >>= 7)size++;
    }
    const objid = Buffer.alloc(size);
    let offset = objid.length - 1;
    for(let i1 = id.length - 1; i1 >= 0; i1--){
        let ident = id[i1];
        objid[offset--] = ident & 127;
        while((ident >>= 7) > 0)objid[offset--] = 128 | ident & 127;
    }
    return this._createEncoderBuffer(objid);
};
function two(num) {
    if (num < 10) return '0' + num;
    else return num;
}
DERNode.prototype._encodeTime = function encodeTime(time, tag) {
    let str;
    const date = new Date(time);
    if (tag === 'gentime') str = [
        two(date.getUTCFullYear()),
        two(date.getUTCMonth() + 1),
        two(date.getUTCDate()),
        two(date.getUTCHours()),
        two(date.getUTCMinutes()),
        two(date.getUTCSeconds()),
        'Z'
    ].join('');
    else if (tag === 'utctime') str = [
        two(date.getUTCFullYear() % 100),
        two(date.getUTCMonth() + 1),
        two(date.getUTCDate()),
        two(date.getUTCHours()),
        two(date.getUTCMinutes()),
        two(date.getUTCSeconds()),
        'Z'
    ].join('');
    else this.reporter.error('Encoding ' + tag + ' time is not supported yet');
    return this._encodeStr(str, 'octstr');
};
DERNode.prototype._encodeNull = function encodeNull() {
    return this._createEncoderBuffer('');
};
DERNode.prototype._encodeInt = function encodeInt(num, values) {
    if (typeof num === 'string') {
        if (!values) return this.reporter.error('String int or enum given, but no values map');
        if (!values.hasOwnProperty(num)) return this.reporter.error('Values map doesn\'t contain: ' + JSON.stringify(num));
        num = values[num];
    }
    // Bignum, assume big endian
    if (typeof num !== 'number' && !Buffer.isBuffer(num)) {
        const numArray = num.toArray();
        if (!num.sign && numArray[0] & 128) numArray.unshift(0);
        num = Buffer.from(numArray);
    }
    if (Buffer.isBuffer(num)) {
        let size = num.length;
        if (num.length === 0) size++;
        const out = Buffer.alloc(size);
        num.copy(out);
        if (num.length === 0) out[0] = 0;
        return this._createEncoderBuffer(out);
    }
    if (num < 128) return this._createEncoderBuffer(num);
    if (num < 256) return this._createEncoderBuffer([
        0,
        num
    ]);
    let size = 1;
    for(let i = num; i >= 256; i >>= 8)size++;
    const out = new Array(size);
    for(let i1 = out.length - 1; i1 >= 0; i1--){
        out[i1] = num & 255;
        num >>= 8;
    }
    if (out[0] & 128) out.unshift(0);
    return this._createEncoderBuffer(Buffer.from(out));
};
DERNode.prototype._encodeBool = function encodeBool(value) {
    return this._createEncoderBuffer(value ? 255 : 0);
};
DERNode.prototype._use = function use(entity, obj) {
    if (typeof entity === 'function') entity = entity(obj);
    return entity._getEncoder('der').tree;
};
DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
    const state = this._baseState;
    let i;
    if (state['default'] === null) return false;
    const data = dataBuffer.join();
    if (state.defaultBuffer === undefined) state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();
    if (data.length !== state.defaultBuffer.length) return false;
    for(i = 0; i < data.length; i++)if (data[i] !== state.defaultBuffer[i]) return false;
    return true;
};
// Utility methods
function encodeTag(tag, primitive, cls, reporter) {
    let res;
    if (tag === 'seqof') tag = 'seq';
    else if (tag === 'setof') tag = 'set';
    if (der.tagByName.hasOwnProperty(tag)) res = der.tagByName[tag];
    else if (typeof tag === 'number' && (tag | 0) === tag) res = tag;
    else return reporter.error('Unknown tag: ' + tag);
    if (res >= 31) return reporter.error('Multi-octet tag encoding unsupported');
    if (!primitive) res |= 32;
    res |= der.tagClassByName[cls || 'universal'] << 6;
    return res;
}

},{"inherits":"9Y2vC","safer-buffer":"9vilk","../base/node":"6u0Oj","../constants/der":"l5ZuP"}],"9vilk":[function(require,module,exports) {
var process = require("process");
/* eslint-disable node/no-deprecated-api */ 'use strict';
var buffer = require('buffer');
var Buffer = buffer.Buffer;
var safer = {
};
var key;
for(key in buffer){
    if (!buffer.hasOwnProperty(key)) continue;
    if (key === 'SlowBuffer' || key === 'Buffer') continue;
    safer[key] = buffer[key];
}
var Safer = safer.Buffer = {
};
for(key in Buffer){
    if (!Buffer.hasOwnProperty(key)) continue;
    if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue;
    Safer[key] = Buffer[key];
}
safer.Buffer.prototype = Buffer.prototype;
if (!Safer.from || Safer.from === Uint8Array.from) Safer.from = function(value, encodingOrOffset, length) {
    if (typeof value === 'number') throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof value);
    if (value && typeof value.length === 'undefined') throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value);
    return Buffer(value, encodingOrOffset, length);
};
if (!Safer.alloc) Safer.alloc = function(size, fill, encoding) {
    if (typeof size !== 'number') throw new TypeError('The "size" argument must be of type number. Received type ' + typeof size);
    if (size < 0 || size >= 2147483648) throw new RangeError('The value "' + size + '" is invalid for option "size"');
    var buf = Buffer(size);
    if (!fill || fill.length === 0) buf.fill(0);
    else if (typeof encoding === 'string') buf.fill(fill, encoding);
    else buf.fill(fill);
    return buf;
};
if (!safer.kStringMaxLength) try {
    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength;
} catch (e) {
// we can't determine kStringMaxLength in environments where process.binding
// is unsupported, so let's not set it
}
if (!safer.constants) {
    safer.constants = {
        MAX_LENGTH: safer.kMaxLength
    };
    if (safer.kStringMaxLength) safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength;
}
module.exports = safer;

},{"process":"5svFz","buffer":"hX7zZ"}],"6u0Oj":[function(require,module,exports) {
'use strict';
const Reporter = require('../base/reporter').Reporter;
const EncoderBuffer = require('../base/buffer').EncoderBuffer;
const DecoderBuffer = require('../base/buffer').DecoderBuffer;
const assert = require('minimalistic-assert');
// Supported tags
const tags = [
    'seq',
    'seqof',
    'set',
    'setof',
    'objid',
    'bool',
    'gentime',
    'utctime',
    'null_',
    'enum',
    'int',
    'objDesc',
    'bitstr',
    'bmpstr',
    'charstr',
    'genstr',
    'graphstr',
    'ia5str',
    'iso646str',
    'numstr',
    'octstr',
    'printstr',
    't61str',
    'unistr',
    'utf8str',
    'videostr'
];
// Public methods list
const methods = [
    'key',
    'obj',
    'use',
    'optional',
    'explicit',
    'implicit',
    'def',
    'choice',
    'any',
    'contains'
].concat(tags);
// Overrided methods list
const overrided = [
    '_peekTag',
    '_decodeTag',
    '_use',
    '_decodeStr',
    '_decodeObjid',
    '_decodeTime',
    '_decodeNull',
    '_decodeInt',
    '_decodeBool',
    '_decodeList',
    '_encodeComposite',
    '_encodeStr',
    '_encodeObjid',
    '_encodeTime',
    '_encodeNull',
    '_encodeInt',
    '_encodeBool'
];
function Node1(enc, parent, name) {
    const state = {
    };
    this._baseState = state;
    state.name = name;
    state.enc = enc;
    state.parent = parent || null;
    state.children = null;
    // State
    state.tag = null;
    state.args = null;
    state.reverseArgs = null;
    state.choice = null;
    state.optional = false;
    state.any = false;
    state.obj = false;
    state.use = null;
    state.useDecoder = null;
    state.key = null;
    state['default'] = null;
    state.explicit = null;
    state.implicit = null;
    state.contains = null;
    // Should create new instance on each method
    if (!state.parent) {
        state.children = [];
        this._wrap();
    }
}
module.exports = Node1;
const stateProps = [
    'enc',
    'parent',
    'children',
    'tag',
    'args',
    'reverseArgs',
    'choice',
    'optional',
    'any',
    'obj',
    'use',
    'alteredUse',
    'key',
    'default',
    'explicit',
    'implicit',
    'contains'
];
Node1.prototype.clone = function clone() {
    const state = this._baseState;
    const cstate = {
    };
    stateProps.forEach(function(prop) {
        cstate[prop] = state[prop];
    });
    const res = new this.constructor(cstate.parent);
    res._baseState = cstate;
    return res;
};
Node1.prototype._wrap = function wrap() {
    const state = this._baseState;
    methods.forEach(function(method) {
        this[method] = function _wrappedMethod() {
            const clone1 = new this.constructor(this);
            state.children.push(clone1);
            return clone1[method].apply(clone1, arguments);
        };
    }, this);
};
Node1.prototype._init = function init(body) {
    const state = this._baseState;
    assert(state.parent === null);
    body.call(this);
    // Filter children
    state.children = state.children.filter(function(child) {
        return child._baseState.parent === this;
    }, this);
    assert.equal(state.children.length, 1, 'Root node can have only one child');
};
Node1.prototype._useArgs = function useArgs(args) {
    const state = this._baseState;
    // Filter children and args
    const children = args.filter(function(arg) {
        return arg instanceof this.constructor;
    }, this);
    args = args.filter(function(arg) {
        return !(arg instanceof this.constructor);
    }, this);
    if (children.length !== 0) {
        assert(state.children === null);
        state.children = children;
        // Replace parent to maintain backward link
        children.forEach(function(child) {
            child._baseState.parent = this;
        }, this);
    }
    if (args.length !== 0) {
        assert(state.args === null);
        state.args = args;
        state.reverseArgs = args.map(function(arg) {
            if (typeof arg !== 'object' || arg.constructor !== Object) return arg;
            const res = {
            };
            Object.keys(arg).forEach(function(key) {
                if (key == (key | 0)) key |= 0;
                const value = arg[key];
                res[value] = key;
            });
            return res;
        });
    }
};
//
// Overrided methods
//
overrided.forEach(function(method) {
    Node1.prototype[method] = function _overrided() {
        const state = this._baseState;
        throw new Error(method + ' not implemented for encoding: ' + state.enc);
    };
});
//
// Public methods
//
tags.forEach(function(tag) {
    Node1.prototype[tag] = function _tagMethod() {
        const state = this._baseState;
        const args = Array.prototype.slice.call(arguments);
        assert(state.tag === null);
        state.tag = tag;
        this._useArgs(args);
        return this;
    };
});
Node1.prototype.use = function use(item) {
    assert(item);
    const state = this._baseState;
    assert(state.use === null);
    state.use = item;
    return this;
};
Node1.prototype.optional = function optional() {
    const state = this._baseState;
    state.optional = true;
    return this;
};
Node1.prototype.def = function def(val) {
    const state = this._baseState;
    assert(state['default'] === null);
    state['default'] = val;
    state.optional = true;
    return this;
};
Node1.prototype.explicit = function explicit(num) {
    const state = this._baseState;
    assert(state.explicit === null && state.implicit === null);
    state.explicit = num;
    return this;
};
Node1.prototype.implicit = function implicit(num) {
    const state = this._baseState;
    assert(state.explicit === null && state.implicit === null);
    state.implicit = num;
    return this;
};
Node1.prototype.obj = function obj() {
    const state = this._baseState;
    const args = Array.prototype.slice.call(arguments);
    state.obj = true;
    if (args.length !== 0) this._useArgs(args);
    return this;
};
Node1.prototype.key = function key(newKey) {
    const state = this._baseState;
    assert(state.key === null);
    state.key = newKey;
    return this;
};
Node1.prototype.any = function any() {
    const state = this._baseState;
    state.any = true;
    return this;
};
Node1.prototype.choice = function choice(obj1) {
    const state = this._baseState;
    assert(state.choice === null);
    state.choice = obj1;
    this._useArgs(Object.keys(obj1).map(function(key1) {
        return obj1[key1];
    }));
    return this;
};
Node1.prototype.contains = function contains(item) {
    const state = this._baseState;
    assert(state.use === null);
    state.contains = item;
    return this;
};
//
// Decoding
//
Node1.prototype._decode = function decode(input, options) {
    const state = this._baseState;
    // Decode root node
    if (state.parent === null) return input.wrapResult(state.children[0]._decode(input, options));
    let result = state['default'];
    let present = true;
    let prevKey = null;
    if (state.key !== null) prevKey = input.enterKey(state.key);
    // Check if tag is there
    if (state.optional) {
        let tag = null;
        if (state.explicit !== null) tag = state.explicit;
        else if (state.implicit !== null) tag = state.implicit;
        else if (state.tag !== null) tag = state.tag;
        if (tag === null && !state.any) {
            // Trial and Error
            const save = input.save();
            try {
                if (state.choice === null) this._decodeGeneric(state.tag, input, options);
                else this._decodeChoice(input, options);
                present = true;
            } catch (e) {
                present = false;
            }
            input.restore(save);
        } else {
            present = this._peekTag(input, tag, state.any);
            if (input.isError(present)) return present;
        }
    }
    // Push object on stack
    let prevObj;
    if (state.obj && present) prevObj = input.enterObject();
    if (present) {
        // Unwrap explicit values
        if (state.explicit !== null) {
            const explicit1 = this._decodeTag(input, state.explicit);
            if (input.isError(explicit1)) return explicit1;
            input = explicit1;
        }
        const start = input.offset;
        // Unwrap implicit and normal values
        if (state.use === null && state.choice === null) {
            let save;
            if (state.any) save = input.save();
            const body = this._decodeTag(input, state.implicit !== null ? state.implicit : state.tag, state.any);
            if (input.isError(body)) return body;
            if (state.any) result = input.raw(save);
            else input = body;
        }
        if (options && options.track && state.tag !== null) options.track(input.path(), start, input.length, 'tagged');
        if (options && options.track && state.tag !== null) options.track(input.path(), input.offset, input.length, 'content');
        // Select proper method for tag
        if (state.any) ;
        else if (state.choice === null) result = this._decodeGeneric(state.tag, input, options);
        else result = this._decodeChoice(input, options);
        if (input.isError(result)) return result;
        // Decode children
        if (!state.any && state.choice === null && state.children !== null) state.children.forEach(function decodeChildren(child) {
            // NOTE: We are ignoring errors here, to let parser continue with other
            // parts of encoded data
            child._decode(input, options);
        });
        // Decode contained/encoded by schema, only in bit or octet strings
        if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {
            const data = new DecoderBuffer(result);
            result = this._getUse(state.contains, input._reporterState.obj)._decode(data, options);
        }
    }
    // Pop object
    if (state.obj && present) result = input.leaveObject(prevObj);
    // Set key
    if (state.key !== null && (result !== null || present === true)) input.leaveKey(prevKey, state.key, result);
    else if (prevKey !== null) input.exitKey(prevKey);
    return result;
};
Node1.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {
    const state = this._baseState;
    if (tag === 'seq' || tag === 'set') return null;
    if (tag === 'seqof' || tag === 'setof') return this._decodeList(input, tag, state.args[0], options);
    else if (/str$/.test(tag)) return this._decodeStr(input, tag, options);
    else if (tag === 'objid' && state.args) return this._decodeObjid(input, state.args[0], state.args[1], options);
    else if (tag === 'objid') return this._decodeObjid(input, null, null, options);
    else if (tag === 'gentime' || tag === 'utctime') return this._decodeTime(input, tag, options);
    else if (tag === 'null_') return this._decodeNull(input, options);
    else if (tag === 'bool') return this._decodeBool(input, options);
    else if (tag === 'objDesc') return this._decodeStr(input, tag, options);
    else if (tag === 'int' || tag === 'enum') return this._decodeInt(input, state.args && state.args[0], options);
    if (state.use !== null) return this._getUse(state.use, input._reporterState.obj)._decode(input, options);
    else return input.error('unknown tag: ' + tag);
};
Node1.prototype._getUse = function _getUse(entity, obj1) {
    const state = this._baseState;
    // Create altered use decoder if implicit is set
    state.useDecoder = this._use(entity, obj1);
    assert(state.useDecoder._baseState.parent === null);
    state.useDecoder = state.useDecoder._baseState.children[0];
    if (state.implicit !== state.useDecoder._baseState.implicit) {
        state.useDecoder = state.useDecoder.clone();
        state.useDecoder._baseState.implicit = state.implicit;
    }
    return state.useDecoder;
};
Node1.prototype._decodeChoice = function decodeChoice(input, options) {
    const state = this._baseState;
    let result = null;
    let match = false;
    Object.keys(state.choice).some(function(key1) {
        const save = input.save();
        const node = state.choice[key1];
        try {
            const value = node._decode(input, options);
            if (input.isError(value)) return false;
            result = {
                type: key1,
                value: value
            };
            match = true;
        } catch (e) {
            input.restore(save);
            return false;
        }
        return true;
    }, this);
    if (!match) return input.error('Choice not matched');
    return result;
};
//
// Encoding
//
Node1.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
    return new EncoderBuffer(data, this.reporter);
};
Node1.prototype._encode = function encode(data, reporter, parent) {
    const state = this._baseState;
    if (state['default'] !== null && state['default'] === data) return;
    const result = this._encodeValue(data, reporter, parent);
    if (result === undefined) return;
    if (this._skipDefault(result, reporter, parent)) return;
    return result;
};
Node1.prototype._encodeValue = function encode1(data, reporter, parent) {
    const state = this._baseState;
    // Decode root node
    if (state.parent === null) return state.children[0]._encode(data, reporter || new Reporter());
    let result = null;
    // Set reporter to share it with a child class
    this.reporter = reporter;
    // Check if data is there
    if (state.optional && data === undefined) {
        if (state['default'] !== null) data = state['default'];
        else return;
    }
    // Encode children first
    let content = null;
    let primitive = false;
    if (state.any) // Anything that was given is translated to buffer
    result = this._createEncoderBuffer(data);
    else if (state.choice) result = this._encodeChoice(data, reporter);
    else if (state.contains) {
        content = this._getUse(state.contains, parent)._encode(data, reporter);
        primitive = true;
    } else if (state.children) {
        content = state.children.map(function(child) {
            if (child._baseState.tag === 'null_') return child._encode(null, reporter, data);
            if (child._baseState.key === null) return reporter.error('Child should have a key');
            const prevKey = reporter.enterKey(child._baseState.key);
            if (typeof data !== 'object') return reporter.error('Child expected, but input is not object');
            const res = child._encode(data[child._baseState.key], reporter, data);
            reporter.leaveKey(prevKey);
            return res;
        }, this).filter(function(child) {
            return child;
        });
        content = this._createEncoderBuffer(content);
    } else {
        if (state.tag === 'seqof' || state.tag === 'setof') {
            // TODO(indutny): this should be thrown on DSL level
            if (!(state.args && state.args.length === 1)) return reporter.error('Too many args for : ' + state.tag);
            if (!Array.isArray(data)) return reporter.error('seqof/setof, but data is not Array');
            const child = this.clone();
            child._baseState.implicit = null;
            content = this._createEncoderBuffer(data.map(function(item) {
                const state1 = this._baseState;
                return this._getUse(state1.args[0], data)._encode(item, reporter);
            }, child));
        } else if (state.use !== null) result = this._getUse(state.use, parent)._encode(data, reporter);
        else {
            content = this._encodePrimitive(state.tag, data);
            primitive = true;
        }
    }
    // Encode data itself
    if (!state.any && state.choice === null) {
        const tag = state.implicit !== null ? state.implicit : state.tag;
        const cls = state.implicit === null ? 'universal' : 'context';
        if (tag === null) {
            if (state.use === null) reporter.error('Tag could be omitted only for .use()');
        } else if (state.use === null) result = this._encodeComposite(tag, primitive, cls, content);
    }
    // Wrap in explicit
    if (state.explicit !== null) result = this._encodeComposite(state.explicit, false, 'context', result);
    return result;
};
Node1.prototype._encodeChoice = function encodeChoice(data, reporter) {
    const state = this._baseState;
    const node = state.choice[data.type];
    if (!node) assert(false, data.type + ' not found in ' + JSON.stringify(Object.keys(state.choice)));
    return node._encode(data.value, reporter);
};
Node1.prototype._encodePrimitive = function encodePrimitive(tag, data) {
    const state = this._baseState;
    if (/str$/.test(tag)) return this._encodeStr(data, tag);
    else if (tag === 'objid' && state.args) return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
    else if (tag === 'objid') return this._encodeObjid(data, null, null);
    else if (tag === 'gentime' || tag === 'utctime') return this._encodeTime(data, tag);
    else if (tag === 'null_') return this._encodeNull();
    else if (tag === 'int' || tag === 'enum') return this._encodeInt(data, state.args && state.reverseArgs[0]);
    else if (tag === 'bool') return this._encodeBool(data);
    else if (tag === 'objDesc') return this._encodeStr(data, tag);
    else throw new Error('Unsupported tag: ' + tag);
};
Node1.prototype._isNumstr = function isNumstr(str) {
    return /^[0-9 ]*$/.test(str);
};
Node1.prototype._isPrintstr = function isPrintstr(str) {
    return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);
};

},{"../base/reporter":"9JE1Y","../base/buffer":"47aLa","minimalistic-assert":"fS90O"}],"9JE1Y":[function(require,module,exports) {
'use strict';
const inherits = require('inherits');
function Reporter(options) {
    this._reporterState = {
        obj: null,
        path: [],
        options: options || {
        },
        errors: []
    };
}
exports.Reporter = Reporter;
Reporter.prototype.isError = function isError(obj) {
    return obj instanceof ReporterError;
};
Reporter.prototype.save = function save() {
    const state = this._reporterState;
    return {
        obj: state.obj,
        pathLen: state.path.length
    };
};
Reporter.prototype.restore = function restore(data) {
    const state = this._reporterState;
    state.obj = data.obj;
    state.path = state.path.slice(0, data.pathLen);
};
Reporter.prototype.enterKey = function enterKey(key) {
    return this._reporterState.path.push(key);
};
Reporter.prototype.exitKey = function exitKey(index) {
    const state = this._reporterState;
    state.path = state.path.slice(0, index - 1);
};
Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
    const state = this._reporterState;
    this.exitKey(index);
    if (state.obj !== null) state.obj[key] = value;
};
Reporter.prototype.path = function path() {
    return this._reporterState.path.join('/');
};
Reporter.prototype.enterObject = function enterObject() {
    const state = this._reporterState;
    const prev = state.obj;
    state.obj = {
    };
    return prev;
};
Reporter.prototype.leaveObject = function leaveObject(prev) {
    const state = this._reporterState;
    const now = state.obj;
    state.obj = prev;
    return now;
};
Reporter.prototype.error = function error(msg) {
    let err;
    const state = this._reporterState;
    const inherited = msg instanceof ReporterError;
    if (inherited) err = msg;
    else err = new ReporterError(state.path.map(function(elem) {
        return '[' + JSON.stringify(elem) + ']';
    }).join(''), msg.message || msg, msg.stack);
    if (!state.options.partial) throw err;
    if (!inherited) state.errors.push(err);
    return err;
};
Reporter.prototype.wrapResult = function wrapResult(result) {
    const state = this._reporterState;
    if (!state.options.partial) return result;
    return {
        result: this.isError(result) ? null : result,
        errors: state.errors
    };
};
function ReporterError(path1, msg) {
    this.path = path1;
    this.rethrow(msg);
}
inherits(ReporterError, Error);
ReporterError.prototype.rethrow = function rethrow(msg) {
    this.message = msg + ' at: ' + (this.path || '(shallow)');
    if (Error.captureStackTrace) Error.captureStackTrace(this, ReporterError);
    if (!this.stack) try {
        // IE only adds stack when thrown
        throw new Error(this.message);
    } catch (e) {
        this.stack = e.stack;
    }
    return this;
};

},{"inherits":"9Y2vC"}],"47aLa":[function(require,module,exports) {
'use strict';
const inherits = require('inherits');
const Reporter = require('../base/reporter').Reporter;
const Buffer = require('safer-buffer').Buffer;
function DecoderBuffer(base, options) {
    Reporter.call(this, options);
    if (!Buffer.isBuffer(base)) {
        this.error('Input not Buffer');
        return;
    }
    this.base = base;
    this.offset = 0;
    this.length = base.length;
}
inherits(DecoderBuffer, Reporter);
exports.DecoderBuffer = DecoderBuffer;
DecoderBuffer.isDecoderBuffer = function isDecoderBuffer(data) {
    if (data instanceof DecoderBuffer) return true;
    // Or accept compatible API
    const isCompatible = typeof data === 'object' && Buffer.isBuffer(data.base) && data.constructor.name === 'DecoderBuffer' && typeof data.offset === 'number' && typeof data.length === 'number' && typeof data.save === 'function' && typeof data.restore === 'function' && typeof data.isEmpty === 'function' && typeof data.readUInt8 === 'function' && typeof data.skip === 'function' && typeof data.raw === 'function';
    return isCompatible;
};
DecoderBuffer.prototype.save = function save() {
    return {
        offset: this.offset,
        reporter: Reporter.prototype.save.call(this)
    };
};
DecoderBuffer.prototype.restore = function restore(save1) {
    // Return skipped data
    const res = new DecoderBuffer(this.base);
    res.offset = save1.offset;
    res.length = this.offset;
    this.offset = save1.offset;
    Reporter.prototype.restore.call(this, save1.reporter);
    return res;
};
DecoderBuffer.prototype.isEmpty = function isEmpty() {
    return this.offset === this.length;
};
DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
    if (this.offset + 1 <= this.length) return this.base.readUInt8(this.offset++, true);
    else return this.error(fail || 'DecoderBuffer overrun');
};
DecoderBuffer.prototype.skip = function skip(bytes, fail) {
    if (!(this.offset + bytes <= this.length)) return this.error(fail || 'DecoderBuffer overrun');
    const res = new DecoderBuffer(this.base);
    // Share reporter state
    res._reporterState = this._reporterState;
    res.offset = this.offset;
    res.length = this.offset + bytes;
    this.offset += bytes;
    return res;
};
DecoderBuffer.prototype.raw = function raw(save1) {
    return this.base.slice(save1 ? save1.offset : this.offset, this.length);
};
function EncoderBuffer(value, reporter) {
    if (Array.isArray(value)) {
        this.length = 0;
        this.value = value.map(function(item) {
            if (!EncoderBuffer.isEncoderBuffer(item)) item = new EncoderBuffer(item, reporter);
            this.length += item.length;
            return item;
        }, this);
    } else if (typeof value === 'number') {
        if (!(0 <= value && value <= 255)) return reporter.error('non-byte EncoderBuffer value');
        this.value = value;
        this.length = 1;
    } else if (typeof value === 'string') {
        this.value = value;
        this.length = Buffer.byteLength(value);
    } else if (Buffer.isBuffer(value)) {
        this.value = value;
        this.length = value.length;
    } else return reporter.error('Unsupported type: ' + typeof value);
}
exports.EncoderBuffer = EncoderBuffer;
EncoderBuffer.isEncoderBuffer = function isEncoderBuffer(data) {
    if (data instanceof EncoderBuffer) return true;
    // Or accept compatible API
    const isCompatible = typeof data === 'object' && data.constructor.name === 'EncoderBuffer' && typeof data.length === 'number' && typeof data.join === 'function';
    return isCompatible;
};
EncoderBuffer.prototype.join = function join(out, offset) {
    if (!out) out = Buffer.alloc(this.length);
    if (!offset) offset = 0;
    if (this.length === 0) return out;
    if (Array.isArray(this.value)) this.value.forEach(function(item) {
        item.join(out, offset);
        offset += item.length;
    });
    else {
        if (typeof this.value === 'number') out[offset] = this.value;
        else if (typeof this.value === 'string') out.write(this.value, offset);
        else if (Buffer.isBuffer(this.value)) this.value.copy(out, offset);
        offset += this.length;
    }
    return out;
};

},{"inherits":"9Y2vC","../base/reporter":"9JE1Y","safer-buffer":"9vilk"}],"l5ZuP":[function(require,module,exports) {
'use strict';
// Helper
function reverse(map) {
    const res = {
    };
    Object.keys(map).forEach(function(key) {
        // Convert key to integer if it is stringified
        if ((key | 0) == key) key = key | 0;
        const value = map[key];
        res[value] = key;
    });
    return res;
}
exports.tagClass = {
    0: 'universal',
    1: 'application',
    2: 'context',
    3: 'private'
};
exports.tagClassByName = reverse(exports.tagClass);
exports.tag = {
    0: 'end',
    1: 'bool',
    2: 'int',
    3: 'bitstr',
    4: 'octstr',
    5: 'null_',
    6: 'objid',
    7: 'objDesc',
    8: 'external',
    9: 'real',
    10: 'enum',
    11: 'embed',
    12: 'utf8str',
    13: 'relativeOid',
    16: 'seq',
    17: 'set',
    18: 'numstr',
    19: 'printstr',
    20: 't61str',
    21: 'videostr',
    22: 'ia5str',
    23: 'utctime',
    24: 'gentime',
    25: 'graphstr',
    26: 'iso646str',
    27: 'genstr',
    28: 'unistr',
    29: 'charstr',
    30: 'bmpstr'
};
exports.tagByName = reverse(exports.tag);

},{}],"5nXuJ":[function(require,module,exports) {
'use strict';
const inherits = require('inherits');
const DEREncoder = require('./der');
function PEMEncoder(entity) {
    DEREncoder.call(this, entity);
    this.enc = 'pem';
}
inherits(PEMEncoder, DEREncoder);
module.exports = PEMEncoder;
PEMEncoder.prototype.encode = function encode(data, options) {
    const buf = DEREncoder.prototype.encode.call(this, data);
    const p = buf.toString('base64');
    const out = [
        '-----BEGIN ' + options.label + '-----'
    ];
    for(let i = 0; i < p.length; i += 64)out.push(p.slice(i, i + 64));
    out.push('-----END ' + options.label + '-----');
    return out.join('\n');
};

},{"inherits":"9Y2vC","./der":"aLr72"}],"eV6Nt":[function(require,module,exports) {
'use strict';
const decoders = exports;
decoders.der = require('./der');
decoders.pem = require('./pem');

},{"./der":"41zwj","./pem":"krJNw"}],"41zwj":[function(require,module,exports) {
'use strict';
const inherits = require('inherits');
const bignum = require('bn.js');
const DecoderBuffer = require('../base/buffer').DecoderBuffer;
const Node1 = require('../base/node');
// Import DER constants
const der = require('../constants/der');
function DERDecoder(entity) {
    this.enc = 'der';
    this.name = entity.name;
    this.entity = entity;
    // Construct base tree
    this.tree = new DERNode();
    this.tree._init(entity.body);
}
module.exports = DERDecoder;
DERDecoder.prototype.decode = function decode(data, options) {
    if (!DecoderBuffer.isDecoderBuffer(data)) data = new DecoderBuffer(data, options);
    return this.tree._decode(data, options);
};
// Tree methods
function DERNode(parent) {
    Node1.call(this, 'der', parent);
}
inherits(DERNode, Node1);
DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
    if (buffer.isEmpty()) return false;
    const state = buffer.save();
    const decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
    if (buffer.isError(decodedTag)) return decodedTag;
    buffer.restore(state);
    return decodedTag.tag === tag || decodedTag.tagStr === tag || decodedTag.tagStr + 'of' === tag || any;
};
DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
    const decodedTag = derDecodeTag(buffer, 'Failed to decode tag of "' + tag + '"');
    if (buffer.isError(decodedTag)) return decodedTag;
    let len = derDecodeLen(buffer, decodedTag.primitive, 'Failed to get length of "' + tag + '"');
    // Failure
    if (buffer.isError(len)) return len;
    if (!any && decodedTag.tag !== tag && decodedTag.tagStr !== tag && decodedTag.tagStr + 'of' !== tag) return buffer.error('Failed to match tag: "' + tag + '"');
    if (decodedTag.primitive || len !== null) return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
    // Indefinite length... find END tag
    const state = buffer.save();
    const res = this._skipUntilEnd(buffer, 'Failed to skip indefinite length body: "' + this.tag + '"');
    if (buffer.isError(res)) return res;
    len = buffer.offset - state.offset;
    buffer.restore(state);
    return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
};
DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
    for(;;){
        const tag = derDecodeTag(buffer, fail);
        if (buffer.isError(tag)) return tag;
        const len = derDecodeLen(buffer, tag.primitive, fail);
        if (buffer.isError(len)) return len;
        let res;
        if (tag.primitive || len !== null) res = buffer.skip(len);
        else res = this._skipUntilEnd(buffer, fail);
        // Failure
        if (buffer.isError(res)) return res;
        if (tag.tagStr === 'end') break;
    }
};
DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder, options) {
    const result = [];
    while(!buffer.isEmpty()){
        const possibleEnd = this._peekTag(buffer, 'end');
        if (buffer.isError(possibleEnd)) return possibleEnd;
        const res = decoder.decode(buffer, 'der', options);
        if (buffer.isError(res) && possibleEnd) break;
        result.push(res);
    }
    return result;
};
DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
    if (tag === 'bitstr') {
        const unused = buffer.readUInt8();
        if (buffer.isError(unused)) return unused;
        return {
            unused: unused,
            data: buffer.raw()
        };
    } else if (tag === 'bmpstr') {
        const raw = buffer.raw();
        if (raw.length % 2 === 1) return buffer.error('Decoding of string type: bmpstr length mismatch');
        let str = '';
        for(let i = 0; i < raw.length / 2; i++)str += String.fromCharCode(raw.readUInt16BE(i * 2));
        return str;
    } else if (tag === 'numstr') {
        const numstr = buffer.raw().toString('ascii');
        if (!this._isNumstr(numstr)) return buffer.error("Decoding of string type: numstr unsupported characters");
        return numstr;
    } else if (tag === 'octstr') return buffer.raw();
    else if (tag === 'objDesc') return buffer.raw();
    else if (tag === 'printstr') {
        const printstr = buffer.raw().toString('ascii');
        if (!this._isPrintstr(printstr)) return buffer.error("Decoding of string type: printstr unsupported characters");
        return printstr;
    } else if (/str$/.test(tag)) return buffer.raw().toString();
    else return buffer.error('Decoding of string type: ' + tag + ' unsupported');
};
DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
    let result;
    const identifiers = [];
    let ident = 0;
    let subident = 0;
    while(!buffer.isEmpty()){
        subident = buffer.readUInt8();
        ident <<= 7;
        ident |= subident & 127;
        if ((subident & 128) === 0) {
            identifiers.push(ident);
            ident = 0;
        }
    }
    if (subident & 128) identifiers.push(ident);
    const first = identifiers[0] / 40 | 0;
    const second = identifiers[0] % 40;
    if (relative) result = identifiers;
    else result = [
        first,
        second
    ].concat(identifiers.slice(1));
    if (values) {
        let tmp = values[result.join(' ')];
        if (tmp === undefined) tmp = values[result.join('.')];
        if (tmp !== undefined) result = tmp;
    }
    return result;
};
DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
    const str = buffer.raw().toString();
    let year;
    let mon;
    let day;
    let hour;
    let min;
    let sec;
    if (tag === 'gentime') {
        year = str.slice(0, 4) | 0;
        mon = str.slice(4, 6) | 0;
        day = str.slice(6, 8) | 0;
        hour = str.slice(8, 10) | 0;
        min = str.slice(10, 12) | 0;
        sec = str.slice(12, 14) | 0;
    } else if (tag === 'utctime') {
        year = str.slice(0, 2) | 0;
        mon = str.slice(2, 4) | 0;
        day = str.slice(4, 6) | 0;
        hour = str.slice(6, 8) | 0;
        min = str.slice(8, 10) | 0;
        sec = str.slice(10, 12) | 0;
        if (year < 70) year = 2000 + year;
        else year = 1900 + year;
    } else return buffer.error('Decoding ' + tag + ' time is not supported yet');
    return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
};
DERNode.prototype._decodeNull = function decodeNull() {
    return null;
};
DERNode.prototype._decodeBool = function decodeBool(buffer) {
    const res = buffer.readUInt8();
    if (buffer.isError(res)) return res;
    else return res !== 0;
};
DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
    // Bigint, return as it is (assume big endian)
    const raw = buffer.raw();
    let res = new bignum(raw);
    if (values) res = values[res.toString(10)] || res;
    return res;
};
DERNode.prototype._use = function use(entity, obj) {
    if (typeof entity === 'function') entity = entity(obj);
    return entity._getDecoder('der').tree;
};
// Utility methods
function derDecodeTag(buf, fail) {
    let tag = buf.readUInt8(fail);
    if (buf.isError(tag)) return tag;
    const cls = der.tagClass[tag >> 6];
    const primitive = (tag & 32) === 0;
    // Multi-octet tag - load
    if ((tag & 31) === 31) {
        let oct = tag;
        tag = 0;
        while((oct & 128) === 128){
            oct = buf.readUInt8(fail);
            if (buf.isError(oct)) return oct;
            tag <<= 7;
            tag |= oct & 127;
        }
    } else tag &= 31;
    const tagStr = der.tag[tag];
    return {
        cls: cls,
        primitive: primitive,
        tag: tag,
        tagStr: tagStr
    };
}
function derDecodeLen(buf, primitive, fail) {
    let len = buf.readUInt8(fail);
    if (buf.isError(len)) return len;
    // Indefinite form
    if (!primitive && len === 128) return null;
    // Definite form
    if ((len & 128) === 0) // Short form
    return len;
    // Long form
    const num = len & 127;
    if (num > 4) return buf.error('length octect is too long');
    len = 0;
    for(let i = 0; i < num; i++){
        len <<= 8;
        const j = buf.readUInt8(fail);
        if (buf.isError(j)) return j;
        len |= j;
    }
    return len;
}

},{"inherits":"9Y2vC","bn.js":"1uIRW","../base/buffer":"47aLa","../base/node":"6u0Oj","../constants/der":"l5ZuP"}],"krJNw":[function(require,module,exports) {
'use strict';
const inherits = require('inherits');
const Buffer = require('safer-buffer').Buffer;
const DERDecoder = require('./der');
function PEMDecoder(entity) {
    DERDecoder.call(this, entity);
    this.enc = 'pem';
}
inherits(PEMDecoder, DERDecoder);
module.exports = PEMDecoder;
PEMDecoder.prototype.decode = function decode(data, options) {
    const lines = data.toString().split(/[\r\n]+/g);
    const label = options.label.toUpperCase();
    const re = /^-----(BEGIN|END) ([^-]+)-----$/;
    let start = -1;
    let end = -1;
    for(let i = 0; i < lines.length; i++){
        const match = lines[i].match(re);
        if (match === null) continue;
        if (match[2] !== label) continue;
        if (start === -1) {
            if (match[1] !== 'BEGIN') break;
            start = i;
        } else {
            if (match[1] !== 'END') break;
            end = i;
            break;
        }
    }
    if (start === -1 || end === -1) throw new Error('PEM section not found for: ' + label);
    const base64 = lines.slice(start + 1, end).join('');
    // Remove excessive symbols
    base64.replace(/[^a-z0-9+/=]+/gi, '');
    const input = Buffer.from(base64, 'base64');
    return DERDecoder.prototype.decode.call(this, input, options);
};

},{"inherits":"9Y2vC","safer-buffer":"9vilk","./der":"41zwj"}],"9QWUM":[function(require,module,exports) {
'use strict';
const base = exports;
base.Reporter = require('./reporter').Reporter;
base.DecoderBuffer = require('./buffer').DecoderBuffer;
base.EncoderBuffer = require('./buffer').EncoderBuffer;
base.Node = require('./node');

},{"./reporter":"9JE1Y","./buffer":"47aLa","./node":"6u0Oj"}],"fZqFe":[function(require,module,exports) {
'use strict';
const constants = exports;
// Helper
constants._reverse = function reverse(map) {
    const res = {
    };
    Object.keys(map).forEach(function(key) {
        // Convert key to integer if it is stringified
        if ((key | 0) == key) key = key | 0;
        const value = map[key];
        res[value] = key;
    });
    return res;
};
constants.der = require('./der');

},{"./der":"l5ZuP"}],"1IBqA":[function(require,module,exports) {
// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js
// thanks to @Rantanen
'use strict';
var asn = require('asn1.js');
var Time = asn.define('Time', function() {
    this.choice({
        utcTime: this.utctime(),
        generalTime: this.gentime()
    });
});
var AttributeTypeValue = asn.define('AttributeTypeValue', function() {
    this.seq().obj(this.key('type').objid(), this.key('value').any());
});
var AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function() {
    this.seq().obj(this.key('algorithm').objid(), this.key('parameters').optional(), this.key('curve').objid().optional());
});
var SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function() {
    this.seq().obj(this.key('algorithm').use(AlgorithmIdentifier), this.key('subjectPublicKey').bitstr());
});
var RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function() {
    this.setof(AttributeTypeValue);
});
var RDNSequence = asn.define('RDNSequence', function() {
    this.seqof(RelativeDistinguishedName);
});
var Name = asn.define('Name', function() {
    this.choice({
        rdnSequence: this.use(RDNSequence)
    });
});
var Validity = asn.define('Validity', function() {
    this.seq().obj(this.key('notBefore').use(Time), this.key('notAfter').use(Time));
});
var Extension = asn.define('Extension', function() {
    this.seq().obj(this.key('extnID').objid(), this.key('critical').bool().def(false), this.key('extnValue').octstr());
});
var TBSCertificate = asn.define('TBSCertificate', function() {
    this.seq().obj(this.key('version').explicit(0).int().optional(), this.key('serialNumber').int(), this.key('signature').use(AlgorithmIdentifier), this.key('issuer').use(Name), this.key('validity').use(Validity), this.key('subject').use(Name), this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo), this.key('issuerUniqueID').implicit(1).bitstr().optional(), this.key('subjectUniqueID').implicit(2).bitstr().optional(), this.key('extensions').explicit(3).seqof(Extension).optional());
});
var X509Certificate = asn.define('X509Certificate', function() {
    this.seq().obj(this.key('tbsCertificate').use(TBSCertificate), this.key('signatureAlgorithm').use(AlgorithmIdentifier), this.key('signatureValue').bitstr());
});
module.exports = X509Certificate;

},{"asn1.js":"c9fD6"}],"3iDmZ":[function(require,module,exports) {
module.exports = JSON.parse("{\"2.16.840.1.101.3.4.1.1\":\"aes-128-ecb\",\"2.16.840.1.101.3.4.1.2\":\"aes-128-cbc\",\"2.16.840.1.101.3.4.1.3\":\"aes-128-ofb\",\"2.16.840.1.101.3.4.1.4\":\"aes-128-cfb\",\"2.16.840.1.101.3.4.1.21\":\"aes-192-ecb\",\"2.16.840.1.101.3.4.1.22\":\"aes-192-cbc\",\"2.16.840.1.101.3.4.1.23\":\"aes-192-ofb\",\"2.16.840.1.101.3.4.1.24\":\"aes-192-cfb\",\"2.16.840.1.101.3.4.1.41\":\"aes-256-ecb\",\"2.16.840.1.101.3.4.1.42\":\"aes-256-cbc\",\"2.16.840.1.101.3.4.1.43\":\"aes-256-ofb\",\"2.16.840.1.101.3.4.1.44\":\"aes-256-cfb\"}");

},{}],"f0FrX":[function(require,module,exports) {
// adapted from https://github.com/apatil/pemstrip
var findProc = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m;
var startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m;
var fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m;
var evp = require('evp_bytestokey');
var ciphers = require('browserify-aes');
var Buffer = require('safe-buffer').Buffer;
module.exports = function(okey, password) {
    var key = okey.toString();
    var match = key.match(findProc);
    var decrypted;
    if (!match) {
        var match2 = key.match(fullRegex);
        decrypted = Buffer.from(match2[2].replace(/[\r\n]/g, ''), 'base64');
    } else {
        var suite = 'aes' + match[1];
        var iv = Buffer.from(match[2], 'hex');
        var cipherText = Buffer.from(match[3].replace(/[\r\n]/g, ''), 'base64');
        var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key;
        var out = [];
        var cipher = ciphers.createDecipheriv(suite, cipherKey, iv);
        out.push(cipher.update(cipherText));
        out.push(cipher.final());
        decrypted = Buffer.concat(out);
    }
    var tag = key.match(startRegex)[1];
    return {
        tag: tag,
        data: decrypted
    };
};

},{"evp_bytestokey":"40fSI","browserify-aes":"bLzB9","safe-buffer":"i3ToV"}],"5bUlQ":[function(require,module,exports) {
module.exports = JSON.parse("{\"1.3.132.0.10\":\"secp256k1\",\"1.3.132.0.33\":\"p224\",\"1.2.840.10045.3.1.1\":\"p192\",\"1.2.840.10045.3.1.7\":\"p256\",\"1.3.132.0.34\":\"p384\",\"1.3.132.0.35\":\"p521\"}");

},{}],"LwqZ1":[function(require,module,exports) {
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var Buffer = require('safe-buffer').Buffer;
var BN = require('bn.js');
var EC = require('elliptic').ec;
var parseKeys = require('parse-asn1');
var curves = require('./curves.json');
function verify(sig, hash, key, signType, tag) {
    var pub = parseKeys(key);
    if (pub.type === 'ec') {
        // rsa keys can be interpreted as ecdsa ones in openssl
        if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type');
        return ecVerify(sig, hash, pub);
    } else if (pub.type === 'dsa') {
        if (signType !== 'dsa') throw new Error('wrong public key type');
        return dsaVerify(sig, hash, pub);
    } else {
        if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type');
    }
    hash = Buffer.concat([
        tag,
        hash
    ]);
    var len = pub.modulus.byteLength();
    var pad = [
        1
    ];
    var padNum = 0;
    while(hash.length + pad.length + 2 < len){
        pad.push(255);
        padNum++;
    }
    pad.push(0);
    var i = -1;
    while((++i) < hash.length)pad.push(hash[i]);
    pad = Buffer.from(pad);
    var red = BN.mont(pub.modulus);
    sig = new BN(sig).toRed(red);
    sig = sig.redPow(new BN(pub.publicExponent));
    sig = Buffer.from(sig.fromRed().toArray());
    var out = padNum < 8 ? 1 : 0;
    len = Math.min(sig.length, pad.length);
    if (sig.length !== pad.length) out = 1;
    i = -1;
    while((++i) < len)out |= sig[i] ^ pad[i];
    return out === 0;
}
function ecVerify(sig, hash, pub) {
    var curveId = curves[pub.data.algorithm.curve.join('.')];
    if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'));
    var curve = new EC(curveId);
    var pubkey = pub.data.subjectPrivateKey.data;
    return curve.verify(hash, sig, pubkey);
}
function dsaVerify(sig, hash, pub) {
    var p = pub.data.p;
    var q = pub.data.q;
    var g = pub.data.g;
    var y = pub.data.pub_key;
    var unpacked = parseKeys.signature.decode(sig, 'der');
    var s = unpacked.s;
    var r = unpacked.r;
    checkValue(s, q);
    checkValue(r, q);
    var montp = BN.mont(p);
    var w = s.invm(q);
    var v = g.toRed(montp).redPow(new BN(hash).mul(w).mod(q)).fromRed().mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed()).mod(p).mod(q);
    return v.cmp(r) === 0;
}
function checkValue(b, q) {
    if (b.cmpn(0) <= 0) throw new Error('invalid sig');
    if (b.cmp(q) >= q) throw new Error('invalid sig');
}
module.exports = verify;

},{"safe-buffer":"hLoaD","bn.js":"l01N4","elliptic":"8H3cJ","parse-asn1":"auGzq","./curves.json":"5bUlQ"}],"7PYyd":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
var elliptic = require('elliptic');
var BN = require('bn.js');
module.exports = function createECDH(curve) {
    return new ECDH(curve);
};
var aliases = {
    secp256k1: {
        name: 'secp256k1',
        byteLength: 32
    },
    secp224r1: {
        name: 'p224',
        byteLength: 28
    },
    prime256v1: {
        name: 'p256',
        byteLength: 32
    },
    prime192v1: {
        name: 'p192',
        byteLength: 24
    },
    ed25519: {
        name: 'ed25519',
        byteLength: 32
    },
    secp384r1: {
        name: 'p384',
        byteLength: 48
    },
    secp521r1: {
        name: 'p521',
        byteLength: 66
    }
};
aliases.p224 = aliases.secp224r1;
aliases.p256 = aliases.secp256r1 = aliases.prime256v1;
aliases.p192 = aliases.secp192r1 = aliases.prime192v1;
aliases.p384 = aliases.secp384r1;
aliases.p521 = aliases.secp521r1;
function ECDH(curve) {
    this.curveType = aliases[curve];
    if (!this.curveType) this.curveType = {
        name: curve
    };
    this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap
    ;
    this.keys = void 0;
}
ECDH.prototype.generateKeys = function(enc, format) {
    this.keys = this.curve.genKeyPair();
    return this.getPublicKey(enc, format);
};
ECDH.prototype.computeSecret = function(other, inenc, enc) {
    inenc = inenc || 'utf8';
    if (!Buffer.isBuffer(other)) other = new Buffer(other, inenc);
    var otherPub = this.curve.keyFromPublic(other).getPublic();
    var out = otherPub.mul(this.keys.getPrivate()).getX();
    return formatReturnValue(out, enc, this.curveType.byteLength);
};
ECDH.prototype.getPublicKey = function(enc, format) {
    var key = this.keys.getPublic(format === 'compressed', true);
    if (format === 'hybrid') {
        if (key[key.length - 1] % 2) key[0] = 7;
        else key[0] = 6;
    }
    return formatReturnValue(key, enc);
};
ECDH.prototype.getPrivateKey = function(enc) {
    return formatReturnValue(this.keys.getPrivate(), enc);
};
ECDH.prototype.setPublicKey = function(pub, enc) {
    enc = enc || 'utf8';
    if (!Buffer.isBuffer(pub)) pub = new Buffer(pub, enc);
    this.keys._importPublic(pub);
    return this;
};
ECDH.prototype.setPrivateKey = function(priv, enc) {
    enc = enc || 'utf8';
    if (!Buffer.isBuffer(priv)) priv = new Buffer(priv, enc);
    var _priv = new BN(priv);
    _priv = _priv.toString(16);
    this.keys = this.curve.genKeyPair();
    this.keys._importPrivate(_priv);
    return this;
};
function formatReturnValue(bn, enc, len) {
    if (!Array.isArray(bn)) bn = bn.toArray();
    var buf = new Buffer(bn);
    if (len && buf.length < len) {
        var zeros = new Buffer(len - buf.length);
        zeros.fill(0);
        buf = Buffer.concat([
            zeros,
            buf
        ]);
    }
    if (!enc) return buf;
    else return buf.toString(enc);
}

},{"buffer":"hX7zZ","elliptic":"8H3cJ","bn.js":"7AcwB"}],"7AcwB":[function(require,module,exports) {
(function(module, exports) {
    // Utils
    function assert(val, msg) {
        if (!val) throw new Error(msg || 'Assertion failed');
    }
    // Could use `inherits` module, but don't want to move from single file
    // architecture yet.
    function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
    }
    // BN
    function BN(number, base, endian) {
        if (BN.isBN(number)) return number;
        this.negative = 0;
        this.words = null;
        this.length = 0;
        // Reduction context
        this.red = null;
        if (number !== null) {
            if (base === 'le' || base === 'be') {
                endian = base;
                base = 10;
            }
            this._init(number || 0, base || 10, endian || 'be');
        }
    }
    if (typeof module === 'object') module.exports = BN;
    else exports.BN = BN;
    BN.BN = BN;
    BN.wordSize = 26;
    var Buffer;
    try {
        if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') Buffer = window.Buffer;
        else Buffer = require('buffer').Buffer;
    } catch (e) {
    }
    BN.isBN = function isBN(num) {
        if (num instanceof BN) return true;
        return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
    };
    BN.max = function max(left, right) {
        if (left.cmp(right) > 0) return left;
        return right;
    };
    BN.min = function min(left, right) {
        if (left.cmp(right) < 0) return left;
        return right;
    };
    BN.prototype._init = function init(number, base, endian) {
        if (typeof number === 'number') return this._initNumber(number, base, endian);
        if (typeof number === 'object') return this._initArray(number, base, endian);
        if (base === 'hex') base = 16;
        assert(base === (base | 0) && base >= 2 && base <= 36);
        number = number.toString().replace(/\s+/g, '');
        var start = 0;
        if (number[0] === '-') {
            start++;
            this.negative = 1;
        }
        if (start < number.length) {
            if (base === 16) this._parseHex(number, start, endian);
            else {
                this._parseBase(number, base, start);
                if (endian === 'le') this._initArray(this.toArray(), base, endian);
            }
        }
    };
    BN.prototype._initNumber = function _initNumber(number, base, endian) {
        if (number < 0) {
            this.negative = 1;
            number = -number;
        }
        if (number < 67108864) {
            this.words = [
                number & 67108863
            ];
            this.length = 1;
        } else if (number < 4503599627370496) {
            this.words = [
                number & 67108863,
                number / 67108864 & 67108863
            ];
            this.length = 2;
        } else {
            assert(number < 9007199254740992); // 2 ^ 53 (unsafe)
            this.words = [
                number & 67108863,
                number / 67108864 & 67108863,
                1
            ];
            this.length = 3;
        }
        if (endian !== 'le') return;
        // Reverse the bytes
        this._initArray(this.toArray(), base, endian);
    };
    BN.prototype._initArray = function _initArray(number, base, endian) {
        // Perhaps a Uint8Array
        assert(typeof number.length === 'number');
        if (number.length <= 0) {
            this.words = [
                0
            ];
            this.length = 1;
            return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)this.words[i] = 0;
        var j, w;
        var off = 0;
        if (endian === 'be') for(i = number.length - 1, j = 0; i >= 0; i -= 3){
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        else if (endian === 'le') for(i = 0, j = 0; i < number.length; i += 3){
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        return this.strip();
    };
    function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        // 'A' - 'F'
        if (c >= 65 && c <= 70) return c - 55;
        else if (c >= 97 && c <= 102) return c - 87;
        else return c - 48 & 15;
    }
    function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) r |= parseHex4Bits(string, index - 1) << 4;
        return r;
    }
    BN.prototype._parseHex = function _parseHex(number, start, endian) {
        // Create possibly bigger array to ensure that it fits the number
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)this.words[i] = 0;
        // 24-bits chunks
        var off = 0;
        var j = 0;
        var w;
        if (endian === 'be') for(i = number.length - 1; i >= start; i -= 2){
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
                off -= 18;
                j += 1;
                this.words[j] |= w >>> 26;
            } else off += 8;
        }
        else {
            var parseLength = number.length - start;
            for(i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2){
                w = parseHexByte(number, start, i) << off;
                this.words[j] |= w & 67108863;
                if (off >= 18) {
                    off -= 18;
                    j += 1;
                    this.words[j] |= w >>> 26;
                } else off += 8;
            }
        }
        this.strip();
    };
    function parseBase(str, start, end, mul) {
        var r = 0;
        var len = Math.min(str.length, end);
        for(var i = start; i < len; i++){
            var c = str.charCodeAt(i) - 48;
            r *= mul;
            // 'a'
            if (c >= 49) r += c - 49 + 10;
            else if (c >= 17) r += c - 17 + 10;
            else r += c;
        }
        return r;
    }
    BN.prototype._parseBase = function _parseBase(number, base, start) {
        // Initialize as zero
        this.words = [
            0
        ];
        this.length = 1;
        // Find length of limb in base
        for(var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base)limbLen++;
        limbLen--;
        limbPow = limbPow / base | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for(var i = start; i < end; i += limbLen){
            word = parseBase(number, i, i + limbLen, base);
            this.imuln(limbPow);
            if (this.words[0] + word < 67108864) this.words[0] += word;
            else this._iaddn(word);
        }
        if (mod !== 0) {
            var pow = 1;
            word = parseBase(number, i, number.length, base);
            for(i = 0; i < mod; i++)pow *= base;
            this.imuln(pow);
            if (this.words[0] + word < 67108864) this.words[0] += word;
            else this._iaddn(word);
        }
        this.strip();
    };
    BN.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)dest.words[i] = this.words[i];
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
    };
    BN.prototype.clone = function clone() {
        var r = new BN(null);
        this.copy(r);
        return r;
    };
    BN.prototype._expand = function _expand(size) {
        while(this.length < size)this.words[this.length++] = 0;
        return this;
    };
    // Remove leading `0` from `this`
    BN.prototype.strip = function strip() {
        while(this.length > 1 && this.words[this.length - 1] === 0)this.length--;
        return this._normSign();
    };
    BN.prototype._normSign = function _normSign() {
        // -0 = 0
        if (this.length === 1 && this.words[0] === 0) this.negative = 0;
        return this;
    };
    BN.prototype.inspect = function inspect() {
        return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
    };
    /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */ var zeros = [
        '',
        '0',
        '00',
        '000',
        '0000',
        '00000',
        '000000',
        '0000000',
        '00000000',
        '000000000',
        '0000000000',
        '00000000000',
        '000000000000',
        '0000000000000',
        '00000000000000',
        '000000000000000',
        '0000000000000000',
        '00000000000000000',
        '000000000000000000',
        '0000000000000000000',
        '00000000000000000000',
        '000000000000000000000',
        '0000000000000000000000',
        '00000000000000000000000',
        '000000000000000000000000',
        '0000000000000000000000000'
    ];
    var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
    ];
    var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        10000000,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64000000,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        24300000,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
    ];
    BN.prototype.toString = function toString(base, padding) {
        base = base || 10;
        padding = padding | 0 || 1;
        var out;
        if (base === 16 || base === 'hex') {
            out = '';
            var off = 0;
            var carry = 0;
            for(var i = 0; i < this.length; i++){
                var w = this.words[i];
                var word = ((w << off | carry) & 16777215).toString(16);
                carry = w >>> 24 - off & 16777215;
                if (carry !== 0 || i !== this.length - 1) out = zeros[6 - word.length] + word + out;
                else out = word + out;
                off += 2;
                if (off >= 26) {
                    off -= 26;
                    i--;
                }
            }
            if (carry !== 0) out = carry.toString(16) + out;
            while(out.length % padding !== 0)out = '0' + out;
            if (this.negative !== 0) out = '-' + out;
            return out;
        }
        if (base === (base | 0) && base >= 2 && base <= 36) {
            // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
            var groupSize = groupSizes[base];
            // var groupBase = Math.pow(base, groupSize);
            var groupBase = groupBases[base];
            out = '';
            var c = this.clone();
            c.negative = 0;
            while(!c.isZero()){
                var r = c.modn(groupBase).toString(base);
                c = c.idivn(groupBase);
                if (!c.isZero()) out = zeros[groupSize - r.length] + r + out;
                else out = r + out;
            }
            if (this.isZero()) out = '0' + out;
            while(out.length % padding !== 0)out = '0' + out;
            if (this.negative !== 0) out = '-' + out;
            return out;
        }
        assert(false, 'Base should be between 2 and 36');
    };
    BN.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) ret += this.words[1] * 67108864;
        else if (this.length === 3 && this.words[2] === 1) // NOTE: at this stage it is known that the top bit is set
        ret += 4503599627370496 + this.words[1] * 67108864;
        else if (this.length > 2) assert(false, 'Number can only safely store up to 53 bits');
        return this.negative !== 0 ? -ret : ret;
    };
    BN.prototype.toJSON = function toJSON() {
        return this.toString(16);
    };
    BN.prototype.toBuffer = function toBuffer(endian, length) {
        assert(typeof Buffer !== 'undefined');
        return this.toArrayLike(Buffer, endian, length);
    };
    BN.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
    };
    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert(byteLength <= reqLength, 'byte array longer than desired length');
        assert(reqLength > 0, 'Requested array length <= 0');
        this.strip();
        var littleEndian = endian === 'le';
        var res = new ArrayType(reqLength);
        var b, i;
        var q = this.clone();
        if (!littleEndian) {
            // Assume big-endian
            for(i = 0; i < reqLength - byteLength; i++)res[i] = 0;
            for(i = 0; !q.isZero(); i++){
                b = q.andln(255);
                q.iushrn(8);
                res[reqLength - i - 1] = b;
            }
        } else {
            for(i = 0; !q.isZero(); i++){
                b = q.andln(255);
                q.iushrn(8);
                res[i] = b;
            }
            for(; i < reqLength; i++)res[i] = 0;
        }
        return res;
    };
    if (Math.clz32) BN.prototype._countBits = function _countBits(w) {
        return 32 - Math.clz32(w);
    };
    else BN.prototype._countBits = function _countBits1(w) {
        var t = w;
        var r = 0;
        if (t >= 4096) {
            r += 13;
            t >>>= 13;
        }
        if (t >= 64) {
            r += 7;
            t >>>= 7;
        }
        if (t >= 8) {
            r += 4;
            t >>>= 4;
        }
        if (t >= 2) {
            r += 2;
            t >>>= 2;
        }
        return r + t;
    };
    BN.prototype._zeroBits = function _zeroBits(w) {
        // Short-cut
        if (w === 0) return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
            r += 13;
            t >>>= 13;
        }
        if ((t & 127) === 0) {
            r += 7;
            t >>>= 7;
        }
        if ((t & 15) === 0) {
            r += 4;
            t >>>= 4;
        }
        if ((t & 3) === 0) {
            r += 2;
            t >>>= 2;
        }
        if ((t & 1) === 0) r++;
        return r;
    };
    // Return number of used bits in a BN
    BN.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
    };
    function toBitArray(num) {
        var w = new Array(num.bitLength());
        for(var bit = 0; bit < w.length; bit++){
            var off = bit / 26 | 0;
            var wbit = bit % 26;
            w[bit] = (num.words[off] & 1 << wbit) >>> wbit;
        }
        return w;
    }
    // Number of trailing zero bits
    BN.prototype.zeroBits = function zeroBits() {
        if (this.isZero()) return 0;
        var r = 0;
        for(var i = 0; i < this.length; i++){
            var b = this._zeroBits(this.words[i]);
            r += b;
            if (b !== 26) break;
        }
        return r;
    };
    BN.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
    };
    BN.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) return this.abs().inotn(width).iaddn(1);
        return this.clone();
    };
    BN.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) return this.notn(width).iaddn(1).ineg();
        return this.clone();
    };
    BN.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
    };
    // Return negative clone of `this`
    BN.prototype.neg = function neg() {
        return this.clone().ineg();
    };
    BN.prototype.ineg = function ineg() {
        if (!this.isZero()) this.negative ^= 1;
        return this;
    };
    // Or `num` with `this` in-place
    BN.prototype.iuor = function iuor(num) {
        while(this.length < num.length)this.words[this.length++] = 0;
        for(var i = 0; i < num.length; i++)this.words[i] = this.words[i] | num.words[i];
        return this.strip();
    };
    BN.prototype.ior = function ior(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuor(num);
    };
    // Or `num` with `this`
    BN.prototype.or = function or(num) {
        if (this.length > num.length) return this.clone().ior(num);
        return num.clone().ior(this);
    };
    BN.prototype.uor = function uor(num) {
        if (this.length > num.length) return this.clone().iuor(num);
        return num.clone().iuor(this);
    };
    // And `num` with `this` in-place
    BN.prototype.iuand = function iuand(num) {
        // b = min-length(num, this)
        var b;
        if (this.length > num.length) b = num;
        else b = this;
        for(var i = 0; i < b.length; i++)this.words[i] = this.words[i] & num.words[i];
        this.length = b.length;
        return this.strip();
    };
    BN.prototype.iand = function iand(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuand(num);
    };
    // And `num` with `this`
    BN.prototype.and = function and(num) {
        if (this.length > num.length) return this.clone().iand(num);
        return num.clone().iand(this);
    };
    BN.prototype.uand = function uand(num) {
        if (this.length > num.length) return this.clone().iuand(num);
        return num.clone().iuand(this);
    };
    // Xor `num` with `this` in-place
    BN.prototype.iuxor = function iuxor(num) {
        // a.length > b.length
        var a;
        var b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        for(var i = 0; i < b.length; i++)this.words[i] = a.words[i] ^ b.words[i];
        if (this !== a) for(; i < a.length; i++)this.words[i] = a.words[i];
        this.length = a.length;
        return this.strip();
    };
    BN.prototype.ixor = function ixor(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuxor(num);
    };
    // Xor `num` with `this`
    BN.prototype.xor = function xor(num) {
        if (this.length > num.length) return this.clone().ixor(num);
        return num.clone().ixor(this);
    };
    BN.prototype.uxor = function uxor(num) {
        if (this.length > num.length) return this.clone().iuxor(num);
        return num.clone().iuxor(this);
    };
    // Not ``this`` with ``width`` bitwidth
    BN.prototype.inotn = function inotn(width) {
        assert(typeof width === 'number' && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        // Extend the buffer with leading zeroes
        this._expand(bytesNeeded);
        if (bitsLeft > 0) bytesNeeded--;
        // Handle complete words
        for(var i = 0; i < bytesNeeded; i++)this.words[i] = ~this.words[i] & 67108863;
        // Handle the residue
        if (bitsLeft > 0) this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        // And remove leading zeroes
        return this.strip();
    };
    BN.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
    };
    // Set `bit` of `this`
    BN.prototype.setn = function setn(bit, val) {
        assert(typeof bit === 'number' && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) this.words[off] = this.words[off] | 1 << wbit;
        else this.words[off] = this.words[off] & ~(1 << wbit);
        return this.strip();
    };
    // Add `num` to `this` in-place
    BN.prototype.iadd = function iadd(num) {
        var r;
        // negative + positive
        if (this.negative !== 0 && num.negative === 0) {
            this.negative = 0;
            r = this.isub(num);
            this.negative ^= 1;
            return this._normSign();
        // positive + negative
        } else if (this.negative === 0 && num.negative !== 0) {
            num.negative = 0;
            r = this.isub(num);
            num.negative = 1;
            return r._normSign();
        }
        // a.length > b.length
        var a, b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
            this.words[i] = r & 67108863;
            carry = r >>> 26;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            this.words[i] = r & 67108863;
            carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
            this.words[this.length] = carry;
            this.length++;
        // Copy the rest of the words
        } else if (a !== this) for(; i < a.length; i++)this.words[i] = a.words[i];
        return this;
    };
    // Add `num` to `this`
    BN.prototype.add = function add(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
            num.negative = 0;
            res = this.sub(num);
            num.negative ^= 1;
            return res;
        } else if (num.negative === 0 && this.negative !== 0) {
            this.negative = 0;
            res = num.sub(this);
            this.negative = 1;
            return res;
        }
        if (this.length > num.length) return this.clone().iadd(num);
        return num.clone().iadd(this);
    };
    // Subtract `num` from `this` in-place
    BN.prototype.isub = function isub(num) {
        // this - (-num) = this + num
        if (num.negative !== 0) {
            num.negative = 0;
            var r = this.iadd(num);
            num.negative = 1;
            return r._normSign();
        // -this - num = -(this + num)
        } else if (this.negative !== 0) {
            this.negative = 0;
            this.iadd(num);
            this.negative = 1;
            return this._normSign();
        }
        // At this point both numbers are positive
        var cmp = this.cmp(num);
        // Optimization - zeroify
        if (cmp === 0) {
            this.negative = 0;
            this.length = 1;
            this.words[0] = 0;
            return this;
        }
        // a > b
        var a, b;
        if (cmp > 0) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 67108863;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 67108863;
        }
        // Copy rest of the words
        if (carry === 0 && i < a.length && a !== this) for(; i < a.length; i++)this.words[i] = a.words[i];
        this.length = Math.max(this.length, i);
        if (a !== this) this.negative = 1;
        return this.strip();
    };
    // Subtract `num` from `this`
    BN.prototype.sub = function sub(num) {
        return this.clone().isub(num);
    };
    function smallMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        var len = self.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        // Peel one iteration (compiler can't do it, because of code complexity)
        var a = self.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for(var k = 1; k < len; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = carry >>> 26;
            var rword = carry & 67108863;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j | 0;
                a = self.words[i] | 0;
                b = num.words[j] | 0;
                r = a * b + rword;
                ncarry += r / 67108864 | 0;
                rword = r & 67108863;
            }
            out.words[k] = rword | 0;
            carry = ncarry | 0;
        }
        if (carry !== 0) out.words[k] = carry | 0;
        else out.length--;
        return out.strip();
    }
    // TODO(indutny): it may be reasonable to omit it for users who don't need
    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
    // multiplication (like elliptic secp256k1).
    var comb10MulTo = function comb10MulTo1(self, num, out) {
        var a = self.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self.negative ^ num.negative;
        out.length = 19;
        /* k = 0 */ lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        /* k = 1 */ lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        /* k = 2 */ lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        /* k = 3 */ lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        /* k = 4 */ lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        /* k = 5 */ lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        /* k = 6 */ lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        /* k = 7 */ lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        /* k = 8 */ lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        /* k = 9 */ lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        /* k = 10 */ lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        /* k = 11 */ lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        /* k = 12 */ lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        /* k = 13 */ lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        /* k = 14 */ lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        /* k = 15 */ lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        /* k = 16 */ lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        /* k = 17 */ lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        /* k = 18 */ lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
            o[19] = c;
            out.length++;
        }
        return out;
    };
    // Polyfill comb
    if (!Math.imul) comb10MulTo = smallMulTo;
    function bigMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        out.length = self.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for(var k = 0; k < out.length - 1; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = hncarry;
            hncarry = 0;
            var rword = carry & 67108863;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j;
                var a = self.words[i] | 0;
                var b = num.words[j] | 0;
                var r = a * b;
                var lo = r & 67108863;
                ncarry = ncarry + (r / 67108864 | 0) | 0;
                lo = lo + rword | 0;
                rword = lo & 67108863;
                ncarry = ncarry + (lo >>> 26) | 0;
                hncarry += ncarry >>> 26;
                ncarry &= 67108863;
            }
            out.words[k] = rword;
            carry = ncarry;
            ncarry = hncarry;
        }
        if (carry !== 0) out.words[k] = carry;
        else out.length--;
        return out.strip();
    }
    function jumboMulTo(self, num, out) {
        var fftm = new FFTM();
        return fftm.mulp(self, num, out);
    }
    BN.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) res = comb10MulTo(this, num, out);
        else if (len < 63) res = smallMulTo(this, num, out);
        else if (len < 1024) res = bigMulTo(this, num, out);
        else res = jumboMulTo(this, num, out);
        return res;
    };
    // Cooley-Tukey algorithm for FFT
    // slightly revisited to rely on looping instead of recursion
    function FFTM(x, y) {
        this.x = x;
        this.y = y;
    }
    FFTM.prototype.makeRBT = function makeRBT(N) {
        var t = new Array(N);
        var l = BN.prototype._countBits(N) - 1;
        for(var i = 0; i < N; i++)t[i] = this.revBin(i, l, N);
        return t;
    };
    // Returns binary-reversed representation of `x`
    FFTM.prototype.revBin = function revBin(x, l, N) {
        if (x === 0 || x === N - 1) return x;
        var rb = 0;
        for(var i = 0; i < l; i++){
            rb |= (x & 1) << l - i - 1;
            x >>= 1;
        }
        return rb;
    };
    // Performs "tweedling" phase, therefore 'emulating'
    // behaviour of the recursive algorithm
    FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
        for(var i = 0; i < N; i++){
            rtws[i] = rws[rbt[i]];
            itws[i] = iws[rbt[i]];
        }
    };
    FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N);
        for(var s = 1; s < N; s <<= 1){
            var l = s << 1;
            var rtwdf = Math.cos(2 * Math.PI / l);
            var itwdf = Math.sin(2 * Math.PI / l);
            for(var p = 0; p < N; p += l){
                var rtwdf_ = rtwdf;
                var itwdf_ = itwdf;
                for(var j = 0; j < s; j++){
                    var re = rtws[p + j];
                    var ie = itws[p + j];
                    var ro = rtws[p + j + s];
                    var io = itws[p + j + s];
                    var rx = rtwdf_ * ro - itwdf_ * io;
                    io = rtwdf_ * io + itwdf_ * ro;
                    ro = rx;
                    rtws[p + j] = re + ro;
                    itws[p + j] = ie + io;
                    rtws[p + j + s] = re - ro;
                    itws[p + j + s] = ie - io;
                    /* jshint maxdepth : false */ if (j !== l) {
                        rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                        itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                        rtwdf_ = rx;
                    }
                }
            }
        }
    };
    FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N = Math.max(m, n) | 1;
        var odd = N & 1;
        var i = 0;
        for(N = N / 2 | 0; N; N = N >>> 1)i++;
        return 1 << i + 1 + odd;
    };
    FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
        if (N <= 1) return;
        for(var i = 0; i < N / 2; i++){
            var t = rws[i];
            rws[i] = rws[N - i - 1];
            rws[N - i - 1] = t;
            t = iws[i];
            iws[i] = -iws[N - i - 1];
            iws[N - i - 1] = -t;
        }
    };
    FFTM.prototype.normalize13b = function normalize13b(ws, N) {
        var carry = 0;
        for(var i = 0; i < N / 2; i++){
            var w = Math.round(ws[2 * i + 1] / N) * 8192 + Math.round(ws[2 * i] / N) + carry;
            ws[i] = w & 67108863;
            if (w < 67108864) carry = 0;
            else carry = w / 67108864 | 0;
        }
        return ws;
    };
    FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
        var carry = 0;
        for(var i = 0; i < len; i++){
            carry = carry + (ws[i] | 0);
            rws[2 * i] = carry & 8191;
            carry = carry >>> 13;
            rws[2 * i + 1] = carry & 8191;
            carry = carry >>> 13;
        }
        // Pad with zeroes
        for(i = 2 * len; i < N; ++i)rws[i] = 0;
        assert(carry === 0);
        assert((carry & -8192) === 0);
    };
    FFTM.prototype.stub = function stub(N) {
        var ph = new Array(N);
        for(var i = 0; i < N; i++)ph[i] = 0;
        return ph;
    };
    FFTM.prototype.mulp = function mulp(x, y, out) {
        var N = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N);
        var _ = this.stub(N);
        var rws = new Array(N);
        var rwst = new Array(N);
        var iwst = new Array(N);
        var nrws = new Array(N);
        var nrwst = new Array(N);
        var niwst = new Array(N);
        var rmws = out.words;
        rmws.length = N;
        this.convert13b(x.words, x.length, rws, N);
        this.convert13b(y.words, y.length, nrws, N);
        this.transform(rws, _, rwst, iwst, N, rbt);
        this.transform(nrws, _, nrwst, niwst, N, rbt);
        for(var i = 0; i < N; i++){
            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
            iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
            rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N);
        this.transform(rwst, iwst, rmws, _, N, rbt);
        this.conjugate(rmws, _, N);
        this.normalize13b(rmws, N);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out.strip();
    };
    // Multiply `this` by `num`
    BN.prototype.mul = function mul(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
    };
    // Multiply employing FFT
    BN.prototype.mulf = function mulf(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
    };
    // In-place Multiplication
    BN.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
    };
    BN.prototype.imuln = function imuln(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        // Carry
        var carry = 0;
        for(var i = 0; i < this.length; i++){
            var w = (this.words[i] | 0) * num;
            var lo = (w & 67108863) + (carry & 67108863);
            carry >>= 26;
            carry += w / 67108864 | 0;
            // NOTE: lo is 27bit maximum
            carry += lo >>> 26;
            this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return this;
    };
    BN.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
    };
    // `this` * `this`
    BN.prototype.sqr = function sqr() {
        return this.mul(this);
    };
    // `this` * `this` in-place
    BN.prototype.isqr = function isqr() {
        return this.imul(this.clone());
    };
    // Math.pow(`this`, `num`)
    BN.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0) return new BN(1);
        // Skip leading zeroes
        var res = this;
        for(var i = 0; i < w.length; i++, res = res.sqr()){
            if (w[i] !== 0) break;
        }
        if ((++i) < w.length) for(var q = res.sqr(); i < w.length; i++, q = q.sqr()){
            if (w[i] === 0) continue;
            res = res.mul(q);
        }
        return res;
    };
    // Shift-left in-place
    BN.prototype.iushln = function iushln(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
            var carry = 0;
            for(i = 0; i < this.length; i++){
                var newCarry = this.words[i] & carryMask;
                var c = (this.words[i] | 0) - newCarry << r;
                this.words[i] = c | carry;
                carry = newCarry >>> 26 - r;
            }
            if (carry) {
                this.words[i] = carry;
                this.length++;
            }
        }
        if (s !== 0) {
            for(i = this.length - 1; i >= 0; i--)this.words[i + s] = this.words[i];
            for(i = 0; i < s; i++)this.words[i] = 0;
            this.length += s;
        }
        return this.strip();
    };
    BN.prototype.ishln = function ishln(bits) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushln(bits);
    };
    // Shift-right in-place
    // NOTE: `hint` is a lowest bit before trailing zeroes
    // NOTE: if `extended` is present - it will be filled with destroyed bits
    BN.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert(typeof bits === 'number' && bits >= 0);
        var h;
        if (hint) h = (hint - hint % 26) / 26;
        else h = 0;
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        // Extended mode, copy masked part
        if (maskedWords) {
            for(var i = 0; i < s; i++)maskedWords.words[i] = this.words[i];
            maskedWords.length = s;
        }
        if (s === 0) ;
        else if (this.length > s) {
            this.length -= s;
            for(i = 0; i < this.length; i++)this.words[i] = this.words[i + s];
        } else {
            this.words[0] = 0;
            this.length = 1;
        }
        var carry = 0;
        for(i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--){
            var word = this.words[i] | 0;
            this.words[i] = carry << 26 - r | word >>> r;
            carry = word & mask;
        }
        // Push carried bits as a mask
        if (maskedWords && carry !== 0) maskedWords.words[maskedWords.length++] = carry;
        if (this.length === 0) {
            this.words[0] = 0;
            this.length = 1;
        }
        return this.strip();
    };
    BN.prototype.ishrn = function ishrn(bits, hint, extended) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushrn(bits, hint, extended);
    };
    // Shift-left
    BN.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
    };
    BN.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
    };
    // Shift-right
    BN.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
    };
    BN.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
    };
    // Test if n bit is set
    BN.prototype.testn = function testn(bit) {
        assert(typeof bit === 'number' && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) return false;
        // Check bit and return
        var w = this.words[s];
        return !!(w & q);
    };
    // Return only lowers bits of number (in-place)
    BN.prototype.imaskn = function imaskn(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert(this.negative === 0, 'imaskn works only with positive numbers');
        if (this.length <= s) return this;
        if (r !== 0) s++;
        this.length = Math.min(s, this.length);
        if (r !== 0) {
            var mask = 67108863 ^ 67108863 >>> r << r;
            this.words[this.length - 1] &= mask;
        }
        return this.strip();
    };
    // Return only lowers bits of number
    BN.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
    };
    // Add plain number `num` to `this`
    BN.prototype.iaddn = function iaddn(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        if (num < 0) return this.isubn(-num);
        // Possible sign change
        if (this.negative !== 0) {
            if (this.length === 1 && (this.words[0] | 0) < num) {
                this.words[0] = num - (this.words[0] | 0);
                this.negative = 0;
                return this;
            }
            this.negative = 0;
            this.isubn(num);
            this.negative = 1;
            return this;
        }
        // Add without checks
        return this._iaddn(num);
    };
    BN.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        // Carry
        for(var i = 0; i < this.length && this.words[i] >= 67108864; i++){
            this.words[i] -= 67108864;
            if (i === this.length - 1) this.words[i + 1] = 1;
            else this.words[i + 1]++;
        }
        this.length = Math.max(this.length, i + 1);
        return this;
    };
    // Subtract plain number `num` from `this`
    BN.prototype.isubn = function isubn(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        if (num < 0) return this.iaddn(-num);
        if (this.negative !== 0) {
            this.negative = 0;
            this.iaddn(num);
            this.negative = 1;
            return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
            this.words[0] = -this.words[0];
            this.negative = 1;
        } else // Carry
        for(var i = 0; i < this.length && this.words[i] < 0; i++){
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
        }
        return this.strip();
    };
    BN.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
    };
    BN.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
    };
    BN.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
    };
    BN.prototype.abs = function abs() {
        return this.clone().iabs();
    };
    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul1, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for(i = 0; i < num.length; i++){
            w = (this.words[i + shift] | 0) + carry;
            var right = (num.words[i] | 0) * mul1;
            w -= right & 67108863;
            carry = (w >> 26) - (right / 67108864 | 0);
            this.words[i + shift] = w & 67108863;
        }
        for(; i < this.length - shift; i++){
            w = (this.words[i + shift] | 0) + carry;
            carry = w >> 26;
            this.words[i + shift] = w & 67108863;
        }
        if (carry === 0) return this.strip();
        // Subtraction overflow
        assert(carry === -1);
        carry = 0;
        for(i = 0; i < this.length; i++){
            w = -(this.words[i] | 0) + carry;
            carry = w >> 26;
            this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this.strip();
    };
    BN.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        // Normalize
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
            b = b.ushln(shift);
            a.iushln(shift);
            bhi = b.words[b.length - 1] | 0;
        }
        // Initialize quotient
        var m = a.length - b.length;
        var q;
        if (mode !== 'mod') {
            q = new BN(null);
            q.length = m + 1;
            q.words = new Array(q.length);
            for(var i = 0; i < q.length; i++)q.words[i] = 0;
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
            a = diff;
            if (q) q.words[m] = 1;
        }
        for(var j = m - 1; j >= 0; j--){
            var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
            // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
            // (0x7ffffff)
            qj = Math.min(qj / bhi | 0, 67108863);
            a._ishlnsubmul(b, qj, j);
            while(a.negative !== 0){
                qj--;
                a.negative = 0;
                a._ishlnsubmul(b, 1, j);
                if (!a.isZero()) a.negative ^= 1;
            }
            if (q) q.words[j] = qj;
        }
        if (q) q.strip();
        a.strip();
        // Denormalize
        if (mode !== 'div' && shift !== 0) a.iushrn(shift);
        return {
            div: q || null,
            mod: a
        };
    };
    // NOTE: 1) `mode` can be set to `mod` to request mod only,
    //       to `div` to request div only, or be absent to
    //       request both div & mod
    //       2) `positive` is true if unsigned mod is requested
    BN.prototype.divmod = function divmod(num, mode, positive) {
        assert(!num.isZero());
        if (this.isZero()) return {
            div: new BN(0),
            mod: new BN(0)
        };
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
            res = this.neg().divmod(num, mode);
            if (mode !== 'mod') div = res.div.neg();
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) mod.iadd(num);
            }
            return {
                div: div,
                mod: mod
            };
        }
        if (this.negative === 0 && num.negative !== 0) {
            res = this.divmod(num.neg(), mode);
            if (mode !== 'mod') div = res.div.neg();
            return {
                div: div,
                mod: res.mod
            };
        }
        if ((this.negative & num.negative) !== 0) {
            res = this.neg().divmod(num.neg(), mode);
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) mod.isub(num);
            }
            return {
                div: res.div,
                mod: mod
            };
        }
        // Both numbers are positive at this point
        // Strip both numbers to approximate shift value
        if (num.length > this.length || this.cmp(num) < 0) return {
            div: new BN(0),
            mod: this
        };
        // Very short reduction
        if (num.length === 1) {
            if (mode === 'div') return {
                div: this.divn(num.words[0]),
                mod: null
            };
            if (mode === 'mod') return {
                div: null,
                mod: new BN(this.modn(num.words[0]))
            };
            return {
                div: this.divn(num.words[0]),
                mod: new BN(this.modn(num.words[0]))
            };
        }
        return this._wordDiv(num, mode);
    };
    // Find `this` / `num`
    BN.prototype.div = function div(num) {
        return this.divmod(num, 'div', false).div;
    };
    // Find `this` % `num`
    BN.prototype.mod = function mod(num) {
        return this.divmod(num, 'mod', false).mod;
    };
    BN.prototype.umod = function umod(num) {
        return this.divmod(num, 'mod', true).mod;
    };
    // Find Round(`this` / `num`)
    BN.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        // Fast case - exact division
        if (dm.mod.isZero()) return dm.div;
        var mod1 = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod1.cmp(half);
        // Round down
        if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;
        // Round up
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
    };
    BN.prototype.modn = function modn(num) {
        assert(num <= 67108863);
        var p = 67108864 % num;
        var acc = 0;
        for(var i = this.length - 1; i >= 0; i--)acc = (p * acc + (this.words[i] | 0)) % num;
        return acc;
    };
    // In-place division by number
    BN.prototype.idivn = function idivn(num) {
        assert(num <= 67108863);
        var carry = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var w = (this.words[i] | 0) + carry * 67108864;
            this.words[i] = w / num | 0;
            carry = w % num;
        }
        return this.strip();
    };
    BN.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
    };
    BN.prototype.egcd = function egcd(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) x = x.umod(p);
        else x = x.clone();
        // A * x + B * y = x
        var A = new BN(1);
        var B = new BN(0);
        // C * x + D * y = y
        var C = new BN(0);
        var D = new BN(1);
        var g = 0;
        while(x.isEven() && y.isEven()){
            x.iushrn(1);
            y.iushrn(1);
            ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while(!x.isZero()){
            for(var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                x.iushrn(i);
                while((i--) > 0){
                    if (A.isOdd() || B.isOdd()) {
                        A.iadd(yp);
                        B.isub(xp);
                    }
                    A.iushrn(1);
                    B.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                y.iushrn(j);
                while((j--) > 0){
                    if (C.isOdd() || D.isOdd()) {
                        C.iadd(yp);
                        D.isub(xp);
                    }
                    C.iushrn(1);
                    D.iushrn(1);
                }
            }
            if (x.cmp(y) >= 0) {
                x.isub(y);
                A.isub(C);
                B.isub(D);
            } else {
                y.isub(x);
                C.isub(A);
                D.isub(B);
            }
        }
        return {
            a: C,
            b: D,
            gcd: y.iushln(g)
        };
    };
    // This is reduced incarnation of the binary EEA
    // above, designated to invert members of the
    // _prime_ fields F(p) at a maximal speed
    BN.prototype._invmp = function _invmp(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) a = a.umod(p);
        else a = a.clone();
        var x1 = new BN(1);
        var x2 = new BN(0);
        var delta = b.clone();
        while(a.cmpn(1) > 0 && b.cmpn(1) > 0){
            for(var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                a.iushrn(i);
                while((i--) > 0){
                    if (x1.isOdd()) x1.iadd(delta);
                    x1.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                b.iushrn(j);
                while((j--) > 0){
                    if (x2.isOdd()) x2.iadd(delta);
                    x2.iushrn(1);
                }
            }
            if (a.cmp(b) >= 0) {
                a.isub(b);
                x1.isub(x2);
            } else {
                b.isub(a);
                x2.isub(x1);
            }
        }
        var res;
        if (a.cmpn(1) === 0) res = x1;
        else res = x2;
        if (res.cmpn(0) < 0) res.iadd(p);
        return res;
    };
    BN.prototype.gcd = function gcd(num) {
        if (this.isZero()) return num.abs();
        if (num.isZero()) return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        // Remove common factor of two
        for(var shift = 0; a.isEven() && b.isEven(); shift++){
            a.iushrn(1);
            b.iushrn(1);
        }
        do {
            while(a.isEven())a.iushrn(1);
            while(b.isEven())b.iushrn(1);
            var r = a.cmp(b);
            if (r < 0) {
                // Swap `a` and `b` to make `a` always bigger than `b`
                var t = a;
                a = b;
                b = t;
            } else if (r === 0 || b.cmpn(1) === 0) break;
            a.isub(b);
        }while (true)
        return b.iushln(shift);
    };
    // Invert number in the field F(num)
    BN.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
    };
    BN.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
    };
    BN.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
    };
    // And first word and num
    BN.prototype.andln = function andln(num) {
        return this.words[0] & num;
    };
    // Increment at the bit position in-line
    BN.prototype.bincn = function bincn(bit) {
        assert(typeof bit === 'number');
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) {
            this._expand(s + 1);
            this.words[s] |= q;
            return this;
        }
        // Add bit and propagate, if needed
        var carry = q;
        for(var i = s; carry !== 0 && i < this.length; i++){
            var w = this.words[i] | 0;
            w += carry;
            carry = w >>> 26;
            w &= 67108863;
            this.words[i] = w;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return this;
    };
    BN.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
    };
    BN.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative) return -1;
        if (this.negative === 0 && negative) return 1;
        this.strip();
        var res;
        if (this.length > 1) res = 1;
        else {
            if (negative) num = -num;
            assert(num <= 67108863, 'Number is too big');
            var w = this.words[0] | 0;
            res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Compare two numbers and return:
    // 1 - if `this` > `num`
    // 0 - if `this` == `num`
    // -1 - if `this` < `num`
    BN.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0) return -1;
        if (this.negative === 0 && num.negative !== 0) return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Unsigned comparison
    BN.prototype.ucmp = function ucmp(num) {
        // At this point both numbers have the same sign
        if (this.length > num.length) return 1;
        if (this.length < num.length) return -1;
        var res = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var a = this.words[i] | 0;
            var b = num.words[i] | 0;
            if (a === b) continue;
            if (a < b) res = -1;
            else if (a > b) res = 1;
            break;
        }
        return res;
    };
    BN.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
    };
    BN.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
    };
    BN.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
    };
    BN.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
    };
    BN.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
    };
    BN.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
    };
    BN.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
    };
    BN.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
    };
    BN.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
    };
    BN.prototype.eq = function eq(num) {
        return this.cmp(num) === 0;
    };
    //
    // A reduce context, could be using montgomery or something better, depending
    // on the `m` itself.
    //
    BN.red = function red(num) {
        return new Red(num);
    };
    BN.prototype.toRed = function toRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        assert(this.negative === 0, 'red works only with positives');
        return ctx.convertTo(this)._forceRed(ctx);
    };
    BN.prototype.fromRed = function fromRed() {
        assert(this.red, 'fromRed works only with numbers in reduction context');
        return this.red.convertFrom(this);
    };
    BN.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
    };
    BN.prototype.forceRed = function forceRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        return this._forceRed(ctx);
    };
    BN.prototype.redAdd = function redAdd(num) {
        assert(this.red, 'redAdd works only with red numbers');
        return this.red.add(this, num);
    };
    BN.prototype.redIAdd = function redIAdd(num) {
        assert(this.red, 'redIAdd works only with red numbers');
        return this.red.iadd(this, num);
    };
    BN.prototype.redSub = function redSub(num) {
        assert(this.red, 'redSub works only with red numbers');
        return this.red.sub(this, num);
    };
    BN.prototype.redISub = function redISub(num) {
        assert(this.red, 'redISub works only with red numbers');
        return this.red.isub(this, num);
    };
    BN.prototype.redShl = function redShl(num) {
        assert(this.red, 'redShl works only with red numbers');
        return this.red.shl(this, num);
    };
    BN.prototype.redMul = function redMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.mul(this, num);
    };
    BN.prototype.redIMul = function redIMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.imul(this, num);
    };
    BN.prototype.redSqr = function redSqr() {
        assert(this.red, 'redSqr works only with red numbers');
        this.red._verify1(this);
        return this.red.sqr(this);
    };
    BN.prototype.redISqr = function redISqr() {
        assert(this.red, 'redISqr works only with red numbers');
        this.red._verify1(this);
        return this.red.isqr(this);
    };
    // Square root over p
    BN.prototype.redSqrt = function redSqrt() {
        assert(this.red, 'redSqrt works only with red numbers');
        this.red._verify1(this);
        return this.red.sqrt(this);
    };
    BN.prototype.redInvm = function redInvm() {
        assert(this.red, 'redInvm works only with red numbers');
        this.red._verify1(this);
        return this.red.invm(this);
    };
    // Return negative clone of `this` % `red modulo`
    BN.prototype.redNeg = function redNeg() {
        assert(this.red, 'redNeg works only with red numbers');
        this.red._verify1(this);
        return this.red.neg(this);
    };
    BN.prototype.redPow = function redPow(num) {
        assert(this.red && !num.red, 'redPow(normalNum)');
        this.red._verify1(this);
        return this.red.pow(this, num);
    };
    // Prime numbers with efficient reduction
    var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
    };
    // Pseudo-Mersenne prime
    function MPrime(name, p) {
        // P = 2 ^ N - K
        this.name = name;
        this.p = new BN(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
    }
    MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
    };
    MPrime.prototype.ireduce = function ireduce(num) {
        // Assumes that `num` is less than `P^2`
        // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
        var r = num;
        var rlen;
        do {
            this.split(r, this.tmp);
            r = this.imulK(r);
            r = r.iadd(this.tmp);
            rlen = r.bitLength();
        }while (rlen > this.n)
        var cmp1 = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp1 === 0) {
            r.words[0] = 0;
            r.length = 1;
        } else if (cmp1 > 0) r.isub(this.p);
        else if (r.strip !== undefined) // r is BN v4 instance
        r.strip();
        else // r is BN v5 instance
        r._strip();
        return r;
    };
    MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
    };
    MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
    };
    function K256() {
        MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
    }
    inherits(K256, MPrime);
    K256.prototype.split = function split1(input, output) {
        // 256 = 9 * 26 + 22
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for(var i = 0; i < outLen; i++)output.words[i] = input.words[i];
        output.length = outLen;
        if (input.length <= 9) {
            input.words[0] = 0;
            input.length = 1;
            return;
        }
        // Shift by 9 limbs
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for(i = 10; i < input.length; i++){
            var next = input.words[i] | 0;
            input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
            prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) input.length -= 10;
        else input.length -= 9;
    };
    K256.prototype.imulK = function imulK1(num) {
        // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
        var lo = 0;
        for(var i = 0; i < num.length; i++){
            var w = num.words[i] | 0;
            lo += w * 977;
            num.words[i] = lo & 67108863;
            lo = w * 64 + (lo / 67108864 | 0);
        }
        // Fast length reduction
        if (num.words[num.length - 1] === 0) {
            num.length--;
            if (num.words[num.length - 1] === 0) num.length--;
        }
        return num;
    };
    function P224() {
        MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
    }
    inherits(P224, MPrime);
    function P192() {
        MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
    }
    inherits(P192, MPrime);
    function P25519() {
        // 2 ^ 255 - 19
        MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
    }
    inherits(P25519, MPrime);
    P25519.prototype.imulK = function imulK2(num) {
        // K = 0x13
        var carry = 0;
        for(var i = 0; i < num.length; i++){
            var hi = (num.words[i] | 0) * 19 + carry;
            var lo = hi & 67108863;
            hi >>>= 26;
            num.words[i] = lo;
            carry = hi;
        }
        if (carry !== 0) num.words[num.length++] = carry;
        return num;
    };
    // Exported mostly for testing purposes, use plain name instead
    BN._prime = function prime(name) {
        // Cached version of prime
        if (primes[name]) return primes[name];
        var prime;
        if (name === 'k256') prime = new K256();
        else if (name === 'p224') prime = new P224();
        else if (name === 'p192') prime = new P192();
        else if (name === 'p25519') prime = new P25519();
        else throw new Error('Unknown prime ' + name);
        primes[name] = prime;
        return prime;
    };
    //
    // Base reduction engine
    //
    function Red(m) {
        if (typeof m === 'string') {
            var prime1 = BN._prime(m);
            this.m = prime1.p;
            this.prime = prime1;
        } else {
            assert(m.gtn(1), 'modulus must be greater than 1');
            this.m = m;
            this.prime = null;
        }
    }
    Red.prototype._verify1 = function _verify1(a) {
        assert(a.negative === 0, 'red works only with positives');
        assert(a.red, 'red works only with red numbers');
    };
    Red.prototype._verify2 = function _verify2(a, b) {
        assert((a.negative | b.negative) === 0, 'red works only with positives');
        assert(a.red && a.red === b.red, 'red works only with red numbers');
    };
    Red.prototype.imod = function imod(a) {
        if (this.prime) return this.prime.ireduce(a)._forceRed(this);
        return a.umod(this.m)._forceRed(this);
    };
    Red.prototype.neg = function neg1(a) {
        if (a.isZero()) return a.clone();
        return this.m.sub(a)._forceRed(this);
    };
    Red.prototype.add = function add1(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) res.isub(this.m);
        return res._forceRed(this);
    };
    Red.prototype.iadd = function iadd1(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) res.isub(this.m);
        return res;
    };
    Red.prototype.sub = function sub1(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) res.iadd(this.m);
        return res._forceRed(this);
    };
    Red.prototype.isub = function isub1(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) res.iadd(this.m);
        return res;
    };
    Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
    };
    Red.prototype.imul = function imul1(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
    };
    Red.prototype.mul = function mul1(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
    };
    Red.prototype.isqr = function isqr1(a) {
        return this.imul(a, a.clone());
    };
    Red.prototype.sqr = function sqr1(a) {
        return this.mul(a, a);
    };
    Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero()) return a.clone();
        var mod3 = this.m.andln(3);
        assert(mod3 % 2 === 1);
        // Fast case
        if (mod3 === 3) {
            var pow1 = this.m.add(new BN(1)).iushrn(2);
            return this.pow(a, pow1);
        }
        // Tonelli-Shanks algorithm (Totally unoptimized and slow)
        //
        // Find Q and S, that Q * 2 ^ S = (P - 1)
        var q = this.m.subn(1);
        var s = 0;
        while(!q.isZero() && q.andln(1) === 0){
            s++;
            q.iushrn(1);
        }
        assert(!q.isZero());
        var one = new BN(1).toRed(this);
        var nOne = one.redNeg();
        // Find quadratic non-residue
        // NOTE: Max is such because of generalized Riemann hypothesis.
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN(2 * z * z).toRed(this);
        while(this.pow(z, lpow).cmp(nOne) !== 0)z.redIAdd(nOne);
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while(t.cmp(one) !== 0){
            var tmp = t;
            for(var i = 0; tmp.cmp(one) !== 0; i++)tmp = tmp.redSqr();
            assert(i < m);
            var b = this.pow(c, new BN(1).iushln(m - i - 1));
            r = r.redMul(b);
            c = b.redSqr();
            t = t.redMul(c);
            m = i;
        }
        return r;
    };
    Red.prototype.invm = function invm1(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
            inv.negative = 0;
            return this.imod(inv).redNeg();
        } else return this.imod(inv);
    };
    Red.prototype.pow = function pow2(a, num) {
        if (num.isZero()) return new BN(1).toRed(this);
        if (num.cmpn(1) === 0) return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN(1).toRed(this);
        wnd[1] = a;
        for(var i = 2; i < wnd.length; i++)wnd[i] = this.mul(wnd[i - 1], a);
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) start = 26;
        for(i = num.length - 1; i >= 0; i--){
            var word = num.words[i];
            for(var j = start - 1; j >= 0; j--){
                var bit = word >> j & 1;
                if (res !== wnd[0]) res = this.sqr(res);
                if (bit === 0 && current === 0) {
                    currentLen = 0;
                    continue;
                }
                current <<= 1;
                current |= bit;
                currentLen++;
                if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;
                res = this.mul(res, wnd[current]);
                currentLen = 0;
                current = 0;
            }
            start = 26;
        }
        return res;
    };
    Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
    };
    Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
    };
    //
    // Montgomery method engine
    //
    BN.mont = function mont(num) {
        return new Mont(num);
    };
    function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) this.shift += 26 - this.shift % 26;
        this.r = new BN(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
    }
    inherits(Mont, Red);
    Mont.prototype.convertTo = function convertTo1(num) {
        return this.imod(num.ushln(this.shift));
    };
    Mont.prototype.convertFrom = function convertFrom1(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
    };
    Mont.prototype.imul = function imul2(a, b) {
        if (a.isZero() || b.isZero()) {
            a.words[0] = 0;
            a.length = 1;
            return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) res = u.isub(this.m);
        else if (u.cmpn(0) < 0) res = u.iadd(this.m);
        return res._forceRed(this);
    };
    Mont.prototype.mul = function mul2(a, b) {
        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) res = u.isub(this.m);
        else if (u.cmpn(0) < 0) res = u.iadd(this.m);
        return res._forceRed(this);
    };
    Mont.prototype.invm = function invm2(a) {
        // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
    };
})(typeof module === 'undefined' || module, this);

},{"buffer":"4LM6B"}],"e02FU":[function(require,module,exports) {
exports.publicEncrypt = require('./publicEncrypt');
exports.privateDecrypt = require('./privateDecrypt');
exports.privateEncrypt = function privateEncrypt(key, buf) {
    return exports.publicEncrypt(key, buf, true);
};
exports.publicDecrypt = function publicDecrypt(key, buf) {
    return exports.privateDecrypt(key, buf, true);
};

},{"./publicEncrypt":"6DqYk","./privateDecrypt":"drNrT"}],"6DqYk":[function(require,module,exports) {
var parseKeys = require('parse-asn1');
var randomBytes = require('randombytes');
var createHash = require('create-hash');
var mgf = require('./mgf');
var xor = require('./xor');
var BN = require('bn.js');
var withPublic = require('./withPublic');
var crt = require('browserify-rsa');
var Buffer = require('safe-buffer').Buffer;
module.exports = function publicEncrypt(publicKey, msg, reverse) {
    var padding;
    if (publicKey.padding) padding = publicKey.padding;
    else if (reverse) padding = 1;
    else padding = 4;
    var key = parseKeys(publicKey);
    var paddedMsg;
    if (padding === 4) paddedMsg = oaep(key, msg);
    else if (padding === 1) paddedMsg = pkcs1(key, msg, reverse);
    else if (padding === 3) {
        paddedMsg = new BN(msg);
        if (paddedMsg.cmp(key.modulus) >= 0) throw new Error('data too long for modulus');
    } else throw new Error('unknown padding');
    if (reverse) return crt(paddedMsg, key);
    else return withPublic(paddedMsg, key);
};
function oaep(key, msg) {
    var k = key.modulus.byteLength();
    var mLen = msg.length;
    var iHash = createHash('sha1').update(Buffer.alloc(0)).digest();
    var hLen = iHash.length;
    var hLen2 = 2 * hLen;
    if (mLen > k - hLen2 - 2) throw new Error('message too long');
    var ps = Buffer.alloc(k - mLen - hLen2 - 2);
    var dblen = k - hLen - 1;
    var seed = randomBytes(hLen);
    var maskedDb = xor(Buffer.concat([
        iHash,
        ps,
        Buffer.alloc(1, 1),
        msg
    ], dblen), mgf(seed, dblen));
    var maskedSeed = xor(seed, mgf(maskedDb, hLen));
    return new BN(Buffer.concat([
        Buffer.alloc(1),
        maskedSeed,
        maskedDb
    ], k));
}
function pkcs1(key, msg, reverse) {
    var mLen = msg.length;
    var k = key.modulus.byteLength();
    if (mLen > k - 11) throw new Error('message too long');
    var ps;
    if (reverse) ps = Buffer.alloc(k - mLen - 3, 255);
    else ps = nonZero(k - mLen - 3);
    return new BN(Buffer.concat([
        Buffer.from([
            0,
            reverse ? 1 : 2
        ]),
        ps,
        Buffer.alloc(1),
        msg
    ], k));
}
function nonZero(len) {
    var out = Buffer.allocUnsafe(len);
    var i = 0;
    var cache = randomBytes(len * 2);
    var cur = 0;
    var num;
    while(i < len){
        if (cur === cache.length) {
            cache = randomBytes(len * 2);
            cur = 0;
        }
        num = cache[cur++];
        if (num) out[i++] = num;
    }
    return out;
}

},{"parse-asn1":"auGzq","randombytes":"1rFGB","create-hash":"4iPa5","./mgf":"kXZDH","./xor":"c6oa3","bn.js":"aIfrT","./withPublic":"krsl0","browserify-rsa":"3VRND","safe-buffer":"i3ToV"}],"kXZDH":[function(require,module,exports) {
var createHash = require('create-hash');
var Buffer = require('safe-buffer').Buffer;
module.exports = function(seed, len) {
    var t = Buffer.alloc(0);
    var i = 0;
    var c;
    while(t.length < len){
        c = i2ops(i++);
        t = Buffer.concat([
            t,
            createHash('sha1').update(seed).update(c).digest()
        ]);
    }
    return t.slice(0, len);
};
function i2ops(c) {
    var out = Buffer.allocUnsafe(4);
    out.writeUInt32BE(c, 0);
    return out;
}

},{"create-hash":"4iPa5","safe-buffer":"i3ToV"}],"c6oa3":[function(require,module,exports) {
module.exports = function xor(a, b) {
    var len = a.length;
    var i = -1;
    while((++i) < len)a[i] ^= b[i];
    return a;
};

},{}],"aIfrT":[function(require,module,exports) {
(function(module, exports) {
    // Utils
    function assert(val, msg) {
        if (!val) throw new Error(msg || 'Assertion failed');
    }
    // Could use `inherits` module, but don't want to move from single file
    // architecture yet.
    function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
    }
    // BN
    function BN(number, base, endian) {
        if (BN.isBN(number)) return number;
        this.negative = 0;
        this.words = null;
        this.length = 0;
        // Reduction context
        this.red = null;
        if (number !== null) {
            if (base === 'le' || base === 'be') {
                endian = base;
                base = 10;
            }
            this._init(number || 0, base || 10, endian || 'be');
        }
    }
    if (typeof module === 'object') module.exports = BN;
    else exports.BN = BN;
    BN.BN = BN;
    BN.wordSize = 26;
    var Buffer;
    try {
        if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') Buffer = window.Buffer;
        else Buffer = require('buffer').Buffer;
    } catch (e) {
    }
    BN.isBN = function isBN(num) {
        if (num instanceof BN) return true;
        return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
    };
    BN.max = function max(left, right) {
        if (left.cmp(right) > 0) return left;
        return right;
    };
    BN.min = function min(left, right) {
        if (left.cmp(right) < 0) return left;
        return right;
    };
    BN.prototype._init = function init(number, base, endian) {
        if (typeof number === 'number') return this._initNumber(number, base, endian);
        if (typeof number === 'object') return this._initArray(number, base, endian);
        if (base === 'hex') base = 16;
        assert(base === (base | 0) && base >= 2 && base <= 36);
        number = number.toString().replace(/\s+/g, '');
        var start = 0;
        if (number[0] === '-') {
            start++;
            this.negative = 1;
        }
        if (start < number.length) {
            if (base === 16) this._parseHex(number, start, endian);
            else {
                this._parseBase(number, base, start);
                if (endian === 'le') this._initArray(this.toArray(), base, endian);
            }
        }
    };
    BN.prototype._initNumber = function _initNumber(number, base, endian) {
        if (number < 0) {
            this.negative = 1;
            number = -number;
        }
        if (number < 67108864) {
            this.words = [
                number & 67108863
            ];
            this.length = 1;
        } else if (number < 4503599627370496) {
            this.words = [
                number & 67108863,
                number / 67108864 & 67108863
            ];
            this.length = 2;
        } else {
            assert(number < 9007199254740992); // 2 ^ 53 (unsafe)
            this.words = [
                number & 67108863,
                number / 67108864 & 67108863,
                1
            ];
            this.length = 3;
        }
        if (endian !== 'le') return;
        // Reverse the bytes
        this._initArray(this.toArray(), base, endian);
    };
    BN.prototype._initArray = function _initArray(number, base, endian) {
        // Perhaps a Uint8Array
        assert(typeof number.length === 'number');
        if (number.length <= 0) {
            this.words = [
                0
            ];
            this.length = 1;
            return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)this.words[i] = 0;
        var j, w;
        var off = 0;
        if (endian === 'be') for(i = number.length - 1, j = 0; i >= 0; i -= 3){
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        else if (endian === 'le') for(i = 0, j = 0; i < number.length; i += 3){
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        return this.strip();
    };
    function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        // 'A' - 'F'
        if (c >= 65 && c <= 70) return c - 55;
        else if (c >= 97 && c <= 102) return c - 87;
        else return c - 48 & 15;
    }
    function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) r |= parseHex4Bits(string, index - 1) << 4;
        return r;
    }
    BN.prototype._parseHex = function _parseHex(number, start, endian) {
        // Create possibly bigger array to ensure that it fits the number
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)this.words[i] = 0;
        // 24-bits chunks
        var off = 0;
        var j = 0;
        var w;
        if (endian === 'be') for(i = number.length - 1; i >= start; i -= 2){
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
                off -= 18;
                j += 1;
                this.words[j] |= w >>> 26;
            } else off += 8;
        }
        else {
            var parseLength = number.length - start;
            for(i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2){
                w = parseHexByte(number, start, i) << off;
                this.words[j] |= w & 67108863;
                if (off >= 18) {
                    off -= 18;
                    j += 1;
                    this.words[j] |= w >>> 26;
                } else off += 8;
            }
        }
        this.strip();
    };
    function parseBase(str, start, end, mul) {
        var r = 0;
        var len = Math.min(str.length, end);
        for(var i = start; i < len; i++){
            var c = str.charCodeAt(i) - 48;
            r *= mul;
            // 'a'
            if (c >= 49) r += c - 49 + 10;
            else if (c >= 17) r += c - 17 + 10;
            else r += c;
        }
        return r;
    }
    BN.prototype._parseBase = function _parseBase(number, base, start) {
        // Initialize as zero
        this.words = [
            0
        ];
        this.length = 1;
        // Find length of limb in base
        for(var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base)limbLen++;
        limbLen--;
        limbPow = limbPow / base | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for(var i = start; i < end; i += limbLen){
            word = parseBase(number, i, i + limbLen, base);
            this.imuln(limbPow);
            if (this.words[0] + word < 67108864) this.words[0] += word;
            else this._iaddn(word);
        }
        if (mod !== 0) {
            var pow = 1;
            word = parseBase(number, i, number.length, base);
            for(i = 0; i < mod; i++)pow *= base;
            this.imuln(pow);
            if (this.words[0] + word < 67108864) this.words[0] += word;
            else this._iaddn(word);
        }
        this.strip();
    };
    BN.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)dest.words[i] = this.words[i];
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
    };
    BN.prototype.clone = function clone() {
        var r = new BN(null);
        this.copy(r);
        return r;
    };
    BN.prototype._expand = function _expand(size) {
        while(this.length < size)this.words[this.length++] = 0;
        return this;
    };
    // Remove leading `0` from `this`
    BN.prototype.strip = function strip() {
        while(this.length > 1 && this.words[this.length - 1] === 0)this.length--;
        return this._normSign();
    };
    BN.prototype._normSign = function _normSign() {
        // -0 = 0
        if (this.length === 1 && this.words[0] === 0) this.negative = 0;
        return this;
    };
    BN.prototype.inspect = function inspect() {
        return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
    };
    /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */ var zeros = [
        '',
        '0',
        '00',
        '000',
        '0000',
        '00000',
        '000000',
        '0000000',
        '00000000',
        '000000000',
        '0000000000',
        '00000000000',
        '000000000000',
        '0000000000000',
        '00000000000000',
        '000000000000000',
        '0000000000000000',
        '00000000000000000',
        '000000000000000000',
        '0000000000000000000',
        '00000000000000000000',
        '000000000000000000000',
        '0000000000000000000000',
        '00000000000000000000000',
        '000000000000000000000000',
        '0000000000000000000000000'
    ];
    var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
    ];
    var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        10000000,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64000000,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        24300000,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
    ];
    BN.prototype.toString = function toString(base, padding) {
        base = base || 10;
        padding = padding | 0 || 1;
        var out;
        if (base === 16 || base === 'hex') {
            out = '';
            var off = 0;
            var carry = 0;
            for(var i = 0; i < this.length; i++){
                var w = this.words[i];
                var word = ((w << off | carry) & 16777215).toString(16);
                carry = w >>> 24 - off & 16777215;
                if (carry !== 0 || i !== this.length - 1) out = zeros[6 - word.length] + word + out;
                else out = word + out;
                off += 2;
                if (off >= 26) {
                    off -= 26;
                    i--;
                }
            }
            if (carry !== 0) out = carry.toString(16) + out;
            while(out.length % padding !== 0)out = '0' + out;
            if (this.negative !== 0) out = '-' + out;
            return out;
        }
        if (base === (base | 0) && base >= 2 && base <= 36) {
            // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
            var groupSize = groupSizes[base];
            // var groupBase = Math.pow(base, groupSize);
            var groupBase = groupBases[base];
            out = '';
            var c = this.clone();
            c.negative = 0;
            while(!c.isZero()){
                var r = c.modn(groupBase).toString(base);
                c = c.idivn(groupBase);
                if (!c.isZero()) out = zeros[groupSize - r.length] + r + out;
                else out = r + out;
            }
            if (this.isZero()) out = '0' + out;
            while(out.length % padding !== 0)out = '0' + out;
            if (this.negative !== 0) out = '-' + out;
            return out;
        }
        assert(false, 'Base should be between 2 and 36');
    };
    BN.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) ret += this.words[1] * 67108864;
        else if (this.length === 3 && this.words[2] === 1) // NOTE: at this stage it is known that the top bit is set
        ret += 4503599627370496 + this.words[1] * 67108864;
        else if (this.length > 2) assert(false, 'Number can only safely store up to 53 bits');
        return this.negative !== 0 ? -ret : ret;
    };
    BN.prototype.toJSON = function toJSON() {
        return this.toString(16);
    };
    BN.prototype.toBuffer = function toBuffer(endian, length) {
        assert(typeof Buffer !== 'undefined');
        return this.toArrayLike(Buffer, endian, length);
    };
    BN.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
    };
    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert(byteLength <= reqLength, 'byte array longer than desired length');
        assert(reqLength > 0, 'Requested array length <= 0');
        this.strip();
        var littleEndian = endian === 'le';
        var res = new ArrayType(reqLength);
        var b, i;
        var q = this.clone();
        if (!littleEndian) {
            // Assume big-endian
            for(i = 0; i < reqLength - byteLength; i++)res[i] = 0;
            for(i = 0; !q.isZero(); i++){
                b = q.andln(255);
                q.iushrn(8);
                res[reqLength - i - 1] = b;
            }
        } else {
            for(i = 0; !q.isZero(); i++){
                b = q.andln(255);
                q.iushrn(8);
                res[i] = b;
            }
            for(; i < reqLength; i++)res[i] = 0;
        }
        return res;
    };
    if (Math.clz32) BN.prototype._countBits = function _countBits(w) {
        return 32 - Math.clz32(w);
    };
    else BN.prototype._countBits = function _countBits1(w) {
        var t = w;
        var r = 0;
        if (t >= 4096) {
            r += 13;
            t >>>= 13;
        }
        if (t >= 64) {
            r += 7;
            t >>>= 7;
        }
        if (t >= 8) {
            r += 4;
            t >>>= 4;
        }
        if (t >= 2) {
            r += 2;
            t >>>= 2;
        }
        return r + t;
    };
    BN.prototype._zeroBits = function _zeroBits(w) {
        // Short-cut
        if (w === 0) return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
            r += 13;
            t >>>= 13;
        }
        if ((t & 127) === 0) {
            r += 7;
            t >>>= 7;
        }
        if ((t & 15) === 0) {
            r += 4;
            t >>>= 4;
        }
        if ((t & 3) === 0) {
            r += 2;
            t >>>= 2;
        }
        if ((t & 1) === 0) r++;
        return r;
    };
    // Return number of used bits in a BN
    BN.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
    };
    function toBitArray(num) {
        var w = new Array(num.bitLength());
        for(var bit = 0; bit < w.length; bit++){
            var off = bit / 26 | 0;
            var wbit = bit % 26;
            w[bit] = (num.words[off] & 1 << wbit) >>> wbit;
        }
        return w;
    }
    // Number of trailing zero bits
    BN.prototype.zeroBits = function zeroBits() {
        if (this.isZero()) return 0;
        var r = 0;
        for(var i = 0; i < this.length; i++){
            var b = this._zeroBits(this.words[i]);
            r += b;
            if (b !== 26) break;
        }
        return r;
    };
    BN.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
    };
    BN.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) return this.abs().inotn(width).iaddn(1);
        return this.clone();
    };
    BN.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) return this.notn(width).iaddn(1).ineg();
        return this.clone();
    };
    BN.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
    };
    // Return negative clone of `this`
    BN.prototype.neg = function neg() {
        return this.clone().ineg();
    };
    BN.prototype.ineg = function ineg() {
        if (!this.isZero()) this.negative ^= 1;
        return this;
    };
    // Or `num` with `this` in-place
    BN.prototype.iuor = function iuor(num) {
        while(this.length < num.length)this.words[this.length++] = 0;
        for(var i = 0; i < num.length; i++)this.words[i] = this.words[i] | num.words[i];
        return this.strip();
    };
    BN.prototype.ior = function ior(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuor(num);
    };
    // Or `num` with `this`
    BN.prototype.or = function or(num) {
        if (this.length > num.length) return this.clone().ior(num);
        return num.clone().ior(this);
    };
    BN.prototype.uor = function uor(num) {
        if (this.length > num.length) return this.clone().iuor(num);
        return num.clone().iuor(this);
    };
    // And `num` with `this` in-place
    BN.prototype.iuand = function iuand(num) {
        // b = min-length(num, this)
        var b;
        if (this.length > num.length) b = num;
        else b = this;
        for(var i = 0; i < b.length; i++)this.words[i] = this.words[i] & num.words[i];
        this.length = b.length;
        return this.strip();
    };
    BN.prototype.iand = function iand(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuand(num);
    };
    // And `num` with `this`
    BN.prototype.and = function and(num) {
        if (this.length > num.length) return this.clone().iand(num);
        return num.clone().iand(this);
    };
    BN.prototype.uand = function uand(num) {
        if (this.length > num.length) return this.clone().iuand(num);
        return num.clone().iuand(this);
    };
    // Xor `num` with `this` in-place
    BN.prototype.iuxor = function iuxor(num) {
        // a.length > b.length
        var a;
        var b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        for(var i = 0; i < b.length; i++)this.words[i] = a.words[i] ^ b.words[i];
        if (this !== a) for(; i < a.length; i++)this.words[i] = a.words[i];
        this.length = a.length;
        return this.strip();
    };
    BN.prototype.ixor = function ixor(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuxor(num);
    };
    // Xor `num` with `this`
    BN.prototype.xor = function xor(num) {
        if (this.length > num.length) return this.clone().ixor(num);
        return num.clone().ixor(this);
    };
    BN.prototype.uxor = function uxor(num) {
        if (this.length > num.length) return this.clone().iuxor(num);
        return num.clone().iuxor(this);
    };
    // Not ``this`` with ``width`` bitwidth
    BN.prototype.inotn = function inotn(width) {
        assert(typeof width === 'number' && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        // Extend the buffer with leading zeroes
        this._expand(bytesNeeded);
        if (bitsLeft > 0) bytesNeeded--;
        // Handle complete words
        for(var i = 0; i < bytesNeeded; i++)this.words[i] = ~this.words[i] & 67108863;
        // Handle the residue
        if (bitsLeft > 0) this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        // And remove leading zeroes
        return this.strip();
    };
    BN.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
    };
    // Set `bit` of `this`
    BN.prototype.setn = function setn(bit, val) {
        assert(typeof bit === 'number' && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) this.words[off] = this.words[off] | 1 << wbit;
        else this.words[off] = this.words[off] & ~(1 << wbit);
        return this.strip();
    };
    // Add `num` to `this` in-place
    BN.prototype.iadd = function iadd(num) {
        var r;
        // negative + positive
        if (this.negative !== 0 && num.negative === 0) {
            this.negative = 0;
            r = this.isub(num);
            this.negative ^= 1;
            return this._normSign();
        // positive + negative
        } else if (this.negative === 0 && num.negative !== 0) {
            num.negative = 0;
            r = this.isub(num);
            num.negative = 1;
            return r._normSign();
        }
        // a.length > b.length
        var a, b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
            this.words[i] = r & 67108863;
            carry = r >>> 26;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            this.words[i] = r & 67108863;
            carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
            this.words[this.length] = carry;
            this.length++;
        // Copy the rest of the words
        } else if (a !== this) for(; i < a.length; i++)this.words[i] = a.words[i];
        return this;
    };
    // Add `num` to `this`
    BN.prototype.add = function add(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
            num.negative = 0;
            res = this.sub(num);
            num.negative ^= 1;
            return res;
        } else if (num.negative === 0 && this.negative !== 0) {
            this.negative = 0;
            res = num.sub(this);
            this.negative = 1;
            return res;
        }
        if (this.length > num.length) return this.clone().iadd(num);
        return num.clone().iadd(this);
    };
    // Subtract `num` from `this` in-place
    BN.prototype.isub = function isub(num) {
        // this - (-num) = this + num
        if (num.negative !== 0) {
            num.negative = 0;
            var r = this.iadd(num);
            num.negative = 1;
            return r._normSign();
        // -this - num = -(this + num)
        } else if (this.negative !== 0) {
            this.negative = 0;
            this.iadd(num);
            this.negative = 1;
            return this._normSign();
        }
        // At this point both numbers are positive
        var cmp = this.cmp(num);
        // Optimization - zeroify
        if (cmp === 0) {
            this.negative = 0;
            this.length = 1;
            this.words[0] = 0;
            return this;
        }
        // a > b
        var a, b;
        if (cmp > 0) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 67108863;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 67108863;
        }
        // Copy rest of the words
        if (carry === 0 && i < a.length && a !== this) for(; i < a.length; i++)this.words[i] = a.words[i];
        this.length = Math.max(this.length, i);
        if (a !== this) this.negative = 1;
        return this.strip();
    };
    // Subtract `num` from `this`
    BN.prototype.sub = function sub(num) {
        return this.clone().isub(num);
    };
    function smallMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        var len = self.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        // Peel one iteration (compiler can't do it, because of code complexity)
        var a = self.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for(var k = 1; k < len; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = carry >>> 26;
            var rword = carry & 67108863;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j | 0;
                a = self.words[i] | 0;
                b = num.words[j] | 0;
                r = a * b + rword;
                ncarry += r / 67108864 | 0;
                rword = r & 67108863;
            }
            out.words[k] = rword | 0;
            carry = ncarry | 0;
        }
        if (carry !== 0) out.words[k] = carry | 0;
        else out.length--;
        return out.strip();
    }
    // TODO(indutny): it may be reasonable to omit it for users who don't need
    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
    // multiplication (like elliptic secp256k1).
    var comb10MulTo = function comb10MulTo1(self, num, out) {
        var a = self.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self.negative ^ num.negative;
        out.length = 19;
        /* k = 0 */ lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        /* k = 1 */ lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        /* k = 2 */ lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        /* k = 3 */ lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        /* k = 4 */ lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        /* k = 5 */ lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        /* k = 6 */ lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        /* k = 7 */ lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        /* k = 8 */ lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        /* k = 9 */ lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        /* k = 10 */ lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        /* k = 11 */ lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        /* k = 12 */ lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        /* k = 13 */ lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        /* k = 14 */ lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        /* k = 15 */ lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        /* k = 16 */ lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        /* k = 17 */ lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        /* k = 18 */ lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
            o[19] = c;
            out.length++;
        }
        return out;
    };
    // Polyfill comb
    if (!Math.imul) comb10MulTo = smallMulTo;
    function bigMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        out.length = self.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for(var k = 0; k < out.length - 1; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = hncarry;
            hncarry = 0;
            var rword = carry & 67108863;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j;
                var a = self.words[i] | 0;
                var b = num.words[j] | 0;
                var r = a * b;
                var lo = r & 67108863;
                ncarry = ncarry + (r / 67108864 | 0) | 0;
                lo = lo + rword | 0;
                rword = lo & 67108863;
                ncarry = ncarry + (lo >>> 26) | 0;
                hncarry += ncarry >>> 26;
                ncarry &= 67108863;
            }
            out.words[k] = rword;
            carry = ncarry;
            ncarry = hncarry;
        }
        if (carry !== 0) out.words[k] = carry;
        else out.length--;
        return out.strip();
    }
    function jumboMulTo(self, num, out) {
        var fftm = new FFTM();
        return fftm.mulp(self, num, out);
    }
    BN.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) res = comb10MulTo(this, num, out);
        else if (len < 63) res = smallMulTo(this, num, out);
        else if (len < 1024) res = bigMulTo(this, num, out);
        else res = jumboMulTo(this, num, out);
        return res;
    };
    // Cooley-Tukey algorithm for FFT
    // slightly revisited to rely on looping instead of recursion
    function FFTM(x, y) {
        this.x = x;
        this.y = y;
    }
    FFTM.prototype.makeRBT = function makeRBT(N) {
        var t = new Array(N);
        var l = BN.prototype._countBits(N) - 1;
        for(var i = 0; i < N; i++)t[i] = this.revBin(i, l, N);
        return t;
    };
    // Returns binary-reversed representation of `x`
    FFTM.prototype.revBin = function revBin(x, l, N) {
        if (x === 0 || x === N - 1) return x;
        var rb = 0;
        for(var i = 0; i < l; i++){
            rb |= (x & 1) << l - i - 1;
            x >>= 1;
        }
        return rb;
    };
    // Performs "tweedling" phase, therefore 'emulating'
    // behaviour of the recursive algorithm
    FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
        for(var i = 0; i < N; i++){
            rtws[i] = rws[rbt[i]];
            itws[i] = iws[rbt[i]];
        }
    };
    FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N);
        for(var s = 1; s < N; s <<= 1){
            var l = s << 1;
            var rtwdf = Math.cos(2 * Math.PI / l);
            var itwdf = Math.sin(2 * Math.PI / l);
            for(var p = 0; p < N; p += l){
                var rtwdf_ = rtwdf;
                var itwdf_ = itwdf;
                for(var j = 0; j < s; j++){
                    var re = rtws[p + j];
                    var ie = itws[p + j];
                    var ro = rtws[p + j + s];
                    var io = itws[p + j + s];
                    var rx = rtwdf_ * ro - itwdf_ * io;
                    io = rtwdf_ * io + itwdf_ * ro;
                    ro = rx;
                    rtws[p + j] = re + ro;
                    itws[p + j] = ie + io;
                    rtws[p + j + s] = re - ro;
                    itws[p + j + s] = ie - io;
                    /* jshint maxdepth : false */ if (j !== l) {
                        rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                        itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                        rtwdf_ = rx;
                    }
                }
            }
        }
    };
    FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N = Math.max(m, n) | 1;
        var odd = N & 1;
        var i = 0;
        for(N = N / 2 | 0; N; N = N >>> 1)i++;
        return 1 << i + 1 + odd;
    };
    FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
        if (N <= 1) return;
        for(var i = 0; i < N / 2; i++){
            var t = rws[i];
            rws[i] = rws[N - i - 1];
            rws[N - i - 1] = t;
            t = iws[i];
            iws[i] = -iws[N - i - 1];
            iws[N - i - 1] = -t;
        }
    };
    FFTM.prototype.normalize13b = function normalize13b(ws, N) {
        var carry = 0;
        for(var i = 0; i < N / 2; i++){
            var w = Math.round(ws[2 * i + 1] / N) * 8192 + Math.round(ws[2 * i] / N) + carry;
            ws[i] = w & 67108863;
            if (w < 67108864) carry = 0;
            else carry = w / 67108864 | 0;
        }
        return ws;
    };
    FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
        var carry = 0;
        for(var i = 0; i < len; i++){
            carry = carry + (ws[i] | 0);
            rws[2 * i] = carry & 8191;
            carry = carry >>> 13;
            rws[2 * i + 1] = carry & 8191;
            carry = carry >>> 13;
        }
        // Pad with zeroes
        for(i = 2 * len; i < N; ++i)rws[i] = 0;
        assert(carry === 0);
        assert((carry & -8192) === 0);
    };
    FFTM.prototype.stub = function stub(N) {
        var ph = new Array(N);
        for(var i = 0; i < N; i++)ph[i] = 0;
        return ph;
    };
    FFTM.prototype.mulp = function mulp(x, y, out) {
        var N = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N);
        var _ = this.stub(N);
        var rws = new Array(N);
        var rwst = new Array(N);
        var iwst = new Array(N);
        var nrws = new Array(N);
        var nrwst = new Array(N);
        var niwst = new Array(N);
        var rmws = out.words;
        rmws.length = N;
        this.convert13b(x.words, x.length, rws, N);
        this.convert13b(y.words, y.length, nrws, N);
        this.transform(rws, _, rwst, iwst, N, rbt);
        this.transform(nrws, _, nrwst, niwst, N, rbt);
        for(var i = 0; i < N; i++){
            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
            iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
            rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N);
        this.transform(rwst, iwst, rmws, _, N, rbt);
        this.conjugate(rmws, _, N);
        this.normalize13b(rmws, N);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out.strip();
    };
    // Multiply `this` by `num`
    BN.prototype.mul = function mul(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
    };
    // Multiply employing FFT
    BN.prototype.mulf = function mulf(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
    };
    // In-place Multiplication
    BN.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
    };
    BN.prototype.imuln = function imuln(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        // Carry
        var carry = 0;
        for(var i = 0; i < this.length; i++){
            var w = (this.words[i] | 0) * num;
            var lo = (w & 67108863) + (carry & 67108863);
            carry >>= 26;
            carry += w / 67108864 | 0;
            // NOTE: lo is 27bit maximum
            carry += lo >>> 26;
            this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return this;
    };
    BN.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
    };
    // `this` * `this`
    BN.prototype.sqr = function sqr() {
        return this.mul(this);
    };
    // `this` * `this` in-place
    BN.prototype.isqr = function isqr() {
        return this.imul(this.clone());
    };
    // Math.pow(`this`, `num`)
    BN.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0) return new BN(1);
        // Skip leading zeroes
        var res = this;
        for(var i = 0; i < w.length; i++, res = res.sqr()){
            if (w[i] !== 0) break;
        }
        if ((++i) < w.length) for(var q = res.sqr(); i < w.length; i++, q = q.sqr()){
            if (w[i] === 0) continue;
            res = res.mul(q);
        }
        return res;
    };
    // Shift-left in-place
    BN.prototype.iushln = function iushln(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
            var carry = 0;
            for(i = 0; i < this.length; i++){
                var newCarry = this.words[i] & carryMask;
                var c = (this.words[i] | 0) - newCarry << r;
                this.words[i] = c | carry;
                carry = newCarry >>> 26 - r;
            }
            if (carry) {
                this.words[i] = carry;
                this.length++;
            }
        }
        if (s !== 0) {
            for(i = this.length - 1; i >= 0; i--)this.words[i + s] = this.words[i];
            for(i = 0; i < s; i++)this.words[i] = 0;
            this.length += s;
        }
        return this.strip();
    };
    BN.prototype.ishln = function ishln(bits) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushln(bits);
    };
    // Shift-right in-place
    // NOTE: `hint` is a lowest bit before trailing zeroes
    // NOTE: if `extended` is present - it will be filled with destroyed bits
    BN.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert(typeof bits === 'number' && bits >= 0);
        var h;
        if (hint) h = (hint - hint % 26) / 26;
        else h = 0;
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        // Extended mode, copy masked part
        if (maskedWords) {
            for(var i = 0; i < s; i++)maskedWords.words[i] = this.words[i];
            maskedWords.length = s;
        }
        if (s === 0) ;
        else if (this.length > s) {
            this.length -= s;
            for(i = 0; i < this.length; i++)this.words[i] = this.words[i + s];
        } else {
            this.words[0] = 0;
            this.length = 1;
        }
        var carry = 0;
        for(i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--){
            var word = this.words[i] | 0;
            this.words[i] = carry << 26 - r | word >>> r;
            carry = word & mask;
        }
        // Push carried bits as a mask
        if (maskedWords && carry !== 0) maskedWords.words[maskedWords.length++] = carry;
        if (this.length === 0) {
            this.words[0] = 0;
            this.length = 1;
        }
        return this.strip();
    };
    BN.prototype.ishrn = function ishrn(bits, hint, extended) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushrn(bits, hint, extended);
    };
    // Shift-left
    BN.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
    };
    BN.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
    };
    // Shift-right
    BN.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
    };
    BN.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
    };
    // Test if n bit is set
    BN.prototype.testn = function testn(bit) {
        assert(typeof bit === 'number' && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) return false;
        // Check bit and return
        var w = this.words[s];
        return !!(w & q);
    };
    // Return only lowers bits of number (in-place)
    BN.prototype.imaskn = function imaskn(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert(this.negative === 0, 'imaskn works only with positive numbers');
        if (this.length <= s) return this;
        if (r !== 0) s++;
        this.length = Math.min(s, this.length);
        if (r !== 0) {
            var mask = 67108863 ^ 67108863 >>> r << r;
            this.words[this.length - 1] &= mask;
        }
        return this.strip();
    };
    // Return only lowers bits of number
    BN.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
    };
    // Add plain number `num` to `this`
    BN.prototype.iaddn = function iaddn(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        if (num < 0) return this.isubn(-num);
        // Possible sign change
        if (this.negative !== 0) {
            if (this.length === 1 && (this.words[0] | 0) < num) {
                this.words[0] = num - (this.words[0] | 0);
                this.negative = 0;
                return this;
            }
            this.negative = 0;
            this.isubn(num);
            this.negative = 1;
            return this;
        }
        // Add without checks
        return this._iaddn(num);
    };
    BN.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        // Carry
        for(var i = 0; i < this.length && this.words[i] >= 67108864; i++){
            this.words[i] -= 67108864;
            if (i === this.length - 1) this.words[i + 1] = 1;
            else this.words[i + 1]++;
        }
        this.length = Math.max(this.length, i + 1);
        return this;
    };
    // Subtract plain number `num` from `this`
    BN.prototype.isubn = function isubn(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        if (num < 0) return this.iaddn(-num);
        if (this.negative !== 0) {
            this.negative = 0;
            this.iaddn(num);
            this.negative = 1;
            return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
            this.words[0] = -this.words[0];
            this.negative = 1;
        } else // Carry
        for(var i = 0; i < this.length && this.words[i] < 0; i++){
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
        }
        return this.strip();
    };
    BN.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
    };
    BN.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
    };
    BN.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
    };
    BN.prototype.abs = function abs() {
        return this.clone().iabs();
    };
    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul1, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for(i = 0; i < num.length; i++){
            w = (this.words[i + shift] | 0) + carry;
            var right = (num.words[i] | 0) * mul1;
            w -= right & 67108863;
            carry = (w >> 26) - (right / 67108864 | 0);
            this.words[i + shift] = w & 67108863;
        }
        for(; i < this.length - shift; i++){
            w = (this.words[i + shift] | 0) + carry;
            carry = w >> 26;
            this.words[i + shift] = w & 67108863;
        }
        if (carry === 0) return this.strip();
        // Subtraction overflow
        assert(carry === -1);
        carry = 0;
        for(i = 0; i < this.length; i++){
            w = -(this.words[i] | 0) + carry;
            carry = w >> 26;
            this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this.strip();
    };
    BN.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        // Normalize
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
            b = b.ushln(shift);
            a.iushln(shift);
            bhi = b.words[b.length - 1] | 0;
        }
        // Initialize quotient
        var m = a.length - b.length;
        var q;
        if (mode !== 'mod') {
            q = new BN(null);
            q.length = m + 1;
            q.words = new Array(q.length);
            for(var i = 0; i < q.length; i++)q.words[i] = 0;
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
            a = diff;
            if (q) q.words[m] = 1;
        }
        for(var j = m - 1; j >= 0; j--){
            var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
            // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
            // (0x7ffffff)
            qj = Math.min(qj / bhi | 0, 67108863);
            a._ishlnsubmul(b, qj, j);
            while(a.negative !== 0){
                qj--;
                a.negative = 0;
                a._ishlnsubmul(b, 1, j);
                if (!a.isZero()) a.negative ^= 1;
            }
            if (q) q.words[j] = qj;
        }
        if (q) q.strip();
        a.strip();
        // Denormalize
        if (mode !== 'div' && shift !== 0) a.iushrn(shift);
        return {
            div: q || null,
            mod: a
        };
    };
    // NOTE: 1) `mode` can be set to `mod` to request mod only,
    //       to `div` to request div only, or be absent to
    //       request both div & mod
    //       2) `positive` is true if unsigned mod is requested
    BN.prototype.divmod = function divmod(num, mode, positive) {
        assert(!num.isZero());
        if (this.isZero()) return {
            div: new BN(0),
            mod: new BN(0)
        };
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
            res = this.neg().divmod(num, mode);
            if (mode !== 'mod') div = res.div.neg();
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) mod.iadd(num);
            }
            return {
                div: div,
                mod: mod
            };
        }
        if (this.negative === 0 && num.negative !== 0) {
            res = this.divmod(num.neg(), mode);
            if (mode !== 'mod') div = res.div.neg();
            return {
                div: div,
                mod: res.mod
            };
        }
        if ((this.negative & num.negative) !== 0) {
            res = this.neg().divmod(num.neg(), mode);
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) mod.isub(num);
            }
            return {
                div: res.div,
                mod: mod
            };
        }
        // Both numbers are positive at this point
        // Strip both numbers to approximate shift value
        if (num.length > this.length || this.cmp(num) < 0) return {
            div: new BN(0),
            mod: this
        };
        // Very short reduction
        if (num.length === 1) {
            if (mode === 'div') return {
                div: this.divn(num.words[0]),
                mod: null
            };
            if (mode === 'mod') return {
                div: null,
                mod: new BN(this.modn(num.words[0]))
            };
            return {
                div: this.divn(num.words[0]),
                mod: new BN(this.modn(num.words[0]))
            };
        }
        return this._wordDiv(num, mode);
    };
    // Find `this` / `num`
    BN.prototype.div = function div(num) {
        return this.divmod(num, 'div', false).div;
    };
    // Find `this` % `num`
    BN.prototype.mod = function mod(num) {
        return this.divmod(num, 'mod', false).mod;
    };
    BN.prototype.umod = function umod(num) {
        return this.divmod(num, 'mod', true).mod;
    };
    // Find Round(`this` / `num`)
    BN.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        // Fast case - exact division
        if (dm.mod.isZero()) return dm.div;
        var mod1 = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod1.cmp(half);
        // Round down
        if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;
        // Round up
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
    };
    BN.prototype.modn = function modn(num) {
        assert(num <= 67108863);
        var p = 67108864 % num;
        var acc = 0;
        for(var i = this.length - 1; i >= 0; i--)acc = (p * acc + (this.words[i] | 0)) % num;
        return acc;
    };
    // In-place division by number
    BN.prototype.idivn = function idivn(num) {
        assert(num <= 67108863);
        var carry = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var w = (this.words[i] | 0) + carry * 67108864;
            this.words[i] = w / num | 0;
            carry = w % num;
        }
        return this.strip();
    };
    BN.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
    };
    BN.prototype.egcd = function egcd(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) x = x.umod(p);
        else x = x.clone();
        // A * x + B * y = x
        var A = new BN(1);
        var B = new BN(0);
        // C * x + D * y = y
        var C = new BN(0);
        var D = new BN(1);
        var g = 0;
        while(x.isEven() && y.isEven()){
            x.iushrn(1);
            y.iushrn(1);
            ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while(!x.isZero()){
            for(var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                x.iushrn(i);
                while((i--) > 0){
                    if (A.isOdd() || B.isOdd()) {
                        A.iadd(yp);
                        B.isub(xp);
                    }
                    A.iushrn(1);
                    B.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                y.iushrn(j);
                while((j--) > 0){
                    if (C.isOdd() || D.isOdd()) {
                        C.iadd(yp);
                        D.isub(xp);
                    }
                    C.iushrn(1);
                    D.iushrn(1);
                }
            }
            if (x.cmp(y) >= 0) {
                x.isub(y);
                A.isub(C);
                B.isub(D);
            } else {
                y.isub(x);
                C.isub(A);
                D.isub(B);
            }
        }
        return {
            a: C,
            b: D,
            gcd: y.iushln(g)
        };
    };
    // This is reduced incarnation of the binary EEA
    // above, designated to invert members of the
    // _prime_ fields F(p) at a maximal speed
    BN.prototype._invmp = function _invmp(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) a = a.umod(p);
        else a = a.clone();
        var x1 = new BN(1);
        var x2 = new BN(0);
        var delta = b.clone();
        while(a.cmpn(1) > 0 && b.cmpn(1) > 0){
            for(var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                a.iushrn(i);
                while((i--) > 0){
                    if (x1.isOdd()) x1.iadd(delta);
                    x1.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                b.iushrn(j);
                while((j--) > 0){
                    if (x2.isOdd()) x2.iadd(delta);
                    x2.iushrn(1);
                }
            }
            if (a.cmp(b) >= 0) {
                a.isub(b);
                x1.isub(x2);
            } else {
                b.isub(a);
                x2.isub(x1);
            }
        }
        var res;
        if (a.cmpn(1) === 0) res = x1;
        else res = x2;
        if (res.cmpn(0) < 0) res.iadd(p);
        return res;
    };
    BN.prototype.gcd = function gcd(num) {
        if (this.isZero()) return num.abs();
        if (num.isZero()) return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        // Remove common factor of two
        for(var shift = 0; a.isEven() && b.isEven(); shift++){
            a.iushrn(1);
            b.iushrn(1);
        }
        do {
            while(a.isEven())a.iushrn(1);
            while(b.isEven())b.iushrn(1);
            var r = a.cmp(b);
            if (r < 0) {
                // Swap `a` and `b` to make `a` always bigger than `b`
                var t = a;
                a = b;
                b = t;
            } else if (r === 0 || b.cmpn(1) === 0) break;
            a.isub(b);
        }while (true)
        return b.iushln(shift);
    };
    // Invert number in the field F(num)
    BN.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
    };
    BN.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
    };
    BN.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
    };
    // And first word and num
    BN.prototype.andln = function andln(num) {
        return this.words[0] & num;
    };
    // Increment at the bit position in-line
    BN.prototype.bincn = function bincn(bit) {
        assert(typeof bit === 'number');
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) {
            this._expand(s + 1);
            this.words[s] |= q;
            return this;
        }
        // Add bit and propagate, if needed
        var carry = q;
        for(var i = s; carry !== 0 && i < this.length; i++){
            var w = this.words[i] | 0;
            w += carry;
            carry = w >>> 26;
            w &= 67108863;
            this.words[i] = w;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return this;
    };
    BN.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
    };
    BN.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative) return -1;
        if (this.negative === 0 && negative) return 1;
        this.strip();
        var res;
        if (this.length > 1) res = 1;
        else {
            if (negative) num = -num;
            assert(num <= 67108863, 'Number is too big');
            var w = this.words[0] | 0;
            res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Compare two numbers and return:
    // 1 - if `this` > `num`
    // 0 - if `this` == `num`
    // -1 - if `this` < `num`
    BN.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0) return -1;
        if (this.negative === 0 && num.negative !== 0) return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Unsigned comparison
    BN.prototype.ucmp = function ucmp(num) {
        // At this point both numbers have the same sign
        if (this.length > num.length) return 1;
        if (this.length < num.length) return -1;
        var res = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var a = this.words[i] | 0;
            var b = num.words[i] | 0;
            if (a === b) continue;
            if (a < b) res = -1;
            else if (a > b) res = 1;
            break;
        }
        return res;
    };
    BN.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
    };
    BN.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
    };
    BN.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
    };
    BN.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
    };
    BN.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
    };
    BN.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
    };
    BN.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
    };
    BN.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
    };
    BN.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
    };
    BN.prototype.eq = function eq(num) {
        return this.cmp(num) === 0;
    };
    //
    // A reduce context, could be using montgomery or something better, depending
    // on the `m` itself.
    //
    BN.red = function red(num) {
        return new Red(num);
    };
    BN.prototype.toRed = function toRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        assert(this.negative === 0, 'red works only with positives');
        return ctx.convertTo(this)._forceRed(ctx);
    };
    BN.prototype.fromRed = function fromRed() {
        assert(this.red, 'fromRed works only with numbers in reduction context');
        return this.red.convertFrom(this);
    };
    BN.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
    };
    BN.prototype.forceRed = function forceRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        return this._forceRed(ctx);
    };
    BN.prototype.redAdd = function redAdd(num) {
        assert(this.red, 'redAdd works only with red numbers');
        return this.red.add(this, num);
    };
    BN.prototype.redIAdd = function redIAdd(num) {
        assert(this.red, 'redIAdd works only with red numbers');
        return this.red.iadd(this, num);
    };
    BN.prototype.redSub = function redSub(num) {
        assert(this.red, 'redSub works only with red numbers');
        return this.red.sub(this, num);
    };
    BN.prototype.redISub = function redISub(num) {
        assert(this.red, 'redISub works only with red numbers');
        return this.red.isub(this, num);
    };
    BN.prototype.redShl = function redShl(num) {
        assert(this.red, 'redShl works only with red numbers');
        return this.red.shl(this, num);
    };
    BN.prototype.redMul = function redMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.mul(this, num);
    };
    BN.prototype.redIMul = function redIMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.imul(this, num);
    };
    BN.prototype.redSqr = function redSqr() {
        assert(this.red, 'redSqr works only with red numbers');
        this.red._verify1(this);
        return this.red.sqr(this);
    };
    BN.prototype.redISqr = function redISqr() {
        assert(this.red, 'redISqr works only with red numbers');
        this.red._verify1(this);
        return this.red.isqr(this);
    };
    // Square root over p
    BN.prototype.redSqrt = function redSqrt() {
        assert(this.red, 'redSqrt works only with red numbers');
        this.red._verify1(this);
        return this.red.sqrt(this);
    };
    BN.prototype.redInvm = function redInvm() {
        assert(this.red, 'redInvm works only with red numbers');
        this.red._verify1(this);
        return this.red.invm(this);
    };
    // Return negative clone of `this` % `red modulo`
    BN.prototype.redNeg = function redNeg() {
        assert(this.red, 'redNeg works only with red numbers');
        this.red._verify1(this);
        return this.red.neg(this);
    };
    BN.prototype.redPow = function redPow(num) {
        assert(this.red && !num.red, 'redPow(normalNum)');
        this.red._verify1(this);
        return this.red.pow(this, num);
    };
    // Prime numbers with efficient reduction
    var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
    };
    // Pseudo-Mersenne prime
    function MPrime(name, p) {
        // P = 2 ^ N - K
        this.name = name;
        this.p = new BN(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
    }
    MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
    };
    MPrime.prototype.ireduce = function ireduce(num) {
        // Assumes that `num` is less than `P^2`
        // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
        var r = num;
        var rlen;
        do {
            this.split(r, this.tmp);
            r = this.imulK(r);
            r = r.iadd(this.tmp);
            rlen = r.bitLength();
        }while (rlen > this.n)
        var cmp1 = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp1 === 0) {
            r.words[0] = 0;
            r.length = 1;
        } else if (cmp1 > 0) r.isub(this.p);
        else if (r.strip !== undefined) // r is BN v4 instance
        r.strip();
        else // r is BN v5 instance
        r._strip();
        return r;
    };
    MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
    };
    MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
    };
    function K256() {
        MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
    }
    inherits(K256, MPrime);
    K256.prototype.split = function split1(input, output) {
        // 256 = 9 * 26 + 22
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for(var i = 0; i < outLen; i++)output.words[i] = input.words[i];
        output.length = outLen;
        if (input.length <= 9) {
            input.words[0] = 0;
            input.length = 1;
            return;
        }
        // Shift by 9 limbs
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for(i = 10; i < input.length; i++){
            var next = input.words[i] | 0;
            input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
            prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) input.length -= 10;
        else input.length -= 9;
    };
    K256.prototype.imulK = function imulK1(num) {
        // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
        var lo = 0;
        for(var i = 0; i < num.length; i++){
            var w = num.words[i] | 0;
            lo += w * 977;
            num.words[i] = lo & 67108863;
            lo = w * 64 + (lo / 67108864 | 0);
        }
        // Fast length reduction
        if (num.words[num.length - 1] === 0) {
            num.length--;
            if (num.words[num.length - 1] === 0) num.length--;
        }
        return num;
    };
    function P224() {
        MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
    }
    inherits(P224, MPrime);
    function P192() {
        MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
    }
    inherits(P192, MPrime);
    function P25519() {
        // 2 ^ 255 - 19
        MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
    }
    inherits(P25519, MPrime);
    P25519.prototype.imulK = function imulK2(num) {
        // K = 0x13
        var carry = 0;
        for(var i = 0; i < num.length; i++){
            var hi = (num.words[i] | 0) * 19 + carry;
            var lo = hi & 67108863;
            hi >>>= 26;
            num.words[i] = lo;
            carry = hi;
        }
        if (carry !== 0) num.words[num.length++] = carry;
        return num;
    };
    // Exported mostly for testing purposes, use plain name instead
    BN._prime = function prime(name) {
        // Cached version of prime
        if (primes[name]) return primes[name];
        var prime;
        if (name === 'k256') prime = new K256();
        else if (name === 'p224') prime = new P224();
        else if (name === 'p192') prime = new P192();
        else if (name === 'p25519') prime = new P25519();
        else throw new Error('Unknown prime ' + name);
        primes[name] = prime;
        return prime;
    };
    //
    // Base reduction engine
    //
    function Red(m) {
        if (typeof m === 'string') {
            var prime1 = BN._prime(m);
            this.m = prime1.p;
            this.prime = prime1;
        } else {
            assert(m.gtn(1), 'modulus must be greater than 1');
            this.m = m;
            this.prime = null;
        }
    }
    Red.prototype._verify1 = function _verify1(a) {
        assert(a.negative === 0, 'red works only with positives');
        assert(a.red, 'red works only with red numbers');
    };
    Red.prototype._verify2 = function _verify2(a, b) {
        assert((a.negative | b.negative) === 0, 'red works only with positives');
        assert(a.red && a.red === b.red, 'red works only with red numbers');
    };
    Red.prototype.imod = function imod(a) {
        if (this.prime) return this.prime.ireduce(a)._forceRed(this);
        return a.umod(this.m)._forceRed(this);
    };
    Red.prototype.neg = function neg1(a) {
        if (a.isZero()) return a.clone();
        return this.m.sub(a)._forceRed(this);
    };
    Red.prototype.add = function add1(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) res.isub(this.m);
        return res._forceRed(this);
    };
    Red.prototype.iadd = function iadd1(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) res.isub(this.m);
        return res;
    };
    Red.prototype.sub = function sub1(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) res.iadd(this.m);
        return res._forceRed(this);
    };
    Red.prototype.isub = function isub1(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) res.iadd(this.m);
        return res;
    };
    Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
    };
    Red.prototype.imul = function imul1(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
    };
    Red.prototype.mul = function mul1(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
    };
    Red.prototype.isqr = function isqr1(a) {
        return this.imul(a, a.clone());
    };
    Red.prototype.sqr = function sqr1(a) {
        return this.mul(a, a);
    };
    Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero()) return a.clone();
        var mod3 = this.m.andln(3);
        assert(mod3 % 2 === 1);
        // Fast case
        if (mod3 === 3) {
            var pow1 = this.m.add(new BN(1)).iushrn(2);
            return this.pow(a, pow1);
        }
        // Tonelli-Shanks algorithm (Totally unoptimized and slow)
        //
        // Find Q and S, that Q * 2 ^ S = (P - 1)
        var q = this.m.subn(1);
        var s = 0;
        while(!q.isZero() && q.andln(1) === 0){
            s++;
            q.iushrn(1);
        }
        assert(!q.isZero());
        var one = new BN(1).toRed(this);
        var nOne = one.redNeg();
        // Find quadratic non-residue
        // NOTE: Max is such because of generalized Riemann hypothesis.
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN(2 * z * z).toRed(this);
        while(this.pow(z, lpow).cmp(nOne) !== 0)z.redIAdd(nOne);
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while(t.cmp(one) !== 0){
            var tmp = t;
            for(var i = 0; tmp.cmp(one) !== 0; i++)tmp = tmp.redSqr();
            assert(i < m);
            var b = this.pow(c, new BN(1).iushln(m - i - 1));
            r = r.redMul(b);
            c = b.redSqr();
            t = t.redMul(c);
            m = i;
        }
        return r;
    };
    Red.prototype.invm = function invm1(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
            inv.negative = 0;
            return this.imod(inv).redNeg();
        } else return this.imod(inv);
    };
    Red.prototype.pow = function pow2(a, num) {
        if (num.isZero()) return new BN(1).toRed(this);
        if (num.cmpn(1) === 0) return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN(1).toRed(this);
        wnd[1] = a;
        for(var i = 2; i < wnd.length; i++)wnd[i] = this.mul(wnd[i - 1], a);
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) start = 26;
        for(i = num.length - 1; i >= 0; i--){
            var word = num.words[i];
            for(var j = start - 1; j >= 0; j--){
                var bit = word >> j & 1;
                if (res !== wnd[0]) res = this.sqr(res);
                if (bit === 0 && current === 0) {
                    currentLen = 0;
                    continue;
                }
                current <<= 1;
                current |= bit;
                currentLen++;
                if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;
                res = this.mul(res, wnd[current]);
                currentLen = 0;
                current = 0;
            }
            start = 26;
        }
        return res;
    };
    Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
    };
    Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
    };
    //
    // Montgomery method engine
    //
    BN.mont = function mont(num) {
        return new Mont(num);
    };
    function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) this.shift += 26 - this.shift % 26;
        this.r = new BN(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
    }
    inherits(Mont, Red);
    Mont.prototype.convertTo = function convertTo1(num) {
        return this.imod(num.ushln(this.shift));
    };
    Mont.prototype.convertFrom = function convertFrom1(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
    };
    Mont.prototype.imul = function imul2(a, b) {
        if (a.isZero() || b.isZero()) {
            a.words[0] = 0;
            a.length = 1;
            return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) res = u.isub(this.m);
        else if (u.cmpn(0) < 0) res = u.iadd(this.m);
        return res._forceRed(this);
    };
    Mont.prototype.mul = function mul2(a, b) {
        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) res = u.isub(this.m);
        else if (u.cmpn(0) < 0) res = u.iadd(this.m);
        return res._forceRed(this);
    };
    Mont.prototype.invm = function invm2(a) {
        // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
    };
})(typeof module === 'undefined' || module, this);

},{"buffer":"4LM6B"}],"krsl0":[function(require,module,exports) {
var BN = require('bn.js');
var Buffer = require('safe-buffer').Buffer;
function withPublic(paddedMsg, key) {
    return Buffer.from(paddedMsg.toRed(BN.mont(key.modulus)).redPow(new BN(key.publicExponent)).fromRed().toArray());
}
module.exports = withPublic;

},{"bn.js":"aIfrT","safe-buffer":"i3ToV"}],"drNrT":[function(require,module,exports) {
var parseKeys = require('parse-asn1');
var mgf = require('./mgf');
var xor = require('./xor');
var BN = require('bn.js');
var crt = require('browserify-rsa');
var createHash = require('create-hash');
var withPublic = require('./withPublic');
var Buffer = require('safe-buffer').Buffer;
module.exports = function privateDecrypt(privateKey, enc, reverse) {
    var padding;
    if (privateKey.padding) padding = privateKey.padding;
    else if (reverse) padding = 1;
    else padding = 4;
    var key = parseKeys(privateKey);
    var k = key.modulus.byteLength();
    if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) throw new Error('decryption error');
    var msg;
    if (reverse) msg = withPublic(new BN(enc), key);
    else msg = crt(enc, key);
    var zBuffer = Buffer.alloc(k - msg.length);
    msg = Buffer.concat([
        zBuffer,
        msg
    ], k);
    if (padding === 4) return oaep(key, msg);
    else if (padding === 1) return pkcs1(key, msg, reverse);
    else if (padding === 3) return msg;
    else throw new Error('unknown padding');
};
function oaep(key, msg) {
    var k = key.modulus.byteLength();
    var iHash = createHash('sha1').update(Buffer.alloc(0)).digest();
    var hLen = iHash.length;
    if (msg[0] !== 0) throw new Error('decryption error');
    var maskedSeed = msg.slice(1, hLen + 1);
    var maskedDb = msg.slice(hLen + 1);
    var seed = xor(maskedSeed, mgf(maskedDb, hLen));
    var db = xor(maskedDb, mgf(seed, k - hLen - 1));
    if (compare(iHash, db.slice(0, hLen))) throw new Error('decryption error');
    var i = hLen;
    while(db[i] === 0)i++;
    if (db[i++] !== 1) throw new Error('decryption error');
    return db.slice(i);
}
function pkcs1(key, msg, reverse) {
    var p1 = msg.slice(0, 2);
    var i = 2;
    var status = 0;
    while(msg[i++] !== 0)if (i >= msg.length) {
        status++;
        break;
    }
    var ps = msg.slice(2, i - 1);
    if (p1.toString('hex') !== '0002' && !reverse || p1.toString('hex') !== '0001' && reverse) status++;
    if (ps.length < 8) status++;
    if (status) throw new Error('decryption error');
    return msg.slice(i);
}
function compare(a, b) {
    a = Buffer.from(a);
    b = Buffer.from(b);
    var dif = 0;
    var len = a.length;
    if (a.length !== b.length) {
        dif++;
        len = Math.min(a.length, b.length);
    }
    var i = -1;
    while((++i) < len)dif += a[i] ^ b[i];
    return dif;
}

},{"parse-asn1":"auGzq","./mgf":"kXZDH","./xor":"c6oa3","bn.js":"aIfrT","browserify-rsa":"3VRND","create-hash":"4iPa5","./withPublic":"krsl0","safe-buffer":"i3ToV"}],"2fLpt":[function(require,module,exports) {
var global = arguments[3];
var process = require("process");
'use strict';
function oldBrowser() {
    throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11');
}
var safeBuffer = require('safe-buffer');
var randombytes = require('randombytes');
var Buffer = safeBuffer.Buffer;
var kBufferMaxLength = safeBuffer.kMaxLength;
var crypto = global.crypto || global.msCrypto;
var kMaxUint32 = Math.pow(2, 32) - 1;
function assertOffset(offset, length) {
    if (typeof offset !== 'number' || offset !== offset) throw new TypeError('offset must be a number');
    if (offset > kMaxUint32 || offset < 0) throw new TypeError('offset must be a uint32');
    if (offset > kBufferMaxLength || offset > length) throw new RangeError('offset out of range');
}
function assertSize(size, offset, length) {
    if (typeof size !== 'number' || size !== size) throw new TypeError('size must be a number');
    if (size > kMaxUint32 || size < 0) throw new TypeError('size must be a uint32');
    if (size + offset > length || size > kBufferMaxLength) throw new RangeError('buffer too small');
}
if (crypto && crypto.getRandomValues || false) {
    exports.randomFill = randomFill;
    exports.randomFillSync = randomFillSync;
} else {
    exports.randomFill = oldBrowser;
    exports.randomFillSync = oldBrowser;
}
function randomFill(buf, offset, size, cb) {
    if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
    if (typeof offset === 'function') {
        cb = offset;
        offset = 0;
        size = buf.length;
    } else if (typeof size === 'function') {
        cb = size;
        size = buf.length - offset;
    } else if (typeof cb !== 'function') throw new TypeError('"cb" argument must be a function');
    assertOffset(offset, buf.length);
    assertSize(size, offset, buf.length);
    return actualFill(buf, offset, size, cb);
}
function actualFill(buf, offset, size, cb) {
    var ourBuf = buf.buffer;
    var uint = new Uint8Array(ourBuf, offset, size);
    crypto.getRandomValues(uint);
    if (cb) {
        process.nextTick(function() {
            cb(null, buf);
        });
        return;
    }
    return buf;
    if (cb) {
        randombytes(size, function(err, bytes) {
            if (err) return cb(err);
            bytes.copy(buf, offset);
            cb(null, buf);
        });
        return;
    }
    var bytes = randombytes(size);
    bytes.copy(buf, offset);
    return buf;
}
function randomFillSync(buf, offset, size) {
    if (typeof offset === 'undefined') offset = 0;
    if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
    assertOffset(offset, buf.length);
    if (size === undefined) size = buf.length - offset;
    assertSize(size, offset, buf.length);
    return actualFill(buf, offset, size);
}

},{"process":"5svFz","safe-buffer":"i3ToV","randombytes":"1rFGB"}]},["4mMPH","j6VGc"], "j6VGc", "parcelRequire11c7")

//# sourceMappingURL=index.js.map
